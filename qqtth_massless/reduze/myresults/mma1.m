{
INT["pentagon1x123",3,21,3,1,{1,-1,1,0,1}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-s23*(s34*s24+s13^2+2*s34*s13-s12*s14+s34^2-s14*s24-2*s23*s14+s12*s13+s34*s14+s12*s34+s24*s13+s14*s13)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      ((s23*s24+s12^2+s34*s24+s23*s12+s24^2-s23*s34-s23*s13-2*s23*s14+s12*s13+s12*s34+s24*s13+2*s12*s24)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      ((s34*s24+s13^2+2*s34*s13+s34^2-2*s23*s14+s12*s13+s12*s34+s24*s13)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (-s23*(s12-s34+s24-s13)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)),

INT["pentagon1x123",3,21,3,1,{1,0,1,-1,1}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-(2*s12*s14*s13+s12*s34*s14+s23*s12*s14+s12*s14*s24+s14*s13^2+s12^2*s14-s23*s14*s24-s23*s34*s14+s23*s14*s13+s14*s24*s13+s34*s14*s13-2*s23*s14^2)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      ((2*s34*s24+s24^2+s34*s13-s12*s14+s34^2+s14*s24-2*s23*s14+s34*s14+s12*s34+s24*s13+s12*s24-s14*s13)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      ((s12*s14-s14*s24-s34*s14+s14*s13)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      ((s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)*(s12^2+s13^2+s34*s13-2*s23*s14+2*s12*s13+s12*s34+s24*s13+s12*s24)),

INT["pentagon1x123",3,21,3,2,{1,-2,1,0,1}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      ((d*s24^2-2*s12^2+2*s34*d*s13-4*s34*s24+2*d*s24*s13-2*s24^2-2*s13^2-4*s34*s13+s12^2*d+d*s13^2+2*s34*d*s24-2*s34^2+s34^2*d+8*s23*s14-4*s12*s13+2*s12*d*s24+2*s12*s34*d-4*s12*s34+2*s12*d*s13-4*s23*d*s14-4*s24*s13-4*s12*s24)^(-1)*s23*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)*(s23*s34^2*d*s14^2-4*s23*s34^2*s14*s24+s23*s34^4*d+12*s23^2*s34*s14^2-4*s23*s12*s24*s13^2-4*s23*s34^3*s14+4*s23^2*s14*s24*s13-2*s23*d*s14^2*s24*s13-2*s23*s12^2*s34^2-4*s23^2*d*s14^2*s13-4*s23*s12*s14*s13^2-8*s23*s34*s13^3-12*s23*s12*s34^2*s13+4*s23*s34*d*s13^3-2*s23*s34*d*s14^2*s24+16*s23^2*s34*s14*s13-2*s23*d*s14*s24^2*s13+s23*s12^2*d*s13^2+6*s23*s34^2*d*s14*s13-4*s23*s12*s34*d*s14*s24-4*s23*s12*d*s14*s24*s13+2*s23*d*s14*s13^3-2*s23*s34^2*s14^2-4*s23*s12^2*s34*s13+4*s23^2*s14^3-4*s23^2*s12*d*s14*s13+2*s23*d*s24*s13^3+4*s23*s34^3*d*s13-2*s23*s14^2*s24^2+6*s23*s34^2*d*s24*s13-2*s23*s12^2*s13^2+2*s23*s12*s34^3*d+2*s23*s34*d*s24^2*s13-4*s23^3*s14^2+6*s23*s12*s34*d*s13^2-4*s23*s34*s24^2*s13+4*s23*s12*s34*d*s24*s13-2*s23*s14^2*s13^2+2*s23*s34^3*d*s24-8*s23*s34*s14*s24*s13-2*s23*s12^2*s34*d*s14-4*s23^2*s34*d*s14^2+2*s23*s34*d*s14^2*s13+4*s23^2*s34*s14*s24-2*s23*s24^2*s13^2-4*s23*s34*s14^2*s13+2*s23*s12*d*s24*s13^2-12*s23*s34^2*s24*s13+8*s23^2*s14*s13^2-4*s23*s12*s34^2*s24-12*s23*s34^2*s14*s13+4*s23^2*d*s14^2*s24+s23*d*s13^4-8*s23^2*s34*d*s14*s13-4*s23^2*s14^2*s24-4*s23*s14*s13^3+s23*s34^2*d*s24^2-4*s23*s34^3*s24+2*s23*s12*s34^2*d*s24-12*s23*s12*s34*s13^2+4*s23^2*s12*d*s14^2-4*s23*s24*s13^3+8*s23^2*s34^2*s14+s23*d*s14^2*s24^2+2*s23*s12*d*s14^2*s24+4*s23^2*s12*s34*s14-4*s23^2*d*s14*s13^2-2*s23*s12^2*d*s14*s13-2*s23*s34^2*s24^2+2*s23*s12^2*s34*d*s13-2*s23*s34*d*s14*s24^2-2*s23*s12*s34*d*s14^2+6*s23*s34*d*s14*s13^2-2*s23*s12^2*s14^2+2*s23*s34^3*d*s14+2*s23*s12*d*s13^3-4*s23*s12*s34^3-12*s23*s34*s14*s13^2-8*s23*s12*s34*s14*s13-12*s23*s34^2*s13^2+6*s23*s34*d*s24*s13^2-2*s23*s13^4+s23*s12^2*s34^2*d+4*s23^3*d*s14^2-8*s23*s12*s34*s24*s13+s23*s12^2*d*s14^2-12*s23*s34*s24*s13^2-2*s23*s12*d*s14^2*s13-4*s23*s14*s24*s13^2+s23*d*s14^2*s13^2-2*s23*s34^4-4*s23*s12*s34^2*s14-4*s23^2*s12*s14^2-4*s23^2*s34^2*d*s14-4*s23^2*d*s14*s24*s13+12*s23^2*s14^2*s13+s23*d*s24^2*s13^2-4*s23*s12*s14^2*s24-4*s23*s12*s13^3-4*s23^2*s34*d*s14*s24+6*s23*s12*s34^2*d*s13+4*s23^2*s12*s14*s13-8*s23*s34^3*s13-4*s23^2*s12*s34*d*s14+6*s23*s34^2*d*s13^2)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (-1/2*(d*s24^2-2*s12^2+2*s34*d*s13-4*s34*s24+2*d*s24*s13-2*s24^2-2*s13^2-4*s34*s13+s12^2*d+d*s13^2+2*s34*d*s24-2*s34^2+s34^2*d+8*s23*s14-4*s12*s13+2*s12*d*s24+2*s12*s34*d-4*s12*s34+2*s12*d*s13-4*s23*d*s14-4*s24*s13-4*s12*s24)^(-1)*(5*s12*d*s24^4-24*s23*s12*d*s14*s24^2+4*s23*s34^2*s14*s24+3*s23^2*s12*d*s24^2+4*s23^2*s34*s14^2-2*s12^2*s34^3-8*s23*s12*s24*s13^2-2*s23^2*s12*s34*d*s13+8*s23^2*s14*s24*s13-4*s23*s12^2*s34^2-6*s12^2*s34*s13^2+6*s12*s34*d*s24*s13^2-4*s23^2*d*s14^2*s13+4*s23*s12*s14*s13^2+28*s23^2*s14*s24^2-36*s12^2*s24^2*s13-4*s23^2*s12*s34*s24+6*s23^2*s12*s13^2-9*s23^2*s34^2*d*s13-8*s23*s12^3*s13+3*s23^2*d*s24^2*s13+6*s23^2*s34^2*s24+9*s12*d*s24^2*s13^2-8*s23*s12^3*d*s14+24*s23^2*s34*s14*s13+6*s23^2*s12*d*s24*s13-8*s23*s12^3*s34-6*s24^3*s13^2-8*s23*d*s14*s24^2*s13+6*s23*s12^2*d*s13^2+6*s23^2*s12*s34^2-16*s23*s12*s34*d*s14*s24+5*s12^4*d*s24+12*s12^3*s34*d*s24+3*s12^3*s34^2*d+12*s23^3*s12*s14-16*s23*s12*d*s14*s24*s13-16*s23^2*s12^2*d*s14-8*s23*s12^2*s34*s13-12*s12*s34*s24*s13^2+10*s12^2*d*s24^3+18*s23*s12*s34*d*s24^2+18*s12^2*s34*d*s24^2-20*s12^3*s24^2-2*s12^2*s13^3-8*s23^2*s12*d*s14*s13-3*s23^2*s34^3*d+12*s12*d*s24^3*s13+12*s23^2*s34*s24*s13+3*s12^4*s34*d+2*s23*d*s24*s13^3+6*s23*s34^2*d*s24*s13-4*s23*s12^2*s13^2+2*s23*s12*s34^3*d+12*s23*s34*d*s24^2*s13+3*s34^2*d*s24^2*s13-24*s12^3*s24*s13-20*s12^2*s24^3-6*s12^3*s13^2-32*s23^2*s12*d*s14*s24-32*s23^3*s14^2+3*s12^2*s34*d*s13^2-24*s23*s12^2*s34*s24+6*s23*s12*s34*d*s13^2+s12^2*d*s13^3-8*s23*s34*s24^2*s13-24*s23*s12^2*s24^2+24*s23*s12*s34*d*s24*s13+8*s23^3*s34*d*s14+18*s12^2*s34*d*s24*s13+2*s23*s34^3*d*s24+8*s23*s34*s14*s24*s13-8*s23*s12^2*s34*d*s14-2*s24^2*s13^3+12*s23*s12^2*d*s24^2-18*s12*s34^2*s24^2-4*s23^2*s34*d*s14^2+8*s23^2*s34*s14*s24-10*s12*s24^4-8*s23*d*s14*s24^3+6*s12^3*s34*d*s13-4*s23*s24^2*s13^2+3*s12^4*d*s13-12*s34*s24^3*s13-s23^2*s34^2*d*s24+9*s12^2*d*s24*s13^2-16*s23*s12^3*s24+12*s23*s12*d*s24*s13^2-6*s23^2*s12*s24^2+12*s23^2*s12*s34*s13+48*s23*s12*s14*s24^2-4*s12*s24*s13^3+9*s12*s34^2*d*s24^2+12*s23^2*s14*s13^2+6*s23*s34*d*s24^3-8*s23*s12*s34^2*s24+18*s23^2*s34^2*s13+3*d*s24^4*s13-8*s23*s34*s24^3+6*s23^2*s12*s34*d*s24-6*s12^3*s34^2+6*s23^2*s24*s13^2+s34^3*d*s24^2-s23^2*s12*d*s13^2-8*s23*s24^3*s13-6*s34*s24^2*s13^2+20*s23*s14*s24^2*s13-36*s12^2*s34*s24^2+12*s23^2*d*s14^2*s24-4*s12*s34^3*s24+28*s23^2*s12^2*s14+12*s12^3*d*s24*s13+6*s34*d*s24^3*s13-2*s23^2*s12^2*s13-16*s23*s12*s24^3-s23^2*s12*s34^2*d-16*s23^2*s34*d*s14*s13+8*s23^3*d*s14*s13-28*s23^2*s14^2*s24-24*s12*s24^3*s13+6*s23*s12^3*s34*d+12*s12*s34*d*s24^3-18*s12^2*s24*s13^2+18*s23*s12^2*d*s24*s13+6*s23*s34^2*d*s24^2-2*s23^2*s12^3-s23^2*d*s24*s13^2+56*s23^2*s12*s14*s24+9*s12^2*s34^2*d*s24+12*s23*s12*s34^2*d*s24-2*s23^2*s34*s24^2-12*s12*s34^2*s24*s13+12*s23^2*s12*d*s14^2+12*s23^2*s34^2*s14-8*s23^3*s12*d*s14-4*s23*s12^4-24*s23*s12*s24^2*s13+d*s24^2*s13^3+8*s23*s12^3*d*s24-2*s23^2*s34*d*s24*s13+8*s23^2*s12*s34*s14-24*s12*s34*s24^3-8*s23^2*d*s14*s13^2+18*s12*s34*d*s24^2*s13-6*s12^2*s34^2*s13-8*s23*s12^2*d*s14*s13-20*s23^3*s14*s13+2*s12*s34^3*d*s24-4*s23*s24^4-4*s23*s34^2*s24^2-36*s12*s34*s24^2*s13+3*s34*d*s24^2*s13^2-9*s23^2*s34*d*s13^2+3*s23^2*s12^2*s34*d+10*s12^3*d*s24^2-6*s24^4*s13-18*s12*s24^2*s13^2+12*s23*s12^2*s34*d*s13-6*s34^2*s24^3+20*s23*s12^2*s14*s13+8*s23*s12*d*s24^3-3*s23^2*d*s13^3-2*s23^2*s12^2*s34-8*s23*s34*d*s14*s24^2-6*s34*s24^4+40*s23*s12*s34*s14*s24-24*s23*s12^2*s24*s13-2*s23^2*s24^3+3*s23^2*s12^2*d*s24+20*s23*s34*s14*s24^2-24*s12^3*s34*s24-10*s12^4*s24+d*s24^5-20*s23^3*s34*s14+s12^2*s34^3*d+2*s23*s12*d*s13^3+s23^2*d*s24^3-6*s12^4*s13-6*s34^2*s24^2*s13-2*s12^5-12*s12^3*s34*s13+20*s23*s12^2*s34*s14+3*s23^2*s12^2*d*s13+6*s23^2*s13^3+8*s23*s12*s34*s14*s13+6*s23*s34*d*s24*s13^2+12*s23^3*s14*s24+2*s12*d*s24*s13^3+6*s23*s12^2*s34^2*d+16*s23^3*d*s14^2-16*s23*s12*s34*s24*s13+48*s23*s12^2*s14*s24-2*s34^3*s24^2+3*s34*d*s24^4-36*s12^2*s34*s24*s13+6*s23*d*s24^3*s13+s23^2*s12^3*d+18*s23*s12^2*s34*d*s24+3*s12^3*d*s13^2+3*s23^2*s34*d*s24^2+6*s23*s12^3*d*s13+4*s23*s14*s24*s13^2-2*s23^2*s24^2*s13+3*d*s24^3*s13^2+6*s12*s34^2*d*s24*s13+40*s23*s12*s14*s24*s13+4*s23*s12*s34^2*s14-28*s23^2*s12*s14^2-24*s23*s12^2*d*s14*s24+16*s23*s12^3*s14+3*s34^2*d*s24^3-8*s23^2*s34^2*d*s14+s12^5*d-16*s23^2*d*s14*s24^2-4*s23^2*s12*s24*s13-18*s12^2*s34^2*s24+2*s23*s12^4*d+16*s23*s14*s24^3-8*s23^2*d*s14*s24*s13+4*s23^2*s14^2*s13-8*s23^3*d*s14*s24+6*s23*d*s24^2*s13^2+18*s12^2*d*s24^2*s13-8*s23^2*s34*d*s14*s24-6*s23^2*s12^2*s24+2*s23*d*s24^4+18*s23*s12*d*s24^2*s13+18*s23^2*s34*s13^2-2*s24^5+6*s23*s12*s34^2*d*s13-24*s23*s12*s34*s24^2-6*s12^4*s34+8*s23^2*s12*s14*s13+3*s12^2*s34^2*d*s13-8*s23^2*s12*s34*d*s14+6*s23^2*s34^3)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (1/2*(d*s24^2-2*s12^2+2*s34*d*s13-4*s34*s24+2*d*s24*s13-2*s24^2-2*s13^2-4*s34*s13+s12^2*d+d*s13^2+2*s34*d*s24-2*s34^2+s34^2*d+8*s23*s14-4*s12*s13+2*s12*d*s24+2*s12*s34*d-4*s12*s34+2*s12*d*s13-4*s23*d*s14-4*s24*s13-4*s12*s24)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)*(20*s23*s34^2*s14*s24-2*s23*s34^4*d-8*s23*s12*s34^2*d*s14-28*s23^2*s34*s14^2-6*s12^2*s34^3+8*s23*s12*s24*s13^2+s34^5*d+16*s23*s34^3*s14+10*s34^3*d*s13^2-8*s23^2*s14*s24*s13-24*s12*s34^3*s13+4*s23*s12^2*s34^2-18*s12^2*s34*s13^2+18*s12*s34*d*s24*s13^2+12*s23^2*d*s14^2*s13+20*s23*s12*s14*s13^2+18*s12*s34^2*d*s13^2+16*s23*s34*s13^3+24*s23*s12*s34^2*s13-6*s12*s34^4-8*s23*s34*d*s13^3+3*s12*d*s24^2*s13^2-32*s23^2*s34*s14*s13-36*s12*s34^2*s13^2-10*s34^4*s13-2*s24^3*s13^2-2*s23*s12^2*d*s13^2-24*s23*s34^2*d*s14*s13+s12^3*s34^2*d-8*s23*d*s14*s13^3-6*s12*s13^4+8*s23*s12^2*s34*s13-36*s12*s34*s24*s13^2-6*s12^2*s13^3+8*s23^2*s12*d*s14*s13-4*s23*d*s24*s13^3-8*s23*s34^3*d*s13-12*s23*s34^2*d*s24*s13+4*s23*s12^2*s13^2-4*s23*s12*s34^3*d-4*s23*s34*d*s24^2*s13+9*s34^2*d*s24^2*s13-2*s12^3*s13^2-16*s23*s34*d*s14*s24*s13+8*s23^3*s14^2+9*s12^2*s34*d*s13^2-12*s23*s12*s34*d*s13^2+3*s12^2*d*s13^3+8*s23*s34*s24^2*s13-8*s23*s12*s34*d*s24*s13-6*s24*s13^4+6*s12^2*s34*d*s24*s13-4*s23*s34^3*d*s24+40*s23*s34*s14*s24*s13-6*s24^2*s13^3-6*s12*s34^2*s24^2-6*s34^4*s24+12*s23^2*s34*d*s14^2-8*s23^2*s34*s14*s24+2*s12^3*s34*d*s13+4*s23*s24^2*s13^2-36*s34^2*s24*s13^2-4*s34*s24^3*s13-8*s23*s34^2*d*s14*s24-16*s23*s12*s34*d*s14*s13+3*s12^2*d*s24*s13^2-4*s23*s12*d*s24*s13^2+24*s23*s34^2*s24*s13+12*s34*d*s24*s13^3-12*s12*s24*s13^3+3*s12*s34^2*d*s24^2-16*s23^2*s14*s13^2+8*s23*s12*s34^2*s24-2*s12^3*s34^2+3*s34^3*d*s24^2+48*s23*s34^2*s14*s13-8*s23*s12*d*s14*s13^2-18*s34*s24^2*s13^2+3*s12*d*s13^4+4*s23*s14*s24^2*s13-4*s23^2*d*s14^2*s24-12*s12*s34^3*s24+2*s34*d*s24^3*s13-2*s23*d*s13^4+16*s23^2*s34*d*s14*s13+4*s23^2*s14^2*s24+16*s23*s14*s13^3+5*s34^4*d*s13-6*s12^2*s24*s13^2+3*d*s24*s13^4-2*s23*s34^2*d*s24^2+8*s23*s34^3*s24+3*s12^2*s34^2*d*s24-4*s23*s12*s34^2*d*s24-2*s13^5+24*s23*s12*s34*s13^2-36*s12*s34^2*s24*s13-4*s23^2*s12*d*s14^2+8*s23*s24*s13^3-16*s23^2*s34^2*s14+3*d*s24^2*s13^3-8*s23^2*s12*s34*s14-24*s34^3*s24*s13+8*s23^2*d*s14*s13^2+6*s12*s34*d*s24^2*s13-18*s12^2*s34^2*s13+10*s34^2*d*s13^3+6*s12*s34^3*d*s24+4*s23*s34^2*s24^2-12*s12*s34*s24^2*s13+9*s34*d*s24^2*s13^2+5*s34*d*s13^4-6*s12*s24^2*s13^2-4*s23*s12^2*s34*d*s13-20*s34^3*s13^2-2*s34^2*s24^3+4*s23*s12^2*s14*s13-8*s23*d*s14*s24*s13^2+d*s13^5+8*s23*s12*s34*s14*s24-2*s34^5+4*s23*s34*s14*s24^2-24*s34*s24*s13^3+3*s12^2*s34^3*d-24*s23*s34*d*s14*s13^2-10*s34*s13^4-8*s23*s34^3*d*s14-4*s23*s12*d*s13^3+8*s23*s12*s34^3+12*s34^3*d*s24*s13-18*s34^2*s24^2*s13-4*s12^3*s34*s13+48*s23*s34*s14*s13^2+4*s23*s12^2*s34*s14+40*s23*s12*s34*s14*s13+24*s23*s34^2*s13^2+12*s12*s34^3*d*s13-12*s23*s34*d*s24*s13^2+6*s12*d*s24*s13^3+4*s23*s13^4-2*s23*s12^2*s34^2*d-8*s23^3*d*s14^2+18*s34^2*d*s24*s13^2+16*s23*s12*s34*s24*s13-20*s34^2*s13^3-6*s34^3*s24^2-12*s12^2*s34*s24*s13+s12^3*d*s13^2+24*s23*s34*s24*s13^2+20*s23*s14*s24*s13^2+d*s24^3*s13^2+18*s12*s34^2*d*s24*s13+8*s23*s12*s14*s24*s13+4*s23*s34^4+20*s23*s12*s34^2*s14+4*s23^2*s12*s14^2+s34^2*d*s24^3+8*s23^2*s34^2*d*s14-6*s12^2*s34^2*s24-24*s12*s34*s13^3+12*s12*s34*d*s13^3+3*s34^4*d*s24+8*s23^2*d*s14*s24*s13-28*s23^2*s14^2*s13-2*s23*d*s24^2*s13^2+8*s23*s12*s13^3+8*s23^2*s34*d*s14*s24+3*s12*s34^4*d-12*s23*s12*s34^2*d*s13-8*s23^2*s12*s14*s13+16*s23*s34^3*s13+9*s12^2*s34^2*d*s13+8*s23^2*s12*s34*d*s14-12*s23*s34^2*d*s13^2)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (-1/2*(d*s24^2-2*s12^2+2*s34*d*s13-4*s34*s24+2*d*s24*s13-2*s24^2-2*s13^2-4*s34*s13+s12^2*d+d*s13^2+2*s34*d*s24-2*s34^2+s34^2*d+8*s23*s14-4*s12*s13+2*s12*d*s24+2*s12*s34*d-4*s12*s34+2*s12*d*s13-4*s23*d*s14-4*s24*s13-4*s12*s24)^(-1)*s23*(2*s23*d*s14*s13^2-4*s23*s12*d*s14*s13-s23*d*s24^3-6*s23*s12*d*s24*s13+20*s23^2*s14*s13-8*s23*s12*s14*s24+s23*d*s24*s13^2-s23*s12^3*d+s23*s12*s34^2*d-6*s23*s34^3+8*s23^2*s14^2-3*s23*s12^2*d*s24-8*s23^2*s34*d*s14+2*s23*s24^2*s13-6*s23*s13^3+9*s23*s34*d*s13^2-3*s23*s12^2*s34*d+2*s23*s12*s34*d*s13-18*s23*s34*s13^2+6*s23*s12^2*s24+2*s23*s34*s24^2-6*s23*s12*s34*d*s24-3*s23*s34*d*s24^2+2*s23*s12^2*s13-3*s23*s12^2*d*s13-4*s23*s34^2*s14+2*s23*s24^3-12*s23^2*s14*s24+2*s23*s12^3+4*s23*s12*d*s14*s24+2*s23*s34^2*d*s14+4*s23*s12*s24*s13+2*s23*d*s14*s24^2+20*s23^2*s34*s14+3*s23*d*s13^3+2*s23*s12^2*s34-3*s23*d*s24^2*s13+4*s23*s12*s34*s24+9*s23*s34^2*d*s13-12*s23^2*s12*s14-3*s23*s12*d*s24^2+8*s23^2*d*s14*s24-18*s23*s34^2*s13+2*s23*s34*d*s24*s13+2*s23*s12^2*d*s14-4*s23*s14*s13^2-12*s23*s34*s24*s13+6*s23*s12*s24^2+4*s23*s34*d*s14*s13-4*s23*s12^2*s14-8*s23*s34*s14*s13-6*s23*s24*s13^2-4*s23*d*s14*s24*s13-4*s23*s34*d*s14*s24-4*s23*s12*s34*d*s14-6*s23*s34^2*s24-6*s23*s12*s13^2-4*s23*s14*s24^2-8*s23^2*d*s14*s13+s23*s12*d*s13^2-6*s23*s12*s34^2+s23*s34^2*d*s24+3*s23*s34^3*d-12*s23*s12*s34*s13+8*s23^2*s12*d*s14)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)),

INT["pentagon1x123",3,21,3,2,{1,-1,1,-1,1}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-s23*(3*s23*s34^2*d*s14^2-4*s23*s34^2*s14*s24-2*s12^2*s14^2*s13-2*d*s14*s24*s13^3-4*s34*d*s14*s24*s13^2+6*s23^2*s34*s14^2+2*s34*s14^2*s24*s13-2*s12^2*s34^2*d*s14-2*s23*s34^3*s14-s12*d*s14^2*s13^2+6*s23*s12*s14^3+6*s23*d*s14^2*s24*s13+12*s12*s14*s24*s13^2+2*s23^2*d*s14^2*s13+4*s23*s12*s14*s13^2+2*s23*s14^3*s24-7*s12*s34*d*s14*s13^2+s12^3*d*s14^2+2*s23*s34*d*s14^2*s24+s23*d*s14*s24^2*s13+12*s12*s34*s14*s13^2-4*s23*s34*s14^2*s24+s23*s34^2*d*s14*s13-s12*s34^3*d*s14-2*s12^2*d*s14*s24*s13+6*s34*s14*s24^2*s13-s23*d*s14*s13^3-2*s12^2*s34*d*s14*s24-4*s23*s34^2*s14^2+8*s23^2*s14^3-2*s23*s12*d*s14^3+2*s23*s34*d*s14*s24*s13-2*s34^2*d*s14*s24*s13+2*s14^2*s13^3+6*s14*s24^2*s13^2+6*s34^2*s14*s13^2-4*s23^2*d*s14^3-8*s23*s14^2*s13^2-2*s23*s34*s14*s24*s13-s23*s12^2*s34*d*s14+6*s34^2*s14*s24*s13-2*s23^2*s34*d*s14^2-s34^2*d*s14^2*s13+2*s12^3*s14*s13+6*s23*s34*d*s14^2*s13-5*s12^2*s34*d*s14*s13+2*s14*s13^4-16*s23*s14^2*s24*s13-12*s23*s34*s14^2*s13+2*s23*s34^2*d*s14*s24-2*s23*s12*s34*d*s14*s13+4*s34*s14^2*s13^2+2*s14*s24^3*s13+2*s14^2*s24*s13^2-6*s23*s14^3*s13-4*s12*d*s14*s24*s13^2-s12^3*d*s14*s13-s12*s34*d*s14*s24^2+d*s14^2*s24^2*s13+6*s12*s14*s13^3-4*s12^2*s14^2*s24-2*s23*s34^2*s14*s13-2*s23*s12*d*s14*s13^2-3*s34*d*s14*s13^3-3*s12^2*d*s14*s13^2-2*s23^2*d*s14^2*s24+s12*d*s14^2*s24^2+6*s14*s24*s13^3+2*s23^2*s14^2*s24-d*s14^2*s13^3-12*s23*s12*s14^2*s13-2*s12*s34^2*d*s14*s24+2*s23*s14*s13^3+12*s12*s34*s14*s24*s13-2*s12*s34*d*s14^2*s13+2*s34^3*s14*s13+2*s23^2*s12*d*s14^2-s34*d*s14*s24^2*s13+6*s12^2*s14*s13^2-s23*d*s14^2*s24^2+2*s12^2*d*s14^2*s24+2*s23*s12*d*s14^2*s24+6*s12*s34^2*s14*s13+6*s12*s14*s24^2*s13-s23*s12^2*d*s14*s13-d*s14*s13^4-s12^3*s34*d*s14+6*s34*s14*s13^3+2*s23*s12^2*s14*s13-2*s12*s14^2*s24*s13+2*s12*s34*s14^2*s13+s23*s34*d*s14*s24^2-2*s23*s12*s34*s14*s24+12*s34*s14*s24*s13^2+2*s23*s12*s34*d*s14^2-2*s23*d*s14^3*s24+2*s12*s14^2*s13^2-2*s23*s34*s14*s24^2-2*s34*d*s14^2*s13^2-2*s12^3*s14^2-3*s34^2*d*s14*s13^2-s23*s34*d*s14*s13^2-4*s23*s12^2*s14^2-3*s12*d*s14*s13^3+s23*s34^3*d*s14-2*s12*s34*s14^2*s24+2*s23*s34*s14*s13^2+6*s12^2*s34*s14*s13-2*s12*s14^2*s24^2+2*s23*d*s14^3*s13-d*s14*s24^2*s13^2+2*s23*s12*s34*s14*s13+2*s12*d*s14^2*s24*s13+3*s23*s12^2*d*s14^2+2*s34^2*s14^2*s13-s34^3*d*s14*s13+2*s23*s34*d*s14^3+6*s23*s12*d*s14^2*s13+s12^2*d*s14^2*s13+2*s23*s14*s24*s13^2-2*s23*s34*s14^3+6*s12^2*s14*s24*s13+3*s23*d*s14^2*s13^2+2*s23*s12*s14*s24*s13-2*s23*s12*s34^2*s14-2*s23^2*s12*s14^2-s12*s34^2*d*s14^2-6*s23^2*s14^2*s13-5*s12*s34^2*d*s14*s13-2*s12^2*s34*s14^2-4*s23*s12*s14^2*s24-6*s12*s34*d*s14*s24*s13-s12*d*s14*s24^2*s13)*(-2+d)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (-1/2*(-2+d)^(-1)*(6*s12^2*d*s14*s24^2+4*s12*d*s24^4-13*s23*s12*d*s14*s24^2+12*s23*s34^2*s14*s24+s23*s34^4*d+3*s34*d*s14*s24^3+d*s14*s24*s13^3-9*s23*s12*s34^2*d*s14+3*s34*d*s14*s24*s13^2-8*s23^2*s34*s14^2-12*s12^2*s34^3-2*s23*s12*s24*s13^2+3*s12^2*s34^2*d*s14-8*s12*s14*s24^3+4*s23^2*s14*s24*s13-12*s12*s34^3*s13-4*s23*d*s14^2*s24*s13-10*s23*s12^2*s34^2-12*s12^2*s34*s13^2-8*s12*s14*s24*s13^2+9*s12*s34*d*s24*s13^2+4*s23^2*d*s14^2*s13+8*s23*s12*s14*s13^2+14*s23^2*s14*s24^2+3*s12*s34^2*d*s13^2-12*s12^2*s24^2*s13-2*s23*s34*s13^3+3*s12*s34*d*s14*s13^2-16*s23*s12*s34^2*s13-4*s12*s34^4+s23*s34*d*s13^3+6*s12*d*s24^2*s13^2+4*s12^3*d*s14*s24+s23*s12^3*d*s14-8*s23*s34*d*s14^2*s24+16*s23^2*s34*s14*s13-8*s12^3*s14*s24-12*s12*s34^2*s13^2-4*s23*s12^3*s34-5*s23*d*s14*s24^2*s13-8*s12*s34*s14*s13^2+16*s23*s34*s14^2*s24-s23*s34^2*d*s14*s13+s12*s34^3*d*s14+9*s12^2*d*s14*s24*s13-22*s23*s12*s34*d*s14*s24-2*s14*s24^4+s12^4*d*s24+7*s12^3*s34*d*s24-8*s34*s14*s24^2*s13+3*s12^3*s34^2*d-6*s23*s12*d*s14*s24*s13-3*s23*d*s14*s13^3+9*s12^2*s34*d*s14*s24+2*s23*s34^2*s14^2-10*s23*s12^2*s34*s13-12*s12*s34*s24*s13^2+6*s12^2*d*s24^3+9*s23*s12*s34*d*s24^2+15*s12^2*s34*d*s24^2-16*s23^2*s14^3-8*s12^3*s24^2-4*s23^2*s12*d*s14*s13-2*s12^4*s14-8*s12^3*s34*s14+9*s12*d*s24^3*s13+s12^4*s34*d+s23*d*s24*s13^3+3*s23*s34^3*d*s13+14*s23*s14^2*s24^2-6*s34^2*s14*s24^2+9*s23*s34^2*d*s24*s13+3*s23*s12*s34^3*d+9*s23*s34*d*s24^2*s13+9*s34^2*d*s24^2*s13-4*s12^3*s24*s13-12*s12^2*s24^3-8*s23^2*s12*d*s14*s24-6*s23*s34*d*s14*s24*s13-16*s23^3*s14^2+3*s34^2*d*s14*s24*s13+3*s12^2*s34*d*s13^2-16*s23*s12^2*s34*s24+3*s23*s12*s34*d*s13^2-14*s23*s34*s24^2*s13-2*s14*s24^2*s13^2-6*s23*s12^2*s24^2+12*s23*s12*s34*d*s24*s13+2*s24*s13^4+8*s23^2*d*s14^3+6*s23*s14^2*s13^2+15*s12^2*s34*d*s24*s13+4*s23*s34^3*d*s24+8*s23*s34*s14*s24*s13-9*s23*s12^2*s34*d*s14+4*s24^2*s13^3-20*s12*s34*s14*s24^2+3*s23*s12^2*d*s24^2-36*s12*s34^2*s24^2-2*s34^4*s24-4*s34^2*s14*s24*s13+4*s23^2*s34*d*s14^2-6*s12^3*s14*s13-4*s23*s34*d*s14^2*s13+24*s23^2*s34*s14*s24-8*s12*s24^4+6*s12^2*s34*d*s14*s13-7*s23*d*s14*s24^3+3*s12^3*s34*d*s13-2*s23*s24^2*s13^2+4*s23*s14^2*s24*s13-12*s34*s24^3*s13+8*s23*s34*s14^2*s13-5*s23*s34^2*d*s14*s24-14*s23*s12*s34*d*s14*s13+3*s12^2*d*s24*s13^2-4*s14*s24^3*s13-2*s23*s12^3*s24+3*s23*s12*d*s24*s13^2-16*s23*s34^2*s24*s13+s34*d*s24*s13^3-10*s12^2*s34^2*s14+24*s23*s12*s14*s24^2+4*s12*s24*s13^3+15*s12*s34^2*d*s24^2+6*s23^2*s14*s13^2+6*s12*d*s14*s24*s13^2+3*s12^3*d*s14*s13+4*s23*s34*d*s24^3-22*s23*s12*s34^2*s24+9*s12*s34*d*s14*s24^2+3*d*s24^4*s13-8*s23*s34*s24^3-2*s12*s14*s13^3-12*s12^3*s34^2+4*s34^3*d*s24^2+28*s23*s12*s34*s14^2-4*s23*s24^3*s13+4*s23*s34^2*s14*s13-5*s23*s12*d*s14*s13^2+3*s12^2*d*s14*s13^2+4*s23*s14*s24^2*s13-36*s12^2*s34*s24^2+4*s23^2*d*s14^2*s24-20*s12*s34^3*s24+2*s23^2*s12^2*s14+3*s12^3*d*s24*s13+9*s34*d*s24^3*s13-6*s23*s12*s24^3-8*s23^2*s34*d*s14*s13-8*s23^2*s14^2*s24-12*s12*s24^3*s13+16*s23*s12*s14^2*s13+6*s12*s34^2*d*s14*s24+s23*s12^3*s34*d+13*s12*s34*d*s24^3+4*s23*s14*s13^3+3*s23*s12^2*d*s24*s13+6*s23*s34^2*d*s24^2-24*s12*s34*s14*s24*s13+16*s23^2*s12*s14*s24-8*s23*s34^3*s24+12*s12^2*s34^2*d*s24+9*s23*s12*s34^2*d*s24-8*s23*s12*s34*s13^2-36*s12*s34^2*s24*s13+4*s23^2*s12*d*s14^2+10*s23^2*s34^2*s14+6*s34*d*s14*s24^2*s13-6*s12^2*s14*s13^2-8*s23*d*s14^2*s24^2-8*s23*s12*s24^2*s13+d*s24^2*s13^3+s23*s12^3*d*s24-12*s23*s12*d*s14^2*s24+28*s23^2*s12*s34*s14-28*s12*s34*s24^3-4*s34^3*s24*s13-10*s12*s34^2*s14*s13-14*s12*s14*s24^2*s13-4*s23^2*d*s14*s13^2+21*s12*s34*d*s24^2*s13-24*s12^2*s34^2*s13-s23*s12^2*d*s14*s13+s12^4*d*s14+7*s12*s34^3*d*s24-2*s23*s24^4-12*s23*s34^2*s24^2-36*s12*s34*s24^2*s13+3*s12^3*s34*d*s14+6*s34*d*s24^2*s13^2+s34^3*d*s14*s24+4*s12^3*d*s24^2-4*s24^4*s13+3*s23*s12^2*s34*d*s13-12*s34^2*s24^3+4*s23*s12^2*s14*s13+3*s23*s12*d*s24^3-s23*d*s14*s24*s13^2-13*s23*s34*d*s14*s24^2+4*s12*d*s14*s24^3-8*s34*s24^4+3*s34^2*d*s14*s24^2+48*s23*s12*s34*s14*s24-4*s23*s12^2*s24*s13-2*s34*s14*s24*s13^2-22*s12^2*s34*s14*s24-12*s23*s12*s34*d*s14^2+24*s23*s34*s14*s24^2+4*s34*s24*s13^3-20*s12^3*s34*s24-2*s12^4*s24+d*s24^5+3*s12^2*s34^3*d-5*s23*s34*d*s14*s13^2+10*s23*s12^2*s14^2+s12*d*s14*s13^3+s23*s34^3*d*s14-8*s23*s12*s34^3+3*s34^3*d*s24*s13-12*s34^2*s24^2*s13-12*s12^3*s34*s13+8*s23*s34*s14*s13^2-16*s12^2*s34*s14*s13+24*s23*s12^2*s34*s14+3*d*s14*s24^2*s13^2+32*s23*s12*s34*s14*s13-6*s23*s34^2*s13^2+3*s12*s34^3*d*s13+6*s23*s34*d*s24*s13^2+s12*d*s24*s13^3+3*s23*s12^2*s34^2*d+8*s23^3*d*s14^2+3*s34^2*d*s24*s13^2-24*s23*s12*s34*s24*s13+12*s23*s12^2*s14*s24-8*s34^3*s24^2-4*s23*s12^2*d*s14^2+4*s34*d*s24^4-36*s12^2*s34*s24*s13+3*s23*d*s24^3*s13+6*s23*s12^2*s34*d*s24-8*s23*s34*s24*s13^2-6*s34*s14*s24^3-8*s23*s12*d*s14^2*s13-4*s23*s14*s24*s13^2+3*d*s24^3*s13^2-16*s12^2*s14*s24*s13+15*s12*s34^2*d*s24*s13-4*s23*d*s14^2*s13^2+8*s23*s12*s14*s24*s13+3*d*s14*s24^3*s13-12*s12^2*s14*s24^2-2*s23*s34^4+24*s23*s12*s34^2*s14-8*s23^2*s12*s14^2-5*s23*s12^2*d*s14*s24+d*s14*s24^4+6*s34^2*d*s24^3-4*s23^2*s34^2*d*s14-8*s23^2*d*s14*s24^2-36*s12^2*s34^2*s24-16*s12*s34^2*s14*s24-4*s12*s34*s13^3+12*s23*s14*s24^3+s12*s34*d*s13^3+s34^4*d*s24-4*s12*s34^3*s14-4*s23^2*d*s14*s24*s13-8*s23^2*s14^2*s13+3*s12*s34^2*d*s14*s13+3*s23*d*s24^2*s13^2+24*s23*s12*s14^2*s24+9*s12^2*d*s24^2*s13-12*s23^2*s34*d*s14*s24+s12*s34^4*d+12*s12*s34*d*s14*s24*s13+s23*d*s24^4+6*s23*s12*d*s24^2*s13-2*s24^5+6*s23*s12*s34^2*d*s13-2*s34^3*s14*s24-20*s23*s12*s34*s24^2-4*s12^4*s34+8*s23^2*s12*s14*s13-6*s23*s34^3*s13+6*s12^2*s34^2*d*s13-12*s23^2*s12*s34*d*s14+3*s23*s34^2*d*s13^2+9*s12*d*s14*s24^2*s13)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (1/2*(8*s23*s34^2*d*s14^2-8*s23*s34^2*s14*s24-s34*d*s14*s24^3-3*d*s14*s24*s13^3-9*s34*d*s14*s24*s13^2+12*s23^2*s34*s14^2-3*s12^2*s34^2*d*s14-4*s23*s34^3*s14+12*s23*d*s14^2*s24*s13+16*s12*s14*s24*s13^2+4*s23^2*d*s14^2*s13+8*s23*s12*s14*s13^2-9*s12*s34*d*s14*s13^2+8*s23*s34*d*s14^2*s24+2*s23*d*s14*s24^2*s13+16*s12*s34*s14*s13^2-16*s23*s34*s14^2*s24+2*s23*s34^2*d*s14*s13-3*s12*s34^3*d*s14-3*s12^2*d*s14*s24*s13+16*s34*s14*s24^2*s13-2*s23*d*s14*s13^3-3*s12^2*s34*d*s14*s24-14*s23*s34^2*s14^2+16*s23^2*s14^3-2*s23*s14^2*s24^2+6*s34^2*s14*s24^2+4*s23*s34*d*s14*s24*s13-9*s34^2*d*s14*s24*s13+10*s14*s24^2*s13^2+12*s34^2*s14*s13^2-8*s23^2*d*s14^3-10*s23*s14^2*s13^2-4*s23*s34*s14*s24*s13-2*s23*s12^2*s34*d*s14+4*s12*s34*s14*s24^2+20*s34^2*s14*s24*s13-4*s23^2*s34*d*s14^2+2*s12^3*s14*s13+12*s23*s34*d*s14^2*s13-6*s12^2*s34*d*s14*s13+2*s14*s13^4-28*s23*s14^2*s24*s13-24*s23*s34*s14^2*s13+4*s23*s34^2*d*s14*s24-4*s23*s12*s34*d*s14*s13+4*s14*s24^3*s13+2*s12^2*s34^2*s14-6*s12*d*s14*s24*s13^2-s12^3*d*s14*s13-3*s12*s34*d*s14*s24^2+6*s12*s14*s13^3-4*s23*s12*s34*s14^2-4*s23*s34^2*s14*s13-4*s23*s12*d*s14*s13^2-4*s34*d*s14*s13^3-3*s12^2*d*s14*s13^2-4*s23^2*d*s14^2*s24-s34^4*d*s14+8*s14*s24*s13^3+4*s23^2*s14^2*s24-16*s23*s12*s14^2*s13-6*s12*s34^2*d*s14*s24+4*s23*s14*s13^3+24*s12*s34*s14*s24*s13+8*s34^3*s14*s13+4*s23^2*s12*d*s14^2-6*s34*d*s14*s24^2*s13+6*s12^2*s14*s13^2+4*s23*s12*d*s14^2*s24+14*s12*s34^2*s14*s13+10*s12*s14*s24^2*s13-2*s23*s12^2*d*s14*s13-d*s14*s13^4-s12^3*s34*d*s14-3*s34^3*d*s14*s24+8*s34*s14*s13^3+4*s23*s12^2*s14*s13+2*s23*s34*d*s14*s24^2-3*s34^2*d*s14*s24^2-4*s23*s12*s34*s14*s24+22*s34*s14*s24*s13^2+2*s12^2*s34*s14*s24+4*s23*s12*s34*d*s14^2-4*s23*s34*s14*s24^2-6*s34^2*d*s14*s13^2-2*s23*s34*d*s14*s13^2-6*s23*s12^2*s14^2-3*s12*d*s14*s13^3+2*s23*s34^3*d*s14+4*s23*s34*s14*s13^2+8*s12^2*s34*s14*s13-3*d*s14*s24^2*s13^2+4*s23*s12*s34*s14*s13+2*s34^4*s14+4*s23*s12^2*d*s14^2+2*s34*s14*s24^3-4*s34^3*d*s14*s13+8*s23*s12*d*s14^2*s13+4*s23*s14*s24*s13^2+8*s12^2*s14*s24*s13+4*s23*d*s14^2*s13^2+4*s23*s12*s14*s24*s13-d*s14*s24^3*s13-4*s23*s12*s34^2*s14-4*s23^2*s12*s14^2+8*s12*s34^2*s14*s24+4*s12*s34^3*s14-12*s23^2*s14^2*s13-9*s12*s34^2*d*s14*s13-8*s23*s12*s14^2*s24-12*s12*s34*d*s14*s24*s13+6*s34^3*s14*s24-3*s12*d*s14*s24^2*s13)*(-2+d)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (-1/2*(4*s23*s12*s34*s14-4*s23*d*s14*s13^2-4*s12^3*s34-2*s12^2*d*s14*s13-10*s34*s24^2*s13-12*s23*s12*d*s14*s13-8*s12^2*s34*s24+s12*s34^3*d+9*s12^2*d*s24*s13+3*s12*s34^2*d*s24+16*s23*s12*s14*s24+4*s23*s12*d*s14^2-12*s12^2*s13^2-4*s12*d*s14*s24*s13+3*s12^2*d*s24^2-16*s23^2*s14^2-2*s12*s34^2*s24+4*s12*s34*s14*s24-12*s23*s12*s14^2+4*s12*s14*s24^2-2*s12^2*s34^2-8*s34^2*s24*s13-8*s12^3*s13+9*s12^2*s34*d*s13-4*s34^2*s14*s13+12*s23*s14^2*s13-6*s34*s13^3+6*s12^2*s34*d*s24-24*s12*s34*s24*s13-6*s12^3*s24-4*s23*s14^2*s24-22*s12*s24*s13^2+6*s34*d*s24*s13^2+3*s34*d*s13^3-2*s12^3*d*s14-4*s12*s34*s14*s13-4*s24^3*s13-8*s12*s34^2*s13+4*s34*d*s14*s13^2+6*s23*s34^2*s14-4*s12*s14*s13^2+8*s23^2*d*s14^2+6*s12*s34^2*d*s13+2*d*s14*s13^3+24*s23*s12*s14*s13+4*s12*s34*d*s14*s13+6*s12^2*d*s13^2+6*s12*d*s24^2*s13-6*s12^2*s24^2-8*s23*s12*d*s14*s24-4*s23*s34^2*d*s14-4*s12^2*d*s14*s24+s34^3*d*s13+3*d*s24*s13^3+4*s12*s14*s24*s13+12*s12*s34*d*s24*s13-10*s24^2*s13^2-14*s12^2*s34*s13+4*s12^2*s34*s14-8*s34*s14*s13^2+4*s12*d*s13^3-16*s34*s24*s13^2+28*s23*s14*s24*s13+8*s12^2*s14*s24+d*s24^3*s13-4*s23*d*s14^2*s13-2*s12*d*s14*s24^2+3*s12^2*s34^2*d-2*s13^4+2*s12*s34^2*d*s14-4*s14*s13^3+3*s34^2*d*s24*s13-2*s12*s24^3+d*s13^4-8*s23*s12^2*d*s14+3*s12*s34*d*s24^2+10*s23*s14*s13^2+4*s12^3*d*s13-4*s14*s24*s13^2-8*s23*s34*d*s14*s13+3*s34^2*d*s13^2+14*s23*s12^2*s14+2*s34^2*d*s14*s13-4*s12*s34*s24^2-8*s24*s13^3+16*s23*s34*s14*s13-2*d*s14*s24^2*s13+3*d*s24^2*s13^2-12*s23*d*s14*s24*s13-16*s12*s34*s13^2-4*s23*s34*d*s14*s24+s12^4*d+4*s23*s34*s14^2-4*s23*s12*s34*d*s14-4*s34*s14*s24*s13+3*s12^3*s34*d+4*s12^3*s14-4*s23*s34*d*s14^2+8*s23*s34*s14*s24-8*s12*s13^3+3*s12^3*d*s24+3*s34*d*s24^2*s13-2*s12^4-2*s34^3*s13+2*s23*s14*s24^2+9*s12*s34*d*s13^2-16*s12*s24^2*s13+4*s23*d*s14^2*s24+4*s12^2*s14*s13+2*s12*d*s14*s13^2-6*s34^2*s13^2-20*s12^2*s24*s13+9*s12*d*s24*s13^2+s12*d*s24^3)*s23*(-2+d)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)),

INT["pentagon1x123",3,21,3,2,{1,0,1,-2,1}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-(2*s12^2*s14^2*s24^2-d*s14^2*s24^2*s13^2-4*s23*s34*s14^3*s13-s23^2*d*s14^2*s24^2+4*s23*s34*d*s14^3*s13+2*s23^2*s12^2*s14^2-2*s23^2*s34*d*s14^2*s24+2*s12^2*s34^2*s14^2-2*s12*s34^2*d*s14^2*s13-8*s23*s14^3*s13^2+4*s23^2*s12*s14^2*s13-4*s23^2*d*s14^3*s24-4*s12*d*s14^2*s13^3-s34^2*d*s14^2*s13^2+4*s23^2*s34*s14^3+8*s23*s12*s34*s14^2*s13+12*s12^2*s14^2*s24*s13+8*s23*s12*s14^2*s24*s13+12*s12^2*s34*s14^2*s13+4*s23*s34*s14^2*s13^2+4*s23*s14^2*s24*s13^2-2*s12*d*s14^2*s24^2*s13-4*s12*s34*d*s14^2*s24*s13+2*s23^2*d*s14^2*s24*s13+4*s23*s12^2*s14^2*s24-s23^2*s12^2*d*s14^2+4*s12^3*s34*s14^2+2*s12^4*s14^2+8*s12*s34*s14^2*s24*s13+12*s23*s12^2*s14^2*s13+4*s34*s14^2*s13^3+4*s14^2*s24*s13^3+4*s23^2*d*s14^3*s13+4*s12*s14^2*s24^2*s13+4*s12^2*s34*s14^2*s24-4*s23*s12*s34*s14^3+4*s23*s14^2*s13^3+2*s23^2*s34*d*s14^2*s13-4*s23^3*s14^3-2*s23*s12^3*d*s14^2+4*s34*s14^2*s24*s13^2-s12^2*s34^2*d*s14^2+2*s23*s12*s34^2*d*s14^2+12*s12^2*s14^2*s13^2-6*s23*s12^2*d*s14^2*s13-4*s23^2*s34*d*s14^3-d*s14^2*s13^4-s23^2*d*s14^2*s13^2+4*s12*s34^2*s14^2*s13+2*s23^2*s14^2*s13^2+2*s14^2*s24^2*s13^2+2*s23^2*s12*s34*d*s14^2+4*s23*s34*d*s14^2*s24*s13-4*s12^3*d*s14^2*s13-6*s12^2*d*s14^2*s13^2-6*s23*s12*d*s14^2*s13^2-2*s34*d*s14^2*s13^3+8*s12*s14^2*s13^3+4*s23*s12*s34*d*s14^3-s23^2*s34^2*d*s14^2+4*s23*s12^3*s14^2+4*s23^2*s12*d*s14^3-6*s12*d*s14^2*s24*s13^2+2*s23^2*s12*d*s14^2*s24-4*s23*s12*s14^3*s24-12*s23^2*s14^3*s13+2*s34^2*s14^2*s13^2-4*s23^2*d*s14^4+4*s23^2*s34*s14^2*s24+8*s12^3*s14^2*s13+4*s23*d*s14^3*s24*s13+8*s23*s12*d*s14^3*s13+2*s14^2*s13^4+4*s23*s12^2*s34*s14^2+4*s23*d*s14^3*s13^2-6*s12^2*s34*d*s14^2*s13+12*s12*s34*s14^2*s13^2+12*s12*s14^2*s24*s13^2+4*s12^3*s14^2*s24-12*s23^2*s12*s14^3-2*s12^2*s34*d*s14^2*s24-2*s23*d*s14^2*s13^3-2*d*s14^2*s24*s13^3-2*s34*d*s14^2*s24*s13^2+4*s23*s12*d*s14^3*s24+4*s23^2*s14^4+2*s23*s34^2*d*s14^2*s13+4*s23*s12*s34*d*s14^2*s24-s12^4*d*s14^2-2*s23^2*s12*d*s14^2*s13-2*s12^3*s34*d*s14^2-16*s23*s12*s14^3*s13+4*s23^2*s14^3*s24+2*s23^2*s34^2*s14^2+2*s23*s12*d*s14^2*s24^2-6*s12^2*d*s14^2*s24*s13-s12^2*d*s14^2*s24^2+2*s23*d*s14^2*s24^2*s13-4*s23*s14^3*s24*s13-8*s23*s12^2*s14^3+12*s23*s12*s14^2*s13^2+2*s23^2*s14^2*s24^2+4*s23*s12^2*d*s14^3-2*s12^3*d*s14^2*s24-6*s12*s34*d*s14^2*s13^2)*(-2+d)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (1/2*(-2+d)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)*(16*s23*s34^2*d*s14^2-6*s12^2*d*s14*s24^2-3*s12*d*s24^4+8*s23*s12*d*s14*s24^2-48*s23*s34^2*s14*s24-8*s34*d*s14*s24^3-18*s12^2*s14^2*s13-2*d*s14*s24*s13^3+8*s23*s12*s34^2*d*s14-12*s34*d*s14*s24*s13^2+28*s23^2*s34*s14^2+6*s12^2*s34^3+4*s34*s14^2*s24*s13-s34^5*d-6*s12^2*s34^2*d*s14+8*s12*s14*s24^3-16*s23*s34^3*s14-3*s34^3*d*s13^2+9*s12*d*s14^2*s13^2+20*s23*s12*s14^3+12*s12*s34^3*s13+8*s23*d*s14^2*s24*s13-6*s12*s34*d*s24*s13^2+4*s23^2*d*s14^2*s13-3*s12*s34^2*d*s13^2+6*s12^2*s24^2*s13-12*s23*s14^3*s24+6*s34*s14^2*s24^2-6*s12*s34*d*s14*s13^2+6*s12*s34^4-3*s12*d*s24^2*s13^2-2*s12^3*d*s14*s24+3*s12^3*d*s14^2+32*s23*s34*d*s14^2*s24-3*s34^2*d*s14^2*s24+6*s12*s34^2*s13^2+6*s34^4*s13+6*s24^3*s13^2+8*s23*d*s14*s24^2*s13-56*s23*s34*s14^2*s24+8*s23*s34^2*d*s14*s13-6*s12*s34^3*d*s14-6*s12^2*d*s14*s24*s13+16*s23*s12*s34*d*s14*s24+4*s14*s24^4-2*s12^3*s34*d*s24+24*s34*s14*s24^2*s13-s12^3*s34^2*d-12*s12^2*s34*d*s14*s24-28*s23*s34^2*s14^2+2*s14^2*s24^3+12*s12*s34*s24*s13^2-3*s12^2*d*s24^3-9*s12^2*s34*d*s24^2+32*s23^2*s14^3+2*s12^3*s24^2-6*s12*d*s24^3*s13-8*s23*s12*d*s14^3-28*s23*s14^2*s24^2+24*s34^2*s14*s24^2-18*s34^2*d*s24^2*s13+6*s12^2*s24^3+16*s23*s34*d*s14*s24*s13-18*s34^2*d*s14*s24*s13-6*s14^2*s13^3+4*s14*s24^2*s13^2+4*s34^2*s14*s13^2-16*s23^2*d*s14^3-12*s23*s14^2*s13^2-6*s12^2*s34*d*s24*s13-40*s23*s34*s14*s24*s13+2*s24^2*s13^3+24*s12*s34*s14*s24^2+2*s34^3*s14^2+36*s12*s34^2*s24^2+10*s34^4*s24+24*s34^2*s14*s24*s13-12*s23^2*s34*d*s14^2-3*s34^2*d*s14^2*s13+8*s23*s34*d*s14^2*s13+6*s12*s24^4-6*s12^2*s34*d*s14*s13+8*s23*d*s14*s24^3+18*s34^2*s24*s13^2-8*s23*s14^2*s24*s13+24*s34*s24^3*s13-8*s23*s34*s14^2*s13+24*s23*s34^2*d*s14*s24-6*s34*s14^2*s13^2+8*s14*s24^3*s13-6*s14^2*s24*s13^2-2*s34*d*s24*s13^3+20*s23*s14^3*s13+4*s12^2*s34^2*s14-20*s23*s12*s14*s24^2-18*s12*s34^2*d*s24^2-6*s12*d*s14*s24*s13^2-18*s12*s34*d*s14*s24^2-3*d*s24^4*s13-3*d*s14^2*s24^2*s13+2*s12^3*s34^2-10*s34^3*d*s24^2-6*s12^2*s14^2*s24-8*s23*s12*s34*s14^2-20*s23*s34^2*s14*s13-2*s34*d*s14*s13^3+18*s34*s24^2*s13^2-20*s23*s14*s24^2*s13+18*s12^2*s34*s24^2-12*s23^2*d*s14^2*s24-2*s34^4*d*s14+24*s12*s34^3*s24-3*s12*d*s14^2*s24^2-12*s34*d*s24^3*s13+28*s23^2*s14^2*s24+3*d*s14^2*s13^3+12*s12*s24^3*s13-24*s23*s12*s14^2*s13-18*s12*s34^2*d*s14*s24-12*s12*s34*d*s24^3-3*s34^4*d*s13+16*s12*s34*s14*s24*s13+2*s12*s34*d*s14^2*s13-9*s12^2*s34^2*d*s24+36*s12*s34^2*s24*s13+8*s34^3*s14*s13+4*s23^2*s12*d*s14^2-18*s34*d*s14*s24^2*s13+16*s23*d*s14^2*s24^2-d*s24^2*s13^3+s12^2*d*s14^2*s24+8*s23*s12*d*s14^2*s24+24*s12*s34*s24^3+24*s34^3*s24*s13+8*s12*s34^2*s14*s13+8*s12*s14*s24^2*s13-18*s12*s34*d*s24^2*s13+6*s12^2*s34^2*s13-s34^2*d*s13^3-12*s12*s34^3*d*s24+36*s12*s34*s24^2*s13-2*s12^3*s34*d*s14-9*s34*d*s24^2*s13^2-8*s34^3*d*s14*s24+6*s34^2*s14^2*s24-s12^3*d*s24^2+6*s24^4*s13+6*s12*s24^2*s13^2+6*s34^3*s13^2+20*s34^2*s24^3-12*s12*s14^2*s24*s13-12*s12*s34*s14^2*s13+24*s23*s34*d*s14*s24^2-6*s12*d*s14*s24^3+10*s34*s24^4-12*s34^2*d*s14*s24^2+s12^2*s34*d*s14^2-40*s23*s12*s34*s14*s24+8*s34*s14*s24*s13^2-6*s34*d*s14^2*s24*s13+8*s12^2*s34*s14*s24+8*s23*s12*s34*d*s14^2+8*s23*d*s14^3*s24-18*s12*s14^2*s13^2+2*s34^5-48*s23*s34*s14*s24^2+4*s34*s24*s13^3+4*s12^3*s34*s24+s34*d*s14^2*s13^2-6*s12^3*s14^2-d*s24^5-3*s12^2*s34^3*d-6*s34^2*d*s14*s13^2-12*s23*s12^2*s14^2+8*s23*s34^3*d*s14+4*s12*s34*s14^2*s24-3*s34*d*s14^2*s24^2-12*s34^3*d*s24*s13+36*s34^2*s24^2*s13-4*s23*s34*s14*s13^2-4*s23*s12^2*s34*s14+2*s12*s14^2*s24^2-8*s23*d*s14^3*s13-6*d*s14*s24^2*s13^2-8*s23*s12*s34*s14*s13-6*s12*s34^3*d*s13-9*s34^2*d*s24*s13^2+2*s12*d*s14^2*s24*s13+4*s34^4*s14-4*s23*s12^2*s14*s24+2*s12*s34^2*s14^2+2*s34^2*s13^3+20*s34^3*s24^2+8*s23*s12^2*d*s14^2-5*s34*d*s24^4+12*s12^2*s34*s24*s13+16*s34*s14*s24^3+2*s34^2*s14^2*s13-6*s34^3*d*s14*s13+8*s23*s34*d*s14^3+16*s23*s12*d*s14^2*s13+9*s12^2*d*s14^2*s13-4*s23*s14*s24*s13^2-12*s23*s34*s14^3-3*d*s24^3*s13^2+d*s14^2*s24*s13^2-18*s12*s34^2*d*s24*s13+8*s23*d*s14^2*s13^2-8*s23*s12*s14*s24*s13-6*d*s14*s24^3*s13+4*s12^2*s14*s24^2-20*s23*s12*s34^2*s14-4*s23^2*s12*s14^2-2*d*s14*s24^4-10*s34^2*d*s24^3-3*s12*s34^2*d*s14^2+18*s12^2*s34^2*s24+24*s12*s34^2*s14*s24-16*s23*s14*s24^3-5*s34^4*d*s24+8*s12*s34^3*s14-4*s23^2*s14^2*s13-12*s12*s34^2*d*s14*s13-6*s12^2*s34*s14^2-8*s23*s12*s14^2*s24-d*s14^2*s24^3-3*s12^2*d*s24^2*s13-3*s12*s34^4*d-24*s12*s34*d*s14*s24*s13+2*s14^2*s24^2*s13+2*s24^5+16*s34^3*s14*s24-s34^3*d*s14^2-6*s12*s34*d*s14^2*s24-3*s12^2*s34^2*d*s13-12*s12*d*s14*s24^2*s13)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (-1/2*(2*s23*s34^2*d*s14^2-18*s12^2*s14^2*s13+4*s34*s14^2*s24*s13+9*s12*d*s14^2*s13^2+20*s23*s12*s14^3-4*s23*d*s14^2*s24*s13-12*s23*s14^3*s24+6*s34*s14^2*s24^2+3*s12^3*d*s14^2+4*s23*s34*d*s14^2*s24-3*s34^2*d*s14^2*s24-8*s23*s34*s14^2*s24-4*s23*s34^2*s14^2+2*s14^2*s24^3+8*s23^2*s14^3-8*s23*s12*d*s14^3-4*s23*s14^2*s24^2-6*s14^2*s13^3-4*s23*s14^2*s13^2+2*s34^3*s14^2-3*s34^2*d*s14^2*s13-4*s23*s34*d*s14^2*s13-6*s34*s14^2*s13^2-6*s14^2*s24*s13^2+20*s23*s14^3*s13-3*d*s14^2*s24^2*s13-6*s12^2*s14^2*s24-3*s12*d*s14^2*s24^2+3*d*s14^2*s13^3-8*s23*s12*s14^2*s13+2*s12*s34*d*s14^2*s13+2*s23*d*s14^2*s24^2+s12^2*d*s14^2*s24-4*s23*s12*d*s14^2*s24+6*s34^2*s14^2*s24-12*s12*s14^2*s24*s13-12*s12*s34*s14^2*s13+s12^2*s34*d*s14^2-6*s34*d*s14^2*s24*s13-4*s23*s12*s34*d*s14^2+8*s23*d*s14^3*s24-18*s12*s14^2*s13^2+s34*d*s14^2*s13^2-6*s12^3*s14^2-4*s23*s12^2*s14^2+4*s12*s34*s14^2*s24-3*s34*d*s14^2*s24^2+2*s12*s14^2*s24^2-8*s23*d*s14^3*s13+2*s12*d*s14^2*s24*s13+2*s12*s34^2*s14^2+2*s23*s12^2*d*s14^2+2*s34^2*s14^2*s13+8*s23*s34*d*s14^3+4*s23*s12*d*s14^2*s13+9*s12^2*d*s14^2*s13-12*s23*s34*s14^3+d*s14^2*s24*s13^2+2*s23*d*s14^2*s13^2-3*s12*s34^2*d*s14^2-6*s12^2*s34*s14^2-d*s14^2*s24^3+2*s14^2*s24^2*s13-s34^3*d*s14^2-6*s12*s34*d*s14^2*s24)*(-2+d)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (-1/2*(2*s12^2*d*s14*s24^2+4*d*s14*s24*s13^3+4*s34*d*s14*s24*s13^2-4*s23^2*s34*s14^2+2*s12^2*s34^3+2*s12^2*s34^2*d*s14-s34^3*d*s13^2+4*s12*s34^3*s13-8*s23*d*s14^2*s24*s13+36*s12^2*s34*s13^2-24*s12*s14*s24*s13^2-18*s12*s34*d*s24*s13^2-12*s23^2*d*s14^2*s13-48*s23*s12*s14*s13^2-9*s12*s34^2*d*s13^2+18*s12^2*s24^2*s13+12*s12*s34*d*s14*s13^2-9*s12*d*s24^2*s13^2+4*s12^3*d*s14*s24+8*s23*s12^3*d*s14-8*s12^3*s14*s24+18*s12*s34^2*s13^2+2*s24^3*s13^2-24*s12*s34*s14*s13^2+12*s12^2*d*s14*s24*s13-3*s12^4*d*s24-6*s12^3*s34*d*s24-3*s12^3*s34^2*d+16*s23*s12*d*s14*s24*s13+8*s23*d*s14*s13^3+4*s12^2*s34*d*s14*s24+10*s12*s13^4+36*s12*s34*s24*s13^2-s12^2*d*s24^3-3*s12^2*s34*d*s24^2-8*s23^2*s14^3+6*s12^3*s24^2+20*s12^2*s13^3-4*s12^4*s14-8*s12^3*s34*s14-2*s12*d*s24^3*s13-3*s12^4*s34*d+24*s12^3*s24*s13+2*s12^2*s24^3+20*s12^3*s13^2-18*s12^2*s34*d*s13^2-10*s12^2*d*s13^3-4*s14*s24^2*s13^2+6*s24*s13^4-4*s34^2*s14*s13^2+8*s23^2*d*s14^3+16*s23*s14^2*s13^2-18*s12^2*s34*d*s24*s13-8*s23*s34*s14*s24*s13+8*s23*s12^2*s34*d*s14+6*s24^2*s13^3+4*s23^2*s34*d*s14^2-16*s12^3*s14*s13-8*s23*s34*d*s14^2*s13+12*s12^2*s34*d*s14*s13-12*s12^3*s34*d*s13-5*s12^4*d*s13+6*s34^2*s24*s13^2-4*s14*s13^4+8*s23*s14^2*s24*s13+8*s23*s34*s14^2*s13+16*s23*s12*s34*d*s14*s13-18*s12^2*d*s24*s13^2-6*s34*d*s24*s13^3-4*s12^2*s34^2*s14-4*s23*s12*s14*s24^2+24*s12*s24*s13^3+12*s12*d*s14*s24*s13^2+8*s12^3*d*s14*s13-16*s12*s14*s13^3+6*s12^3*s34^2+8*s23*s12*s34*s14^2-4*s23*s34^2*s14*s13+24*s23*s12*d*s14*s13^2+4*s34*d*s14*s13^3+6*s34*s24^2*s13^2-5*s12*d*s13^4+12*s12^2*d*s14*s13^2-4*s23*s14*s24^2*s13+6*s12^2*s34*s24^2+4*s23^2*d*s14^2*s24-12*s12^3*d*s24*s13-8*s14*s24*s13^3-4*s23^2*s14^2*s24+4*s12*s24^3*s13+32*s23*s12*s14^2*s13-16*s23*s14*s13^3+36*s12^2*s24*s13^2-3*d*s24*s13^4-16*s12*s34*s14*s24*s13-3*s12^2*s34^2*d*s24+2*s13^5+12*s12*s34^2*s24*s13-12*s23^2*s12*d*s14^2-24*s12^2*s14*s13^2-3*d*s24^2*s13^3-8*s23*s12*d*s14^2*s24-8*s12*s34^2*s14*s13-8*s12*s14*s24^2*s13-6*s12*s34*d*s24^2*s13+18*s12^2*s34^2*s13-3*s34^2*d*s13^3+24*s23*s12^2*d*s14*s13+2*d*s14*s13^4+2*s12^4*d*s14+12*s12*s34*s24^2*s13+4*s12^3*s34*d*s14-3*s34*d*s24^2*s13^2-3*s12^3*d*s24^2-8*s34*s14*s13^3-3*s34*d*s13^4+18*s12*s24^2*s13^2+2*s34^3*s13^2-48*s23*s12^2*s14*s13+8*s23*d*s14*s24*s13^2-d*s13^5-8*s23*s12*s34*s14*s24-8*s34*s14*s24*s13^2-8*s12^2*s34*s14*s24-8*s23*s12*s34*d*s14^2+12*s34*s24*s13^3+12*s12^3*s34*s24+6*s12^4*s24-s12^2*s34^3*d+2*s34^2*d*s14*s13^2+8*s23*s34*d*s14*s13^2+16*s23*s12^2*s14^2+6*s34*s13^4+8*s12*d*s14*s13^3+10*s12^4*s13+2*s12^5+24*s12^3*s34*s13-20*s23*s34*s14*s13^2-24*s12^2*s34*s14*s13-20*s23*s12^2*s34*s14+2*d*s14*s24^2*s13^2-40*s23*s12*s34*s14*s13-2*s12*s34^3*d*s13-12*s12*d*s24*s13^3-3*s34^2*d*s24*s13^2-20*s23*s12^2*s14*s24+6*s34^2*s13^3-8*s23*s12^2*d*s14^2+36*s12^2*s34*s24*s13-10*s12^3*d*s13^2-16*s23*s12*d*s14^2*s13-20*s23*s14*s24*s13^2-d*s24^3*s13^2-24*s12^2*s14*s24*s13-6*s12*s34^2*d*s24*s13-8*s23*d*s14^2*s13^2-40*s23*s12*s14*s24*s13-4*s12^2*s14*s24^2-4*s23*s12*s34^2*s14+28*s23^2*s12*s14^2+8*s23*s12^2*d*s14*s24-16*s23*s12^3*s14-s12^5*d+6*s12^2*s34^2*s24+24*s12*s34*s13^3-12*s12*s34*d*s13^3+28*s23^2*s14^2*s13+4*s12*s34^2*d*s14*s13+8*s23*s12*s14^2*s24-9*s12^2*d*s24^2*s13+8*s12*s34*d*s14*s24*s13+6*s12^4*s34-9*s12^2*s34^2*d*s13+4*s12*d*s14*s24^2*s13)*(-2+d)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)),

INT["pentagon1x123",3,21,4,0,{2,0,1,0,1}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-1/2*s23^(-1)*(s23+s12+s34+s14+s24+s13)^(-1)*(d*s13-8*s23-4*s12+s34*d-4*s34+d*s24+2*s23*d+s12*d-4*s24-4*s13)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (-s23^(-1)*(s23+s12+s34+s14+s24+s13)^(-1)*(-3+d)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (s23^(-1)*(s23+s12+s34+s14+s24+s13)^(-1)*(-3+d)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (-s23^(-1)*(s23+s12+s34+s14+s24+s13)^(-1)*(-3+d)),

INT["pentagon1x123",3,21,4,0,{1,0,2,0,1}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (1/2*s23^(-1)*(d*s13-4*s12+s34*d-4*s34+d*s24+s12*d-4*s24-4*s13)*s14^(-1)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (s23^(-1)*(-3+d)*s14^(-1)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (-s23^(-1)*(-3+d)*s14^(-1)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (-s23^(-1)*(-3+d)*s14^(-1)),

INT["pentagon1x123",3,21,4,0,{1,0,1,0,2}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-1/2*(s23+s12+s34+s14+s24+s13)^(-1)*s14^(-1)*(d*s13-4*s12+s34*d-4*s34+d*s24+s12*d-8*s14-4*s24-4*s13+2*d*s14)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)*(-3+d)*s14^(-1)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)*(-3+d)*s14^(-1)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)*(-3+d)*s14^(-1)),

INT["pentagon1x123",3,21,4,1,{2,-1,1,0,1}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-1/2*(6*s23*s13^2+4*s23*d*s14*s24-s34*d*s24^2+2*s24^2*s13+6*s34*s13^2+4*s23^2*d*s14-s12^2*d*s13-2*s34*d*s14*s13-2*s12*s14*s13+6*s23*s34*s24-2*s23*s34*d*s24+6*s23*s34^2+d*s14*s24^2+4*s12*s24*s13-4*s34*d*s24*s13-s34^2*d*s14-4*s23*s34*d*s13+12*s23*s34*s13-2*s12*s34*s14-d*s14*s13^2-2*s23*d*s13^2+2*s34^3-2*s12*s34^2*d-12*s23*s12*s14-2*d*s24*s13^2-8*s12*s14*s24+2*s12^2*s34-d*s13^3+2*s13^3+2*s34*s24^2+4*s23*s12*d*s14-2*s23*d*s24*s13+2*s12^2*s13-12*s23^2*s14+2*s34^2*s14-3*s34*d*s13^2-s12^2*s34*d-2*s34*s14*s24+6*s34^2*s13-2*s12*d*s24*s13+2*s14*s13^2-4*s12^2*s14-2*s23*s12*d*s13+6*s23*s12*s34+4*s24*s13^2-2*s23*s34^2*d-2*s12*d*s13^2+6*s23*s12*s13-12*s23*s14*s24-4*s12*s34*d*s13+8*s12*s34*s13-2*s34^2*d*s24+4*s23*s34*s14-3*s34^2*d*s13+4*s12*s34*s24-d*s24^2*s13+4*s12*s34^2+6*s23*s24*s13-2*s12*s34*d*s24+4*s23*s14*s13-s34^3*d-2*s14*s24*s13+8*s34*s24*s13+s12^2*d*s14+2*s12*d*s14*s24+4*s34^2*s24+4*s34*s14*s13+4*s23*s14^2-4*s14*s24^2-2*s23*s12*s34*d+4*s12*s13^2)*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      ((d*s13+3*s12+s34*d-3*s34-d*s24-s12*d+3*s24-3*s13)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)*(2*s34*d*s13-3*s34*s24-s12*d*s14+d*s24*s13+d*s14*s13-d*s14*s24-3*s13^2-6*s34*s13+3*s12*s14+d*s13^2+s34*d*s24-3*s34^2+s34^2*d+3*s14*s24+6*s23*s14-3*s12*s13-3*s34*s14+s12*s34*d-3*s12*s34+s12*d*s13-2*s23*d*s14-3*s24*s13+s34*d*s14-3*s14*s13)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      ((d*s24^2-3*s23*s24-3*s12^2-3*s34*s24-s23*d*s13+d*s24*s13-3*s23*s12-3*s24^2+3*s23*s34-s23*s34*d+s23*d*s24+s12^2*d+3*s23*s13+s34*d*s24+6*s23*s14-3*s12*s13+2*s12*d*s24+s23*s12*d+s12*s34*d-3*s12*s34+s12*d*s13-2*s23*d*s14-3*s24*s13-6*s12*s24)*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)),

INT["pentagon1x123",3,21,4,1,{2,0,1,-1,1}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-1/2*s23^(-1)*(s23+s12+s34+s14+s24+s13)^(-1)*(8*s23*s12*s34*s14-3*s23*d*s14*s13^2-3*s12^2*d*s14*s13-6*s23*s12*d*s14*s13+6*s23^2*s14*s13+8*s23*s12*s14*s24+2*s23*s12*d*s14^2-4*s12*d*s14*s24*s13-2*s12*s34*d*s14*s24-16*s23^2*s14^2+8*s12*s34*s14*s24-10*s23*s12*s14^2+2*s23^2*s34*d*s14-2*d*s14*s24*s13^2+4*s12*s14*s24^2+4*s34^2*s14*s13+4*s14*s24^2*s13-10*s23*s14^2*s13-6*s23*s14^2*s24-s12^3*d*s14+16*s12*s34*s14*s13-2*s34*d*s14*s13^2-2*s23*s34^2*s14+12*s12*s14*s13^2+4*s23^2*d*s14^2-6*s23^2*s14*s24-d*s14*s13^3+20*s23*s12*s14*s13-4*s12*s34*d*s14*s13-2*s23*s12*d*s14*s24+s23*s34^2*d*s14-2*s12^2*d*s14*s24+s23*d*s14*s24^2-6*s23^2*s34*s14-2*s34*d*s14*s24*s13+16*s12*s14*s24*s13+8*s12^2*s34*s14+8*s34*s14*s13^2+8*s23*s14*s24*s13+8*s12^2*s14*s24+2*s23*d*s14^2*s13-s12*d*s14*s24^2+6*s23^2*s12*s14+2*s23^2*d*s14*s24-s12*s34^2*d*s14+4*s14*s13^3-3*s23*s12^2*d*s14+4*s12*s34^2*s14+10*s23*s14*s13^2+8*s14*s24*s13^2-2*s23*s34*d*s14*s13+10*s23*s12^2*s14-s34^2*d*s14*s13+8*s23*s34*s14*s13-d*s14*s24^2*s13-2*s23*d*s14*s24*s13+2*s23*s34*d*s14*s24-6*s23*s34*s14^2-2*s23*s12*s34*d*s14-2*s12^2*s34*d*s14+8*s34*s14*s24*s13+4*s12^3*s14+2*s23*s34*d*s14^2-4*s23*s34*s14*s24-2*s23*s14*s24^2+2*s23*d*s14^2*s24+12*s12^2*s14*s13-2*s23^2*d*s14*s13-3*s12*d*s14*s13^2-2*s23^2*s12*d*s14)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (-(2*s23*d*s14*s24-2*s23^2*d*s14+s23*d*s24^2-s34*d*s14*s13+6*s12*s14*s13-6*s23*s34*s24+2*s23*s34*d*s24-3*s23*s34^2+s23*s34*d*s13-3*s23*s34*s13+3*s12*s34*s14-d*s14*s13^2-s12*s34*d*s14+6*s23*s12*s14+3*s12*s14*s24-d*s14*s24*s13-2*s23*s12*d*s14+s23*d*s24*s13+6*s23^2*s14-2*s23*d*s14*s13-3*s23*s24^2+3*s14*s13^2+3*s12^2*s14-3*s23*s12*s34-2*s12*d*s14*s13+s23*s34^2*d+2*s23*d*s14^2-6*s23*s14*s24-6*s23*s34*s14+2*s23*s34*d*s14-3*s23*s24*s13+6*s23*s14*s13-3*s23*s12*s24+3*s14*s24*s13-s12^2*d*s14-s12*d*s14*s24+s23*s12*d*s24+3*s34*s14*s13-6*s23*s14^2+s23*s12*s34*d)*s23^(-1)*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (s23^(-1)*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)*(s23*d*s14*s24-s34*d*s14*s13+6*s12*s14*s13+3*s12*s34*s14-d*s14*s13^2-s12*s34*d*s14+3*s23*s12*s14+3*s12*s14*s24-d*s14*s24*s13-s23*s12*d*s14-s23*d*s14*s13+3*s14*s13^2+3*s12^2*s14-2*s12*d*s14*s13+2*s23*d*s14^2-3*s23*s14*s24-3*s23*s34*s14+s23*s34*d*s14+3*s23*s14*s13+3*s14*s24*s13-s12^2*d*s14-s12*d*s14*s24+3*s34*s14*s13-6*s23*s14^2)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (s23^(-1)*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)*(3*s23*s13^2+s23*d*s14*s24+3*s24^2*s13+6*s34*s13^2+2*s23^2*d*s14-3*s12^2*d*s13+6*s12^2*s24+3*s12^3-s12^3*d+12*s12*s24*s13-2*s34*d*s24*s13+3*s23*s12^2-s23*s34*d*s13+3*s23*s34*s13-s23*s12^2*d-s23*d*s13^2-s12*s34^2*d-9*s23*s12*s14-2*d*s24*s13^2+6*s12^2*s34-d*s13^3+3*s13^3+3*s23*s12*d*s14-s23*d*s24*s13+9*s12^2*s13-6*s23^2*s14-2*s12^2*d*s24+3*s23*d*s14*s13-2*s34*d*s13^2-2*s12^2*s34*d+3*s34^2*s13+3*s12*s24^2-4*s12*d*s24*s13-2*s23*s12*d*s13+3*s23*s12*s34+6*s24*s13^2-3*s12*d*s13^2+6*s23*s12*s13-3*s23*s14*s24-4*s12*s34*d*s13+12*s12*s34*s13-3*s23*s34*s14+s23*s34*d*s14-s34^2*d*s13+6*s12*s34*s24-d*s24^2*s13+3*s12*s34^2+3*s23*s24*s13-s12*d*s24^2-2*s12*s34*d*s24-9*s23*s14*s13+3*s23*s12*s24+6*s34*s24*s13-s23*s12*d*s24-s23*s12*s34*d+9*s12*s13^2)),

INT["pentagon1x123",3,21,4,1,{1,-1,2,0,1}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (1/2*s14^(-1)*(2*s23*d*s14*s24-s34*d*s24^2+4*s24^2*s13+12*s34*s13^2-s12^2*d*s13-2*s34*d*s14*s13+2*s12*s14*s13+d*s14*s24^2+8*s12*s24*s13-4*s34*d*s24*s13-s34^2*d*s14+2*s12*s34*s14-d*s14*s13^2+4*s34^3-2*s12*s34^2*d-6*s23*s12*s14-2*d*s24*s13^2-4*s12*s14*s24+4*s12^2*s34-d*s13^3+4*s13^3+4*s34*s24^2+2*s23*s12*d*s14+4*s12^2*s13+2*s23*d*s14*s13+4*s34^2*s14-3*s34*d*s13^2-s12^2*s34*d+2*s34*s14*s24+12*s34^2*s13-2*s12*d*s24*s13+4*s14*s13^2-2*s12^2*s14+8*s24*s13^2-2*s12*d*s13^2-6*s23*s14*s24-4*s12*s34*d*s13+16*s12*s34*s13-2*s34^2*d*s24-10*s23*s34*s14+2*s23*s34*d*s14-3*s34^2*d*s13+8*s12*s34*s24-d*s24^2*s13+8*s12*s34^2-2*s12*s34*d*s24-10*s23*s14*s13-s34^3*d+2*s14*s24*s13+16*s34*s24*s13+s12^2*d*s14+2*s12*d*s14*s24+8*s34^2*s24+8*s34*s14*s13-4*s23*s14^2-2*s14*s24^2+8*s12*s13^2)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (-s14^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)*(2*s34*d*s13-3*s34*s24-s12*d*s14+d*s24*s13+d*s14*s13-d*s14*s24-3*s13^2-6*s34*s13+3*s12*s14+d*s13^2+s34*d*s24-3*s34^2+s34^2*d+3*s14*s24+6*s23*s14-3*s12*s13-3*s34*s14+s12*s34*d-3*s12*s34+s12*d*s13-2*s23*d*s14-3*s24*s13+s34*d*s14-3*s14*s13)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      ((d*s13+3*s12+s34*d-3*s34-d*s24-s12*d+3*s24-3*s13)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (s14^(-1)*(2*s34*d*s13-3*s34*s24+d*s24*s13-3*s13^2-6*s34*s13+d*s13^2+s34*d*s24-3*s34^2+s34^2*d+6*s23*s14-3*s12*s13+s12*s34*d-3*s12*s34+s12*d*s13-2*s23*d*s14-3*s24*s13)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)),

INT["pentagon1x123",3,21,4,1,{1,-1,1,0,2}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(8*s23*s12*s34*s14-3*s23*d*s14*s13^2-2*s23*s12*d*s14*s13-2*s23*s12*d*s24*s13-10*s23^2*s14*s13-4*s23*s12*s14*s24-2*s23*d*s24*s13^2+2*s23*s12*d*s14^2-2*s23*s12*s34^2*d+4*s23*s34^3-16*s23^2*s14^2-6*s23*s12*s14^2+2*s23^2*s34*d*s14+4*s23*s24^2*s13+4*s23*s13^3-3*s23*s34*d*s13^2-s23*s12^2*s34*d-4*s23*s12*s34*d*s13+12*s23*s34*s13^2+6*s23*s14^2*s13+4*s23*s34*s24^2-2*s23*s12*s34*d*s24-s23*s34*d*s24^2-6*s23*s14^2*s24+4*s23*s12^2*s13-s23*s12^2*d*s13+10*s23*s34^2*s14+4*s23^2*d*s14^2-6*s23^2*s14*s24+8*s23*s12*s14*s13+2*s23*s12*d*s14*s24-3*s23*s34^2*d*s14+8*s23*s12*s24*s13+s23*d*s14*s24^2-10*s23^2*s34*s14-s23*d*s13^3+4*s23*s12^2*s34-s23*d*s24^2*s13+8*s23*s12*s34*s24-3*s23*s34^2*d*s13+8*s23*s14*s24*s13-2*s23*d*s14^2*s13-6*s23^2*s12*s14+2*s23^2*d*s14*s24+12*s23*s34^2*s13-4*s23*s34*d*s24*s13+s23*s12^2*d*s14+10*s23*s14*s13^2+16*s23*s34*s24*s13-6*s23*s34*d*s14*s13-2*s23*s12^2*s14+20*s23*s34*s14*s13+8*s23*s24*s13^2-2*s23*d*s14*s24*s13-2*s23*s34*d*s14*s24+6*s23*s34*s14^2-2*s23*s12*s34*d*s14-2*s23*s34*d*s14^2+8*s23*s34*s14*s24+8*s23*s34^2*s24+8*s23*s12*s13^2-2*s23*s14*s24^2+2*s23*d*s14^2*s24+2*s23^2*d*s14*s13-2*s23*s12*d*s13^2+8*s23*s12*s34^2-2*s23*s34^2*d*s24-s23*s34^3*d+16*s23*s12*s34*s13+2*s23^2*s12*d*s14)*s14^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (-(3*s23*s13^2+2*s23*d*s14*s24+2*s23^2*d*s14-3*s12*s14*s13+3*s23*s34*s24-s23*s34*d*s24+3*s23*s34^2+d*s14*s24^2-2*s23*s34*d*s13+6*s23*s34*s13-3*s12*s34*s14-s23*d*s13^2+s12*s34*d*s14-6*s23*s12*s14-6*s12*s14*s24+d*s14*s24*s13+s34*d*s14*s24+2*s23*s12*d*s14-s23*d*s24*s13-6*s23^2*s14-2*s23*d*s14*s13-3*s34*s14*s24-3*s12^2*s14-s23*s12*d*s13+3*s23*s12*s34+s12*d*s14*s13-s23*s34^2*d+3*s23*s12*s13-2*s23*d*s14^2-6*s23*s14*s24+6*s23*s34*s14-2*s23*s34*d*s14+3*s23*s24*s13+6*s23*s14*s13-3*s14*s24*s13+s12^2*d*s14+2*s12*d*s14*s24+6*s23*s14^2-3*s14*s24^2-s23*s12*s34*d)*(s23+s12+s34+s14+s24+s13)^(-1)*s14^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)*(s23*d*s14*s24-s34*d*s24^2+3*s24^2*s13+9*s34*s13^2-s12^2*d*s13-2*s34*d*s14*s13+3*s12*s14*s13+6*s12*s24*s13-4*s34*d*s24*s13-s34^2*d*s14+3*s12*s34*s14-d*s14*s13^2+3*s34^3-s12*s34*d*s14-2*s12*s34^2*d-3*s23*s12*s14-2*d*s24*s13^2+3*s12^2*s34-d*s14*s24*s13-d*s13^3-s34*d*s14*s24+3*s13^3+3*s34*s24^2+s23*s12*d*s14+3*s12^2*s13+3*s23*d*s14*s13+3*s34^2*s14-3*s34*d*s13^2-s12^2*s34*d+3*s34*s14*s24+9*s34^2*s13-2*s12*d*s24*s13+3*s14*s13^2+6*s24*s13^2-s12*d*s14*s13-2*s12*d*s13^2+2*s23*d*s14^2-3*s23*s14*s24-4*s12*s34*d*s13+12*s12*s34*s13-2*s34^2*d*s24-9*s23*s34*s14+3*s23*s34*d*s14-3*s34^2*d*s13+6*s12*s34*s24-d*s24^2*s13+6*s12*s34^2-2*s12*s34*d*s24-9*s23*s14*s13-s34^3*d+3*s14*s24*s13+12*s34*s24*s13+6*s34^2*s24+6*s34*s14*s13-6*s23*s14^2+6*s12*s13^2)*s14^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      ((3*s23*s13^2+s23*d*s14*s24+2*s23^2*d*s14+3*s23*s34*s24-s23*s34*d*s24+3*s23*s34^2-2*s23*s34*d*s13+6*s23*s34*s13-s23*d*s13^2-3*s23*s12*s14+s23*s12*d*s14-s23*d*s24*s13-6*s23^2*s14-s23*d*s14*s13-s23*s12*d*s13+3*s23*s12*s34-s23*s34^2*d+3*s23*s12*s13-3*s23*s14*s24+3*s23*s34*s14-s23*s34*d*s14+3*s23*s24*s13+3*s23*s14*s13-s23*s12*s34*d)*(s23+s12+s34+s14+s24+s13)^(-1)*s14^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)),

INT["pentagon1x123",3,21,4,1,{1,0,2,-1,1}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (1/2*s23^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)*(4*s23*s13^2+2*s23*d*s14*s24+4*s24^2*s13+8*s34*s13^2-3*s12^2*d*s13+8*s12^2*s24+s23*d*s24^2+4*s12^3-4*s23*s34*s24-s12^3*d+2*s23*s34*d*s24-2*s23*s34^2+16*s12*s24*s13-2*s34*d*s24*s13+4*s23*s12^2+2*s23*s34*s13-s23*s12^2*d-s23*d*s13^2-s12*s34^2*d-10*s23*s12*s14-2*d*s24*s13^2+8*s12^2*s34-d*s13^3+4*s13^3+2*s23*s12*d*s14+12*s12^2*s13-4*s23^2*s14-2*s12^2*d*s24+2*s23*d*s14*s13-2*s23*s24^2-2*s34*d*s13^2-2*s12^2*s34*d+4*s34^2*s13+4*s12*s24^2-4*s12*d*s24*s13-2*s23*s12*d*s13+2*s23*s12*s34+8*s24*s13^2+s23*s34^2*d-3*s12*d*s13^2+8*s23*s12*s13-6*s23*s14*s24-4*s12*s34*d*s13+16*s12*s34*s13-6*s23*s34*s14+2*s23*s34*d*s14-s34^2*d*s13+8*s12*s34*s24-d*s24^2*s13+4*s12*s34^2+2*s23*s24*s13-s12*d*s24^2-2*s12*s34*d*s24-10*s23*s14*s13+2*s23*s12*s24+8*s34*s24*s13+12*s12*s13^2)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (-(3*s23*s24-3*s12^2+s34*d*s13+s23*d*s13+d*s24*s13-3*s23*s12+3*s23*s34-s23*s34*d-3*s13^2-s23*d*s24-3*s34*s13+s12^2*d+d*s13^2-3*s23*s13+6*s23*s14-6*s12*s13+s12*d*s24+s23*s12*d+s12*s34*d-3*s12*s34+2*s12*d*s13-2*s23*d*s14-3*s24*s13-3*s12*s24)*s23^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (-s23^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)*(3*s12^2-s34*d*s13-d*s24*s13+3*s13^2+3*s34*s13-s12^2*d-d*s13^2-6*s23*s14+6*s12*s13-s12*d*s24-s12*s34*d+3*s12*s34-2*s12*d*s13+2*s23*d*s14+3*s24*s13+3*s12*s24)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      ((d*s13-3*s12-s34*d+3*s34-d*s24+s12*d+3*s24-3*s13)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)),

INT["pentagon1x123",3,21,4,1,{1,0,1,-1,2}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23*s13^2+4*s23*d*s14*s24+2*s24^2*s13+4*s34*s13^2-3*s12^2*d*s13+4*s12^2*s24+s23*d*s24^2+2*s12^3-2*s34*d*s14*s13+12*s12*s14*s13-8*s23*s34*s24-s12^3*d+2*s23*s34*d*s24-4*s23*s34^2+8*s12*s24*s13-2*s34*d*s24*s13+2*s23*s12^2-2*s23*s34*s13-s23*s12^2*d+6*s12*s34*s14-2*d*s14*s13^2-s23*d*s13^2-2*s12*s34*d*s14-s12*s34^2*d+4*s23*s12*s14-2*d*s24*s13^2+6*s12*s14*s24+4*s12^2*s34-2*d*s14*s24*s13-d*s13^3+2*s13^3+6*s12^2*s13+4*s23^2*s14-2*s12^2*d*s24-4*s23*s24^2-2*s34*d*s13^2-2*s12^2*s34*d+2*s34^2*s13+2*s12*s24^2-4*s12*d*s24*s13+6*s14*s13^2+6*s12^2*s14-2*s23*s12*d*s13-2*s23*s12*s34+4*s24*s13^2-4*s12*d*s14*s13+s23*s34^2*d-3*s12*d*s13^2+4*s23*s12*s13+4*s23*d*s14^2-12*s23*s14*s24-4*s12*s34*d*s13+8*s12*s34*s13-12*s23*s34*s14+4*s23*s34*d*s14-s34^2*d*s13+4*s12*s34*s24-d*s24^2*s13+2*s12*s34^2-2*s23*s24*s13-s12*d*s24^2-2*s12*s34*d*s24+4*s23*s14*s13-2*s23*s12*s24+6*s14*s24*s13+4*s34*s24*s13-2*s12^2*d*s14-2*s12*d*s14*s24+6*s34*s14*s13-12*s23*s14^2+6*s12*s13^2)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      ((d*s13-3*s12-s34*d+3*s34-d*s24+s12*d+3*s24-3*s13)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)*(d*s24^2+s34*d*s13-6*s34*s24-s12*d*s14+d*s24*s13-3*s24^2-d*s14*s13+d*s14*s24-3*s34*s13+3*s12*s14+2*s34*d*s24-3*s34^2+s34^2*d-3*s14*s24+6*s23*s14-3*s34*s14+s12*d*s24+s12*s34*d-3*s12*s34-2*s23*d*s14-3*s24*s13+s34*d*s14-3*s12*s24+3*s14*s13)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (-(3*s23*s24-3*s12^2+s34*d*s13+s23*d*s13+d*s24*s13-3*s23*s12+3*s23*s34-s23*s34*d-3*s13^2-s23*d*s24-3*s34*s13+s12^2*d+d*s13^2-3*s23*s13+6*s23*s14-6*s12*s13+s12*d*s24+s23*s12*d+s12*s34*d-3*s12*s34+2*s12*d*s13-2*s23*d*s14-3*s24*s13-3*s12*s24)*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)),

INT["pentagon1x123",3,21,4,2,{2,-2,1,0,1}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)*(4*s23^2*s34^4-3*s23*s12^2*d*s13^3-6*s23^2*d*s14^2*s24^2+8*s23^2*s12*s34^3-12*s23^2*s34^2*d*s24*s13-3*s23*s12^2*d*s14^2*s24+12*s23^2*s12^2*s14^2+4*s23^2*s34*d*s14^2*s24-2*s23^2*s34^2*d*s24^2-12*s23^3*d*s14^2*s24+8*s23^2*d*s14*s24^2*s13+24*s23^2*s12*s34*s13^2+4*s23*s14^2*s24^3-3*s23*s12^2*s34^2*d*s24-2*s23*s34*d*s24^3*s13+6*s23*s12^2*s34*d*s14*s24+6*s23*s12^2*d*s14*s24*s13+24*s23^2*s34^2*s13^2-s23*s34^5*d+8*s23^3*s12*s34*d*s14+s23*s12^2*s34*d*s14^2-8*s23^4*d*s14^2-3*s23*s34*d*s14^2*s13^2-16*s23^3*s34^2*s14+16*s23^2*s34*d*s14*s24*s13+4*s23^2*s34*s14^3+8*s23^3*d*s14*s24*s13+8*s23*s12*s14^2*s24*s13-6*s23*s12*s34*d*s14*s13^2-8*s23^2*s12*s34*d*s24*s13+2*s23*s34^2*d*s14*s24^2+8*s23^3*s34*d*s14*s24-6*s23*s34*d*s14*s24*s13^2+12*s23^3*s14^2*s24-9*s23*s34*d*s24^2*s13^2-2*s23*s34^3*d*s14*s24+4*s23^2*s13^4+16*s23^2*s34^3*s13+8*s23^2*s12*s34^2*d*s14-2*s23*s34^4*d*s14+8*s23^2*s12*s13^3-6*s23*s12*s34^3*d*s24+4*s23^3*s34*d*s14^2-3*s23*s12*d*s13^4+16*s23^2*s12*s34*d*s14*s13-8*s23^3*s34*s14*s24-18*s23*s12*s34*d*s24*s13^2-3*s23*s34^3*d*s24^2+2*s23*s12^3*s34*d*s14+4*s23^2*d*s14^2*s24*s13+12*s23*s12^2*s14^2*s24+8*s23^2*s34^3*s24-6*s23^2*s12^2*d*s14^2+24*s23^2*s34*s24*s13^2-36*s23^3*s14^2*s13-8*s23*s34^3*d*s14*s13+8*s23^2*s12*d*s14*s13^2+4*s23*s12^2*s14^2*s13-10*s23*s34^3*d*s13^2+12*s23^2*s14*s13^3+16*s23^2*s12*d*s14*s24*s13-32*s23^3*s34*s14*s13+16*s23^2*s12*s34*d*s14*s24-2*s23^2*d*s13^4-18*s23*s34^2*d*s24*s13^2-12*s23*s12*s34^3*d*s13-2*s23^2*s12^2*s34^2*d-6*s23*s12*d*s24*s13^3-4*s23^2*s12*d*s24*s13^2+36*s23^2*s34*s14*s13^2+s23*s34*d*s14^2*s24^2-12*s23*s34^3*d*s24*s13+2*s23*d*s14*s24^2*s13^2+16*s23^3*s34*d*s14*s13-2*s23*s12*d*s14*s13^3+6*s23*s12*s34*d*s14*s24^2-12*s23*s34^2*d*s14*s13^2+4*s23*s34*s14^2*s24^2+8*s23^2*s24*s13^3+4*s23*s12*d*s14*s24*s13^2+12*s23^3*s12*s14^2+8*s23*s12*s34*s14^2*s24-4*s23^2*s12*d*s13^3-s23*s12^3*s34^2*d-9*s23*s12^2*s34^2*d*s13+8*s23^2*s12^2*s34*d*s14+4*s23^3*d*s14^2*s13+24*s23^2*s34*s14*s24*s13-8*s23^3*s14*s24*s13-12*s23^2*s34^2*d*s13^2+4*s23^2*s34*d*s14^2*s13+4*s23^2*s34^2*s24^2-24*s23^3*s14^3+24*s23^2*s12*s14^2*s24-2*s23^2*d*s24^2*s13^2-12*s23*s12*s34*d*s13^3+8*s23^2*s34^2*d*s14*s24-s23*s12^3*d*s14^2+4*s23*s12^2*s34*d*s14*s13-6*s23*s34^2*d*s14*s24*s13-4*s23^2*s34*d*s24^2*s13-12*s23^2*s12*s34*d*s13^2+s23*s12*s34^2*d*s14^2+s23*s12^2*d*s14^2*s13-6*s23*s12^2*s34*d*s24*s13+12*s23^2*s14*s24*s13^2+2*s23^2*d*s14^2*s13^2+2*s23*d*s14*s24^3*s13+12*s23^2*s12*s34^2*s14+s23*d*s14^2*s24*s13^2+12*s23*s12*s14^2*s24^2+8*s23^2*d*s14*s24*s13^2+12*s23^2*s14^2*s13^2+24*s23^2*s12*s34^2*s13-3*s23*s12*d*s24^2*s13^2-8*s23^2*s34*d*s13^3+8*s23^2*s34*d*s14*s24^2+8*s23^3*s34^2*d*s14+4*s23^2*s12*s34*d*s14^2+12*s23^2*s12*s14*s13^2-18*s23*s12*s34^2*d*s13^2-3*s23*s12^2*s34^3*d+2*s23*s34*d*s14^2*s24*s13-s23*d*s13^5-s23*s12^3*d*s13^2+s23*s12*d*s14^2*s13^2-8*s23^3*s12*s14*s13+4*s23^2*s24^2*s13^2+2*s23^2*s34^2*d*s14^2+2*s23*s34*d*s14*s24^3+4*s23*s12^3*s14^2+12*s23^2*s34^2*s14*s24+2*s23*s12^2*s34^2*d*s14-2*s23*d*s14*s24*s13^3+8*s23*s12*s34*d*s14*s24*s13+8*s23^2*s12*s24*s13^2-4*s23^2*s12^2*s34*d*s13-8*s23^2*s34^3*d*s13-4*s23^2*d*s24*s13^3+4*s23*s34*d*s14*s24^2*s13-12*s23^2*s12*d*s14^2*s24-s23*s34^2*d*s24^3-s23*d*s24^3*s13^2+8*s23^2*s12^2*s34*s13+4*s23^2*s14^3*s13+8*s23^2*s12^2*d*s14*s13-6*s23*s12*s34*d*s24^2*s13+4*s23*s12*s34^2*d*s14*s24-36*s23^3*s34*s14^2-2*s23*s12*s34^3*d*s14-s23*s34^3*d*s14^2+s23*s34^2*d*s14^2*s24-3*s23*s12*s34^4*d+2*s23*s12*s34*d*s14^2*s13+4*s23*s14^2*s24^2*s13-3*s23*s34^4*d*s24-4*s23^2*s12*s34^2*d*s24+8*s23^4*s14^2+4*s23*s12^2*s34*s14^2-s23*d*s14^2*s24^3-2*s23^2*s12^2*d*s13^2-2*s23*s12^3*s34*d*s13+4*s23^2*s12^2*s34^2-3*s23*d*s24*s13^4-12*s23^2*s12*s14^3-6*s23*s12*s34^2*d*s14*s13+24*s23^2*s34*s14^2*s13-s23*d*s14^2*s13^3+6*s23*s12*d*s14*s24^2*s13-12*s23^2*s12*s34^2*d*s13-5*s23*s34^4*d*s13+12*s23^2*s34^3*s14-3*s23*s34^2*d*s14^2*s13+2*s23*s12*s34*d*s14^2*s24-2*s23^2*s34^4*d-18*s23*s12*s34^2*d*s24*s13-16*s23^3*s14*s13^2-10*s23*s34^2*d*s13^3+8*s23^2*s34*s24^2*s13-2*s23*d*s14*s13^4+4*s23^2*s12*d*s14^2*s13+16*s23^2*s34*s13^3-4*s23^2*s34^3*d*s24-4*s23^2*s12*s34^3*d-9*s23*s34^2*d*s24^2*s13-9*s23*s12^2*s34*d*s13^2-3*s23*d*s24^2*s13^3-12*s23^2*s14^3*s24-5*s23*s34*d*s13^4-12*s23^3*s12*d*s14^2+2*s23*s12*d*s14^2*s24*s13+12*s23^2*s34^2*s14^2-3*s23*s12*d*s14^2*s24^2-12*s23^2*s34*d*s24*s13^2+s23*d*s14^2*s24^2*s13+16*s23^2*s12*s34*s24*s13+36*s23^2*s34^2*s14*s13+2*s23*s12^2*d*s14*s13^2+8*s23^3*s12*d*s14*s13-8*s23*s34*d*s14*s13^3+2*s23*s12^3*d*s14*s13+4*s23^2*s12^2*s13^2-8*s23^3*s12*s34*s14+8*s23^2*s12*s34^2*s24+8*s23^3*d*s14*s13^2+12*s23^2*s14^2*s24^2-12*s23*s34*d*s24*s13^3-3*s23*s12^2*d*s24*s13^2+24*s23^2*s34^2*s24*s13-3*s23*s12*s34^2*d*s24^2+24*s23^2*s12*s34*s14*s13)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (-1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)*(2*s23*s34^2*d*s14^2-5*s12*d*s24^4+24*s23*s12*d*s14*s24^2+20*s23*s34^2*s14*s24+2*s23*s34^4*d-3*s23^2*s12*d*s24^2-12*s23^2*s34*s14^2-10*s12^2*s34^3-12*s23*s12*s24*s13^2+2*s23^2*s12*s34*d*s13-8*s12*s14*s24^3+20*s23^2*s14*s24*s13-16*s12*s34^3*s13-4*s23*d*s14^2*s24*s13-6*s23*s12^2*s34^2-30*s12^2*s34*s13^2-20*s12*s14*s24*s13^2-6*s12*s34*d*s24*s13^2-4*s23^2*d*s14^2*s13+20*s23*s12*s14*s13^2-26*s23^2*s14*s24^2+12*s12^2*s24^2*s13+4*s23^2*s12*s34*s24-6*s23^2*s12*s13^2+9*s23^2*s34^2*d*s13+4*s23*s12^3*s13-8*s23*s34*s13^3-3*s23^2*d*s24^2*s13-24*s23*s12*s34^2*s13-6*s23^2*s34^2*s24-4*s12*s34^4+8*s23*s34*d*s13^3-9*s12*d*s24^2*s13^2+8*s23*s12^3*d*s14-4*s23*s34*d*s14^2*s24-4*s23^2*s34*s14*s13-8*s12^3*s14*s24-6*s23^2*s12*d*s24*s13-24*s12*s34^2*s13^2+4*s23*s12^3*s34-6*s24^3*s13^2+4*s23*d*s14*s24^2*s13-12*s12*s34*s14*s13^2-4*s23*s12^2*d*s13^2-6*s23^2*s12*s34^2+28*s23*s34*s14^2*s24+12*s23*s34^2*d*s14*s13+8*s23*s12*s34*d*s14*s24-2*s14*s24^4-5*s12^4*d*s24-12*s12^3*s34*d*s24-20*s34*s14*s24^2*s13-3*s12^3*s34^2*d-12*s23^3*s12*s14+8*s23*s12*d*s14*s24*s13+4*s23*d*s14*s13^3-4*s12*s13^4+2*s23*s34^2*s14^2+16*s23^2*s12^2*d*s14-12*s23*s12^2*s34*s13-60*s12*s34*s24*s13^2-10*s12^2*d*s24^3-18*s23*s12*s34*d*s24^2-18*s12^2*s34*d*s24^2-16*s23^2*s14^3+20*s12^3*s24^2-10*s12^2*s13^3-2*s12^4*s14+3*s23^2*s34^3*d-8*s12^3*s34*s14-12*s12*d*s24^3*s13-12*s23^2*s34*s24*s13-3*s12^4*s34*d+2*s23*d*s24*s13^3+8*s23*s34^3*d*s13+10*s23*s14^2*s24^2-10*s34^2*s14*s24^2+6*s23*s34^2*d*s24*s13-6*s23*s12^2*s13^2+2*s23*s12*s34^3*d-8*s23*s34*d*s24^2*s13-3*s34^2*d*s24^2*s13+8*s12^3*s24*s13+20*s12^2*s24^3-6*s12^3*s13^2+32*s23^2*s12*d*s14*s24+16*s23^3*s14^2-3*s12^2*s34*d*s13^2+12*s23*s12^2*s34*s24+6*s23*s12*s34*d*s13^2-s12^2*d*s13^3-12*s23*s34*s24^2*s13-10*s14*s24^2*s13^2+24*s23*s12^2*s24^2-16*s23*s12*s34*d*s24*s13-4*s24*s13^4-8*s23^3*s34*d*s14+2*s23*s14^2*s13^2-18*s12^2*s34*d*s24*s13+2*s23*s34^3*d*s24+40*s23*s34*s14*s24*s13+4*s23*s12^2*s34*d*s14-10*s24^2*s13^3-24*s12*s34*s14*s24^2-12*s23*s12^2*d*s24^2-18*s12*s34^2*s24^2-4*s34^4*s24-12*s34^2*s14*s24*s13-4*s23^2*s34*d*s14^2-8*s12^3*s14*s13+4*s23*s34*d*s14^2*s13+20*s23^2*s34*s14*s24+10*s12*s24^4+8*s23*d*s14*s24^3-6*s12^3*s34*d*s13-6*s23*s24^2*s13^2-3*s12^4*d*s13-24*s34^2*s24*s13^2+28*s23*s14^2*s24*s13-12*s34*s24^3*s13+4*s23*s34*s14^2*s13+s23^2*s34^2*d*s24-9*s12^2*d*s24*s13^2-8*s14*s24^3*s13+16*s23*s12^3*s24-8*s23*s12*d*s24*s13^2-24*s23*s34^2*s24*s13+6*s23^2*s12*s24^2-12*s23^2*s12*s34*s13-10*s12^2*s34^2*s14-48*s23*s12*s14*s24^2-20*s12*s24*s13^3-9*s12*s34^2*d*s24^2-2*s23^2*s14*s13^2-6*s23*s34*d*s24^3-12*s23*s12*s34^2*s24-18*s23^2*s34^2*s13-3*d*s24^4*s13+4*s23*s34*s24^3-4*s12*s14*s13^3-6*s23^2*s12*s34*d*s24-6*s12^3*s34^2-6*s23^2*s24*s13^2-s34^3*d*s24^2+s23^2*s12*d*s13^2+28*s23*s12*s34*s14^2+4*s23*s24^3*s13-30*s34*s24^2*s13^2+4*s23*s14*s24^2*s13+12*s12^2*s34*s24^2-4*s23^2*d*s14^2*s24-20*s12*s34^3*s24-26*s23^2*s12^2*s14-12*s12^3*d*s24*s13-6*s34*d*s24^3*s13+2*s23^2*s12^2*s13+2*s23*d*s13^4+16*s23*s12*s24^3-4*s14*s24*s13^3+s23^2*s12*s34^2*d-8*s23^3*d*s14*s13+20*s23^2*s14^2*s24+8*s12*s24^3*s13+28*s23*s12*s14^2*s13-6*s23*s12^3*s34*d-12*s12*s34*d*s24^3-18*s12^2*s24*s13^2-18*s23*s12^2*d*s24*s13-4*s23*s34^2*d*s24^2-40*s12*s34*s14*s24*s13+2*s23^2*s12^3+s23^2*d*s24*s13^2-52*s23^2*s12*s14*s24-8*s23*s34^3*s24-9*s12^2*s34^2*d*s24-8*s23*s12*s34^2*d*s24+2*s23^2*s34*s24^2-24*s23*s12*s34*s13^2-60*s12*s34^2*s24*s13-4*s23^2*s12*d*s14^2-8*s23*s24*s13^3-2*s23^2*s34^2*s14+8*s23^3*s12*d*s14+4*s23*s12^4-10*s12^2*s14*s13^2+2*s23*d*s14^2*s24^2+12*s23*s12*s24^2*s13-d*s24^2*s13^3-8*s23*s12^3*d*s24+2*s23^2*s34*d*s24*s13+4*s23*s12*d*s14^2*s24+20*s23^2*s12*s34*s14+8*s12*s34*s24^3-16*s34^3*s24*s13-12*s12*s34^2*s14*s13-24*s12*s14*s24^2*s13-18*s12*s34*d*s24^2*s13-30*s12^2*s34^2*s13+4*s23*s12^2*d*s14*s13+20*s23^3*s14*s13-2*s12*s34^3*d*s24+4*s23*s24^4-6*s23*s34^2*s24^2-36*s12*s34*s24^2*s13-3*s34*d*s24^2*s13^2+9*s23^2*s34*d*s13^2-3*s23^2*s12^2*s34*d-10*s12^3*d*s24^2+2*s24^4*s13-18*s12*s24^2*s13^2-8*s23*s12^2*s34*d*s13-6*s34^2*s24^3+4*s23*s12^2*s14*s13-8*s23*s12*d*s24^3+3*s23^2*d*s13^3+2*s23^2*s12^2*s34+4*s23*s34*d*s14*s24^2+2*s34*s24^4+8*s23*s12*s34*s14*s24+12*s23*s12^2*s24*s13+2*s23^2*s24^3-12*s34*s14*s24*s13^2-24*s12^2*s34*s14*s24-4*s23*s12*s34*d*s14^2-3*s23^2*s12^2*d*s24+4*s23*s34*s14*s24^2-16*s34*s24*s13^3+8*s12^3*s34*s24+10*s12^4*s24-d*s24^5+20*s23^3*s34*s14-s12^2*s34^3*d+12*s23*s34*d*s14*s13^2+10*s23*s12^2*s14^2+4*s23*s34^3*d*s14+2*s23*s12*d*s13^3-8*s23*s12*s34^3-s23^2*d*s24^3+2*s12^4*s13-30*s34^2*s24^2*s13+2*s12^5-12*s12^3*s34*s13-20*s12^2*s34*s14*s13+4*s23*s12^2*s34*s14-3*s23^2*s12^2*d*s13-6*s23^2*s13^3+40*s23*s12*s34*s14*s13-12*s23*s34^2*s13^2+6*s23*s34*d*s24*s13^2-12*s23^3*s14*s24-2*s12*d*s24*s13^3-2*s23*s13^4-4*s23*s12^2*s34^2*d-8*s23^3*d*s14^2-24*s23*s12*s34*s24*s13-48*s23*s12^2*s14*s24-10*s34^3*s24^2+2*s23*s12^2*d*s14^2-3*s34*d*s24^4-36*s12^2*s34*s24*s13-6*s23*d*s24^3*s13-s23^2*s12^3*d-18*s23*s12^2*s34*d*s24-3*s12^3*d*s13^2-24*s23*s34*s24*s13^2-8*s34*s14*s24^3-3*s23^2*s34*d*s24^2-4*s23*s12*d*s14^2*s13-6*s23*s12^3*d*s13+20*s23*s14*s24*s13^2+2*s23^2*s24^2*s13-3*d*s24^3*s13^2-24*s12^2*s14*s24*s13-6*s12*s34^2*d*s24*s13+2*s23*d*s14^2*s13^2+8*s23*s12*s14*s24*s13-12*s12^2*s14*s24^2-2*s23*s34^4+20*s23*s12*s34^2*s14+20*s23^2*s12*s14^2+24*s23*s12^2*d*s14*s24-16*s23*s12^3*s14-3*s34^2*d*s24^3-s12^5*d+16*s23^2*d*s14*s24^2+4*s23^2*s12*s24*s13-18*s12^2*s34^2*s24-2*s23*s12^4*d-20*s12*s34^2*s14*s24-16*s12*s34*s13^3-16*s23*s14*s24^3-4*s12*s34^3*s14-12*s23^2*s14^2*s13+8*s23^3*d*s14*s24-4*s23*d*s24^2*s13^2+20*s23*s12*s14^2*s24-8*s23*s12*s13^3-18*s12^2*d*s24^2*s13+6*s23^2*s12^2*s24-2*s23*d*s24^4-18*s23*s12*d*s24^2*s13-18*s23^2*s34*s13^2+2*s24^5+6*s23*s12*s34^2*d*s13-4*s34^3*s14*s24+12*s23*s12*s34*s24^2+2*s12^4*s34+20*s23^2*s12*s14*s13-8*s23*s34^3*s13-3*s12^2*s34^2*d*s13+12*s23*s34^2*d*s13^2-6*s23^2*s34^3)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      ((s23*s34^2*d*s14^2-12*s23*s34^2*s14*s24+s23*s34^4*d+20*s23^2*s34*s14^2+3*s12^2*s34^3-4*s23*s12*s24*s13^2-10*s23*s34^3*s14+4*s23^2*s14*s24*s13+12*s12*s34^3*s13-2*s23*d*s14^2*s24*s13-2*s23*s12^2*s34^2+9*s12^2*s34*s13^2+2*s12*s14*s24*s13^2-4*s23^2*d*s14^2*s13-12*s23*s12*s14*s13^2-8*s23*s34*s13^3-12*s23*s12*s34^2*s13+3*s12*s34^4+4*s23*s34*d*s13^3-2*s23*s34*d*s14^2*s24+16*s23^2*s34*s14*s13+18*s12*s34^2*s13^2+5*s34^4*s13+s24^3*s13^2-2*s23*d*s14*s24^2*s13+6*s12*s34*s14*s13^2+s23*s12^2*d*s13^2-2*s23*s34*s14^2*s24+6*s23*s34^2*d*s14*s13-4*s23*s12*s34*d*s14*s24+2*s34*s14*s24^2*s13-4*s23*s12*d*s14*s24*s13+2*s23*d*s14*s13^3+3*s12*s13^4-7*s23*s34^2*s14^2-4*s23*s12^2*s34*s13+18*s12*s34*s24*s13^2+8*s23^2*s14^3+3*s12^2*s13^3-4*s23^2*s12*d*s14*s13+2*s23*d*s24*s13^3+4*s23*s34^3*d*s13-3*s23*s14^2*s24^2+s34^2*s14*s24^2+6*s23*s34^2*d*s24*s13-2*s23*s12^2*s13^2+2*s23*s12*s34^3*d+2*s23*s34*d*s24^2*s13+s12^3*s13^2-4*s23^3*s14^2+6*s23*s12*s34*d*s13^2-4*s23*s34*s24^2*s13+s14*s24^2*s13^2+4*s23*s12*s34*d*s24*s13+3*s24*s13^4+6*s34^2*s14*s13^2-7*s23*s14^2*s13^2+2*s23*s34^3*d*s24-24*s23*s34*s14*s24*s13-2*s23*s12^2*s34*d*s14+3*s24^2*s13^3+3*s12*s34^2*s24^2+3*s34^4*s24+6*s34^2*s14*s24*s13-4*s23^2*s34*d*s14^2+2*s23*s34*d*s14^2*s13+4*s23^2*s34*s14*s24-2*s23*s24^2*s13^2+18*s34^2*s24*s13^2+s14*s13^4-2*s23*s14^2*s24*s13+2*s34*s24^3*s13-14*s23*s34*s14^2*s13+2*s23*s12*d*s24*s13^2-12*s23*s34^2*s24*s13+s12^2*s34^2*s14+6*s12*s24*s13^3+8*s23^2*s14*s13^2-4*s23*s12*s34^2*s24+2*s12*s14*s13^3+s12^3*s34^2-2*s23*s12*s34*s14^2-30*s23*s34^2*s14*s13+9*s34*s24^2*s13^2-2*s23*s14*s24^2*s13+4*s23^2*d*s14^2*s24+6*s12*s34^3*s24+s23*d*s13^4+2*s14*s24*s13^3-8*s23^2*s34*d*s14*s13-4*s23^2*s14^2*s24-2*s23*s12*s14^2*s13-10*s23*s14*s13^3+3*s12^2*s24*s13^2+s23*s34^2*d*s24^2+4*s12*s34*s14*s24*s13-4*s23*s34^3*s24+2*s23*s12*s34^2*d*s24+s13^5-12*s23*s12*s34*s13^2+18*s12*s34^2*s24*s13+4*s34^3*s14*s13+4*s23^2*s12*d*s14^2-4*s23*s24*s13^3+8*s23^2*s34^2*s14+s12^2*s14*s13^2+s23*d*s14^2*s24^2+2*s23*s12*d*s14^2*s24+4*s23^2*s12*s34*s14+12*s34^3*s24*s13+6*s12*s34^2*s14*s13-4*s23^2*d*s14*s13^2+9*s12^2*s34^2*s13-2*s23*s12^2*d*s14*s13-2*s23*s34^2*s24^2+6*s12*s34*s24^2*s13+4*s34*s14*s13^3+3*s12*s24^2*s13^2+2*s23*s12^2*s34*d*s13+10*s34^3*s13^2+s34^2*s24^3-2*s23*s12^2*s14*s13-2*s23*s34*d*s14*s24^2-4*s23*s12*s34*s14*s24+6*s34*s14*s24*s13^2-2*s23*s12*s34*d*s14^2+s34^5-2*s23*s34*s14*s24^2+12*s34*s24*s13^3+6*s23*s34*d*s14*s13^2-3*s23*s12^2*s14^2+5*s34*s13^4+2*s23*s34^3*d*s14+2*s23*s12*d*s13^3-4*s23*s12*s34^3+9*s34^2*s24^2*s13+2*s12^3*s34*s13-30*s23*s34*s14*s13^2+2*s12^2*s34*s14*s13-2*s23*s12^2*s34*s14-24*s23*s12*s34*s14*s13-12*s23*s34^2*s13^2+6*s23*s34*d*s24*s13^2-2*s23*s13^4+s23*s12^2*s34^2*d+4*s23^3*d*s14^2+s34^4*s14-8*s23*s12*s34*s24*s13+10*s34^2*s13^3+3*s34^3*s24^2+s23*s12^2*d*s14^2+6*s12^2*s34*s24*s13-12*s23*s34*s24*s13^2-2*s23*s12*d*s14^2*s13-12*s23*s14*s24*s13^2+s23*d*s14^2*s13^2-4*s23*s12*s14*s24*s13-2*s23*s34^4-12*s23*s12*s34^2*s14-4*s23^2*s12*s14^2-4*s23^2*s34^2*d*s14+3*s12^2*s34^2*s24+2*s12*s34^2*s14*s24+12*s12*s34*s13^3+2*s12*s34^3*s14-4*s23^2*d*s14*s24*s13+20*s23^2*s14^2*s13+s23*d*s24^2*s13^2-6*s23*s12*s14^2*s24-4*s23*s12*s13^3-4*s23^2*s34*d*s14*s24+6*s23*s12*s34^2*d*s13+2*s34^3*s14*s24+4*s23^2*s12*s14*s13-8*s23*s34^3*s13-4*s23^2*s12*s34*d*s14+6*s23*s34^2*d*s13^2)*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(3*s23*s12*d*s14*s24^2+s23*s34^4*d-3*s23^2*s12*d*s24^2-s23*s12*s34^2*d*s14-4*s23^2*s34*s14^2+4*s23*s12*s24*s13^2+2*s23^2*s12*s34*d*s13-4*s23^2*s14*s24*s13+2*s23*s12^2*s34^2-18*s23^2*s14*s24^2+4*s23^2*s12*s34*s24-6*s23^2*s12*s13^2+9*s23^2*s34^2*d*s13+4*s23*s12^3*s13-3*s23^2*d*s24^2*s13-6*s23^2*s34^2*s24+4*s23*s34*d*s13^3+s23*s12^3*d*s14-20*s23^2*s34*s14*s13-6*s23^2*s12*d*s24*s13+4*s23*s12^3*s34-s23*d*s14*s24^2*s13-4*s23*s12^2*d*s13^2-6*s23^2*s12*s34^2+3*s23*s34^2*d*s14*s13-2*s23*s12*s34*d*s14*s24-12*s23^3*s12*s14-2*s23*s12*d*s14*s24*s13+s23*d*s14*s13^3+10*s23^2*s12^2*d*s14+4*s23*s12^2*s34*s13-12*s23*s12*s34*d*s24^2+4*s23^2*s12*d*s14*s13+3*s23^2*s34^3*d-12*s23^2*s34*s24*s13+4*s23*s34^3*d*s13+2*s23*s12^2*s13^2-8*s23*s34*d*s24^2*s13+20*s23^2*s12*d*s14*s24-2*s23*s34*d*s14*s24*s13+24*s23^3*s14^2+12*s23*s12^2*s34*s24+4*s23*s34*s24^2*s13+12*s23*s12^2*s24^2-16*s23*s12*s34*d*s24*s13-8*s23^3*s34*d*s14-s23*s12^2*s34*d*s14-6*s23*s12^2*d*s24^2-4*s23^2*s34*s14*s24+s23*d*s14*s24^3+2*s23*s24^2*s13^2-s23*s34^2*d*s14*s24-2*s23*s12*s34*d*s14*s13+s23^2*s34^2*d*s24+8*s23*s12^3*s24-8*s23*s12*d*s24*s13^2+6*s23^2*s12*s24^2-12*s23^2*s12*s34*s13-12*s23*s12*s14*s24^2-10*s23^2*s14*s13^2-4*s23*s34*d*s24^3+4*s23*s12*s34^2*s24-18*s23^2*s34^2*s13+4*s23*s34*s24^3-6*s23^2*s12*s34*d*s24-6*s23^2*s24*s13^2+s23^2*s12*d*s13^2+4*s23*s24^3*s13-s23*s12*d*s14*s13^2-4*s23*s14*s24^2*s13-18*s23^2*s12^2*s14+2*s23^2*s12^2*s13+s23*d*s13^4+8*s23*s12*s24^3+s23^2*s12*s34^2*d+4*s23^2*s34*d*s14*s13-8*s23^3*d*s14*s13+12*s23^2*s14^2*s24-4*s23*s12^3*s34*d-12*s23*s12^2*d*s24*s13-4*s23*s34^2*d*s24^2+2*s23^2*s12^3+s23^2*d*s24*s13^2-36*s23^2*s12*s14*s24-8*s23*s12*s34^2*d*s24+2*s23^2*s34*s24^2-10*s23^2*s34^2*s14+8*s23^3*s12*d*s14+2*s23*s12^4+12*s23*s12*s24^2*s13-4*s23*s12^3*d*s24+2*s23^2*s34*d*s24*s13-4*s23^2*s12*s34*s14+2*s23^2*d*s14*s13^2-s23*s12^2*d*s14*s13+20*s23^3*s14*s13+2*s23*s24^4+2*s23*s34^2*s24^2+9*s23^2*s34*d*s13^2-3*s23^2*s12^2*s34*d-8*s23*s12^2*s34*d*s13-4*s23*s12^2*s14*s13-4*s23*s12*d*s24^3+3*s23^2*d*s13^3+2*s23^2*s12^2*s34-s23*d*s14*s24*s13^2-s23*s34*d*s14*s24^2-8*s23*s12*s34*s14*s24+12*s23*s12^2*s24*s13+2*s23^2*s24^3-3*s23^2*s12^2*d*s24-4*s23*s34*s14*s24^2+20*s23^3*s34*s14+3*s23*s34*d*s14*s13^2+s23*s34^3*d*s14-s23^2*d*s24^3-4*s23*s12^2*s34*s14-3*s23^2*s12^2*d*s13-6*s23^2*s13^3-12*s23^3*s14*s24-4*s23*s12^2*s34^2*d-8*s23^3*d*s14^2+8*s23*s12*s34*s24*s13-12*s23*s12^2*s14*s24-4*s23*d*s24^3*s13-s23^2*s12^3*d-12*s23*s12^2*s34*d*s24-3*s23^2*s34*d*s24^2-4*s23*s12^3*d*s13+2*s23^2*s24^2*s13-8*s23*s12*s14*s24*s13+12*s23^2*s12*s14^2+3*s23*s12^2*d*s14*s24-4*s23*s12^3*s14+2*s23^2*s34^2*d*s14+10*s23^2*d*s14*s24^2+4*s23^2*s12*s24*s13-s23*s12^4*d-4*s23*s14*s24^3+4*s23^2*d*s14*s24*s13-4*s23^2*s14^2*s13+8*s23^3*d*s14*s24-4*s23*d*s24^2*s13^2+4*s23^2*s34*d*s14*s24+6*s23^2*s12^2*s24-s23*d*s24^4-12*s23*s12*d*s24^2*s13-18*s23^2*s34*s13^2+12*s23*s12*s34*s24^2-4*s23^2*s12*s14*s13+4*s23^2*s12*s34*d*s14+6*s23*s34^2*d*s13^2-6*s23^2*s34^3)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)),

INT["pentagon1x123",3,21,4,2,{2,-1,1,-1,1}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(18*s23*s12*s14*s24^2*s13+12*s12^2*s34^2*s14*s13-12*s12^2*s14^2*s24^2+18*s23*s12*s34^2*s14*s13+12*s12^2*s14*s24^2*s13+d*s14^2*s24^2*s13^2+18*s23*s14*s24^2*s13^2-4*s23*s34*s14^3*s13+18*s23*s34^2*s14*s13^2-4*s12*s34^2*s14^2*s24-4*s23^2*d*s14^2*s24^2+24*s12*s34*s14*s13^3+4*s23*s34*d*s14^3*s13+9*s23*s12^2*d*s14^2*s24-12*s23^2*s12^2*s14^2+24*s12*s34^2*s14*s24*s13+8*s14*s24^3*s13^2-9*s12*s34*d*s14*s24^2*s13-4*s23^3*d*s14^2*s24+2*s23^2*d*s14*s24^2*s13-4*s12^2*s34^2*s14^2-4*s12*s34^2*d*s14^2*s13-4*s23*s14^3*s13^2+6*s23*s12^3*s14*s13-4*s12^3*d*s14*s13^2+2*s23^2*s34^2*d*s14*s13-5*s23*s12^2*s34*d*s14*s24-5*s23*s12^2*d*s14*s24*s13-36*s23^2*s12*s14^2*s13+24*s34^2*s14*s24*s13^2-8*s23^2*d*s14^3*s24+24*s12*s14*s24*s13^3+36*s23*s34*s14*s24*s13^2+5*s23*s12^2*s34*d*s14^2-4*s23^2*s34*s14*s24^2+5*s23*s34*d*s14^2*s13^2-2*s12*d*s14^2*s13^3+4*s23^2*s34*d*s14*s24*s13+8*s12^3*s14*s13^2-3*s34^2*d*s14^2*s13^2-12*s23^2*s34*s14^3-9*s34*d*s14*s24*s13^3-20*s23*s12*s34*s14^2*s13-22*s12^2*s14^2*s24*s13-44*s23*s12*s14^2*s24*s13-10*s12^2*s34*s14^2*s13+d*s14^2*s24^3*s13-15*s12^2*s34*d*s14*s13^2-19*s23*s12*s34*d*s14*s13^2+6*s23*s14*s24^3*s13+2*s23*s34^2*d*s14^3+3*s23*s34^2*d*s14*s24^2-8*s23*s34*s14^2*s13^2-20*s23*s14^2*s24*s13^2+8*s12*s34^3*s14*s13-7*s23*s34*d*s14*s24*s13^2+4*s12*d*s14^2*s24^2*s13+4*s23^3*s14^2*s24+3*s23*s34^3*d*s14*s24-13*s12*s34*d*s14*s13^3+4*s23^2*s12^2*s14*s13-9*s34^2*d*s14*s24*s13^2+s23*s34^4*d*s14-s34^3*d*s14^2*s13-4*s23^3*s34*d*s14^2-s34^4*d*s14*s13-4*s23^2*s12*s34*d*s14*s13-3*s23*s12^3*s34*d*s14+18*s23*s12*s14*s13^3+12*s23^2*d*s14^2*s24*s13+8*s34^3*s14*s24*s13-4*s12*d*s14*s13^4-24*s23*s12^2*s14^2*s24-s12^4*s34*d*s14-s12*s34*d*s14*s24^3+8*s23^2*s12^2*d*s14^2-12*s23^3*s14^2*s13-8*s12^3*s34*s14^2-9*s12*d*s14*s24*s13^3-4*s23^2*s12*d*s14*s13^2-4*s12^4*s14^2-12*s12*s34*s14^2*s24*s13-28*s23*s12^2*s14^2*s13+4*s23^2*s14*s13^3+6*s34*s14^2*s13^3+2*s14*s13^5+2*s14^2*s24*s13^3+4*s23^2*s34*s14*s13^2+s23*s34*d*s14^2*s24^2+s12*d*s14^2*s24^3-s23*d*s14*s24^2*s13^2-14*s12*s14^2*s24^2*s13+18*s23*s12^2*s34*s14*s13+8*s34*s14*s13^4-9*s23*s12*d*s14*s13^3-s12*s34^3*d*s14^2-9*s12^2*d*s14*s24*s13^2-6*s12^2*d*s14*s13^3-s23*s12*s34*d*s14*s24^2-6*s23*s34^2*d*s14*s13^2+s34*d*s14^2*s24^2*s13-16*s12^2*s34*s14^2*s24-10*s23*s12*d*s14*s24*s13^2-3*s12^2*s34*d*s14*s24^2+2*s23^2*s34^3*d*s14-4*s23^3*s12*s14^2+8*s23*s12*s34*s14^3-12*s23*s12*s34*s14^2*s24+24*s34*s14*s24^2*s13^2+4*s23*s14^3*s24^2-4*s23*s14^2*s13^3-2*s23^2*s12^2*s34*d*s14+4*s23^3*d*s14^2*s13-4*s23^2*s34*s14*s24*s13-s12*s34^2*d*s14^2*s24+12*s14*s24^2*s13^3+12*s23^2*s34*d*s14^2*s13+12*s34^2*s14*s13^3+2*s34^3*s14^2*s13+24*s23^3*s14^3-12*s23^2*s12*s14^2*s24-3*s12^3*s34^2*d*s14+4*s23^2*s34^2*d*s14*s24+5*s23*s12^3*d*s14^2+24*s12*s34*s14*s24^2*s13-14*s23*s12^2*s34*d*s14*s13+s23*s34^2*d*s14*s24*s13+4*s23*s34*s14^3*s24+4*s34*s14^2*s24*s13^2-s12^2*s34^2*d*s14^2+3*s23*s12*s34^2*d*s14^2-6*s12^2*s14^2*s13^2+8*s34*s14*s24^3*s13+11*s23*s12^2*d*s14^2*s13-d*s14^2*s13^4+6*s23*s14*s13^4+4*s23^2*s14*s24*s13^2+8*s23^2*d*s14^2*s13^2+2*s34^4*s14*s13+s23*d*s14*s24^3*s13-4*s23^2*s12*s34^2*s14+8*s14*s24*s13^4+9*s23*d*s14^2*s24*s13^2+2*s12*s34^2*s14^2*s13+18*s23*s12^2*s14*s24*s13-15*s12*s34^2*d*s14*s13^2-12*s23*s12*s14^2*s24^2-24*s23^2*s14^2*s13^2-7*s12^3*s34*d*s14*s13-2*s14^2*s24^2*s13^2+2*s23^2*s34*d*s14*s24^2-21*s12*s34*d*s14*s24*s13^2+4*s23^2*s12*s34*d*s14^2+8*s12^3*s14*s24*s13-s34^2*d*s14^2*s24*s13+8*s23^2*s12*s14*s13^2-4*s34*d*s14*s13^4+s12*s34*d*s14^2*s24^2-4*s23^2*s12*s34*s14*s24+8*s12*s14*s13^4-6*s12*d*s14*s24^2*s13^2-d*s14*s13^5-s12^4*d*s14*s13+14*s23*s34*d*s14^2*s24*s13+2*s12^3*d*s14^2*s13-15*s12^2*s34*d*s14*s24*s13-4*s23*s34^2*s14^2*s13+7*s23*s12*d*s14^2*s13^2-3*s34*d*s14^2*s13^3+24*s34*s14*s24*s13^3-d*s14*s24^3*s13^2+36*s23*s12*s14*s24*s13^2+24*s12^2*s14*s24*s13^2+2*s12*s14^2*s13^3+4*s23^2*s34^2*d*s14^2+2*s14*s24^4*s13+s23*s34*d*s14*s24^3-12*s23*s12^3*s14^2-8*s23^2*s34^2*s14*s24-5*s23*s12^2*s34^2*d*s14-20*s23*s34*s14^2*s24*s13-5*s23*d*s14*s24*s13^3-7*s12*s34^3*d*s14*s13+2*s34^2*s14^2*s24*s13-12*s23*s12*s34*d*s14*s24*s13-3*s34^3*d*s14*s24*s13+8*s12^3*s34*s14*s13-3*s34^2*d*s14*s24^2*s13-8*s23^2*s12*d*s14^3+s12*d*s14^2*s24*s13^2+2*s23*s34*d*s14*s24^2*s13+4*s23^2*s12*d*s14^2*s24-s12*d*s14*s24^3*s13+2*s12^4*s14*s13+20*s23*s12*s14^3*s24-4*s23^2*s14^3*s13-2*s23^2*s12^2*d*s14*s13+6*s34^2*s14^2*s13^2-4*s34^3*d*s14*s13^2-2*s14^2*s24^3*s13-3*s12^2*s34^3*d*s14-2*s23*s12*s34^2*d*s14*s24-12*s23^2*s34*s14^2*s24-10*s12^3*s14^2*s13+12*s23^3*s34*s14^2-s23*s12*s34^3*d*s14+12*s34^2*s14*s24^2*s13+18*s23*s34*s14*s24^2*s13-8*s12*s34*s14^2*s24^2-6*s12^2*s34^2*d*s14*s24-2*s23^2*d*s14*s13^3+3*s23*s34^3*d*s14^2+5*s23*s34^2*d*s14^2*s24+10*s23*s12*s34*d*s14^2*s13+24*s12^2*s34*s14*s24*s13+2*s14^2*s13^4-16*s23*s14^2*s24^2*s13+36*s23*s12*s34*s14*s13^2+12*s12^2*s14*s13^3+36*s23*s12*s34*s14*s24*s13-12*s23*s12^2*s34*s14^2+2*s23*d*s14^3*s13^2-s23*d*s14^2*s24^3-s12^2*s34*d*s14^2*s13+24*s12^2*s34*s14*s13^2+4*s12*s34*s14^2*s13^2+8*s12*s14*s24^3*s13-12*s12^2*s34^2*d*s14*s13+6*s23*s34^3*s14*s13-8*s12*s14^2*s24*s13^2-12*s12^3*s14^2*s24-48*s23^2*s14^2*s24*s13+36*s23^2*s12*s14^3-11*s23*s12*s34^2*d*s14*s13-15*s12*s34^2*d*s14*s24*s13-36*s23^2*s34*s14^2*s13+2*s12^2*s34*d*s14^2*s24+s23*d*s14^2*s13^3-s23*s12*d*s14*s24^2*s13-2*s23*d*s14^3*s24^2-d*s14^2*s24*s13^3+18*s23*s34^2*s14*s24*s13-2*s34*d*s14^2*s24*s13^2-s34*d*s14*s24^3*s13-4*s23^2*s34^3*s14-4*s23*s12*d*s14^3*s24-8*s23^2*s14^4+7*s23*s34^2*d*s14^2*s13+18*s23*s14*s24*s13^3+6*s23*s12*s34*d*s14^2*s24-3*s12^2*d*s14*s24^2*s13-3*s23*d*s14*s13^4+s12^4*d*s14^2+16*s23^2*s12*d*s14^2*s13+4*s23^2*s12*s14*s24*s13+s12^3*s34*d*s14^2-s12*s34^4*d*s14+18*s23*s12^2*s14*s13^2+12*s23*s12*s14^3*s13+12*s23^2*s14^3*s24-2*s34*s14^2*s24^2*s13-4*s12*s14^2*s24^3+4*s23^3*s12*d*s14^2-3*d*s14*s24^2*s13^3+18*s23*s12*d*s14^2*s24*s13-6*s34*d*s14*s24^2*s13^2-12*s23^2*s34^2*s14^2+3*s23*s12*d*s14^2*s24^2+5*s12^2*d*s14^2*s24*s13+18*s23*s34*s14*s13^3+3*s12^2*d*s14^2*s24^2-3*s12*s34^3*d*s14*s24+24*s12*s14*s24^2*s13^2+24*s12*s34^2*s14*s13^2+7*s23*d*s14^2*s24^2*s13+8*s23*s14^3*s24*s13-6*s34^2*d*s14*s13^3-4*s23^2*s34^2*s14*s13-9*s23*s12^2*d*s14*s13^2+16*s23*s12^2*s14^3-8*s23*s34*d*s14*s13^3-2*s23^2*s34*d*s14*s13^2-3*s12^3*d*s14*s24*s13-3*s23*s12^3*d*s14*s13-3*s12^3*s34*d*s14*s24-20*s23*s12*s14^2*s13^2-3*s12*s34^2*d*s14*s24^2-2*s23*s12^2*d*s14^3+48*s12*s34*s14*s24*s13^2-3*d*s14*s24*s13^4+3*s12^3*d*s14^2*s24-8*s23^3*d*s14^3+8*s34^3*s14*s13^2+4*s23^2*s12*s34*s14*s13-5*s12*s34*d*s14^2*s13^2)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(6*s23*s34^2*d*s14^2+6*s12^2*d*s14*s24^2+4*s12*d*s24^4-13*s23*s12*d*s14*s24^2-22*s23*s34^2*s14*s24+s23*s34^4*d+3*s34*d*s14*s24^3-8*s12^2*s14^2*s13-3*d*s14*s24*s13^3-9*s23*s12*s34^2*d*s14-5*s34*d*s14*s24*s13^2+20*s23^2*s34*s14^2-6*s12^2*s34^3-2*s23*s12*s24*s13^2+8*s34*s14^2*s24*s13-s12^2*s34^2*d*s14-8*s12*s14*s24^3-16*s23*s34^3*s14-2*s12*d*s14^2*s13^2+4*s23^2*s14*s24*s13+20*s23*s12*s14^3+6*s12*s34^3*s13+8*s23*d*s14^2*s24*s13-10*s23*s12^2*s34^2-6*s12^2*s34*s13^2+24*s12*s14*s24*s13^2+9*s12*s34*d*s24*s13^2+8*s23^2*d*s14^2*s13+12*s23*s12*s14*s13^2+14*s23^2*s14*s24^2+3*s12*s34^2*d*s13^2-6*s12^2*s24^2*s13+4*s23*s14^3*s24+2*s34*s14^2*s24^2-2*s23*s34*s13^3-11*s12*s34*d*s14*s13^2-16*s23*s12*s34^2*s13+2*s12*s34^4+s23*s34*d*s13^3+6*s12*d*s24^2*s13^2+4*s12^3*d*s14*s24+s23*s12^3*d*s14+2*s12^3*d*s14^2-4*s23*s34*d*s14^2*s24+16*s23^2*s34*s14*s13-8*s12^3*s14*s24+6*s12*s34^2*s13^2-4*s23*s12^3*s34+8*s34^4*s13+6*s24^3*s13^2-3*s23*d*s14*s24^2*s13+24*s12*s34*s14*s13^2-16*s23*s34*s14^2*s24+s23*s34^2*d*s14*s13-s12*s34^3*d*s14+5*s12^2*d*s14*s24*s13-22*s23*s12*s34*d*s14*s24-2*s14*s24^4+s12^4*d*s24+7*s12^3*s34*d*s24+24*s34*s14*s24^2*s13+3*s12^3*s34^2*d-6*s23*s12*d*s14*s24*s13-5*s23*d*s14*s13^3+5*s12^2*s34*d*s14*s24-26*s23*s34^2*s14^2-10*s23*s12^2*s34*s13+18*s12*s34*s24*s13^2+6*s12^2*d*s24^3+9*s23*s12*s34*d*s24^2+15*s12^2*s34*d*s24^2+16*s23^2*s14^3-8*s12^3*s24^2-4*s23^2*s12*d*s14*s13-2*s12^4*s14-8*s12^3*s34*s14+9*s12*d*s24^3*s13+s12^4*s34*d+s23*d*s24*s13^3+3*s23*s34^3*d*s13-4*s23*s12*d*s14^3+10*s23*s14^2*s24^2+6*s34^2*s14*s24^2+9*s23*s34^2*d*s24*s13+3*s23*s12*s34^3*d+9*s23*s34*d*s24^2*s13+9*s34^2*d*s24^2*s13-2*s12^3*s24*s13-12*s12^2*s24^3-8*s23^2*s12*d*s14*s24-2*s23*s34*d*s14*s24*s13-16*s23^3*s14^2-s34^2*d*s14*s24*s13+3*s12^2*s34*d*s13^2+4*s14^2*s13^3-16*s23*s12^2*s34*s24+3*s23*s12*s34*d*s13^2-14*s23*s34*s24^2*s13+18*s14*s24^2*s13^2-6*s23*s12^2*s24^2+12*s23*s12*s34*d*s24*s13+4*s24*s13^4+24*s34^2*s14*s13^2-14*s23*s14^2*s13^2+15*s12^2*s34*d*s24*s13+4*s23*s34^3*d*s24-36*s23*s34*s14*s24*s13-11*s23*s12^2*s34*d*s14+10*s24^2*s13^3-12*s12*s34*s14*s24^2+3*s23*s12^2*d*s24^2+2*s34^3*s14^2-18*s12*s34^2*s24^2+6*s34^4*s24+36*s34^2*s14*s24*s13-2*s34^2*d*s14^2*s13-2*s12^3*s14*s13+8*s23*s34*d*s14^2*s13+24*s23^2*s34*s14*s24-8*s12*s24^4-4*s12^2*s34*d*s14*s13-7*s23*d*s14*s24^3+3*s12^3*s34*d*s13-2*s23*s24^2*s13^2+30*s34^2*s24*s13^2+4*s14*s13^4-52*s23*s14^2*s24*s13+2*s34*s24^3*s13-40*s23*s34*s14^2*s13-s23*s34^2*d*s14*s24-18*s23*s12*s34*d*s14*s13+10*s34*s14^2*s13^2+3*s12^2*d*s24*s13^2+4*s14*s24^3*s13-2*s23*s12^3*s24+3*s23*s12*d*s24*s13^2-16*s23*s34^2*s24*s13+4*s14^2*s24*s13^2+s34*d*s24*s13^3-12*s23*s14^3*s13-6*s12^2*s34^2*s14+20*s23*s12*s14*s24^2+10*s12*s24*s13^3+15*s12*s34^2*d*s24^2+6*s23^2*s14*s13^2-2*s12*d*s14*s24*s13^2+s12^3*d*s14*s13+4*s23*s34*d*s24^3-22*s23*s12*s34^2*s24+7*s12*s34*d*s14*s24^2+3*d*s24^4*s13-8*s23*s34*s24^3+2*d*s14^2*s24^2*s13+10*s12*s14*s13^3-10*s12^3*s34^2+4*s34^3*d*s24^2-12*s12^2*s14^2*s24+20*s23*s12*s34*s14^2-4*s23*s24^3*s13-26*s23*s34^2*s14*s13-9*s23*s12*d*s14*s13^2-6*s34*d*s14*s13^3+24*s34*s24^2*s13^2-3*s12^2*d*s14*s13^2-10*s23*s14*s24^2*s13-30*s12^2*s34*s24^2-2*s12*s34^3*s24+2*s23^2*s12^2*s14+2*s12*d*s14^2*s24^2+3*s12^3*d*s24*s13+9*s34*d*s24^3*s13-6*s23*s12*s24^3+16*s14*s24*s13^3-8*s23^2*s34*d*s14*s13+4*s23^2*s14^2*s24-2*d*s14^2*s13^3-6*s12*s24^3*s13-16*s23*s12*s14^2*s13+2*s12*s34^2*d*s14*s24+s23*s12^3*s34*d+13*s12*s34*d*s24^3+6*s23*s14*s13^3+6*s12^2*s24*s13^2+3*s23*s12^2*d*s24*s13+6*s23*s34^2*d*s24^2+24*s12*s34*s14*s24*s13-4*s12*s34*d*s14^2*s13+16*s23^2*s12*s14*s24-8*s23*s34^3*s24+12*s12^2*s34^2*d*s24+9*s23*s12*s34^2*d*s24-8*s23*s12*s34*s13^2+6*s12*s34^2*s24*s13+16*s34^3*s14*s13+8*s23^2*s12*d*s14^2+10*s23^2*s34^2*s14+4*s34*d*s14*s24^2*s13+6*s12^2*s14*s13^2-10*s23*d*s14^2*s24^2-8*s23*s12*s24^2*s13+d*s24^2*s13^3+s23*s12^3*d*s24+4*s12^2*d*s14^2*s24-8*s23*s12*d*s14^2*s24+28*s23^2*s12*s34*s14-22*s12*s34*s24^3+22*s34^3*s24*s13+18*s12*s34^2*s14*s13+6*s12*s14*s24^2*s13-4*s23^2*d*s14*s13^2+21*s12*s34*d*s24^2*s13-12*s12^2*s34^2*s13-3*s23*s12^2*d*s14*s13-2*d*s14*s13^4+s12^4*d*s14+7*s12*s34^3*d*s24-2*s23*s24^4-12*s23*s34^2*s24^2-6*s12*s34*s24^2*s13+s12^3*s34*d*s14+6*s34*d*s24^2*s13^2+s34^3*d*s14*s24+4*s34^2*s14^2*s24+4*s12^3*d*s24^2+16*s34*s14*s13^3-2*s24^4*s13+12*s12*s24^2*s13^2+3*s23*s12^2*s34*d*s13+12*s34^3*s13^2-4*s34^2*s24^3+6*s23*s12^2*s14*s13+3*s23*s12*d*s24^3-8*s12*s14^2*s24*s13+4*s12*s34*s14^2*s13-s23*d*s14*s24*s13^2-11*s23*s34*d*s14*s24^2+4*s12*d*s14*s24^3-6*s34*s24^4+3*s34^2*d*s14*s24^2+24*s23*s12*s34*s14*s24-4*s23*s12^2*s24*s13+42*s34*s14*s24*s13^2-18*s12^2*s34*s14*s24-8*s23*s12*s34*d*s14^2-4*s23*d*s14^3*s24+2*s12*s14^2*s13^2+2*s34^5+4*s23*s34*s14*s24^2+18*s34*s24*s13^3-18*s12^3*s34*s24-4*s34*d*s14^2*s13^2-2*s12^4*s24-6*s12^3*s14^2+d*s24^5+3*s12^2*s34^3*d-6*s34^2*d*s14*s13^2-7*s23*s34*d*s14*s13^2-2*s23*s12^2*s14^2+2*s34*s13^4-5*s12*d*s14*s13^3+3*s23*s34^3*d*s14-4*s12*s34*s14^2*s24-8*s23*s12*s34^3+3*s34^3*d*s24*s13+18*s34^2*s24^2*s13-10*s12^3*s34*s13-4*s23*s34*s14*s13^2+20*s23*s12^2*s34*s14-6*s12*s14^2*s24^2+4*s23*d*s14^3*s13+d*s14*s24^2*s13^2+16*s23*s12*s34*s14*s13-6*s23*s34^2*s13^2+3*s12*s34^3*d*s13+6*s23*s34*d*s24*s13^2+s12*d*s24*s13^3+3*s23*s12^2*s34^2*d+8*s23^3*d*s14^2+3*s34^2*d*s24*s13^2+4*s12*d*s14^2*s24*s13+4*s34^4*s14-24*s23*s12*s34*s24*s13+10*s23*s12^2*s14*s24+2*s12*s34^2*s14^2+8*s34^2*s13^3+4*s34^3*s24^2+2*s23*s12^2*d*s14^2+4*s34*d*s24^4-18*s12^2*s34*s24*s13+3*s23*d*s24^3*s13+6*s23*s12^2*s34*d*s24-8*s23*s34*s24*s13^2-2*s34*s14*s24^3+8*s34^2*s14^2*s13-2*s34^3*d*s14*s13+4*s23*s34*d*s14^3+4*s23*s12*d*s14^2*s13+2*s12^2*d*s14^2*s13-14*s23*s14*s24*s13^2-12*s23*s34*s14^3+3*d*s24^3*s13^2+15*s12*s34^2*d*s24*s13+2*s23*d*s14^2*s13^2-4*s23*s12*s14*s24*s13+3*d*s14*s24^3*s13-12*s12^2*s14*s24^2-2*s23*s34^4+4*s23*s12*s34^2*s14-12*s23^2*s12*s14^2-5*s23*s12^2*d*s14*s24+d*s14*s24^4+6*s34^2*d*s24^3-4*s23^2*s34^2*d*s14-8*s23^2*d*s14*s24^2-2*s12*s34^2*d*s14^2-24*s12^2*s34^2*s24+2*s12*s34*s13^3+10*s23*s14*s24^3+s12*s34*d*s13^3+s34^4*d*s24+4*s12*s34^3*s14-4*s23^2*d*s14*s24*s13-12*s23^2*s14^2*s13-7*s12*s34^2*d*s14*s13+3*s23*d*s24^2*s13^2-6*s12^2*s34*s14^2+8*s23*s12*s14^2*s24+9*s12^2*d*s24^2*s13-12*s23^2*s34*d*s14*s24+s12*s34^4*d+s23*d*s24^4+6*s23*s12*d*s24^2*s13-2*s24^5+6*s23*s12*s34^2*d*s13+10*s34^3*s14*s24-20*s23*s12*s34*s24^2-4*s12^4*s34+8*s23^2*s12*s14*s13-6*s23*s34^3*s13+6*s12^2*s34^2*d*s13-12*s23^2*s12*s34*d*s14+3*s23*s34^2*d*s13^2+7*s12*d*s14*s24^2*s13)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (-(3*s23*s34^2*d*s14^2-4*s23*s34^2*s14*s24-4*s12^2*s14^2*s13-2*d*s14*s24*s13^3-4*s34*d*s14*s24*s13^2+6*s23^2*s34*s14^2+4*s34*s14^2*s24*s13-2*s12^2*s34^2*d*s14-2*s23*s34^3*s14-s12*d*s14^2*s13^2+10*s23*s12*s14^3+6*s23*d*s14^2*s24*s13+14*s12*s14*s24*s13^2+2*s23^2*d*s14^2*s13+4*s23*s12*s14*s13^2+2*s23*s14^3*s24+s34*s14^2*s24^2-7*s12*s34*d*s14*s13^2+s12^3*d*s14^2+2*s23*s34*d*s14^2*s24+s23*d*s14*s24^2*s13+14*s12*s34*s14*s13^2-10*s23*s34*s14^2*s24+s23*s34^2*d*s14*s13-s12*s34^3*d*s14-2*s12^2*d*s14*s24*s13+11*s34*s14*s24^2*s13-s23*d*s14*s13^3-2*s12^2*s34*d*s14*s24-9*s23*s34^2*s14^2+12*s23^2*s14^3-2*s23*s12*d*s14^3-s23*s14^2*s24^2+3*s34^2*s14*s24^2+2*s23*s34*d*s14*s24*s13-2*s34^2*d*s14*s24*s13+2*s14^2*s13^3+8*s14*s24^2*s13^2+9*s34^2*s14*s13^2-4*s23^2*d*s14^3-9*s23*s14^2*s13^2-2*s23*s34*s14*s24*s13-s23*s12^2*s34*d*s14+2*s12*s34*s14*s24^2+s34^3*s14^2+13*s34^2*s14*s24*s13-2*s23^2*s34*d*s14^2-s34^2*d*s14^2*s13+2*s12^3*s14*s13+6*s23*s34*d*s14^2*s13-5*s12^2*s34*d*s14*s13+2*s14*s13^4-22*s23*s14^2*s24*s13-18*s23*s34*s14^2*s13+2*s23*s34^2*d*s14*s24-2*s23*s12*s34*d*s14*s13+5*s34*s14^2*s13^2+3*s14*s24^3*s13+2*s14^2*s24*s13^2-6*s23*s14^3*s13+s12^2*s34^2*s14-4*s12*d*s14*s24*s13^2-s12^3*d*s14*s13-s12*s34*d*s14*s24^2+d*s14^2*s24^2*s13+6*s12*s14*s13^3-6*s12^2*s14^2*s24-2*s23*s12*s34*s14^2-2*s23*s34^2*s14*s13-2*s23*s12*d*s14*s13^2-3*s34*d*s14*s13^3-3*s12^2*d*s14*s13^2-2*s23^2*d*s14^2*s24+s12*d*s14^2*s24^2+7*s14*s24*s13^3+2*s23^2*s14^2*s24-d*s14^2*s13^3-14*s23*s12*s14^2*s13-2*s12*s34^2*d*s14*s24+2*s23*s14*s13^3+18*s12*s34*s14*s24*s13-2*s12*s34*d*s14^2*s13+5*s34^3*s14*s13+2*s23^2*s12*d*s14^2-s34*d*s14*s24^2*s13+6*s12^2*s14*s13^2-s23*d*s14^2*s24^2+2*s12^2*d*s14^2*s24+2*s23*s12*d*s14^2*s24+10*s12*s34^2*s14*s13+8*s12*s14*s24^2*s13-s23*s12^2*d*s14*s13-d*s14*s13^4-s12^3*s34*d*s14+2*s34^2*s14^2*s24+7*s34*s14*s13^3+2*s23*s12^2*s14*s13-4*s12*s14^2*s24*s13+2*s12*s34*s14^2*s13+s23*s34*d*s14*s24^2-2*s23*s12*s34*s14*s24+17*s34*s14*s24*s13^2+s12^2*s34*s14*s24+2*s23*s12*s34*d*s14^2-2*s23*d*s14^3*s24+s12*s14^2*s13^2-2*s23*s34*s14*s24^2-2*s34*d*s14^2*s13^2-3*s12^3*s14^2-3*s34^2*d*s14*s13^2-s23*s34*d*s14*s13^2-5*s23*s12^2*s14^2-3*s12*d*s14*s13^3+s23*s34^3*d*s14-2*s12*s34*s14^2*s24+2*s23*s34*s14*s13^2+7*s12^2*s34*s14*s13-3*s12*s14^2*s24^2+2*s23*d*s14^3*s13-d*s14*s24^2*s13^2+2*s23*s12*s34*s14*s13+2*s12*d*s14^2*s24*s13+s34^4*s14+s12*s34^2*s14^2+3*s23*s12^2*d*s14^2+s34*s14*s24^3+4*s34^2*s14^2*s13-s34^3*d*s14*s13+2*s23*s34*d*s14^3+6*s23*s12*d*s14^2*s13+s12^2*d*s14^2*s13+2*s23*s14*s24*s13^2-6*s23*s34*s14^3+7*s12^2*s14*s24*s13+3*s23*d*s14^2*s13^2+2*s23*s12*s14*s24*s13-2*s23*s12*s34^2*s14-2*s23^2*s12*s14^2-s12*s34^2*d*s14^2+4*s12*s34^2*s14*s24+2*s12*s34^3*s14-6*s23^2*s14^2*s13-5*s12*s34^2*d*s14*s13-3*s12^2*s34*s14^2-6*s23*s12*s14^2*s24-6*s12*s34*d*s14*s24*s13+3*s34^3*s14*s24-s12*d*s14*s24^2*s13)*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (-1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23*s34^2*d*s14^2+3*s12^2*d*s14*s24^2-s12*d*s24^4+10*s23*s12*d*s14*s24^2-2*s23*s34^2*s14*s24-d*s14*s24*s13^3+6*s23*s12*s34^2*d*s14-2*s34*d*s14*s24*s13^2-8*s23^2*s34*s14^2+2*s12^2*s34^3+22*s23*s12*s24*s13^2-s12^2*s34^2*d*s14-4*s12*s14*s24^3-4*s34^3*d*s13^2-28*s23^2*s14*s24*s13+10*s12*s34^3*s13+2*s23*s12^2*s34^2+42*s12^2*s34*s13^2-8*s12*s14*s24*s13^2-36*s12*s34*d*s24*s13^2-8*s23^2*d*s14^2*s13-40*s23*s12*s14*s13^2-2*s23^2*s14*s24^2-18*s12*s34^2*d*s13^2+42*s12^2*s24^2*s13+8*s23*s12^3*s13+6*s23*s34*s13^3-5*s12*s34*d*s14*s13^2+8*s23*s12*s34^2*s13-3*s23*s34*d*s13^3-18*s12*d*s24^2*s13^2+3*s12^3*d*s14*s24+10*s23*s12^3*d*s14-16*s23^2*s34*s14*s13-12*s12^3*s14*s24+30*s12*s34^2*s13^2+4*s23*s12^3*s34+2*s34^4*s13+14*s24^3*s13^2+12*s23*d*s14*s24^2*s13+4*s12*s34*s14*s13^2-6*s23*s12^2*d*s13^2+4*s23*s34*s14^2*s24+8*s23*s34^2*d*s14*s13-s12*s34^3*d*s14+5*s12^2*d*s14*s24*s13+16*s23*s12*s34*d*s14*s24-4*s12^4*d*s24-12*s12^3*s34*d*s24-2*s34*s14*s24^2*s13-6*s12^3*s34^2*d+36*s23*s12*d*s14*s24*s13+4*s23*d*s14*s13^3+2*s12^2*s34*d*s14*s24+10*s12*s13^4+8*s23^2*s12^2*d*s14+14*s23*s12^2*s34*s13+78*s12*s34*s24*s13^2-4*s12^2*d*s24^3-3*s23*s12*s34*d*s24^2-12*s12^2*s34*d*s24^2-8*s23^2*s14^3+12*s12^3*s24^2+20*s12^2*s13^3+12*s23^2*s12*d*s14*s13-4*s12^4*s14-8*s12^3*s34*s14-8*s12*d*s24^3*s13-4*s12^4*s34*d-3*s23*d*s24*s13^3-s23*s34^3*d*s13+4*s23*s14^2*s24^2-3*s23*s34^2*d*s24*s13+12*s23*s12^2*s13^2-s23*s12*s34^3*d-3*s23*s34*d*s24^2*s13-6*s34^2*d*s24^2*s13+34*s12^3*s24*s13+8*s12^2*s24^3+20*s12^3*s13^2+8*s23^2*s12*d*s14*s24+20*s23*s34*d*s14*s24*s13+16*s23^3*s14^2-s34^2*d*s14*s24*s13-24*s12^2*s34*d*s13^2+8*s23*s12^2*s34*s24-9*s23*s12*s34*d*s13^2-10*s12^2*d*s13^3+10*s23*s34*s24^2*s13-2*s14*s24^2*s13^2+6*s23*s12^2*s24^2-12*s23*s12*s34*d*s24*s13+10*s24*s13^4+6*s34^2*s14*s13^2-4*s23*s14^2*s13^2-36*s12^2*s34*d*s24*s13-40*s23*s34*s14*s24*s13+14*s23*s12^2*s34*d*s14+18*s24^2*s13^3-8*s12*s34*s14*s24^2-3*s23*s12^2*d*s24^2+6*s12*s34^2*s24^2+2*s34^2*s14*s24*s13-10*s12^3*s14*s13+4*s23*s34*d*s14^2*s13-8*s23^2*s34*s14*s24+2*s12*s24^4-s12^2*s34*d*s14*s13-16*s12^3*s34*d*s13+10*s23*s24^2*s13^2-5*s12^4*d*s13+30*s34^2*s24*s13^2+2*s14*s13^4+8*s23*s14^2*s24*s13+14*s34*s24^3*s13-4*s23*s34*s14^2*s13+4*s23*s34^2*d*s14*s24+24*s23*s12*s34*d*s14*s13-24*s12^2*d*s24*s13^2-2*s14*s24^3*s13+6*s23*s12^3*s24-9*s23*s12*d*s24*s13^2+8*s23*s34^2*s24*s13-12*s34*d*s24*s13^3-4*s12^2*s34^2*s14-24*s23*s12*s14*s24^2+38*s12*s24*s13^3-6*s12*s34^2*d*s24^2-10*s23^2*s14*s13^2+s12*d*s14*s24*s13^2+2*s12^3*d*s14*s13+2*s23*s12*s34^2*s24+s12*s34*d*s14*s24^2-d*s24^4*s13+2*s12*s14*s13^3+6*s12^3*s34^2+8*s23*s12*s34*s14^2+4*s23*s24^3*s13-10*s23*s34^2*s14*s13+18*s23*s12*d*s14*s13^2-3*s34*d*s14*s13^3+36*s34*s24^2*s13^2-5*s12*d*s13^4-30*s23*s14*s24^2*s13+18*s12^2*s34*s24^2-8*s23^2*d*s14^2*s24+2*s12*s34^3*s24-14*s23^2*s12^2*s14-16*s12^3*d*s24*s13-4*s34*d*s24^3*s13-s23*d*s13^4+2*s23*s12*s24^3+2*s14*s24*s13^3+8*s23^2*s34*d*s14*s13+16*s23^2*s14^2*s24+22*s12*s24^3*s13+12*s23*s12*s14^2*s13-s12*s34^2*d*s14*s24-3*s23*s12^3*s34*d-4*s12*s34*d*s24^3-10*s23*s14*s13^3-s34^4*d*s13+54*s12^2*s24*s13^2-9*s23*s12^2*d*s24*s13-4*d*s24*s13^4-12*s12*s34*s14*s24*s13-16*s23^2*s12*s14*s24-12*s12^2*s34^2*d*s24-3*s23*s12*s34^2*d*s24+2*s13^5+16*s23*s12*s34*s13^2+42*s12*s34^2*s24*s13+2*s34^3*s14*s13-16*s23^2*s12*d*s14^2+8*s23*s24*s13^3-6*s23^2*s34^2*s14+s34*d*s14*s24^2*s13+2*s23*s12^4-6*s12^2*s14*s13^2-2*s23*d*s14^2*s24^2+16*s23*s12*s24^2*s13-6*d*s24^2*s13^3-3*s23*s12^3*d*s24-4*s23*s12*d*s14^2*s24-4*s23^2*s12*s34*s14+6*s12*s34*s24^3+10*s34^3*s24*s13+2*s12*s34^2*s14*s13-14*s12*s14*s24^2*s13+4*s23^2*d*s14*s13^2-24*s12*s34*d*s24^2*s13+24*s12^2*s34^2*s13-6*s34^2*d*s13^3+24*s23*s12^2*d*s14*s13-d*s14*s13^4+s12^4*d*s14-4*s12*s34^3*d*s24+54*s12*s34*s24^2*s13+s12^3*s34*d*s14-12*s34*d*s24^2*s13^2-6*s12^3*d*s24^2+6*s34*s14*s13^3-4*s34*d*s13^4+4*s24^4*s13+48*s12*s24^2*s13^2-9*s23*s12^2*s34*d*s13+8*s34^3*s13^2-50*s23*s12^2*s14*s13-s23*s12*d*s24^3+16*s23*d*s14*s24*s13^2+2*s23*s34*d*s14*s24^2+s12*d*s14*s24^3-d*s13^5-28*s23*s12*s34*s14*s24+20*s23*s12^2*s24*s13+4*s34*s14*s24*s13^2-16*s12^2*s34*s14*s24-4*s23*s34*s14*s24^2+30*s34*s24*s13^3+18*s12^3*s34*s24+8*s12^4*s24-4*s12^2*s34^3*d-3*s34^2*d*s14*s13^2+10*s23*s34*d*s14*s13^2+16*s23*s12^2*s14^2+8*s34*s13^4-2*s12*d*s14*s13^3+2*s23*s34^3*d*s14-4*s23*s12*d*s13^3+10*s12^4*s13-4*s34^3*d*s24*s13+18*s34^2*s24^2*s13+2*s12^5+26*s12^3*s34*s13-20*s23*s34*s14*s13^2-10*s12^2*s34*s14*s13-24*s23*s12^2*s34*s14+d*s14*s24^2*s13^2-44*s23*s12*s34*s14*s13+6*s23*s34^2*s13^2-8*s12*s34^3*d*s13-6*s23*s34*d*s24*s13^2-16*s12*d*s24*s13^3+2*s23*s13^4-3*s23*s12^2*s34^2*d-8*s23^3*d*s14^2-12*s34^2*d*s24*s13^2+24*s23*s12*s34*s24*s13-42*s23*s12^2*s14*s24+12*s34^2*s13^3-2*s23*s12^2*d*s14^2+66*s12^2*s34*s24*s13-s23*d*s24^3*s13-6*s23*s12^2*s34*d*s24-10*s12^3*d*s13^2+16*s23*s34*s24*s13^2-s34^3*d*s14*s13-4*s23*s12^3*d*s13-38*s23*s14*s24*s13^2-4*d*s24^3*s13^2-22*s12^2*s14*s24*s13-24*s12*s34^2*d*s24*s13+2*s23*d*s14^2*s13^2-80*s23*s12*s14*s24*s13+d*s14*s24^3*s13-12*s12^2*s14*s24^2-4*s23*s12*s34^2*s14+40*s23^2*s12*s14^2+20*s23*s12^2*d*s14*s24-20*s23*s12^3*s14+4*s23^2*s34^2*d*s14-s12^5*d+12*s12^2*s34^2*s24-s23*s12^4*d-4*s12*s34^2*s14*s24+30*s12*s34*s13^3-2*s23*s14*s24^3-16*s12*s34*d*s13^3+12*s23^2*d*s14*s24*s13+16*s23^2*s14^2*s13-4*s12*s34^2*d*s14*s13-3*s23*d*s24^2*s13^2+20*s23*s12*s14^2*s24+8*s23*s12*s13^3-18*s12^2*d*s24^2*s13+4*s23^2*s34*d*s14*s24-s12*s34^4*d-6*s23*s12*d*s24^2*s13-6*s23*s12*s34^2*d*s13+4*s23*s12*s34*s24^2+6*s12^4*s34-24*s23^2*s12*s14*s13+2*s23*s34^3*s13-18*s12^2*s34^2*d*s13+4*s23^2*s12*s34*d*s14-3*s23*s34^2*d*s13^2+4*s12*d*s14*s24^2*s13)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)),

INT["pentagon1x123",3,21,4,2,{2,0,1,-2,1}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (1/2*(24*s23*s34*s14^2*s13^3-9*s12^2*d*s14^2*s24^2*s13+24*s23*s14^2*s24*s13^3-16*s23*s12*s34*s14^3*s24-8*s23^3*d*s14^4-4*s23^3*s12*d*s14^2*s13+24*s23*s12^3*s34*s14^2-6*s23*s34*d*s14^2*s13^3-3*s34^2*d*s14^2*s13^3-24*s23*s12^2*d*s14^2*s13^2-6*s12*s34^2*d*s14^2*s24*s13+36*s12*s34^2*s14^2*s13^2-8*s23*s14^3*s24^2*s13+8*s12*s14^2*s24^3*s13+8*s23*s12^2*s34*d*s14^3-2*s23^3*d*s14^2*s13^2+s23^2*s12^2*s34*d*s14^2-60*s23*s12^2*s14^3*s13-6*s12^3*s34*d*s14^2*s24-8*s23^3*s34*d*s14^3-16*s23*s12^3*d*s14^2*s13+s23^2*s34*d*s14^2*s13^2-3*s12^3*s34^2*d*s14^2+24*s23^2*s12*s14^2*s24*s13+4*s34^3*s14^2*s13^2+24*s23^2*s12*s34*s14^2*s13-36*s23^3*s14^3*s13-3*s12^4*d*s14^2*s24+12*s23*s12^2*d*s14^3*s13-48*s23^2*s12^2*s14^3+36*s12*s14^2*s24^2*s13^2+4*s23^2*s14^4*s24+12*s23^2*s12^2*s34*s14^2-9*s12^2*s34^2*d*s14^2*s13+12*s23^2*d*s14^3*s13^2-s23^2*d*s14^2*s24^3-16*s23*s34*s14^3*s24*s13+4*s12^2*s14^2*s24^3-3*d*s14^2*s24^2*s13^3-2*s23^3*s12^2*d*s14^2-s23^2*s34^3*d*s14^2-3*s34*d*s14^2*s24^2*s13^2+12*s12^2*s34*s14^2*s24^2+24*s12^3*s34*s14^2*s24-24*s23^2*s12*s14^3*s24-3*s12^4*s34*d*s14^2-3*d*s14^2*s24*s13^4-4*s23*d*s14^2*s13^4+72*s12*s34*s14^2*s24*s13^2+12*s12^4*s14^2*s24+4*s23^3*s14^2*s13^2+8*s23^3*d*s14^3*s13+20*s23^2*s12*s14^4+8*s23*s34*d*s14^3*s24*s13+72*s23*s12^2*s14^2*s13^2-20*s23*s14^3*s13^3+s23^2*s12^2*d*s14^2*s24-12*s12^3*d*s14^2*s24*s13+8*s23^2*s34*d*s14^3*s13+4*s23*s12^3*d*s14^3+4*s23^3*s14^2*s24^2+20*s12^4*s14^2*s13-9*s12*d*s14^2*s24^2*s13^2+48*s12^3*s14^2*s24*s13+5*s23^2*s12*s34^2*d*s14^2-96*s23^2*s12*s14^3*s13+48*s12^3*s34*s14^2*s13-8*s23^2*s34*d*s14^3*s24-s34^3*d*s14^2*s13^2-18*s12*s34*d*s14^2*s24*s13^2-15*s23^2*s12^2*d*s14^2*s13+12*s23*s12^2*s14^2*s24^2+s23^2*d*s14^2*s24*s13^2+4*s12^2*s34^3*s14^2-6*s23*s12^3*s34*d*s14^2-8*s23^3*d*s14^3*s24+20*s23^2*s14^4*s13-5*s23^2*d*s14^2*s13^3-4*s23^2*d*s14^3*s24^2-3*s12^2*s34^2*d*s14^2*s24-6*s23*d*s14^2*s24*s13^3+4*s23^3*s12*s34*d*s14^2+16*s23*s12*d*s14^3*s24*s13+4*s23^3*s34^2*s14^2+8*s23*s12^2*d*s14^3*s24+12*s23^2*s12^3*s14^2+6*s23*s12*s34^2*d*s14^2*s24-d*s14^2*s24^3*s13^2+12*s23*s12^2*s34^2*s14^2+24*s34*s14^2*s24*s13^3+72*s23*s12*s14^2*s24*s13^2+72*s12^2*s34*s14^2*s13^2+72*s23*s12*s34*s14^2*s13^2+40*s12^2*s14^2*s13^3+72*s12^2*s14^2*s24*s13^2+4*s23*s12*s34^2*d*s14^3+4*s23*d*s14^3*s24^2*s13-18*s12^2*s34*d*s14^2*s24*s13-4*s23^2*s12*d*s14^4-3*s23^2*s34*d*s14^2*s24^2+12*s23*s12^4*s14^2-6*s23*s12^3*d*s14^2*s24-28*s23*s12^2*s14^3*s24-12*s12^3*s34*d*s14^2*s13+4*s12^5*s14^2-9*s12*s34^2*d*s14^2*s13^2-2*s23^3*d*s14^2*s24^2-d*s14^2*s13^5-5*s12^4*d*s14^2*s13+6*s23*s34*d*s14^2*s24^2*s13+12*s23^3*s14^3*s24+20*s12*s14^2*s13^4-2*s12*d*s14^2*s24^3*s13+12*s23^2*s12^2*d*s14^3-3*s34*d*s14^2*s13^4+36*s23^2*s12*s14^2*s13^2+8*s23^3*s12*s14^2*s13-24*s23^2*s14^3*s24*s13+48*s23*s12*s34*s14^2*s24*s13-56*s23*s12*s34*s14^3*s13-36*s23^3*s12*s14^3+72*s12^2*s34*s14^2*s24*s13-28*s23*s34*s14^3*s13^2-2*s12*s34^3*d*s14^2*s13+4*s23^3*s12*d*s14^2*s24+8*s23*s34*d*s14^3*s13^2+12*s34^2*s14^2*s13^3-4*s23^2*s34*d*s14^4+2*s23^2*s12*d*s14^2*s24*s13+24*s23^2*s12*d*s14^3*s13+8*s23^2*d*s14^3*s24*s13+24*s23*s12^3*s14^2*s24-12*s12*d*s14^2*s24*s13^3-3*s12^3*d*s14^2*s24^2-3*s23^2*s34^2*d*s14^2*s24-18*s23*s12^2*s34*d*s14^2*s13-8*s23^4*s14^3+12*s12^2*s34^2*s14^2*s24-18*s23*s12*d*s14^2*s24*s13^2+12*s34*s14^2*s24^2*s13^2+4*s23*d*s14^3*s13^3-28*s23*s12^2*s34*s14^3-s12^5*d*s14^2+8*s23*s12*s34*d*s14^3*s24+4*s23*s34^2*d*s14^3*s13+24*s23^3*s14^4-18*s12^2*d*s14^2*s24*s13^2-28*s23*s14^3*s24*s13^2+12*s23*s14^2*s13^4-56*s23*s12*s14^3*s24*s13-24*s23^2*s34*s14^3*s13+12*s23^3*s34*s14^3-4*s23*s12^4*d*s14^2-15*s23^2*s12*d*s14^2*s13^2+24*s12*s34*s14^2*s24^2*s13+2*s23*s34^3*d*s14^2*s13+12*s12^3*s34^2*s14^2+8*s23^2*s12*s34*d*s14^3+12*s23^2*s12^2*s14^2*s24+12*s14^2*s24^2*s13^3+10*s23^2*s12*s34*d*s14^2*s24+4*s14^2*s13^5+12*s23^2*s14^2*s13^3-4*s23^2*d*s14^4*s13-60*s23*s12*s14^3*s13^2+72*s23*s12^2*s34*s14^2*s13+12*s34*s14^2*s13^4+2*s23*d*s14^2*s24^3*s13+12*s14^2*s24*s13^4+72*s23*s12^2*s14^2*s24*s13-20*s23*s12^3*s14^3+12*s23^2*s34*s14^2*s13^2-4*s23^2*s34^2*d*s14^3+12*s12^4*s34*s14^2+12*s23^2*s14^2*s24*s13^2+12*s12^3*s14^2*s24^2+4*s23^3*s12^2*s14^2-8*s23*s12*s34^2*s14^3-3*s12^2*s34*d*s14^2*s24^2+6*s23*s12*s34*d*s14^2*s24^2-10*s12^2*d*s14^2*s13^3+6*s23*s34^2*d*s14^2*s24*s13+4*s23^3*s34*d*s14^2*s13-16*s23*s12*d*s14^2*s13^3+4*s23*s12*d*s14^3*s24^2+2*s23*s12*s34^3*d*s14^2+40*s12^3*s14^2*s13^2-s12^2*s34^3*d*s14^2-24*s23^2*s12*s34*s14^3+24*s23*s12^2*s34*s14^2*s24+12*s23*s14^2*s24^2*s13^2-4*s23^3*s34*d*s14^2*s24-8*s23*s34^2*s14^3*s13+8*s12*s34^3*s14^2*s13+8*s23*d*s14^3*s24*s13^2+12*s23*s12*d*s14^3*s13^2+2*s23*s12*d*s14^2*s24^3-s12^2*d*s14^2*s24^3-18*s23*s12*s34*d*s14^2*s13^2+24*s23*s12*s14^2*s24^2*s13-18*s12^2*s34*d*s14^2*s13^2+8*s23^3*s12*d*s14^3+36*s12^2*s14^2*s24^2*s13+36*s23^2*s12^2*s14^2*s13-18*s23*s12^2*d*s14^2*s24*s13-12*s12*s34*d*s14^2*s13^3+4*s23^2*s34*s14^4+5*s23^2*s12*d*s14^2*s24^2+5*s23^2*d*s14^2*s24^2*s13-5*s12*d*s14^2*s13^4-48*s23^2*s14^3*s13^2+48*s23*s12*s14^2*s13^3-8*s23*s12*s14^3*s24^2-4*s23^2*d*s14^4*s24+8*s23^3*s34*s14^2*s24+2*s23^2*s12*s34*d*s14^2*s13+4*s14^2*s24^3*s13^2+24*s12*s34^2*s14^2*s24*s13-6*s12*s34*d*s14^2*s24^2*s13+12*s23*s34^2*s14^2*s13^2+16*s23*s12*s34*d*s14^3*s13-6*s34*d*s14^2*s24*s13^3+24*s23*s12*s34^2*s14^2*s13+4*s23^3*d*s14^2*s24*s13+36*s12^2*s34^2*s14^2*s13+10*s23^2*s34*d*s14^2*s24*s13+12*s34^2*s14^2*s24*s13^2+48*s12*s34*s14^2*s13^3+48*s12*s14^2*s24*s13^3+24*s23*s34*s14^2*s24*s13^2-5*s23^2*s12^3*d*s14^2-2*s23^3*s34^2*d*s14^2-3*s34^2*d*s14^2*s24*s13^2+5*s23^2*s34^2*d*s14^2*s13-10*s12^3*d*s14^2*s13^2+8*s23^2*s12*d*s14^3*s24+48*s23*s12^3*s14^2*s13)*s23^(-1)*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (-1/2*s23^(-1)*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)*(6*s23*s24^3*s13^2+12*s23*s12*s14*s24^2*s13-6*s12^2*s14^2*s24^2+2*s23*s34^2*s14^3+12*s23*s12*s34^2*s14*s13+6*s23*s34^4*s13+2*d*s14^2*s24^2*s13^2+6*s23*s14*s24^2*s13^2+12*s23*s34*s14^3*s13+6*s23*s34^2*s14*s13^2+18*s23^2*d*s14^2*s24^2-8*s23*s34*d*s14^3*s13+6*s23*s14*s24^4+s23*s12^2*d*s14^2*s24-18*s23^2*s12^2*s14^2+18*s23*s34^2*s24*s13^2+2*s23*s12^3*s24^2+36*s23^2*s34*d*s14^2*s24+24*s23*s34*s24^3*s13-12*s23^3*d*s14^2*s24+8*s23^2*d*s14*s24^2*s13-6*s12^2*s34^2*s14^2+4*s12*s34^2*d*s14^2*s13+36*s23*s12*s34^2*s24*s13+6*s23*s14^2*s24^3+26*s23*s14^3*s13^2-9*s23*s12^2*s34^2*d*s24-12*s23*s34*d*s24^3*s13+8*s23^2*s34^2*d*s14*s13-12*s23*s12^2*s34*d*s14*s24-12*s23*s12*s34*d*s24^3-6*s23*s12^2*d*s14*s24*s13-36*s23^2*s12*s14^2*s13+36*s23*s12*s34^2*s24^2+12*s23*s12^2*s34*s14*s24-s23*s34^5*d+6*s23*s12^2*s34^3+16*s23^2*d*s14^3*s24-3*s23*d*s24^4*s13+12*s23*s34*s14*s24*s13^2+s23*s12^2*s34*d*s14^2-48*s23^2*s34*s14*s24^2+s23*s34*d*s14^2*s13^2+8*s12*d*s14^2*s13^3+16*s23^2*s34*d*s14*s24*s13+2*s34^2*d*s14^2*s13^2-36*s23^2*s34*s14^3-36*s23*s12*s34*s14^2*s13-36*s12^2*s14^2*s24*s13-36*s23*s12*s14^2*s24*s13-36*s12^2*s34*s14^2*s13+6*s23*s12^2*s34^2*s14-6*s23*s12*s34*d*s14*s13^2+12*s23*s14*s24^3*s13-12*s23*s34^2*d*s14*s24^2-18*s23*s34*s14^2*s13^2-18*s23*s14^2*s24*s13^2-6*s23*s12*d*s14*s24^3+8*s23^2*s12*d*s14*s24^2-12*s23*s34*d*s14*s24*s13^2+4*s12*d*s14^2*s24^2*s13+28*s23^3*s14^2*s24-9*s23*s34*d*s24^2*s13^2-8*s23*s34^3*d*s14*s24+18*s23*s12^2*s34*s24^2+8*s23^2*s12*s34^2*d*s14+24*s23*s12*s34^3*s24-2*s23*s34^4*d*s14-12*s23*s12*s34^3*d*s24+8*s12*s34*d*s14^2*s24*s13-12*s23^3*s34*d*s14^2+6*s23*s12*s34^4-6*s23*s12*s34*d*s24*s13^2+18*s23*s34*s24^2*s13^2-16*s23^2*s14*s24^3-10*s23*s34^3*d*s24^2-2*s23*s12^3*s34*d*s14+4*s23^2*d*s14^2*s24*s13+36*s23*s12*s34*s24^2*s13-18*s23*s12^2*s14^2*s24+12*s23*s12^2*s34*s24*s13-4*s23^2*s12^2*s14*s24+12*s23*s12*s34^3*s13+10*s23^2*s12^2*d*s14^2-4*s23^3*s14^2*s13-12*s12^3*s34*s14^2-6*s23*s34^3*d*s14*s13-6*s12^4*s14^2-24*s12*s34*s14^2*s24*s13-54*s23*s12^2*s14^2*s13-3*s23*s34^3*d*s13^2+12*s23*s12*s14*s24^3+16*s23^2*s12*s34*d*s14*s24-3*s23*s12*d*s24^4-12*s34*s14^2*s13^3-9*s23*s34^2*d*s24*s13^2-6*s23*s12*s34^3*d*s13-12*s14^2*s24*s13^3-4*s23^2*s34*s14*s13^2-3*s23*s34*d*s14^2*s24^2-12*s23*s34^3*d*s24*s13-4*s23^2*s12^2*s34*s14-16*s23^2*d*s14^3*s13-6*s23*d*s14*s24^2*s13^2+2*s23*s12^3*s34^2-12*s12*s14^2*s24^2*s13-18*s23*s12*s34*d*s14*s24^2-6*s23*s34^2*d*s14*s13^2+18*s23*s34*s14^2*s24^2-12*s12^2*s34*s14^2*s24-6*s23*s12*d*s14*s24*s13^2+8*s23^2*s34^3*d*s14-4*s23^3*s12*s14^2+12*s23*s12*s34*s14^3+12*s23*s12*s34*s14^2*s24+6*s23*s12^2*s24^2*s13-s23*s12^3*s34^2*d+2*s23*s14^3*s24^2-18*s23*s14^2*s13^3-3*s23*s12^2*s34^2*d*s13+4*s23^3*d*s14^2*s13-40*s23^2*s34*s14*s24*s13+6*s23*s12^2*s24^3+4*s23^2*s34*d*s14^2*s13+6*s23*s12*s34^2*s13^2+48*s23^3*s14^3-12*s23^2*s12*s14^2*s24+24*s23^2*s34^2*d*s14*s24+7*s23*s12^3*d*s14^2-6*s23*s12^2*s34*d*s14*s13-3*s23*s12^2*d*s24^2*s13-18*s23*s34^2*d*s14*s24*s13+36*s23*s34^2*s14*s24^2+4*s23*s34*s14^3*s24+6*s23*s34^3*s14^2-12*s34*s14^2*s24*s13^2+2*s12^2*s34^2*d*s14^2+10*s23*s34^4*s24+36*s23*s12*s34^2*s14*s24-7*s23*s12*s34^2*d*s14^2+2*s23*s24^2*s13^3-36*s12^2*s14^2*s13^2+21*s23*s12^2*d*s14^2*s13+16*s23^2*s34*d*s14^3+2*d*s14^2*s13^4-6*s23*s12^2*s34*d*s24*s13-4*s23^2*s14*s24*s13^2+10*s23^2*d*s14^2*s13^2-3*s23*s12^2*d*s24^3-6*s23*d*s14*s24^3*s13-20*s23^2*s12*s34^2*s14+6*s23*s12*s24^4+s23*d*s14^2*s24*s13^2-12*s12*s34^2*s14^2*s13+6*s23*s12*s14^2*s24^2-18*s23^2*s14^2*s13^2-3*s23*s12*d*s24^2*s13^2+36*s23*s34^2*s24^2*s13-6*s14^2*s24^2*s13^2-2*s23*s12^3*d*s14*s24+24*s23^2*s34*d*s14*s24^2+4*s23^2*s12*s34*d*s14^2+6*s23*s34^3*s13^2+20*s23*s34^2*s24^3+6*s23*s24^4*s13-40*s23^2*s12*s34*s14*s24-3*s23*s12*s34^2*d*s13^2-3*s23*s12^2*s34^3*d-14*s23*s34*d*s14^2*s24*s13+8*s12^3*d*s14^2*s13+24*s23*s34*s14*s24^3+12*s12^2*d*s14^2*s13^2+6*s23*s34^2*s14^2*s13+21*s23*s12*d*s14^2*s13^2+10*s23*s34*s24^4+4*s34*d*s14^2*s13^3+6*s23*s12*s34^2*s14^2-24*s12*s14^2*s13^3-8*s23*s12*s34*d*s14^3-5*s23*s34*d*s24^4+18*s23^2*s34^2*d*s14^2-8*s23*s34*d*s14*s24^3-18*s23*s12^3*s14^2-6*s23*s12^2*d*s14*s24^2-48*s23^2*s34^2*s14*s24-6*s23*s12^2*s34^2*d*s14+12*s23*s34*s14^2*s24*s13-2*s23*d*s14*s24*s13^3-24*s23*s12*s34*d*s14*s24*s13+18*s23*s12^2*s34^2*s24-16*s23^2*s12*d*s14^3-2*s23*d*s14*s24^4+12*s12*d*s14^2*s24*s13^2-18*s23*s34*d*s14*s24^2*s13+4*s23^2*s12*d*s14^2*s24-10*s23*s34^2*d*s24^3+12*s23*s12*s14^3*s24-3*s23*d*s24^3*s13^2-9*s23*s12^2*s34*d*s24^2+60*s23^2*s14^3*s13+12*s23*s12*s34*s24*s13^2+6*s23*s12^2*s14*s24^2-6*s34^2*s14^2*s13^2-6*s23*s12*d*s24^3*s13-18*s23*s12*s34*d*s24^2*s13-18*s23*s12*s34^2*d*s14*s24+8*s23^2*d*s14^4-84*s23^2*s34*s14^2*s24-24*s12^3*s14^2*s13+2*s23*s24^5+28*s23^3*s34*s14^2-6*s23*s12*s34^3*d*s14+24*s23*s34^3*s14*s24+36*s23*s34*s14*s24^2*s13-2*s23*s12^3*s34*d*s24-s23*s34^3*d*s14^2-3*s23*s34^2*d*s14^2*s24-3*s23*s12*s34^4*d+2*s23*s12*s34*d*s14^2*s13-8*s23*d*s14^3*s24*s13-16*s23*s12*d*s14^3*s13-6*s14^2*s13^4+6*s23*s14^2*s24^2*s13+12*s23*s12*s34^3*s14-5*s23*s34^4*d*s24+24*s23*s12*s34*s14*s24*s13-18*s23*s12^2*s34*s14^2-8*s23*d*s14^3*s13^2-s23*d*s14^2*s24^3+12*s12^2*s34*d*s14^2*s13-36*s12*s34*s14^2*s13^2+8*s23^2*d*s14*s24^3+12*s23*s34^3*s14*s13-36*s12*s14^2*s24*s13^2-12*s12^3*s14^2*s24-12*s23^2*s14^2*s24*s13+60*s23^2*s12*s14^3-12*s23*s12*s34^2*d*s14*s13-12*s23^2*s34*s14^2*s13+12*s23*s12*s24^3*s13+4*s12^2*s34*d*s14^2*s24+7*s23*d*s14^2*s13^3-12*s23*s12*d*s14*s24^2*s13+4*d*s14^2*s24*s13^3+36*s23*s34^2*s14*s24*s13+4*s34*d*s14^2*s24*s13^2-3*s23*s34^4*d*s13+36*s23*s12*s34*s14*s24^2-16*s23^2*s34^3*s14-8*s23*s12*d*s14^3*s24-16*s23^2*s14^4-7*s23*s34^2*d*s14^2*s13-14*s23*s12*s34*d*s14^2*s24-18*s23*s12*s34^2*d*s24*s13-s23*s34^2*d*s13^3+2*s12^4*d*s14^2+20*s23^2*s12*d*s14^2*s13+24*s23*s34^3*s24*s13-8*s23^2*s12*s14*s24*s13+24*s23*s12*s34*s24^3+4*s12^3*s34*d*s14^2+6*s23*s12^2*s34^2*s13-18*s23*s34^2*d*s24^2*s13-s23*d*s24^2*s13^3+52*s23*s12*s14^3*s13-36*s23^2*s14^3*s24+6*s23*s12*s24^2*s13^2+4*s23^3*s12*d*s14^2+2*s23*s12*d*s14^2*s24*s13-42*s23^2*s34^2*s14^2-7*s23*s12*d*s14^2*s24^2+18*s23*s34^2*s14^2*s24+12*s12^2*d*s14^2*s24*s13-s23*d*s24^5-s23*s12^3*d*s24^2+2*s12^2*d*s14^2*s24^2-7*s23*d*s14^2*s24^2*s13+12*s23*s14^3*s24*s13-12*s23^2*s12*s34*s14^2-20*s23^2*s34^2*s14*s13-20*s23^2*s14*s24^2*s13+26*s23*s12^2*s14^3-2*s23*s34*d*s14*s13^3+4*s23*s12^3*s34*s24+4*s23*s34*s24*s13^3+2*s23*s34^5-54*s23*s12*s14^2*s13^2-42*s23^2*s14^2*s24^2-8*s23*s12^2*d*s14^3-2*s23*s34*d*s24*s13^3+4*s12^3*d*s14^2*s24-16*s23^3*d*s14^3-18*s23*s12*s34^2*d*s24^2-8*s23^2*s12*s34*s14*s13+6*s23*s34^4*s14+12*s12*s34*d*s14^2*s13^2+2*s23*s34^2*s13^3+20*s23*s34^3*s24^2-20*s23^2*s12*s14*s24^2)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (-s23^(-1)*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)*(3*s12^2*s14^2*s24^2-s23*s34^2*s14^3-d*s14^2*s24^2*s13^2-6*s23*s34*s14^3*s13-s23^2*d*s14^2*s24^2+4*s23*s34*d*s14^3*s13+2*s23^2*s12^2*s14^2-2*s23^2*s34*d*s14^2*s24+3*s12^2*s34^2*s14^2-2*s12*s34^2*d*s14^2*s13-s23*s14^2*s24^3-13*s23*s14^3*s13^2+4*s23^2*s12*s14^2*s13-4*s23^2*d*s14^3*s24-4*s12*d*s14^2*s13^3-s34^2*d*s14^2*s13^2+8*s23^2*s34*s14^3+10*s23*s12*s34*s14^2*s13+18*s12^2*s14^2*s24*s13+10*s23*s12*s14^2*s24*s13+18*s12^2*s34*s14^2*s13+5*s23*s34*s14^2*s13^2+5*s23*s14^2*s24*s13^2-2*s12*d*s14^2*s24^2*s13-4*s12*s34*d*s14^2*s24*s13+2*s23^2*d*s14^2*s24*s13+5*s23*s12^2*s14^2*s24-s23^2*s12^2*d*s14^2+6*s12^3*s34*s14^2+3*s12^4*s14^2+12*s12*s34*s14^2*s24*s13+15*s23*s12^2*s14^2*s13+6*s34*s14^2*s13^3+6*s14^2*s24*s13^3+4*s23^2*d*s14^3*s13+6*s12*s14^2*s24^2*s13-3*s23*s34*s14^2*s24^2+6*s12^2*s34*s14^2*s24-6*s23*s12*s34*s14^3-2*s23*s12*s34*s14^2*s24-s23*s14^3*s24^2+5*s23*s14^2*s13^3+2*s23^2*s34*d*s14^2*s13-4*s23^3*s14^3-2*s23*s12^3*d*s14^2-2*s23*s34*s14^3*s24-s23*s34^3*s14^2+6*s34*s14^2*s24*s13^2-s12^2*s34^2*d*s14^2+2*s23*s12*s34^2*d*s14^2+18*s12^2*s14^2*s13^2-6*s23*s12^2*d*s14^2*s13-4*s23^2*s34*d*s14^3-d*s14^2*s13^4-s23^2*d*s14^2*s13^2+6*s12*s34^2*s14^2*s13-s23*s12*s14^2*s24^2+2*s23^2*s14^2*s13^2+3*s14^2*s24^2*s13^2+2*s23^2*s12*s34*d*s14^2+4*s23*s34*d*s14^2*s24*s13-4*s12^3*d*s14^2*s13-6*s12^2*d*s14^2*s13^2-s23*s34^2*s14^2*s13-6*s23*s12*d*s14^2*s13^2-2*s34*d*s14^2*s13^3-s23*s12*s34^2*s14^2+12*s12*s14^2*s13^3+4*s23*s12*s34*d*s14^3-s23^2*s34^2*d*s14^2+5*s23*s12^3*s14^2-2*s23*s34*s14^2*s24*s13+4*s23^2*s12*d*s14^3-6*s12*d*s14^2*s24*s13^2+2*s23^2*s12*d*s14^2*s24-6*s23*s12*s14^3*s24-16*s23^2*s14^3*s13+3*s34^2*s14^2*s13^2-4*s23^2*d*s14^4+4*s23^2*s34*s14^2*s24+12*s12^3*s14^2*s13+4*s23*d*s14^3*s24*s13+8*s23*s12*d*s14^3*s13+3*s14^2*s13^4-s23*s14^2*s24^2*s13+5*s23*s12^2*s34*s14^2+4*s23*d*s14^3*s13^2-6*s12^2*s34*d*s14^2*s13+18*s12*s34*s14^2*s13^2+18*s12*s14^2*s24*s13^2+6*s12^3*s14^2*s24-16*s23^2*s12*s14^3-2*s12^2*s34*d*s14^2*s24-2*s23*d*s14^2*s13^3-2*d*s14^2*s24*s13^3-2*s34*d*s14^2*s24*s13^2+4*s23*s12*d*s14^3*s24+8*s23^2*s14^4+2*s23*s34^2*d*s14^2*s13+4*s23*s12*s34*d*s14^2*s24-s12^4*d*s14^2-2*s23^2*s12*d*s14^2*s13-2*s12^3*s34*d*s14^2-26*s23*s12*s14^3*s13+8*s23^2*s14^3*s24+2*s23^2*s34^2*s14^2+2*s23*s12*d*s14^2*s24^2-3*s23*s34^2*s14^2*s24-6*s12^2*d*s14^2*s24*s13-s12^2*d*s14^2*s24^2+2*s23*d*s14^2*s24^2*s13-6*s23*s14^3*s24*s13-13*s23*s12^2*s14^3+15*s23*s12*s14^2*s13^2+2*s23^2*s14^2*s24^2+4*s23*s12^2*d*s14^3-2*s12^3*d*s14^2*s24-6*s12*s34*d*s14^2*s13^2)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (1/2*s23^(-1)*(2*s23*s24^3*s13^2-60*s23*s12*s14*s24^2*s13-36*s12^2*s34^2*s14*s13-60*s23*s12*s34^2*s14*s13-36*s12^2*s14*s24^2*s13-12*s12*s34^2*d*s24^2*s13-30*s23*s14*s24^2*s13^2-30*s23*s34^2*s14*s13^2+10*s23*s12*s13^4+48*s12*s34^2*s13^3-10*s23*s12^2*d*s13^3+2*s23^2*d*s14^2*s24^2-48*s12*s34*s14*s13^3+8*s24^3*s13^3-40*s12^3*d*s24*s13^2-20*s12*s34*d*s13^4-8*s23*s12^2*d*s14^2*s24+58*s23^2*s12^2*s14^2+24*s23*s12^3*s24*s13-5*s23*s12^4*d*s13+6*s23*s34^2*s24*s13^2-24*s12*s34^2*s14*s24*s13+6*s23*s12^3*s24^2-4*s14*s24^3*s13^2+20*s23*s12^2*s13^3+40*s12*s34*s13^4+4*s23^2*s34*d*s14^2*s24-22*s23*s12^4*s14+6*s12*s34*d*s14*s24^2*s13+4*s23^3*d*s14^2*s24+12*s23*s12*s34^2*s24*s13+72*s12^2*s34^2*s24*s13-4*s12^5*s14-3*s23*s12^2*s34^2*d*s24-88*s23*s12^3*s14*s13+8*s12^3*s24^3+10*s12^3*d*s14*s13^2-6*s12^5*d*s13+20*s23*s12^2*s34*d*s14*s24-d*s24^4*s13^2+60*s23*s12^2*d*s14*s24*s13+116*s23^2*s12*s14^2*s13+96*s12*s34*s24*s13^3-4*s12^2*s34*d*s24^3-60*s23*s12^2*s34*s14*s24-12*s34^2*s14*s24*s13^2+2*s23*s12^2*s34^3+4*s23^2*d*s14^3*s24-48*s12*s34*d*s24*s13^3-48*s12*s14*s24*s13^3-60*s23*s34*s14*s24*s13^2+80*s12^2*s34*s13^3-8*s23*s12^2*s34*d*s14^2-8*s23*s34*d*s14^2*s13^2+12*s34^2*s13^4-16*s23^2*s12^3*s14-40*s12^3*s14*s13^2-2*s12*s34^4*d*s13-4*s23^2*s34*s14^3+6*s34*d*s14*s24*s13^3-40*s12^3*s34*d*s13^2-20*s12*d*s24*s13^4+56*s23*s12*s34*s14^2*s13+56*s23*s12*s14^2*s24*s13-4*s34^3*d*s13^3-30*s23*s12^2*s34^2*s14+18*s12^2*s34*d*s14*s13^2+24*s23*s12*s24*s13^3+60*s23*s12*s34*d*s14*s13^2+s12^2*d*s14*s24^3-4*s23*s14*s24^3*s13+8*s34*s24^3*s13^2+48*s12^3*s34^2*s13+28*s23*s34*s14^2*s13^2+28*s23*s14^2*s24*s13^2-15*s12^4*d*s13^2-8*s12*s34^3*s14*s13+20*s23*s34*d*s14*s24*s13^2+80*s12^3*s24*s13^2-6*s34^2*d*s24^2*s13^2-4*s23^3*s14^2*s24-3*s23*s34*d*s24^2*s13^2-24*s12*d*s24^2*s13^3+12*s12*s34*d*s14*s13^3+6*s23*s12^2*s34*s24^2-48*s23^2*s12^2*s14*s13+3*s34^2*d*s14*s24*s13^2+40*s12^4*s34*s13-s12^2*s34^4*d+4*s23^3*s34*d*s14^2+16*s12*s34^3*s24*s13-5*s23*s12*d*s13^4+16*s23^2*s12*s34*d*s14*s13-18*s23*s12*s34*d*s24*s13^2-4*s12^2*s34^3*d*s24+6*s23*s34*s24^2*s13^2-24*s12*s34^2*d*s13^3+72*s12^2*s34*s24^2*s13-72*s12^2*s34*d*s24*s13^2+20*s23*s12^3*s34*d*s14-4*s12^2*s34^3*s14-88*s23*s12*s14*s13^3-12*s23^2*d*s14^2*s24*s13+12*s23*s12*s34*s24^2*s13+5*s12*d*s14*s13^4+12*s12*s13^5+28*s23*s12^2*s14^2*s24+36*s23*s12^2*s34*s24*s13-20*s23^2*s12^2*s14*s24+3*s12^4*s34*d*s14+4*s23*s12*s34^3*s13+24*s34*s24*s13^4-22*s23^2*s12^2*d*s14^2+36*s23*s12^2*s34*s13^2+28*s23^3*s14^2*s13-12*s12*d*s24^3*s13^2+12*s12*d*s14*s24*s13^3+24*s23^2*s12*d*s14*s13^2+60*s23*s12^2*s14^2*s13+24*s12^2*s24^3*s13-s23*s34^3*d*s13^2-16*s23^2*s14*s13^3+16*s23^2*s12*d*s14*s24*s13-4*s23*s12*s14*s24^3-40*s12^2*d*s24*s13^3-4*s14*s13^5-12*s12^2*s34^3*d*s13-3*s23*s34^2*d*s24*s13^2-2*s23*s12*s34^3*d*s13+24*s12^4*s34*s24-12*s23*s12*d*s24*s13^3-12*s12^3*s14*s24^2-20*s23^2*s34*s14*s13^2-20*s23^2*s12^2*s34*s14+4*s23^2*d*s14^3*s13+10*s23*d*s14*s24^2*s13^2+8*s12^2*s34*s24^3+6*s23*s12^3*s34^2+2*s34^4*s13^2-144*s23*s12^2*s34*s14*s13-12*s34*s14*s13^4+40*s23*s12*d*s14*s13^3-6*s12^4*d*s24^2+18*s12^2*d*s14*s24*s13^2+10*s12^2*d*s14*s13^3+10*s23*s34^2*d*s14*s13^2+24*s12^3*s34^2*s24+24*s34*s24^2*s13^3+8*s24*s13^5+60*s23*s12*d*s14*s24*s13^2+3*s12^2*s34*d*s14*s24^2+8*s12^3*s34^3+28*s23^3*s12*s14^2+16*s23*s12*s34*s14^2*s24-12*s12^3*s34*d*s24^2-12*s34*s14*s24^2*s13^2+18*s23*s12^2*s24^2*s13-3*s23*s12^3*s34^2*d+20*s23*s14^2*s13^3-6*s34^2*d*s13^4-9*s23*s12^2*s34^2*d*s13+72*s12^2*s24^2*s13^2+8*s23^2*s12^2*s34*d*s14-12*s23^3*d*s14^2*s13-8*s23^2*s34*s14*s24*s13+2*s23*s12^2*s24^3-12*s14*s24^2*s13^3+20*s23*s12^3*s13^2-12*s23^2*s34*d*s14^2*s13-6*s12*d*s13^5-3*s23*s12^4*d*s24-12*s34^2*s14*s13^3-40*s12^2*s34*d*s13^3+24*s12*s34^2*s24^2*s13+18*s23*s12*s34^2*s13^2-24*s23^3*s14^3+36*s23^2*s12*s14^2*s24-12*s23*s12*s34*d*s13^3+3*s12^3*s34^2*d*s14+3*s12^3*d*s14*s24^2-4*s12^5*d*s24-4*s23*s12^3*d*s14^2+6*s23*s24*s13^4-24*s12*s34*s14*s24^2*s13+60*s23*s12^2*s34*d*s14*s13-9*s23*s12^2*d*s24^2*s13-6*d*s24^2*s13^4+40*s12^3*s13^3-48*s23*s12^3*s14*s24+24*s34^2*s24*s13^3-3*s23*s12^4*s34*d-12*s23*s12*s34^2*s14*s24-12*s12^2*s34^2*s14*s24-4*s23*s12*s34^2*d*s14^2+6*s23*s24^2*s13^3-4*s12^3*s34^3*d-12*s23*s12^2*d*s14^2*s13+4*s23^2*s34*d*s14^3-22*s23*s14*s13^4-18*s23*s12^2*s34*d*s24*s13-48*s23*s12^3*s34*s14-20*s23^2*s14*s24*s13^2-22*s23^2*d*s14^2*s13^2-s23*s12^2*d*s24^3+4*s12*s24^4*s13-4*s23^2*s12*s34^2*s14-12*s14*s24*s13^4-4*s12^5*s34*d+24*s12*s34^3*s13^2-8*s23*d*s14^2*s24*s13^2-144*s23*s12^2*s14*s24*s13+9*s12*s34^2*d*s14*s13^2+8*s23*s12*s14^2*s24^2+2*s23*s12^5+48*s12*s24^2*s13^3+8*s23^2*d*s14*s24*s13^2+58*s23^2*s14^2*s13^2+8*s34^3*s13^3+12*s12^3*s34*d*s14*s13-9*s23*s12*d*s24^2*s13^2-d*s13^6+20*s23*s12^3*d*s14*s24-12*s34*d*s24^2*s13^3+24*s23*s12^3*s34*s13+8*s23^2*s12^3*d*s14+18*s12*s34*d*s14*s24*s13^2-4*s12^3*d*s24^3-36*s12^2*d*s24^2*s13^2-8*s12*s34^3*d*s24*s13-36*s12^2*s34^2*d*s13^2-12*s23^2*s12*s34*d*s14^2-48*s12^3*s14*s24*s13+12*s12^4*s34^2+2*s23*s34^3*s13^2-48*s23^2*s12*s14*s13^2+3*s34*d*s14*s13^4-8*s23^2*s12*s34*s14*s24-9*s23*s12*s34^2*d*s13^2-20*s12*s14*s13^4-s23*s12^2*s34^3*d+9*s12*d*s14*s24^2*s13^2+d*s14*s13^5+5*s12^4*d*s14*s13-8*s23*s34*d*s14^2*s24*s13-s12^6*d+18*s12^2*s34*d*s14*s24*s13-s23*d*s13^5-10*s23*s12^3*d*s13^2+8*s23*s34^2*s14^2*s13-12*s23*s12*d*s14^2*s13^2-24*s34*s14*s24*s13^3+8*s23*s12*s34^2*s14^2+d*s14*s24^3*s13^2-144*s23*s12*s14*s24*s13^2-48*s12^3*s34*d*s24*s13-72*s12^2*s14*s24*s13^2-24*s12^3*s34^2*d*s13-36*s12*s34^2*d*s24*s13^2+2*s23^2*s34^2*d*s14^2+6*s23*s12^4*s24-4*d*s24*s13^5-24*s12^3*d*s24^2*s13-20*s12^4*d*s24*s13+20*s23*s12^3*s14^2+40*s12*s24*s13^4+10*s23*s12^2*d*s14*s24^2+10*s23*s12^2*s34^2*d*s14+16*s23*s34*s14^2*s24*s13+8*s12^5*s24+12*s12^2*s34^2*s24^2+20*s23*d*s14*s24*s13^3+2*s12*s34^3*d*s14*s13+40*s23*s12*s34*d*s14*s24*s13-12*s34*d*s24*s13^4+6*s23*s12^2*s34^2*s24-48*s12^3*s34*s14*s13+4*s23^2*s12*d*s14^3+24*s23*s12*s34*s13^3+48*s12^3*s24^2*s13-12*s23^2*s12*d*s14^2*s24+2*s12*d*s14*s24^3*s13-12*s12*s34^3*d*s13^2-20*s12^4*s14*s13-36*s12^2*s34*d*s24^2*s13-s23*d*s24^3*s13^2-3*s23*s12^2*s34*d*s24^2+144*s12^2*s34*s24*s13^2-20*s23^2*s14^3*s13+80*s12^2*s24*s13^3+36*s23*s12*s34*s24*s13^2-30*s23*s12^2*s14*s24^2+24*s23^2*s12^2*d*s14*s13+12*s24^2*s13^4-2*s23*s12*d*s24^3*s13+s34^3*d*s14*s13^2-6*s23*s12*s34*d*s24^2*s13-12*s12^2*d*s24^3*s13+s12^2*s34^3*d*s14+40*s12^4*s24*s13+4*s23^2*s34*s14^2*s24-4*s23^3*s34*s14^2+8*s12^2*s34^3*s24-12*s23*s34*s14*s24^2*s13-6*s23*s12^3*s34*d*s24+3*s12^2*s34^2*d*s14*s24+8*s23^2*d*s14*s13^3+96*s12^3*s34*s24*s13+80*s12^3*s34*s13^2-16*s23*s12*s34*d*s14^2*s13-72*s12^2*s34*s14*s24*s13-4*s34^3*d*s24*s13^2+12*s34^2*s24^2*s13^2+30*s12^4*s13^2+8*s23*s14^2*s24^2*s13-15*s12^2*d*s13^4-4*s23*s12*s34^3*s14-144*s23*s12*s34*s14*s13^2-40*s12^2*s14*s13^3-20*s12^4*s34*d*s13+2*s13^6-4*s34*d*s13^5-120*s23*s12*s34*s14*s24*s13+28*s23*s12^2*s34*s14^2+2*s12^2*s24^4-72*s12^2*s34*s14*s13^2+24*s12^2*s34^3*s13-12*s23*s12^3*s34*d*s13-8*s12*s14*s24^3*s13-8*s12*s34*d*s24^3*s13+9*s12^2*s34^2*d*s14*s13-4*s23*s34^3*s14*s13+2*s23*s13^5-3*s23*d*s24*s13^4+36*s23^2*s14^2*s24*s13-20*s23^2*s12*s14^3-12*s12^4*s34*s14+20*s23*s12*s34^2*d*s14*s13+6*s12*s34^2*d*s14*s24*s13+36*s23^2*s34*s14^2*s13+4*s23*s12*s24^3*s13-4*s23*d*s14^2*s13^3+20*s23*s12*d*s14*s24^2*s13+30*s12^2*s13^4-4*d*s24^3*s13^3-12*s23*s34^2*s14*s24*s13-12*s12^2*s34*s14*s24^2-4*s12^2*s14*s24^3-12*s23*s12*s34*s14*s24^2-12*s12^4*s34*d*s24+36*s23*s12^2*s24*s13^2-s12^2*d*s24^4-s23*s12^5*d+12*s12^4*s24^2-4*s23*s34^2*d*s14^2*s13+24*s12^3*s34*s24^2-48*s23*s14*s24*s13^3-2*s12*d*s24^4*s13-8*s23*s12*s34*d*s14^2*s24+9*s12^2*d*s14*s24^2*s13-6*s23*s12*s34^2*d*s24*s13-12*s12^3*s34^2*s14-12*s12^4*s14*s24-3*s23*s34^2*d*s13^3+10*s23*d*s14*s13^4+8*s34*s13^5-44*s23^2*s12*d*s14^2*s13-40*s23^2*s12*s14*s24*s13+72*s12*s34*s24^2*s13^2+18*s23*s12^2*s34^2*s13-36*s12^2*s34^2*d*s24*s13-24*s12^3*s34*s14*s24+8*s12^5*s34+8*s23^2*s12^2*d*s14*s24-132*s23*s12^2*s14*s13^2+6*s23*s12^4*s34-18*s23*s12^2*s34*d*s13^2-6*s12^4*s34^2*d-3*s23*d*s24^2*s13^3-4*s23^2*s14^3*s24+2*s24^4*s13^2-12*s12^3*s34^2*d*s24+18*s23*s12*s24^2*s13^2-3*s23*s34*d*s13^4-12*s23^3*s12*d*s14^2+3*d*s14*s24^2*s13^3-16*s23*s12*d*s14^2*s24*s13+3*s34*d*s14*s24^2*s13^2+2*s23^2*s34^2*s14^2-4*s23*s12*d*s14^2*s24^2+6*s23*s34*s13^4-12*s23*s12^3*d*s24*s13-48*s23*s34*s14*s13^3+s12^5*d*s14-3*s23*s12^3*d*s24^2+72*s12^2*s34^2*s13^2-36*s12*s14*s24^2*s13^2-36*s12*s34*d*s24^2*s13^2+8*s34^3*s24*s13^2-36*s12*s34^2*s14*s13^2-4*s23*d*s14^2*s24^2*s13+12*s12^5*s13+36*s23^2*s12*s34*s14^2+3*s34^2*d*s14*s13^3+10*s23*s12^4*d*s14-4*s23^2*s34^2*s14*s13+60*s23*s12^2*d*s14*s13^2-4*s23^2*s14*s24^2*s13+10*s23*s12^4*s13+20*s23*s34*d*s14*s13^3+12*s23*s12^3*s34*s24+8*s23^2*s34*d*s14*s13^2+12*s23*s34*s24*s13^3-20*s12^3*d*s13^3+12*s12^3*d*s14*s24*s13+40*s23*s12^3*d*s14*s13-4*s34*d*s24^3*s13^2-s34^4*d*s13^2+4*s12*s34^4*s13+6*s12^3*s34*d*s14*s24+24*s12*s24^3*s13^2+60*s23*s12*s14^2*s13^2+2*s23^2*s14^2*s24^2+2*s12^6-72*s12*s34*s14*s24*s13^2+3*d*s14*s24*s13^4-6*s23*s34*d*s24*s13^3+3*s12^4*d*s14*s24+2*s12^2*s34^4-12*s34^2*d*s24*s13^3+8*s23^3*d*s14^3-18*s23*s12^2*d*s24*s13^2+72*s12*s34^2*s24*s13^2-4*s34^3*s14*s13^2-40*s23^2*s12*s34*s14*s13-6*s12^2*s34^2*d*s24^2+16*s12*s34*s24^3*s13+6*s23*s34^2*s13^3-4*s23^2*s12*s14*s24^2)*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)),

INT["pentagon1x123",3,21,4,2,{1,-2,2,0,1}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-1/2*(4*s23*s24^3*s13^2+48*s23*s12*s34^2*s14*s13+20*s23*s34^4*s13+8*s23*s14*s24^2*s13^2+48*s23*s34^2*s14*s13^2+12*s23*s12*s13^4-3*s23*s12^2*d*s13^3-4*s23^2*d*s14^2*s24^2-3*s23*s12^2*d*s14^2*s24+72*s23*s34^2*s24*s13^2+12*s23*s12^2*s13^3+8*s23*s34*s24^3*s13-4*s23^3*d*s14^2*s24+4*s23^2*d*s14*s24^2*s13+72*s23*s12*s34^2*s24*s13-3*s23*s12^2*s34^2*d*s24-2*s23*s34*d*s24^3*s13+12*s23^2*s34^2*d*s14*s13+6*s23*s12^2*s34*d*s14*s24+6*s23*s12^2*d*s14*s24*s13-16*s23^2*s12*s14^2*s13+12*s23*s12*s34^2*s24^2-s23*s34^5*d+12*s23*s12^2*s34^3+48*s23*s34*s14*s24*s13^2+s23*s12^2*s34*d*s14^2-8*s23^2*s34*s14*s24^2-3*s23*s34*d*s14^2*s13^2+16*s23^2*s34*d*s14*s24*s13-12*s23^2*s34*s14^3+8*s23*s12*s34*s14^2*s13+8*s23*s12^2*s34^2*s14+24*s23*s12*s24*s13^3-6*s23*s12*s34*d*s14*s13^2+2*s23*s34^2*d*s14*s24^2+12*s23*s34*s14^2*s13^2+4*s23*s14^2*s24*s13^2-6*s23*s34*d*s14*s24*s13^2+4*s23^3*s14^2*s24-9*s23*s34*d*s24^2*s13^2-2*s23*s34^3*d*s14*s24-8*s23^2*s12^2*s14*s13+8*s23^2*s12*s34^2*d*s14+24*s23*s12*s34^3*s24-2*s23*s34^4*d*s14-6*s23*s12*s34^3*d*s24-4*s23^3*s34*d*s14^2+12*s23*s12*s34^4-3*s23*s12*d*s13^4+16*s23^2*s12*s34*d*s14*s13-18*s23*s12*s34*d*s24*s13^2+36*s23*s34*s24^2*s13^2-3*s23*s34^3*d*s24^2+2*s23*s12^3*s34*d*s14+16*s23*s12*s14*s13^3+24*s23*s12*s34*s24^2*s13+24*s23*s12^2*s34*s24*s13+48*s23*s12*s34^3*s13-4*s23^2*s12^2*d*s14^2+36*s23*s12^2*s34*s13^2+20*s23^3*s14^2*s13-8*s23*s34^3*d*s14*s13+8*s23^2*s12*d*s14*s13^2-10*s23*s34^3*d*s13^2-20*s23^2*s14*s13^3+8*s23^2*s12*d*s14*s24*s13+8*s23^2*s12*s34*d*s14*s24-18*s23*s34^2*d*s24*s13^2-12*s23*s12*s34^3*d*s13-6*s23*s12*d*s24*s13^3-60*s23^2*s34*s14*s13^2+s23*s34*d*s14^2*s24^2-12*s23*s34^3*d*s24*s13-8*s23^2*s12^2*s34*s14+2*s23*d*s14*s24^2*s13^2+4*s23*s12^3*s34^2+16*s23*s12^2*s34*s14*s13-2*s23*s12*d*s14*s13^3+6*s23*s12*s34*d*s14*s24^2-12*s23*s34^2*d*s14*s13^2+4*s23*s12*d*s14*s24*s13^2+4*s23^2*s34^3*d*s14+4*s23^3*s12*s14^2-s23*s12^3*s34^2*d+4*s23*s14^2*s13^3-9*s23*s12^2*s34^2*d*s13+4*s23^2*s12^2*s34*d*s14-4*s23^3*d*s14^2*s13-56*s23^2*s34*s14*s24*s13+4*s23*s12^3*s13^2+8*s23^2*s34*d*s14^2*s13+72*s23*s12*s34^2*s13^2+16*s23^3*s14^3-12*s23*s12*s34*d*s13^3+8*s23^2*s34^2*d*s14*s24-s23*s12^3*d*s14^2+12*s23*s24*s13^4+4*s23*s12^2*s34*d*s14*s13-6*s23*s34^2*d*s14*s24*s13+8*s23*s34^2*s14*s24^2+4*s23*s34^3*s14^2+12*s23*s34^4*s24+16*s23*s12*s34^2*s14*s24+s23*s12*s34^2*d*s14^2+12*s23*s24^2*s13^3+s23*s12^2*d*s14^2*s13+8*s23*s14*s13^4-6*s23*s12^2*s34*d*s24*s13-28*s23^2*s14*s24*s13^2+4*s23^2*d*s14^2*s13^2+2*s23*d*s14*s24^3*s13-28*s23^2*s12*s34^2*s14+s23*d*s14^2*s24*s13^2+8*s23^2*d*s14*s24*s13^2-32*s23^2*s14^2*s13^2-3*s23*s12*d*s24^2*s13^2+36*s23*s34^2*s24^2*s13+8*s23*s12^3*s34*s13+4*s23^2*s34*d*s14*s24^2+40*s23*s34^3*s13^2+4*s23*s34^2*s24^3-28*s23^2*s12*s14*s13^2-16*s23^2*s12*s34*s14*s24-18*s23*s12*s34^2*d*s13^2-3*s23*s12^2*s34^3*d+2*s23*s34*d*s14^2*s24*s13-s23*d*s13^5-s23*s12^3*d*s13^2+12*s23*s34^2*s14^2*s13+s23*s12*d*s14^2*s13^2+4*s23*s12*s34^2*s14^2+16*s23*s12*s14*s24*s13^2+4*s23^2*s34^2*d*s14^2+2*s23*s34*d*s14*s24^3-28*s23^2*s34^2*s14*s24+2*s23*s12^2*s34^2*d*s14+8*s23*s34*s14^2*s24*s13-2*s23*d*s14*s24*s13^3+8*s23*s12*s34*d*s14*s24*s13+12*s23*s12^2*s34^2*s24+48*s23*s12*s34*s13^3+4*s23*s34*d*s14*s24^2*s13-8*s23^2*s12*d*s14^2*s24-s23*s34^2*d*s24^3-s23*d*s24^3*s13^2-12*s23^2*s14^3*s13+72*s23*s12*s34*s24*s13^2+4*s23^2*s12^2*d*s14*s13-6*s23*s12*s34*d*s24^2*s13+4*s23*s12*s34^2*d*s14*s24-16*s23^2*s34*s14^2*s24+20*s23^3*s34*s14^2-2*s23*s12*s34^3*d*s14+16*s23*s34^3*s14*s24+16*s23*s34*s14*s24^2*s13+4*s23^2*d*s14*s13^3-s23*s34^3*d*s14^2+s23*s34^2*d*s14^2*s24-3*s23*s12*s34^4*d+2*s23*s12*s34*d*s14^2*s13+16*s23*s12*s34^3*s14+48*s23*s12*s34*s14*s13^2-3*s23*s34^4*d*s24+32*s23*s12*s34*s14*s24*s13-s23*d*s14^2*s24^3-2*s23*s12^3*s34*d*s13+32*s23*s34^3*s14*s13+4*s23*s13^5-3*s23*d*s24*s13^4-16*s23^2*s14^2*s24*s13+4*s23^2*s12*s14^3-6*s23*s12*s34^2*d*s14*s13-64*s23^2*s34*s14^2*s13-s23*d*s14^2*s13^3+6*s23*s12*d*s14*s24^2*s13+48*s23*s34^2*s14*s24*s13-5*s23*s34^4*d*s13+12*s23*s12^2*s24*s13^2-20*s23^2*s34^3*s14-3*s23*s34^2*d*s14^2*s13+16*s23*s14*s24*s13^3+2*s23*s12*s34*d*s14^2*s24-18*s23*s12*s34^2*d*s24*s13-10*s23*s34^2*d*s13^3-2*s23*d*s14*s13^4+48*s23*s34^3*s24*s13-16*s23^2*s12*s14*s24*s13+36*s23*s12^2*s34^2*s13-9*s23*s34^2*d*s24^2*s13+8*s23*s12^2*s14*s13^2-9*s23*s12^2*s34*d*s13^2-3*s23*d*s24^2*s13^3+4*s23^2*s14^3*s24+12*s23*s12*s24^2*s13^2-5*s23*s34*d*s13^4-4*s23^3*s12*d*s14^2+2*s23*s12*d*s14^2*s24*s13-32*s23^2*s34^2*s14^2-3*s23*s12*d*s14^2*s24^2+4*s23*s34^2*s14^2*s24+20*s23*s34*s13^4+32*s23*s34*s14*s13^3+s23*d*s14^2*s24^2*s13-16*s23^2*s12*s34*s14^2-60*s23^2*s34^2*s14*s13+2*s23*s12^2*d*s14*s13^2-8*s23^2*s14*s24^2*s13-8*s23*s34*d*s14*s13^3+12*s23^2*s34*d*s14*s13^2+48*s23*s34*s24*s13^3+2*s23*s12^3*d*s14*s13+4*s23*s34^5+4*s23*s12*s14^2*s13^2-12*s23*s34*d*s24*s13^3-3*s23*s12^2*d*s24*s13^2-3*s23*s12*s34^2*d*s24^2-56*s23^2*s12*s34*s14*s13+8*s23*s34^4*s14+40*s23*s34^2*s13^3+12*s23*s34^3*s24^2)*s14^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      ((s23*s34^2*d*s14^2-6*s23*s34^2*s14*s24+s23*s34^4*d+20*s23^2*s34*s14^2-6*s23*s12*s24*s13^2+4*s12*s14*s24^3-6*s23*s34^3*s14+6*s23^2*s14*s24*s13-2*s23*d*s14^2*s24*s13-3*s23*s12^2*s34^2+2*s12*s14*s24*s13^2-4*s23^2*d*s14^2*s13-6*s23*s12*s14*s13^2+s23^2*s14*s24^2-12*s23*s34*s13^3-18*s23*s12*s34^2*s13+4*s23*s34*d*s13^3-2*s23*s34*d*s14^2*s24+26*s23^2*s34*s14*s13+4*s12^3*s14*s24-2*s23*d*s14*s24^2*s13+s23*s12^2*d*s13^2-2*s23*s34*s14^2*s24+6*s23*s34^2*d*s14*s13-4*s23*s12*s34*d*s14*s24+s14*s24^4+2*s34*s14*s24^2*s13-4*s23*s12*d*s14*s24*s13+2*s23*d*s14*s13^3-3*s23*s34^2*s14^2-6*s23*s12^2*s34*s13+8*s23^2*s14^3-4*s23^2*s12*d*s14*s13+s12^4*s14+2*s12^3*s34*s14+2*s23*d*s24*s13^3+4*s23*s34^3*d*s13-7*s23*s14^2*s24^2+s34^2*s14*s24^2+6*s23*s34^2*d*s24*s13-3*s23*s12^2*s13^2+2*s23*s12*s34^3*d+2*s23*s34*d*s24^2*s13-8*s23^3*s14^2+6*s23*s12*s34*d*s13^2-6*s23*s34*s24^2*s13+s14*s24^2*s13^2+4*s23*s12*s34*d*s24*s13-3*s23*s14^2*s13^2+2*s23*s34^3*d*s24-12*s23*s34*s14*s24*s13-2*s23*s12^2*s34*d*s14+6*s12*s34*s14*s24^2-4*s23^2*s34*d*s14^2+2*s12^3*s14*s13+2*s23*s34*d*s14^2*s13+6*s23^2*s34*s14*s24-3*s23*s24^2*s13^2-2*s23*s14^2*s24*s13-6*s23*s34*s14^2*s13+2*s14*s24^3*s13+2*s23*s12*d*s24*s13^2-18*s23*s34^2*s24*s13+s12^2*s34^2*s14+6*s23*s12*s14*s24^2+13*s23^2*s14*s13^2-6*s23*s12*s34^2*s24-2*s23*s12*s34*s14^2-18*s23*s34^2*s14*s13+2*s23*s14*s24^2*s13+4*s23^2*d*s14^2*s24+s23^2*s12^2*s14+s23*d*s13^4-8*s23^2*s34*d*s14*s13-12*s23^2*s14^2*s24-2*s23*s12*s14^2*s13-6*s23*s14*s13^3+s23*s34^2*d*s24^2+4*s12*s34*s14*s24*s13+2*s23^2*s12*s14*s24-6*s23*s34^3*s24+2*s23*s12*s34^2*d*s24-18*s23*s12*s34*s13^2+4*s23^2*s12*d*s14^2-6*s23*s24*s13^3+13*s23^2*s34^2*s14+s12^2*s14*s13^2+s23*d*s14^2*s24^2+2*s23*s12*d*s14^2*s24+6*s23^2*s12*s34*s14+6*s12*s14*s24^2*s13-4*s23^2*d*s14*s13^2-2*s23*s12^2*d*s14*s13-3*s23*s34^2*s24^2+2*s23*s12^2*s34*d*s13+2*s23*s12^2*s14*s13-2*s23*s34*d*s14*s24^2+4*s23*s12*s34*s14*s24+6*s12^2*s34*s14*s24-2*s23*s12*s34*d*s14^2+2*s23*s34*s14*s24^2+6*s23*s34*d*s14*s13^2-7*s23*s12^2*s14^2+2*s23*s34^3*d*s14+2*s23*s12*d*s13^3-6*s23*s12*s34^3-18*s23*s34*s14*s13^2+2*s12^2*s34*s14*s13+2*s23*s12^2*s34*s14-12*s23*s12*s34*s14*s13-18*s23*s34^2*s13^2+6*s23*s34*d*s24*s13^2-3*s23*s13^4+s23*s12^2*s34^2*d+4*s23^3*d*s14^2-12*s23*s12*s34*s24*s13+6*s23*s12^2*s14*s24+s23*s12^2*d*s14^2-18*s23*s34*s24*s13^2+2*s34*s14*s24^3-2*s23*s12*d*s14^2*s13-6*s23*s14*s24*s13^2+6*s12^2*s14*s24*s13+s23*d*s14^2*s13^2+4*s23*s12*s14*s24*s13+6*s12^2*s14*s24^2-3*s23*s34^4-6*s23*s12*s34^2*s14-12*s23^2*s12*s14^2+2*s23*s12^3*s14-4*s23^2*s34^2*d*s14+2*s12*s34^2*s14*s24+2*s23*s14*s24^3-4*s23^2*d*s14*s24*s13+20*s23^2*s14^2*s13+s23*d*s24^2*s13^2-14*s23*s12*s14^2*s24-6*s23*s12*s13^3-4*s23^2*s34*d*s14*s24+6*s23*s12*s34^2*d*s13+6*s23^2*s12*s14*s13-12*s23*s34^3*s13-4*s23^2*s12*s34*d*s14+6*s23*s34^2*d*s13^2)*s14^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (-1/2*(2*s23*s34^2*d*s14^2+28*s23*s34^2*s14*s24-8*s23*s12*s34^2*d*s14-20*s23^2*s34*s14^2-12*s12^2*s34^3+s34^5*d+20*s23*s34^3*s14+10*s34^3*d*s13^2-48*s12*s34^3*s13-4*s23*d*s14^2*s24*s13-36*s12^2*s34*s13^2-20*s12*s14*s24*s13^2+18*s12*s34*d*s24*s13^2+4*s23^2*d*s14^2*s13+28*s23*s12*s14*s13^2+18*s12*s34^2*d*s13^2-12*s12*s34^4+3*s12*d*s24^2*s13^2-4*s23*s34*d*s14^2*s24-72*s12*s34^2*s13^2-20*s34^4*s13-4*s24^3*s13^2-4*s23*d*s14*s24^2*s13-24*s12*s34*s14*s13^2+28*s23*s34*s14^2*s24-12*s23*s34^2*d*s14*s13-8*s23*s12*s34*d*s14*s24-20*s34*s14*s24^2*s13+s12^3*s34^2*d-8*s23*s12*d*s14*s24*s13-4*s23*d*s14*s13^3-12*s12*s13^4+10*s23*s34^2*s14^2-72*s12*s34*s24*s13^2-16*s23^2*s14^3-12*s12^2*s13^3-4*s12^3*s34*s14+2*s23*s14^2*s24^2-10*s34^2*s14*s24^2+9*s34^2*d*s24^2*s13-4*s12^3*s13^2-16*s23*s34*d*s14*s24*s13+9*s12^2*s34*d*s13^2+3*s12^2*d*s13^3-10*s14*s24^2*s13^2-12*s24*s13^4-12*s34^2*s14*s13^2+10*s23*s14^2*s13^2+6*s12^2*s34*d*s24*s13+56*s23*s34*s14*s24*s13-4*s23*s12^2*s34*d*s14-12*s24^2*s13^3-12*s12*s34*s14*s24^2-12*s12*s34^2*s24^2-12*s34^4*s24-24*s34^2*s14*s24*s13+4*s23^2*s34*d*s14^2-4*s12^3*s14*s13+4*s23*s34*d*s14^2*s13+2*s12^3*s34*d*s13-72*s34^2*s24*s13^2-2*s14*s13^4+28*s23*s14^2*s24*s13-8*s34*s24^3*s13+20*s23*s34*s14^2*s13-8*s23*s34^2*d*s14*s24-16*s23*s12*s34*d*s14*s13+3*s12^2*d*s24*s13^2-4*s14*s24^3*s13+12*s34*d*s24*s13^3-10*s12^2*s34^2*s14-24*s12*s24*s13^3+3*s12*s34^2*d*s24^2-8*s12*s14*s13^3-4*s12^3*s34^2+3*s34^3*d*s24^2+28*s23*s12*s34*s14^2+60*s23*s34^2*s14*s13-8*s23*s12*d*s14*s13^2-36*s34*s24^2*s13^2+3*s12*d*s13^4+8*s23*s14*s24^2*s13+4*s23^2*d*s14^2*s24-24*s12*s34^3*s24+2*s34*d*s24^3*s13-8*s14*s24*s13^3-4*s23^2*s14^2*s24+28*s23*s12*s14^2*s13+20*s23*s14*s13^3+5*s34^4*d*s13-12*s12^2*s24*s13^2+3*d*s24*s13^4-40*s12*s34*s14*s24*s13+3*s12^2*s34^2*d*s24-4*s13^5-72*s12*s34^2*s24*s13-8*s34^3*s14*s13+4*s23^2*s12*d*s14^2-10*s12^2*s14*s13^2+2*s23*d*s14^2*s24^2+3*d*s24^2*s13^3+4*s23*s12*d*s14^2*s24-48*s34^3*s24*s13-24*s12*s34^2*s14*s13-12*s12*s14*s24^2*s13+6*s12*s34*d*s24^2*s13-36*s12^2*s34^2*s13+10*s34^2*d*s13^3-4*s23*s12^2*d*s14*s13+6*s12*s34^3*d*s24-24*s12*s34*s24^2*s13+9*s34*d*s24^2*s13^2-8*s34*s14*s13^3+5*s34*d*s13^4-12*s12*s24^2*s13^2-40*s34^3*s13^2-4*s34^2*s24^3+8*s23*s12^2*s14*s13-8*s23*d*s14*s24*s13^2-4*s23*s34*d*s14*s24^2+d*s13^5+16*s23*s12*s34*s14*s24-24*s34*s14*s24*s13^2-12*s12^2*s34*s14*s24-4*s23*s12*s34*d*s14^2-4*s34^5+8*s23*s34*s14*s24^2-48*s34*s24*s13^3+3*s12^2*s34^3*d-12*s23*s34*d*s14*s13^2+2*s23*s12^2*s14^2-20*s34*s13^4-4*s23*s34^3*d*s14+12*s34^3*d*s24*s13-36*s34^2*s24^2*s13-8*s12^3*s34*s13+60*s23*s34*s14*s13^2-20*s12^2*s34*s14*s13+8*s23*s12^2*s34*s14+56*s23*s12*s34*s14*s13+12*s12*s34^3*d*s13+6*s12*d*s24*s13^3+18*s34^2*d*s24*s13^2-2*s34^4*s14-40*s34^2*s13^3-12*s34^3*s24^2+2*s23*s12^2*d*s14^2-24*s12^2*s34*s24*s13+s12^3*d*s13^2-4*s34*s14*s24^3-4*s23*s12*d*s14^2*s13+28*s23*s14*s24*s13^2+d*s24^3*s13^2-12*s12^2*s14*s24*s13+18*s12*s34^2*d*s24*s13+2*s23*d*s14^2*s13^2+16*s23*s12*s14*s24*s13+28*s23*s12*s34^2*s14-4*s23^2*s12*s14^2+s34^2*d*s24^3-12*s12^2*s34^2*s24-20*s12*s34^2*s14*s24-48*s12*s34*s13^3+12*s12*s34*d*s13^3+3*s34^4*d*s24-8*s12*s34^3*s14-20*s23^2*s14^2*s13+4*s23*s12*s14^2*s24+3*s12*s34^4*d-8*s34^3*s14*s24+9*s12^2*s34^2*d*s13)*s14^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (-1/2*(3*s23*s12*d*s14*s24^2-4*s23*s34^2*s14*s24+2*s23*s34^4*d-s23*s12*s34^2*d*s14+12*s23^2*s34*s14^2-12*s23*s12*s24*s13^2-4*s23*s34^3*s14+12*s23^2*s14*s24*s13-6*s23*s12^2*s34^2-4*s23*s12*s14*s13^2+2*s23^2*s14*s24^2-24*s23*s34*s13^3-36*s23*s12*s34^2*s13+8*s23*s34*d*s13^3+s23*s12^3*d*s14+52*s23^2*s34*s14*s13-s23*d*s14*s24^2*s13+2*s23*s12^2*d*s13^2+3*s23*s34^2*d*s14*s13-2*s23*s12*s34*d*s14*s24-2*s23*s12*d*s14*s24*s13+s23*d*s14*s13^3-12*s23*s12^2*s34*s13-8*s23^2*s12*d*s14*s13+4*s23*d*s24*s13^3+8*s23*s34^3*d*s13+12*s23*s34^2*d*s24*s13-6*s23*s12^2*s13^2+4*s23*s12*s34^3*d+4*s23*s34*d*s24^2*s13-2*s23*s34*d*s14*s24*s13-16*s23^3*s14^2+12*s23*s12*s34*d*s13^2-12*s23*s34*s24^2*s13+8*s23*s12*s34*d*s24*s13+4*s23*s34^3*d*s24-8*s23*s34*s14*s24*s13-s23*s12^2*s34*d*s14+12*s23^2*s34*s14*s24+s23*d*s14*s24^3-6*s23*s24^2*s13^2-s23*s34^2*d*s14*s24-2*s23*s12*s34*d*s14*s13+4*s23*s12*d*s24*s13^2-36*s23*s34^2*s24*s13+26*s23^2*s14*s13^2-12*s23*s12*s34^2*s24-12*s23*s34^2*s14*s13-s23*s12*d*s14*s13^2+2*s23^2*s12^2*s14+2*s23*d*s13^4-16*s23^2*s34*d*s14*s13-4*s23^2*s14^2*s24-4*s23*s14*s13^3+2*s23*s34^2*d*s24^2+4*s23^2*s12*s14*s24-12*s23*s34^3*s24+4*s23*s12*s34^2*d*s24-36*s23*s12*s34*s13^2-12*s23*s24*s13^3+26*s23^2*s34^2*s14+12*s23^2*s12*s34*s14-8*s23^2*d*s14*s13^2-s23*s12^2*d*s14*s13-6*s23*s34^2*s24^2+4*s23*s12^2*s34*d*s13-s23*d*s14*s24*s13^2-s23*s34*d*s14*s24^2+3*s23*s34*d*s14*s13^2+s23*s34^3*d*s14+4*s23*s12*d*s13^3-12*s23*s12*s34^3-12*s23*s34*s14*s13^2-8*s23*s12*s34*s14*s13-36*s23*s34^2*s13^2+12*s23*s34*d*s24*s13^2-6*s23*s13^4+2*s23*s12^2*s34^2*d+8*s23^3*d*s14^2-24*s23*s12*s34*s24*s13-36*s23*s34*s24*s13^2-4*s23*s14*s24*s13^2-6*s23*s34^4-4*s23*s12*s34^2*s14-4*s23^2*s12*s14^2+3*s23*s12^2*d*s14*s24-8*s23^2*s34^2*d*s14-8*s23^2*d*s14*s24*s13+12*s23^2*s14^2*s13+2*s23*d*s24^2*s13^2-12*s23*s12*s13^3-8*s23^2*s34*d*s14*s24+12*s23*s12*s34^2*d*s13+12*s23^2*s12*s14*s13-24*s23*s34^3*s13-8*s23^2*s12*s34*d*s14+12*s23*s34^2*d*s13^2)*s14^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)),

INT["pentagon1x123",3,21,4,2,{1,-2,1,0,2}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-1/2*(9*s23^2*s34*d*s24^2*s13^2+6*s23^2*s34^3*d*s14*s24+4*s23^4*s12*d*s14^2+s23^2*s12^3*d*s13^2-8*s23^3*s12*d*s14^2*s13+8*s23^4*d*s14^3+6*s23^2*s12*s34^3*d*s24-36*s23^2*s34^2*s14^2*s13-12*s23^2*s12*s34^2*s14^2-24*s23^2*s12*s34*s24^2*s13-2*s23^2*s12^3*s34*d*s14+16*s23^3*s12*s14*s24*s13-4*s23^2*s34^5-12*s23^3*d*s14^2*s13^2-5*s23^2*s12^2*s34*d*s14^2-72*s23^2*s34*s14*s24*s13^2+28*s23^3*s12*s34^2*s14+18*s23^2*s34^2*d*s14*s24*s13+3*s23^2*s12^2*s34^3*d-8*s23^3*s34*d*s14^3+28*s23^3*s14*s24*s13^2+15*s23^2*s34*d*s14^2*s13^2-24*s23^2*s12*s34*s14^2*s13-36*s23^2*s34^2*s24^2*s13+6*s23^2*s12^2*s34*d*s24*s13+36*s23^3*s14^3*s13-8*s23^2*s12^3*s34*s13+3*s23^2*s12*s34^4*d-4*s23^2*s13^5-4*s23^2*s12^2*s14^3+3*s23^2*s12^2*s34^2*d*s24-24*s23^2*s12*s34^3*s14+3*s23^2*s34^4*d*s24+56*s23^3*s12*s34*s14*s13-72*s23^2*s12*s34^2*s24*s13+2*s23^2*d*s14^3*s13^2+s23^2*d*s14^2*s24^3+2*s23^2*s34*d*s24^3*s13-20*s23^2*s34*s13^4-12*s23^3*s34*d*s14*s13^2-24*s23^2*s34^3*s14*s24+4*s23^3*s12^2*d*s14^2+5*s23^2*s34^3*d*s14^2-4*s23^3*s34^3*d*s14+s23^2*d*s24^3*s13^2-8*s23^2*s12*s14^3*s24-72*s23^2*s12*s34^2*s14*s13-12*s23^2*s34^4*s14-12*s23^2*s34^3*s24^2-40*s23^2*s34^2*s13^3+48*s23^3*s14^2*s13^2-8*s23^3*d*s14^3*s13-12*s23^2*s12^2*s34^2*s24+8*s23^3*s12^2*s34*s14-48*s23^2*s12*s34*s13^3+3*s23^2*s12^2*d*s14^2*s24+4*s23^2*s34*d*s14^3*s13+s23^2*s34^2*d*s24^3+60*s23^3*s34*s14*s13^2-6*s23^2*s12*s34*d*s14*s24^2-20*s23^4*s34*s14^2-s23^2*s12*s34^2*d*s14^2-12*s23^2*s12^2*s14*s13^2-4*s23^2*s34^2*s24^3-40*s23^2*s34^3*s13^2-24*s23^2*s12*s34^2*s14*s24+3*s23^2*d*s24^2*s13^3+10*s23^2*s34^2*d*s13^3-4*s23^2*s34*d*s14^3*s24+18*s23^2*s12*s34*d*s14*s13^2+8*s23^3*s34*s14*s24^2-5*s23^2*s12^2*d*s14^2*s13+4*s23^2*d*s14*s13^4-s23^2*d*s14^2*s24*s13^2-48*s23^2*s34^3*s24*s13-36*s23^2*s12^2*s34^2*s13-2*s23^2*d*s14*s24^3*s13+8*s23^3*d*s14^3*s24+16*s23^3*s12*s34*s14*s24+5*s23^2*d*s14^2*s13^3+2*s23^2*d*s14^3*s24^2+5*s23^2*s34^4*d*s13+9*s23^2*s12^2*s34^2*d*s13-8*s23^3*s12*s34*d*s14^2-12*s23^2*s12^2*s24*s13^2+48*s23^3*s34^2*s14^2+18*s23^2*s34*d*s14*s24*s13^2-24*s23^2*s14*s24*s13^3+12*s23^2*s12*s34*d*s13^3-8*s23^3*d*s14*s24*s13^2-48*s23^2*s34^3*s14*s13+8*s23^3*s12^2*s14*s13+s23^2*d*s13^5+3*s23^2*d*s24*s13^4-4*s23^3*s34*d*s14*s24^2+18*s23^2*s12*s34*d*s24*s13^2-5*s23^2*s34*d*s14^2*s24^2+12*s23^2*s34^3*d*s24*s13-24*s23^2*s12^2*s34*s14*s13+4*s23^3*d*s14^2*s24^2-48*s23^2*s34*s24*s13^3+24*s23^2*s34^2*d*s14*s13^2-12*s23^3*s14^3*s24+6*s23^2*s12*d*s14*s13^3+2*s23^2*s12^2*d*s14^3-12*s23^2*s12*s14^2*s13^2+24*s23^3*s12*s14^2*s13-24*s23^2*s12^2*s34*s24*s13-12*s23^3*s12*s14^3+16*s23^2*s34^3*d*s14*s13-4*s23^3*s12^2*d*s14*s13+5*s23^2*s34*d*s13^4-12*s23^2*s12*s24^2*s13^2-6*s23^2*s12^2*d*s14*s24*s13+12*s23^2*s12*s34^3*d*s13+6*s23^2*s12*d*s24*s13^3+20*s23^3*s34^3*s14-12*s23^2*s34^2*s14^2*s24+8*s23^3*s12*d*s14^2*s24-6*s23^2*s12^2*s34*d*s14*s24+18*s23^2*s34^2*d*s24*s13^2-48*s23^2*s34*s14*s13^3+60*s23^3*s34^2*s14*s13+6*s23^2*s12*s34^3*d*s14+8*s23^3*s14*s24^2*s13+4*s23^4*d*s14^2*s13-24*s23^2*s34*s14*s24^2*s13+24*s23^3*s12*s34*s14^2-12*s23^2*s12*s34^2*s24^2-10*s23^2*s12*d*s14^2*s24*s13-4*s23^2*s12*d*s14^3*s13-72*s23^2*s34^2*s24*s13^2-4*s23^2*d*s14^3*s24*s13-8*s23^2*s34*s24^3*s13-s23^2*s34^2*d*s14^2*s24-16*s23^3*s12*s34*d*s14*s13-72*s23^2*s12*s34*s14*s13^2-24*s23^4*s14^3-16*s23^3*s34*d*s14*s24*s13+3*s23^2*s12^2*d*s13^3+8*s23^3*s14^4-72*s23^2*s12*s34*s24*s13^2-4*s23^2*s12^3*s34^2-8*s23^2*s34*s14^3*s13-12*s23^2*s14*s24^2*s13^2-8*s23^3*s12*d*s14*s13^2-72*s23^2*s34^2*s14*s13^2+36*s23^3*s34*s14^3-s23^2*s12*d*s14^2*s13^2-12*s23^2*s24*s13^4-36*s23^2*s34*s24^2*s13^2+3*s23^2*s12*d*s13^4+18*s23^2*s12*s34^2*d*s14*s13-24*s23^2*s12*s14*s13^3+3*s23^2*s34^3*d*s24^2-4*s23^2*s12*s34*d*s14^3-24*s23^2*s12*s14*s24*s13^2-4*s23^2*s12^3*s13^2+24*s23^3*s14^2*s24*s13-10*s23^2*s12*s34*d*s14^2*s24+96*s23^3*s34*s14^2*s13-2*s23^2*s34*d*s14*s24^3-12*s23^2*s14^2*s13^3+6*s23^2*d*s14*s24*s13^3-4*s23^2*s14^3*s24^2-4*s23^4*s12*s14^2-6*s23^2*s12*d*s14*s24^2*s13-24*s23^2*s34*s14^2*s24*s13-24*s23^2*s12*s34^3*s24+4*s23^2*s34^4*d*s14-12*s23^2*s12^2*s34^2*s14-24*s23^2*s12*s24*s13^3-36*s23^2*s34*s14^2*s13^2+18*s23^2*s12*s34^2*d*s24*s13+2*s23^2*s34^2*d*s14^3-12*s23^2*s14*s13^4+3*s23^2*s12*d*s24^2*s13^2-20*s23^4*s14^2*s13-12*s23^2*s14^2*s24*s13^2-8*s23^3*s34^2*d*s14*s24-12*s23^2*s34^3*s14^2+18*s23^2*s12*s34^2*d*s13^2+56*s23^3*s34*s14*s24*s13-12*s23^2*s34^4*s24-4*s23^3*s12^2*s34*d*s14-12*s23^2*s24^2*s13^3-24*s23^3*s34*d*s14^2*s13-12*s23^3*s34^2*d*s14*s13-2*s23^2*s12^3*d*s14*s13-4*s23^4*s14^2*s24-12*s23^2*s12*s13^4-8*s23^3*s34*d*s14^2*s24+3*s23^2*s12^2*d*s24*s13^2+6*s23^2*s12*s34*d*s24^2*s13+12*s23^2*s34*d*s24*s13^3-4*s23^2*s24^3*s13^2-4*s23^2*s34^2*s14^3-4*s23^3*d*s14*s24^2*s13+8*s23^3*s12*d*s14^3-20*s23^2*s34^4*s13+3*s23^2*s12*s34^2*d*s24^2+10*s23^2*s34^3*d*s13^2+3*s23^2*s12*d*s14^2*s24^2-48*s23^2*s12*s34^3*s13-5*s23^2*d*s14^2*s24^2*s13-4*s23^3*d*s14*s13^3-4*s23^2*s14^3*s13^2-36*s23^2*s12^2*s34*s13^2-48*s23^2*s12*s34*s14*s24*s13+24*s23^3*s34*s14^2*s24-2*s23^2*s12*s34*d*s14^2*s13+16*s23^2*s34*d*s14*s13^3-12*s23^2*s12^2*s13^3+4*s23^4*s34*d*s14^2+28*s23^3*s12*s14*s13^2-8*s23^3*d*s14^2*s24*s13-12*s23^2*s34^2*s14*s24^2+9*s23^2*s34^2*d*s24^2*s13-2*s23^2*s34*d*s14^2*s24*s13-8*s23^3*s12*s34^2*d*s14-12*s23^2*s12^2*s34^3+s23^2*s34^5*d+9*s23^2*s12^2*s34*d*s13^2-72*s23^2*s12*s34^2*s13^2+2*s23^2*s12^3*s34*d*s13+4*s23^4*d*s14^2*s24+s23^2*s12^3*d*s14^2-12*s23^3*s34^2*d*s14^2+28*s23^3*s34^2*s14*s24-12*s23^2*s12*s34^4+s23^2*s12^3*s34^2*d-8*s23^3*s12*s34*d*s14*s24-72*s23^2*s34^2*s14*s24*s13-8*s23^3*s12*d*s14*s24*s13+15*s23^2*s34^2*d*s14^2*s13+20*s23^3*s14*s13^3+4*s23^2*s12*d*s14^3*s24)*(s23+s12+s34+s14+s24+s13)^(-1)*s14^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (-1/2*(36*s23*s12*s14*s24^2*s13+6*s12^2*s34^2*s14*s13-6*s23^2*s34^4+36*s12^2*s14*s24^2*s13+6*s23*s14*s24^2*s13^2+18*s23^2*d*s14^2*s24^2-12*s23^2*s12*s34^3+12*s23^2*s34^2*d*s24*s13+6*s23*s14*s24^4+24*s23*s12^2*d*s14^2*s24-42*s23^2*s12^2*s14^2+6*s34^2*s14*s24^3+12*s12*s34^2*s14*s24*s13+6*s14*s24^3*s13^2+4*s23^2*s34*d*s14^2*s24+6*s23*s12^4*s14+2*s23^2*s34^2*d*s24^2-18*s12*s34*d*s14*s24^2*s13+16*s23^3*d*s14^2*s24-7*s23^2*d*s14*s24^2*s13-36*s23^2*s12*s34*s13^2-16*s23*s14^2*s24^3+2*s12^5*s14+12*s23*s12^3*s14*s13-3*s12^3*d*s14*s13^2+21*s23^2*s34^2*d*s14*s13-18*s23*s12^2*s34*d*s14*s24-18*s23*s12^2*d*s14*s24*s13-12*s23^2*s12*s14^2*s13-36*s23^2*s34^2*s13^2-3*d*s14*s24^4*s13+36*s23*s12^2*s34*s14*s24-8*s23^3*s12*s34*d*s14+6*s34*s14*s24^4-12*s23^2*d*s14^3*s24+4*s12*s14*s24*s13^3+8*s23*s12^2*s34*d*s14^2+6*s23^2*s34*s14*s24^2+8*s23^4*d*s14^2+6*s23^2*s12^3*s14+26*s23^3*s34^2*s14+2*s23^2*s34*d*s14*s24*s13+6*s12^3*s14*s13^2-4*s23^2*s34*s14^3-8*s23^3*d*s14*s24*s13-8*s23*s12*s34*s14^2*s13-40*s23*s12*s14^2*s24*s13+6*s23*s12^2*s34^2*s14-3*s12^2*s34*d*s14*s13^2-6*s23*s12*s34*d*s14*s13^2-10*s12^2*d*s14*s24^3+8*s23^2*s12*s34*d*s24*s13+12*s23*s14*s24^3*s13-6*s23*s34^2*d*s14*s24^2-4*s23*s14^2*s24*s13^2-8*s23^3*s34*d*s14*s24-8*s23*s12*d*s14*s24^3-3*s23^2*s12*d*s14*s24^2-6*s23*s34*d*s14*s24*s13^2-36*s23^3*s14^2*s24-2*s23*s34^3*d*s14*s24-6*s23^2*s13^4-24*s23^2*s34^3*s13+6*s23^2*s12^2*s14*s13+s23^2*s12*s34^2*d*s14-12*s23^2*s12*s13^3-16*s23^3*s34*d*s14^2+2*s23^2*s12*s34*d*s14*s13+12*s23^3*s34*s14*s24+2*s14*s24^5+6*s23^2*s14*s24^3-6*s23*s12^3*s34*d*s14+2*s12^2*s34^3*s14+4*s23^2*d*s14^2*s24*s13-48*s23*s12^2*s14^2*s24-12*s23^2*s34^3*s24+18*s23^2*s12^2*s14*s24-3*s12^4*s34*d*s14-12*s12*s34*d*s14*s24^3+18*s23^2*s12^2*d*s14^2-36*s23^2*s34*s24*s13^2+60*s23^3*s14^2*s13-2*s12*d*s14*s24*s13^3+s23^2*s12*d*s14*s13^2-20*s23*s12^2*s14^2*s13-5*s12*d*s14*s24^4-18*s23^2*s14*s13^3-14*s23^2*s12*d*s14*s24*s13+24*s23*s12*s14*s24^3+52*s23^3*s34*s14*s13-14*s23^2*s12*s34*d*s14*s24+2*s23^2*d*s13^4+2*s23^2*s12^2*s34^2*d+4*s23^2*s12*d*s24*s13^2+20*s12^3*s14*s24^2-54*s23^2*s34*s14*s13^2+8*s23*s34*d*s14^2*s24^2+6*s23^2*s12^2*s34*s14+4*s23^2*d*s14^3*s13-6*s23*d*s14*s24^2*s13^2+12*s23*s12^2*s34*s14*s13-16*s23^3*s34*d*s14*s13-2*s23*s12*d*s14*s13^3+4*s12*s34^3*s14*s24-9*s12^2*d*s14*s24*s13^2-s12^2*d*s14*s13^3-18*s23*s12*s34*d*s14*s24^2-20*s23*s34*s14^2*s24^2-12*s23^2*s24*s13^3-12*s23*s12*d*s14*s24*s13^2-18*s12^2*s34*d*s14*s24^2+7*s23^2*s34^3*d*s14-36*s23^3*s12*s14^2-40*s23*s12*s34*s14^2*s24+6*s34*s14*s24^2*s13^2+4*s23^2*s12*d*s13^3-7*s23^2*s12^2*s34*d*s14-16*s23^3*d*s14^2*s13-36*s23^2*s34*s14*s24*s13+2*s14*s24^2*s13^3+12*s23^3*s14*s24*s13+12*s23^2*s34^2*d*s13^2+20*s23^2*s34*d*s14^2*s13-6*s23^2*s34^2*s24^2+48*s23^3*s14^3-84*s23^2*s12*s14^2*s24+2*s23^2*d*s24^2*s13^2-3*s12^3*s34^2*d*s14+s23^2*s34^2*d*s14*s24-10*s12^3*d*s14*s24^2+8*s23*s12^3*d*s14^2+36*s12*s34*s14*s24^2*s13-12*s23*s12^2*s34*d*s14*s13+24*s23*s12^3*s14*s24-6*s23*s34^2*d*s14*s24*s13+6*s23*s34^2*s14*s24^2+4*s23^2*s34*d*s24^2*s13+12*s23^2*s12*s34*d*s13^2+12*s23*s12*s34^2*s14*s24+18*s12^2*s34^2*s14*s24+12*s34*s14*s24^3*s13+8*s23*s12^2*d*s14^2*s13+4*s23^2*s34*d*s14^3+12*s23*s12^3*s34*s14-18*s23^2*s14*s24*s13^2+10*s23^2*d*s14^2*s13^2+24*s12*s34*s14*s24^3-6*s23*d*s14*s24^3*s13-18*s23^2*s12*s34^2*s14+36*s23*s12^2*s14*s24*s13-48*s23*s12*s14^2*s24^2+s23^2*d*s14*s24*s13^2-18*s23^2*s14^2*s13^2-36*s23^2*s12*s34^2*s13-6*s12^3*s34*d*s14*s13+8*s23^2*s34*d*s13^3-8*s23*s12^3*d*s14*s24-7*s23^2*s34*d*s14*s24^2-s23^2*s12^3*d*s14-6*s12*s34*d*s14*s24*s13^2-8*s23^3*s34^2*d*s14+4*s23^2*s12*s34*d*s14^2+24*s12^3*s14*s24*s13-18*s23^2*s12*s14*s13^2+2*s34^3*s14*s24^2+12*s23^2*s12*s34*s14*s24-9*s12*d*s14*s24^2*s13^2-3*s12^4*d*s14*s13-18*s12^2*s34*d*s14*s24*s13+12*s23*s34*s14*s24^3-4*s23*s12*s34^2*s14^2-3*d*s14*s24^3*s13^2+12*s23*s12*s14*s24*s13^2+18*s12^2*s14*s24*s13^2+12*s23^3*s12*s14*s13-6*s23^2*s24^2*s13^2+10*s23^2*s34^2*d*s14^2+6*s14*s24^4*s13-6*s23*s34*d*s14*s24^3-16*s23*s12^3*s14^2-3*s34^2*d*s14*s24^3-12*s23*s12^2*d*s14*s24^2-18*s23^2*s34^2*s14*s24-6*s23*s12^2*s34^2*d*s14+18*s12*s34^2*s14*s24^2-8*s23*s34*s14^2*s24*s13-2*s23*d*s14*s24*s13^3-24*s23*s12*s34*d*s14*s24*s13-12*s23^2*s12*s24*s13^2+4*s23^2*s12^2*s34*d*s13+8*s23^2*s34^3*d*s13+12*s12^3*s34*s14*s13+4*s23^2*d*s24*s13^3-3*s34^2*d*s14*s24^2*s13-12*s23^2*s12*d*s14^3-2*s23*d*s14*s24^4-12*s23*s34*d*s14*s24^2*s13+36*s23^2*s12*d*s14^2*s24-12*s12*d*s14*s24^3*s13+6*s12^4*s14*s13+2*s23^3*s14*s24^2-12*s23^2*s12^2*s34*s13-4*s23^2*s14^3*s13+36*s23*s12^2*s14*s24^2-7*s23^2*s12^2*d*s14*s13-s12^2*s34^3*d*s14-12*s23*s12*s34^2*d*s14*s24-12*s23^2*s34*s14^2*s24+60*s23^3*s34*s14^2-2*s23*s12*s34^3*d*s14+6*s34^2*s14*s24^2*s13+12*s23*s34*s14*s24^2*s13-9*s12^2*s34^2*d*s14*s24+7*s23^2*d*s14*s13^3+36*s12^2*s34*s14*s24*s13-20*s23*s14^2*s24^2*s13+2*s12^2*s14*s13^3+4*s23^2*s12*s34^2*d*s24-16*s23^4*s14^2+24*s23*s12*s34*s14*s24*s13-20*s23*s12^2*s34*s14^2+8*s23*d*s14^2*s24^3+2*s23^2*s12^2*d*s13^2+6*s12^2*s34*s14*s13^2+24*s12*s14*s24^3*s13-s23^2*d*s14*s24^3-6*s23^2*s12^2*s34^2-3*s12^2*s34^2*d*s14*s13-12*s23^2*s14^2*s24*s13+28*s23^2*s12*s14^3+6*s12^4*s34*s14-6*s23*s12*s34^2*d*s14*s13-6*s12*s34^2*d*s14*s24*s13-36*s23^2*s34*s14^2*s13-18*s23*s12*d*s14*s24^2*s13+36*s12^2*s34*s14*s24^2+12*s23^2*s12*s34^2*d*s13+20*s12^2*s14*s24^3+36*s23*s12*s34*s14*s24^2+2*s23^3*s12^2*s14-6*s34*d*s14*s24^3*s13-18*s23^2*s34^3*s14+16*s23*s12*s34*d*s14^2*s24-18*s12^2*d*s14*s24^2*s13+2*s23^2*s34^4*d+6*s12^3*s34^2*s14+26*s23^3*s14*s13^2+10*s12^4*s14*s24-12*s23^2*s34*s24^2*s13+4*s23^2*s12*d*s14^2*s13+12*s23^2*s12*s14*s24*s13-24*s23^2*s34*s13^3+4*s23^2*s34^3*d*s24+24*s12^3*s34*s14*s24+4*s23^2*s12*s34^3*d-s34^3*d*s14*s24^2-3*s23^2*s12^2*d*s14*s24+6*s23*s12^2*s14*s13^2+28*s23^2*s14^3*s24+4*s23^3*s12*s14*s24+16*s23^3*s12*d*s14^2-d*s14*s24^2*s13^3+16*s23*s12*d*s14^2*s24*s13-3*s34*d*s14*s24^2*s13^2-18*s23^2*s34^2*s14^2+24*s23*s12*d*s14^2*s24^2-4*s23*s34^2*s14^2*s24+12*s23^2*s34*d*s24*s13^2-s12^5*d*s14-2*s12*s34^3*d*s14*s24+18*s12*s14*s24^2*s13^2+8*s23*d*s14^2*s24^2*s13-24*s23^2*s12*s34*s24*s13-12*s23^2*s12*s34*s14^2-2*s23*s12^4*d*s14-54*s23^2*s34^2*s14*s13-6*s23*s12^2*d*s14*s13^2+6*s23^2*s14*s24^2*s13-8*s23^3*s12*d*s14*s13+21*s23^2*s34*d*s14*s13^2-12*s12^3*d*s14*s24*s13-6*s23*s12^3*d*s14*s13-6*s23^2*s12^2*s13^2+12*s23^3*s12*s34*s14-12*s12^3*s34*d*s14*s24-12*s23^2*s12*s34^2*s24-4*s23*s12*s14^2*s13^2-9*s12*s34^2*d*s14*s24^2-8*s23^3*d*s14*s13^2-42*s23^2*s14^2*s24^2+12*s12*s34*s14*s24*s13^2-d*s14*s24^5-5*s12^4*d*s14*s24+10*s12*s14*s24^4-16*s23^3*d*s14^3-36*s23^2*s34^2*s24*s13-36*s23^2*s12*s34*s14*s13-3*s34*d*s14*s24^4+18*s23^2*s12*s14*s24^2)*(s23+s12+s34+s14+s24+s13)^(-1)*s14^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (-1/2*(4*s23*s24^3*s13^2+12*s23*s12*s14*s24^2*s13-18*s12^2*s34^2*s14*s13+144*s23*s12*s34^2*s14*s13+20*s23*s34^4*s13+36*s12*s34^2*d*s24^2*s13+30*s23*s14*s24^2*s13^2-12*s34^5*s13+132*s23*s34^2*s14*s13^2-6*s12*s34^4*s14+12*s23*s12*s13^4-80*s12*s34^2*s13^3-24*s12*s34^3*s24^2-6*s34^4*s14*s24-3*s23*s12^2*d*s13^3-2*s23^2*d*s14^2*s24^2-24*s12*s34*s14*s13^3-8*s24^3*s13^3+4*s12^3*d*s24*s13^2+20*s12*s34*d*s13^4-8*s12*s34^5-2*s23^2*s12^2*s14^2-2*s34^2*s14*s24^3+72*s23*s34^2*s24*s13^2-36*s12*s34^2*s14*s24*s13-2*s14*s24^3*s13^2+12*s23*s12^2*s13^3-40*s12*s34*s13^4+12*s23^2*s34*d*s14^2*s24+8*s23*s34*s24^3*s13+6*s12*s34*d*s14*s24^2*s13-4*s23^3*d*s14^2*s24+4*s23^2*d*s14*s24^2*s13+72*s23*s12*s34^2*s24*s13-72*s12^2*s34^2*s24*s13+s34^2*d*s24^4-3*s23*s12^2*s34^2*d*s24+12*s34^2*d*s24^3*s13+4*s23*s12^3*s14*s13+s12^3*d*s14*s13^2-2*s23*s34*d*s24^3*s13+12*s23^2*s34^2*d*s14*s13+d*s24^4*s13^2-36*s23^2*s12*s14^2*s13-96*s12*s34*s24*s13^3+12*s23*s12*s34^2*s24^2+12*s23*s12^2*s34*s14*s24-s23*s34^5*d-12*s34^4*s24^2-36*s34^2*s14*s24*s13^2+12*s23*s12^2*s34^3-4*s23^2*d*s14^3*s24+48*s12*s34*d*s24*s13^3-12*s12*s14*s24*s13^3+144*s23*s34*s14*s24*s13^2-48*s12^2*s34*s13^3-8*s23^2*s34*s14*s24^2-24*s23*s34*d*s14^2*s13^2-30*s34^2*s13^4+16*s23^2*s34*d*s14*s24*s13-2*s12^3*s14*s13^2+20*s12*s34^4*d*s13-28*s23^2*s34*s14^3+12*s34*d*s14*s24*s13^3+12*s12^3*s34*d*s13^2+12*s12*d*s24*s13^4+40*s23*s12*s34*s14^2*s13+8*s23*s12*s14^2*s24*s13+20*s34^3*d*s13^3+30*s23*s12^2*s34^2*s14+9*s12^2*s34*d*s14*s13^2+24*s23*s12*s24*s13^3-60*s23*s12*s34*d*s14*s13^2+4*s23*s14*s24^3*s13-24*s34*s24^3*s13^2-24*s12^3*s34^2*s13-10*s23*s34^2*d*s14*s24^2+48*s23*s34*s14^2*s13^2+20*s23*s14^2*s24*s13^2+s12^4*d*s13^2-24*s12*s34^3*s14*s13+20*s34^4*d*s24*s13+24*s34^3*d*s24^2*s13-60*s23*s34*d*s14*s24*s13^2-8*s12^3*s24*s13^2+36*s34^2*d*s24^2*s13^2+4*s23^3*s14^2*s24-9*s23*s34*d*s24^2*s13^2+12*s12*d*s24^2*s13^3-20*s23*s34^3*d*s14*s24+12*s12*s34*d*s14*s13^3-8*s23^2*s12^2*s14*s13+18*s34^2*d*s14*s24*s13^2+8*s23^2*s12*s34^2*d*s14+24*s23*s12*s34^3*s24-10*s23*s34^4*d*s14-4*s12^4*s34*s13-6*s23*s12*s34^3*d*s24+6*s12^2*s34^4*d-4*s23^3*s34*d*s14^2-96*s12*s34^3*s24*s13+5*s34^4*d*s14*s13+12*s23*s12*s34^4-3*s23*s12*d*s13^4+16*s23^2*s12*s34*d*s14*s13-18*s23*s12*s34*d*s24*s13^2+12*s12^2*s34^3*d*s24+36*s23*s34*s24^2*s13^2+s34^5*d*s14-3*s23*s34^3*d*s24^2+40*s12*s34^2*d*s13^3-24*s12^2*s34*s24^2*s13+36*s12^2*s34*d*s24*s13^2-6*s12^2*s34^3*s14+48*s23*s12*s14*s13^3+12*s23^2*d*s14^2*s24*s13-24*s34^3*s14*s24*s13+24*s23*s12*s34*s24^2*s13+3*s12*d*s14*s13^4-8*s12*s13^5+24*s23*s12^2*s34*s24*s13+48*s23*s12*s34^3*s13-40*s34*s24*s13^4-2*s23^2*s12^2*d*s14^2+36*s23*s12^2*s34*s13^2+20*s23^3*s14^2*s13+4*s12*d*s24^3*s13^2+6*s12*d*s14*s24*s13^3-40*s23*s34^3*d*s14*s13+8*s23^2*s12*d*s14*s13^2+4*s23*s12^2*s14^2*s13+4*s12*s34^2*d*s24^3-10*s23*s34^3*d*s13^2-20*s23^2*s14*s13^3+8*s23^2*s12*d*s14*s24*s13+12*s12^2*d*s24*s13^3+8*s23^2*s12*s34*d*s14*s24-2*s14*s13^5+24*s12^2*s34^3*d*s13-18*s23*s34^2*d*s24*s13^2-12*s23*s12*s34^3*d*s13+3*s34^4*d*s14*s24-6*s23*s12*d*s24*s13^3+12*s12*s34^4*d*s24-60*s23^2*s34*s14*s13^2-12*s23*s34^3*d*s24*s13-2*s34^2*s24^4-8*s23^2*s12^2*s34*s14+12*s23^2*d*s14^3*s13-10*s23*d*s14*s24^2*s13^2+4*s23*s12^3*s34^2-30*s34^4*s13^2+60*s23*s12^2*s34*s14*s13-10*s34*s14*s13^4-20*s23*s12*d*s14*s13^3-12*s12*s34^3*s14*s24+3*s12^2*d*s14*s24*s13^2+3*s12^2*d*s14*s13^3-60*s23*s34^2*d*s14*s13^2+4*s23*s34*s14^2*s24^2-8*s12^3*s34^2*s24-48*s34*s24^2*s13^3-8*s24*s13^5+4*s34^3*d*s24^3-20*s23*s12*d*s14*s24*s13^2-8*s12^3*s34^3+4*s23^2*s34^3*d*s14+4*s23^3*s12*s14^2+8*s23*s12*s34*s14^2*s24-18*s34*s14*s24^2*s13^2-s23*s12^3*s34^2*d+16*s23*s14^2*s13^3+15*s34^2*d*s13^4-9*s23*s12^2*s34^2*d*s13-12*s12^2*s24^2*s13^2+s34^6*d+4*s23^2*s12^2*s34*d*s14-4*s23^3*d*s14^2*s13-56*s23^2*s34*s14*s24*s13-6*s14*s24^2*s13^3+4*s23*s12^3*s13^2+44*s23^2*s34*d*s14^2*s13+4*s12*d*s13^5-20*s34^2*s14*s13^3+24*s12^2*s34*d*s13^3-72*s12*s34^2*s24^2*s13+72*s23*s12*s34^2*s13^2+24*s23^3*s14^3-4*s23^2*s12*s14^2*s24-40*s34^4*s24*s13-12*s23*s12*s34*d*s13^3+s12^3*s34^2*d*s14+8*s23^2*s34^2*d*s14*s24+12*s23*s24*s13^4-12*s12*s34*s14*s24^2*s13-20*s23*s12^2*s34*d*s14*s13+6*d*s24^2*s13^4-8*s12^3*s13^3-8*s34^5*s24-60*s23*s34^2*d*s14*s24*s13-80*s34^2*s24*s13^3+30*s23*s34^2*s14*s24^2+16*s23*s34^3*s14^2+12*s23*s34^4*s24+60*s23*s12*s34^2*s14*s24-6*s12^2*s34^2*s14*s24-8*s23*s12*s34^2*d*s14^2+12*s23*s24^2*s13^3+4*s12^3*s34^3*d-4*s34*s14*s24^3*s13+12*s23^2*s34*d*s14^3+2*s34*d*s24^4*s13+22*s23*s14*s13^4-6*s23*s12^2*s34*d*s24*s13+4*s23*s12^3*s34*s14-28*s23^2*s14*s24*s13^2+22*s23^2*d*s14^2*s13^2-10*s34^4*s14*s13-28*s23^2*s12*s34^2*s14-6*s14*s24*s13^4-48*s34^3*s24^2*s13-80*s12*s34^3*s13^2-8*s12*s34^2*s24^3-8*s23*d*s14^2*s24*s13^2+12*s23*s12^2*s14*s24*s13+18*s12*s34^2*d*s14*s13^2-24*s12*s24^2*s13^3+8*s23^2*d*s14*s24*s13^2-58*s23^2*s14^2*s13^2-40*s34^3*s13^3+6*s34^4*d*s24^2-24*s12*s34^4*s24+2*s12^3*s34*d*s14*s13-3*s23*s12*d*s24^2*s13^2+d*s13^6+36*s23*s34^2*s24^2*s13+24*s34*d*s24^2*s13^3+8*s23*s12^3*s34*s13+4*s23^2*s34*d*s14*s24^2+18*s12*s34*d*s14*s24*s13^2+6*s12^2*d*s24^2*s13^2+48*s12*s34^3*d*s24*s13+36*s12^2*s34^2*d*s13^2+12*s23^2*s12*s34*d*s14^2-2*s12^4*s34^2+40*s23*s34^3*s13^2+4*s23*s34^2*s24^3-28*s23^2*s12*s14*s13^2+5*s34*d*s14*s13^4-6*s34^3*s14*s24^2-16*s23^2*s12*s34*s14*s24-18*s23*s12*s34^2*d*s13^2-6*s12*s14*s13^4-3*s23*s12^2*s34^3*d+3*s12*d*s14*s24^2*s13^2+d*s14*s13^5-2*s34^6-16*s23*s34*d*s14^2*s24*s13+6*s12^2*s34*d*s14*s24*s13-s23*d*s13^5+4*s23*s34*s14*s24^3-s23*s12^3*d*s13^2+48*s23*s34^2*s14^2*s13-24*s34^2*s24^3*s13-8*s23*s12*d*s14^2*s13^2-24*s34*s14*s24*s13^3+20*s23*s12*s34^2*s14^2+d*s14*s24^3*s13^2+60*s23*s12*s14*s24*s13^2+8*s12^3*s34*d*s24*s13-6*s12^2*s14*s24*s13^2+12*s12^3*s34^2*d*s13+72*s12*s34^2*d*s24*s13^2+22*s23^2*s34^2*d*s14^2+4*d*s24*s13^5-24*s12*s24*s13^4+s34^2*d*s14*s24^3-28*s23^2*s34^2*s14*s24-10*s23*s12^2*s34^2*d*s14-6*s12*s34^2*s14*s24^2+40*s23*s34*s14^2*s24*s13-12*s12^2*s34^2*s24^2-20*s23*d*s14*s24*s13^3+12*s12*s34^3*d*s14*s13-40*s23*s12*s34*d*s14*s24*s13+20*s34*d*s24*s13^4+12*s34^3*d*s14*s24*s13+12*s23*s12^2*s34^2*s24-4*s12^3*s34*s14*s13+9*s34^2*d*s14*s24^2*s13-4*s23^2*s12*d*s14^3+48*s23*s12*s34*s13^3-20*s23*s34*d*s14*s24^2*s13-4*s23^2*s12*d*s14^2*s24-4*s34*s24^4*s13+40*s12*s34^3*d*s13^2-s23*s34^2*d*s24^3+12*s12^2*s34*d*s24^2*s13-s23*d*s24^3*s13^2-72*s12^2*s34*s24*s13^2-28*s23^2*s14^3*s13-24*s12^2*s24*s13^3+72*s23*s12*s34*s24*s13^2+4*s23^2*s12^2*d*s14*s13-12*s24^2*s13^4+10*s34^3*d*s14*s13^2-6*s23*s12*s34*d*s24^2*s13+3*s12^2*s34^3*d*s14-20*s23*s12*s34^2*d*s14*s24-36*s23^2*s34*s14^2*s24+20*s23^3*s34*s14^2-20*s23*s12*s34^3*d*s14+48*s23*s34^3*s14*s24-18*s34^2*s14*s24^2*s13-24*s12^2*s34^3*s24+60*s23*s34*s14*s24^2*s13+3*s12^2*s34^2*d*s14*s24+4*s34^5*d*s24+4*s23^2*d*s14*s13^3-16*s12^3*s34*s24*s13-8*s23*s34^3*d*s14^2-24*s12^3*s34*s13^2-8*s23*s34^2*d*s14^2*s24-3*s23*s12*s34^4*d-16*s23*s12*s34*d*s14^2*s13-12*s12^2*s34*s14*s24*s13+40*s34^3*d*s24*s13^2-72*s34^2*s24^2*s13^2-2*s12^4*s13^2+4*s23*s14^2*s24^2*s13+6*s12^2*d*s13^4+48*s23*s12*s34^3*s14+144*s23*s12*s34*s14*s13^2-3*s23*s34^4*d*s24-6*s12^2*s14*s13^3+2*s12^4*s34*d*s13-2*s13^6+6*s34*d*s13^5+120*s23*s12*s34*s14*s24*s13+4*s23*s12^2*s34*s14^2-18*s12^2*s34*s14*s13^2-48*s12^2*s34^3*s13-2*s23*s12^3*s34*d*s13+8*s12*s34*d*s24^3*s13+9*s12^2*s34^2*d*s14*s13+6*s34^5*d*s13+88*s23*s34^3*s14*s13+4*s23*s13^5-3*s23*d*s24*s13^4-36*s23^2*s14^2*s24*s13+4*s23^2*s12*s14^3-60*s23*s12*s34^2*d*s14*s13+18*s12*s34^2*d*s14*s24*s13-116*s23^2*s34*s14^2*s13-8*s23*d*s14^2*s13^3-12*s12^2*s13^4+4*d*s24^3*s13^3+144*s23*s34^2*s14*s24*s13-5*s23*s34^4*d*s13+12*s23*s12*s34*s14*s24^2+12*s23*s12^2*s24*s13^2+2*s34*d*s14*s24^3*s13-20*s23^2*s34^3*s14-24*s23*s34^2*d*s14^2*s13+48*s23*s14*s24*s13^3-18*s23*s12*s34^2*d*s24*s13-2*s12^3*s34^2*s14-10*s23*s34^2*d*s13^3+12*s12*s34^3*d*s24^2-10*s23*d*s14*s13^4-12*s34*s13^5+12*s23^2*s12*d*s14^2*s13+48*s23*s34^3*s24*s13-16*s23^2*s12*s14*s24*s13-72*s12*s34*s24^2*s13^2+4*s12*s34^5*d+36*s23*s12^2*s34^2*s13+36*s12^2*s34^2*d*s24*s13-9*s23*s34^2*d*s24^2*s13+3*s12*s34^4*d*s14+3*s34^3*d*s14*s24^2+30*s23*s12^2*s14*s13^2-9*s23*s12^2*s34*d*s13^2+s12^4*s34^2*d-3*s23*d*s24^2*s13^3+4*s23^2*s14^3*s24-2*s24^4*s13^2+4*s12^3*s34^2*d*s24+12*s23*s12*s24^2*s13^2-5*s23*s34*d*s13^4-4*s23^3*s12*d*s14^2+3*d*s14*s24^2*s13^3+9*s34*d*s14*s24^2*s13^2-58*s23^2*s34^2*s14^2+20*s23*s34^2*s14^2*s24+20*s23*s34*s13^4+88*s23*s34*s14*s13^3+6*s12*s34^3*d*s14*s24-72*s12^2*s34^2*s13^2-6*s12*s14*s24^2*s13^2+36*s12*s34*d*s24^2*s13^2-80*s34^3*s24*s13^2-36*s12*s34^2*s14*s13^2-36*s23^2*s12*s34*s14^2+10*s34^2*d*s14*s13^3-60*s23^2*s34^2*s14*s13-10*s23*s12^2*d*s14*s13^2-8*s23^2*s14*s24^2*s13-40*s23*s34*d*s14*s13^3+12*s23^2*s34*d*s14*s13^2+48*s23*s34*s24*s13^3+4*s12^3*d*s13^3+12*s34*d*s24^3*s13^2+15*s34^4*d*s13^2-8*s34^3*s24^3-40*s12*s34^4*s13+4*s23*s34^5-8*s12*s24^3*s13^2+20*s23*s12*s14^2*s13^2+3*s12*s34^2*d*s14*s24^2-2*s23^2*s14^2*s24^2-36*s12*s34*s14*s24*s13^2+3*d*s14*s24*s13^4-12*s23*s34*d*s24*s13^3-12*s12^2*s34^4+40*s34^2*d*s24*s13^3-8*s23^3*d*s14^3-3*s23*s12^2*d*s24*s13^2-2*s34^5*s14-144*s12*s34^2*s24*s13^2-20*s34^3*s14*s13^2-3*s23*s12*s34^2*d*s24^2-56*s23^2*s12*s34*s14*s13+22*s23*s34^4*s14+6*s12^2*s34^2*d*s24^2-16*s12*s34*s24^3*s13+40*s23*s34^2*s13^3+12*s23*s34^3*s24^2)*(s23+s12+s34+s14+s24+s13)^(-1)*s14^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)*(3*s23^2*s34^4-s23^2*d*s14^2*s24^2+6*s23^2*s12*s34^3-6*s23^2*s34^2*d*s24*s13+2*s23^2*s12^2*s14^2+2*s23^2*s34*d*s14^2*s24-s23^2*s34^2*d*s24^2-4*s23^3*d*s14^2*s24+2*s23^2*d*s14*s24^2*s13+18*s23^2*s12*s34*s13^2-6*s23^2*s34^2*d*s14*s13+18*s23^2*s34^2*s13^2+4*s23^3*s12*s34*d*s14-s23^2*s34*s14*s24^2-4*s23^4*d*s14^2-s23^2*s12^3*s14-13*s23^3*s34^2*s14+4*s23^3*d*s14*s24*s13-4*s23^2*s12*s34*d*s24*s13+4*s23^3*s34*d*s14*s24+8*s23^3*s14^2*s24+3*s23^2*s13^4+12*s23^2*s34^3*s13-s23^2*s12^2*s14*s13+6*s23^2*s12*s13^3+4*s23^3*s34*d*s14^2-6*s23^3*s34*s14*s24-s23^2*s14*s24^3+2*s23^2*d*s14^2*s24*s13+6*s23^2*s34^3*s24-3*s23^2*s12^2*s14*s24-s23^2*s12^2*d*s14^2+18*s23^2*s34*s24*s13^2-16*s23^3*s14^2*s13+5*s23^2*s14*s13^3+4*s23^2*s12*d*s14*s24*s13-26*s23^3*s34*s14*s13+4*s23^2*s12*s34*d*s14*s24-s23^2*d*s13^4-s23^2*s12^2*s34^2*d-2*s23^2*s12*d*s24*s13^2+15*s23^2*s34*s14*s13^2-s23^2*s12^2*s34*s14+8*s23^3*s34*d*s14*s13+6*s23^2*s24*s13^3-2*s23^2*s34^3*d*s14+8*s23^3*s12*s14^2-2*s23^2*s12*d*s13^3+2*s23^2*s12^2*s34*d*s14+4*s23^3*d*s14^2*s13+10*s23^2*s34*s14*s24*s13-6*s23^3*s14*s24*s13-6*s23^2*s34^2*d*s13^2-2*s23^2*s34*d*s14^2*s13+3*s23^2*s34^2*s24^2-4*s23^3*s14^3+4*s23^2*s12*s14^2*s24-s23^2*d*s24^2*s13^2-2*s23^2*s34*d*s24^2*s13-6*s23^2*s12*s34*d*s13^2+5*s23^2*s14*s24*s13^2-s23^2*d*s14^2*s13^2+5*s23^2*s12*s34^2*s14+2*s23^2*s14^2*s13^2+18*s23^2*s12*s34^2*s13-4*s23^2*s34*d*s13^3+2*s23^2*s34*d*s14*s24^2+4*s23^3*s34^2*d*s14+2*s23^2*s12*s34*d*s14^2+5*s23^2*s12*s14*s13^2-2*s23^2*s12*s34*s14*s24-6*s23^3*s12*s14*s13+3*s23^2*s24^2*s13^2-s23^2*s34^2*d*s14^2+5*s23^2*s34^2*s14*s24+6*s23^2*s12*s24*s13^2-2*s23^2*s12^2*s34*d*s13-4*s23^2*s34^3*d*s13-2*s23^2*d*s24*s13^3-2*s23^2*s12*d*s14^2*s24-s23^3*s14*s24^2+6*s23^2*s12^2*s34*s13+2*s23^2*s12^2*d*s14*s13-16*s23^3*s34*s14^2-2*s23^2*d*s14*s13^3-2*s23^2*s12*s34^2*d*s24+8*s23^4*s14^2-s23^2*s12^2*d*s13^2+3*s23^2*s12^2*s34^2+4*s23^2*s34*s14^2*s13-6*s23^2*s12*s34^2*d*s13-s23^3*s12^2*s14+5*s23^2*s34^3*s14-s23^2*s34^4*d-13*s23^3*s14*s13^2+6*s23^2*s34*s24^2*s13+2*s23^2*s12*d*s14^2*s13-2*s23^2*s12*s14*s24*s13+12*s23^2*s34*s13^3-2*s23^2*s34^3*d*s24-2*s23^2*s12*s34^3*d-2*s23^3*s12*s14*s24-4*s23^3*s12*d*s14^2+2*s23^2*s34^2*s14^2-6*s23^2*s34*d*s24*s13^2+12*s23^2*s12*s34*s24*s13+15*s23^2*s34^2*s14*s13-s23^2*s14*s24^2*s13+4*s23^3*s12*d*s14*s13-6*s23^2*s34*d*s14*s13^2+3*s23^2*s12^2*s13^2-6*s23^3*s12*s34*s14+6*s23^2*s12*s34^2*s24+4*s23^3*d*s14*s13^2+2*s23^2*s14^2*s24^2+18*s23^2*s34^2*s24*s13+10*s23^2*s12*s34*s14*s13-3*s23^2*s12*s14*s24^2)*s14^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)),

INT["pentagon1x123",3,21,4,2,{1,-1,2,-1,1}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-1/2*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)*(2*s23*s34^2*d*s14^2+3*s12^2*d*s14*s24^2+s23*s12*d*s14*s24^2-14*s23*s34^2*s14*s24+s23*s34^4*d-d*s14*s24*s13^3+5*s23*s12*s34^2*d*s14-2*s34*d*s14*s24*s13^2+16*s23^2*s34*s14^2+6*s12^2*s34^3+16*s23*s12*s24*s13^2-s12^2*s34^2*d*s14-2*s12*s14*s24^3-6*s23*s34^3*s14-4*s34^3*d*s13^2-8*s23^2*s14*s24*s13+22*s12*s34^3*s13+2*s23*s12^2*s34^2+54*s12^2*s34*s13^2+10*s12*s14*s24*s13^2-21*s12*s34*d*s24*s13^2-4*s23^2*d*s14^2*s13-42*s23*s12*s14*s13^2-15*s12*s34^2*d*s13^2+18*s12^2*s24^2*s13+4*s23*s12^3*s13+10*s23*s34*s13^3-5*s12*s34*d*s14*s13^2+8*s23*s12*s34^2*s13+2*s12*s34^4-2*s23*s34*d*s13^3-6*s12*d*s24^2*s13^2+3*s12^3*d*s14*s24+3*s23*s12^3*d*s14-12*s23^2*s34*s14*s13-6*s12^3*s14*s24+54*s12*s34^2*s13^2+2*s23*s12^3*s34+4*s34^4*s13+10*s24^3*s13^2+5*s23*d*s14*s24^2*s13+22*s12*s34*s14*s13^2-3*s23*s12^2*d*s13^2-4*s23*s34*s14^2*s24+9*s23*s34^2*d*s14*s13-s12*s34^3*d*s14+5*s12^2*d*s14*s24*s13+6*s23*s12*s34*d*s14*s24-3*s12^3*s34*d*s24+4*s34*s14*s24^2*s13-3*s12^3*s34^2*d+14*s23*s12*d*s14*s24*s13+3*s23*d*s14*s13^3+2*s12^2*s34*d*s14*s24+16*s12*s13^4-4*s23*s34^2*s14^2+2*s23^2*s12^2*d*s14+14*s23*s12^2*s34*s13+90*s12*s34*s24*s13^2+s23*s12*s34*d*s24^2-3*s12^2*s34*d*s24^2+8*s23^2*s14^3+24*s12^2*s13^3+4*s23^2*s12*d*s14*s13-2*s12^4*s14-2*s12^3*s34*s14-s12*d*s24^3*s13-s12^4*s34*d-s23*d*s24*s13^3+2*s23*s34^3*d*s13+5*s23*s34^2*d*s24*s13+12*s23*s12^2*s13^2+s23*s12*s34^3*d+4*s23*s34*d*s24^2*s13-3*s34^2*d*s24^2*s13+14*s12^3*s24*s13+16*s12^3*s13^2+14*s23*s34*d*s14*s24*s13+8*s23^3*s14^2-s34^2*d*s14*s24*s13-15*s12^2*s34*d*s13^2+2*s23*s12^2*s34*s24-5*s23*s12*s34*d*s13^2-6*s12^2*d*s13^3-2*s23*s34*s24^2*s13+4*s14*s24^2*s13^2+14*s24*s13^4+12*s34^2*s14*s13^2-16*s23*s14^2*s13^2-15*s12^2*s34*d*s24*s13+3*s23*s34^3*d*s24-52*s23*s34*s14*s24*s13+5*s23*s12^2*s34*d*s14+18*s24^2*s13^3-2*s12*s34*s14*s24^2+6*s12*s34^2*s24^2+8*s34^2*s14*s24*s13-4*s23^2*s34*d*s14^2-2*s12^3*s14*s13+4*s23*s34*d*s14^2*s13+4*s23^2*s34*s14*s24-s12^2*s34*d*s14*s13-s23*d*s14*s24^3-7*s12^3*s34*d*s13+4*s23*s24^2*s13^2-s12^4*d*s13+42*s34^2*s24*s13^2+4*s14*s13^4-8*s23*s14^2*s24*s13+10*s34*s24^3*s13-20*s23*s34*s14^2*s13+5*s23*s34^2*d*s14*s24+14*s23*s12*s34*d*s14*s13-9*s12^2*d*s24*s13^2-2*s23*s12*d*s24*s13^2-4*s23*s34^2*s24*s13-9*s34*d*s24*s13^3+2*s12^2*s34^2*s14-10*s23*s12*s14*s24^2+42*s12*s24*s13^3-3*s12*s34^2*d*s24^2-16*s23^2*s14*s13^2+s12*d*s14*s24*s13^2+2*s12^3*d*s14*s13+s23*s34*d*s24^3-4*s23*s12*s34^2*s24+s12*s34*d*s14*s24^2-2*s23*s34*s24^3+10*s12*s14*s13^3+6*s12^3*s34^2-8*s23*s12*s34*s14^2-30*s23*s34^2*s14*s13+9*s23*s12*d*s14*s13^2-3*s34*d*s14*s13^3+36*s34*s24^2*s13^2-4*s12*d*s13^4-22*s23*s14*s24^2*s13+6*s12^2*s34*s24^2-4*s23^2*d*s14^2*s24+6*s12*s34^3*s24-4*s23^2*s12^2*s14-3*s12^3*d*s24*s13-s34*d*s24^3*s13-s23*d*s13^4+8*s14*s24*s13^3+16*s23^2*s14^2*s24+10*s12*s24^3*s13-12*s23*s12*s14^2*s13-s12*s34^2*d*s14*s24-s23*s12^3*s34*d-s12*s34*d*s24^3-18*s23*s14*s13^3-s34^4*d*s13+42*s12^2*s24*s13^2-s23*s12^2*d*s24*s13-3*d*s24*s13^4+3*s23*s34^2*d*s24^2+12*s12*s34*s14*s24*s13-4*s23^2*s12*s14*s24-6*s23*s34^3*s24-6*s12^2*s34^2*d*s24+2*s23*s12*s34^2*d*s24+4*s13^5+22*s23*s12*s34*s13^2+54*s12*s34^2*s24*s13+4*s34^3*s14*s13-4*s23^2*s12*d*s14^2+8*s23*s24*s13^3+4*s23^2*s34^2*s14+s34*d*s14*s24^2*s13+6*s12^2*s14*s13^2-2*s23*d*s14^2*s24^2+4*s23*s12*s24^2*s13-3*d*s24^2*s13^3-4*s23*s12*d*s14^2*s24-8*s23^2*s12*s34*s14+2*s12*s34*s24^3+14*s34^3*s24*s13+14*s12*s34^2*s14*s13-2*s12*s14*s24^2*s13+2*s23^2*d*s14*s13^2-9*s12*s34*d*s24^2*s13+36*s12^2*s34^2*s13-6*s34^2*d*s13^3+9*s23*s12^2*d*s14*s13-d*s14*s13^4+s12^4*d*s14-3*s12*s34^3*d*s24-6*s23*s34^2*s24^2+42*s12*s34*s24^2*s13+s12^3*s34*d*s14-6*s34*d*s24^2*s13^2+12*s34*s14*s13^3-4*s34*d*s13^4+2*s24^4*s13+36*s12*s24^2*s13^2-4*s23*s12^2*s34*d*s13+16*s34^3*s13^2-30*s23*s12^2*s14*s13+9*s23*d*s14*s24*s13^2+s23*s34*d*s14*s24^2+s12*d*s14*s24^3-d*s13^5-28*s23*s12*s34*s14*s24+8*s23*s12^2*s24*s13+16*s34*s14*s24*s13^2-4*s12^2*s34*s14*s24-10*s23*s34*s14*s24^2+42*s34*s24*s13^3+6*s12^3*s34*s24-3*s12^2*s34^3*d-3*s34^2*d*s14*s13^2+9*s23*s34*d*s14*s13^2+4*s23*s12^2*s14^2+16*s34*s13^4-2*s12*d*s14*s13^3+3*s23*s34^3*d*s14-3*s23*s12*d*s13^3-2*s23*s12*s34^3+4*s12^4*s13-3*s34^3*d*s24*s13+18*s34^2*s24^2*s13+22*s12^3*s34*s13-42*s23*s34*s14*s13^2+8*s12^2*s34*s14*s13-18*s23*s12^2*s34*s14+d*s14*s24^2*s13^2-60*s23*s12*s34*s14*s13+6*s23*s34^2*s13^2-7*s12*s34^3*d*s13+s23*s34*d*s24*s13^2-9*s12*d*s24*s13^3+4*s23*s13^4-s23*s12^2*s34^2*d-9*s34^2*d*s24*s13^2+12*s23*s12*s34*s24*s13-14*s23*s12^2*s14*s24+24*s34^2*s13^3-2*s23*s12^2*d*s14^2+54*s12^2*s34*s24*s13+s23*d*s24^3*s13-s23*s12^2*s34*d*s24-4*s12^3*d*s13^2+10*s23*s34*s24*s13^2-s34^3*d*s14*s13-s23*s12^3*d*s13-38*s23*s14*s24*s13^2-d*s24^3*s13^2-4*s12^2*s14*s24*s13-15*s12*s34^2*d*s24*s13+2*s23*d*s14^2*s13^2-52*s23*s12*s14*s24*s13+d*s14*s24^3*s13-6*s12^2*s14*s24^2-2*s23*s34^4-18*s23*s12*s34^2*s14+16*s23^2*s12*s14^2+5*s23*s12^2*d*s14*s24-6*s23*s12^3*s14-2*s23^2*s34^2*d*s14-2*s23^2*d*s14*s24^2+12*s12^2*s34^2*s24+2*s12*s34^2*s14*s24+50*s12*s34*s13^3-2*s23*s14*s24^3-13*s12*s34*d*s13^3+2*s12*s34^3*s14+16*s23^2*s14^2*s13-4*s12*s34^2*d*s14*s13+s23*d*s24^2*s13^2+4*s23*s12*s14^2*s24+12*s23*s12*s13^3-3*s12^2*d*s24^2*s13-4*s23^2*s34*d*s14*s24-s12*s34^4*d+s23*s12*d*s24^2*s13-s23*s12*s34^2*d*s13-2*s23*s12*s34*s24^2+2*s12^4*s34-20*s23^2*s12*s14*s13-2*s23*s34^3*s13-12*s12^2*s34^2*d*s13+4*s12*d*s14*s24^2*s13)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (-(3*s23*d*s14*s13^2+s12^2*d*s14*s13+3*s34*s24^2*s13+6*s23*s12*d*s14*s13-3*s12^2*s34*s24-s12*s34^3*d-2*s12^2*d*s24*s13-2*s12*s34^2*d*s24-10*s23^2*s14*s13-2*s23*s12*d*s14^2+9*s12^2*s13^2-2*s23*s34^3+2*s12*d*s14*s24*s13+8*s23^2*s14^2-3*s12*s34^2*s24-4*s12*s34*s14*s24+6*s23*s12*s14^2-2*s23^2*s34*d*s14-s23*s24^2*s13+3*s23*s13^3-4*s12*s14*s24^2+6*s34^2*s24*s13-s23*s34*d*s13^2-s23*s12^2*s34*d+3*s12^3*s13-2*s23*s12*s34*d*s13+4*s23*s34*s13^2-5*s12^2*s34*d*s13+3*s34^2*s14*s13-s23*s12^2*s24-s14*s24^2*s13-10*s23*s14^2*s13+9*s34*s13^3-2*s12^2*s34*d*s24-4*s23*s34*s24^2+12*s12*s34*s24*s13+s23*s34*d*s24^2-s12^3*s24+6*s23*s14^2*s24-3*s34*s24^3+15*s12*s24*s13^2+3*s23*s12^2*s13-4*s34*d*s24*s13^2-s34^2*s14*s24-3*s34*d*s13^3+s12^3*d*s14-s23*s12^2*d*s13+4*s12*s34*s14*s13+9*s12*s34^2*s13-2*s34*d*s14*s13^2-4*s23*s34^2*s14+4*s12*s14*s13^2-s23*s24^3-4*s23^2*d*s14^2+6*s23^2*s14*s24-5*s12*s34^2*d*s13-d*s14*s13^3-16*s23*s12*s14*s13-2*s12*s34*d*s14*s13-3*s12^2*d*s13^2-s12*d*s24^2*s13-3*s12^2*s24^2+2*s23*s12*d*s14*s24+3*s23*s34^2*d*s14+2*s12^2*d*s14*s24-s34^3*d*s13+2*s23*s12*s24*s13-s23*d*s14*s24^2-2*d*s24*s13^3+6*s23^2*s34*s14-2*s12*s14*s24*s13-6*s12*s34*d*s24*s13-s23*d*s13^3+6*s24^2*s13^2+9*s12^2*s34*s13+s23*d*s24^2*s13-2*s12^2*s34*s14-3*s34^2*s24^2+6*s34*s14*s13^2-4*s23*s12*s34*s24-3*s12*d*s13^3+s23*s34^2*d*s13+15*s34*s24*s13^2-16*s23*s14*s24*s13-5*s12^2*s14*s24+2*s23*d*s14^2*s13+s12*d*s14*s24^2-2*s23^2*s12*s14-2*s12^2*s34^2*d+3*s13^4-2*s23^2*d*s14*s24-s12*s34^2*d*s14+3*s14*s13^3-s23*s34^2*s13-2*s34^2*d*s24*s13-3*s12*s24^3-d*s13^4+2*s23*s34*d*s24*s13+3*s23*s12^2*d*s14-s34^3*s24-s12*s34*d*s24^2-12*s23*s14*s13^2-2*s23*s34*s24*s13-s12^3*d*s13+3*s14*s24*s13^2-2*s23*s12*s24^2+6*s23*s34*d*s14*s13-3*s34^2*d*s13^2-4*s23*s12^2*s14-s34^2*d*s14*s13-6*s12*s34*s24^2+8*s24*s13^3-16*s23*s34*s14*s13+d*s14*s24^2*s13+3*s23*s24*s13^2-d*s24^2*s13^2+6*s23*d*s14*s24*s13+18*s12*s34*s13^2+2*s23*s34*d*s14*s24-2*s23*s34*s14^2+2*s23*s12*s34*d*s14+2*s34*s14*s24*s13-s12^3*s34*d-2*s12^3*s14+2*s23*s34*d*s14^2+9*s12*s13^3-s14*s24^3-5*s23*s34^2*s24+6*s23*s12*s13^2-s34*d*s24^2*s13+3*s34^3*s13+4*s23*s14*s24^2-7*s12*s34*d*s13^2+3*s12*s24^2*s13-2*s23*d*s14^2*s24-s12^2*s14*s13+2*s23^2*d*s14*s13-s24^4-2*s23*s12*d*s13^2-2*s23*s12*s34^2-s12*d*s14*s13^2-2*s34*s14*s24^2+9*s34^2*s13^2+6*s12^2*s24*s13-4*s12*d*s24*s13^2+2*s23*s34^2*d*s24+s23*s34^3*d+4*s23*s12*s34*s13+2*s23^2*s12*d*s14)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (-1/2*(8*s23*s12*s34*s14-3*s34^3*d*s24-2*s23*d*s14*s13^2-2*s12^3*s34-2*s12^2*d*s14*s13+2*s34*s24^2*s13-4*s23*s12*d*s14*s13-2*s12^2*s34*s24-s12*s34^3*d+s12^2*d*s24*s13-2*s12*s34^2*d*s24+4*s23*s12*s14*s24+4*s23*s12*d*s14^2-12*s12^2*s13^2-4*s12*d*s14*s24*s13-8*s23^2*s14^2+4*s12*s34^2*s24+8*s12*s34*s14*s24-12*s23*s12*s14^2-s34^4*d-s34*d*s24^3+8*s12*s14*s24^2-2*s12^2*s34^2+4*s34^2*s24*s13-4*s12^3*s13+4*s12^2*s34*d*s13-6*s34^2*s14*s13+2*s14*s24^2*s13+20*s23*s14^2*s13-10*s34*s13^3+s12^2*s34*d*s24-12*s12*s34*s24*s13-12*s23*s14^2*s24+2*s34*s24^3-16*s12*s24*s13^2-s34*d*s24*s13^2+2*s34^2*s14*s24+2*s34*d*s13^3-2*s12^3*d*s14-8*s12*s34*s14*s13-8*s12*s34^2*s13+4*s34*d*s14*s13^2-4*s23*s34^2*s14-8*s12*s14*s13^2+s12*s34^2*d*s13+2*d*s14*s13^3+20*s23*s12*s14*s13+4*s12*s34*d*s14*s13+3*s12^2*d*s13^2-s12*d*s24^2*s13+2*s23*s34^2*d*s14-4*s12^2*d*s14*s24-2*s34^3*d*s13+2*s23*d*s14*s24^2+d*s24*s13^3+4*s12*s14*s24*s13-4*s24^2*s13^2-14*s12^2*s34*s13+4*s12^2*s34*s14+6*s34^2*s24^2-12*s34*s14*s13^2+3*s12*d*s13^3-10*s34*s24*s13^2+8*s23*s14*s24*s13+10*s12^2*s14*s24-d*s24^3*s13-4*s23*d*s14^2*s13-2*s12*d*s14*s24^2+s12^2*s34^2*d-4*s13^4+2*s12*s34^2*d*s14-6*s14*s13^3-5*s34^2*d*s24*s13+d*s13^4-2*s23*s12^2*d*s14+6*s34^3*s24-s12*s34*d*s24^2+16*s23*s14*s13^2+2*s34^4+s12^3*d*s13-6*s14*s24*s13^2+4*s23*s12^2*s14+2*s34^2*d*s14*s13+2*s12*s34*s24^2-8*s24*s13^3+12*s23*s34*s14*s13-2*d*s14*s24^2*s13-d*s24^2*s13^2-22*s12*s34*s13^2-3*s34^2*d*s24^2+4*s23*s34*d*s14*s24+4*s23*s34*s14^2-4*s34*s14*s24*s13+s12^3*s34*d+4*s12^3*s14-4*s23*s34*d*s14^2-4*s23*s34*s14*s24-12*s12*s13^3+2*s14*s24^3-4*s34*d*s24^2*s13+2*s34^3*s13+5*s12*s34*d*s13^2-4*s12*s24^2*s13+4*s23*d*s14^2*s24+2*s12*s34^3+2*s12^2*s14*s13+2*s12*d*s14*s13^2+4*s34*s14*s24^2-6*s34^2*s13^2-8*s12^2*s24*s13+2*s12*d*s24*s13^2)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (-1/2*(8*s23*s12*s34*s14-2*s23*d*s14*s13^2+2*s12^3*s34-4*s34*s24^2*s13+4*s12^2*s34*s24+s12*s34^3*d-5*s12^2*d*s24*s13+s12*s34^2*d*s24+20*s23^2*s14*s13-4*s23*s12*s14*s24-6*s12^2*s13^2+4*s23*s34^3-3*s12^2*d*s24^2-8*s23^2*s14^2-2*s12*s34^2*s24+4*s23^2*s34*d*s14+2*s23*s24^2*s13-6*s23*s13^3-2*s12^2*s34^2-8*s34^2*s24*s13+2*s23*s34*d*s13^2+2*s23*s12^2*s34*d+2*s12^3*s13+4*s23*s12*s34*d*s13-8*s23*s34*s13^2+s12^2*s34*d*s13+2*s23*s12^2*s24-12*s34*s13^3-2*s12^2*s34*d*s24+8*s23*s34*s24^2-12*s12*s34*s24*s13-2*s23*s34*d*s24^2+6*s12^3*s24-10*s12*s24*s13^2-6*s23*s12^2*s13+2*s34*d*s24*s13^2+3*s34*d*s13^3+2*s23*s12^2*d*s13-14*s12*s34^2*s13+4*s23*s34^2*s14+2*s23*s24^3-12*s23^2*s14*s24+4*s12*s34^2*d*s13+12*s23*s12*s14*s13-4*s12*d*s24^2*s13+6*s12^2*s24^2+4*s23*s12*d*s14*s24-2*s23*s34^2*d*s14+s34^3*d*s13-4*s23*s12*s24*s13+2*s23*d*s14*s24^2+d*s24*s13^3-12*s23^2*s34*s14+2*s23*d*s13^3-4*s24^2*s13^2-8*s12^2*s34*s13-2*s23*d*s24^2*s13+8*s23*s12*s34*s24+2*s12*d*s13^3-2*s23*s34^2*d*s13-16*s34*s24*s13^2+8*s23*s14*s24*s13-d*s24^3*s13+4*s23^2*s12*s14+s12^2*s34^2*d-4*s13^4+4*s23^2*d*s14*s24+2*s23*s34^2*s13+s34^2*d*s24*s13+2*s12*s24^3+d*s13^4-4*s23*s34*d*s24*s13+2*s23*s12^2*d*s14-s12*s34*d*s24^2+16*s23*s14*s13^2+4*s23*s34*s24*s13-2*s12^3*d*s13+4*s23*s12*s24^2-4*s23*s34*d*s14*s13+3*s34^2*d*s13^2-4*s23*s12^2*s14+2*s12*s34*s24^2-8*s24*s13^3+20*s23*s34*s14*s13-6*s23*s24*s13^2-d*s24^2*s13^2-22*s12*s34*s13^2-s12^4*d-s12^3*s34*d+4*s23*s34*s14*s24-10*s12*s13^3+10*s23*s34^2*s24-12*s23*s12*s13^2-3*s12^3*d*s24-s34*d*s24^2*s13+2*s12^4-4*s34^3*s13+5*s12*s34*d*s13^2+2*s12*s24^2*s13-2*s12*s34^3-4*s23^2*d*s14*s13+4*s23*s12*d*s13^2+4*s23*s12*s34^2-12*s34^2*s13^2+4*s12^2*s24*s13-s12*d*s24*s13^2-4*s23*s34^2*d*s24-2*s23*s34^3*d-8*s23*s12*s34*s13-4*s23^2*s12*d*s14-s12*d*s24^3)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)),

INT["pentagon1x123",3,21,4,2,{1,-1,1,-1,2}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (1/2*(8*s23*s24^3*s13^2+18*s23*s12*s14*s24^2*s13-4*s23^2*s34^4+18*s23*s12*s34^2*s14*s13+2*s23*s34^4*s13+s23^2*s12*s34*d*s24^2+18*s23*s14*s24^2*s13^2+18*s23*s34^2*s14*s13^2+8*s23*s12*s13^4-2*s23^2*s12*s24^2*s13-6*s23*s12^2*d*s13^3-4*s23^2*d*s14^2*s24^2-8*s23^2*s12*s34^3+5*s23^2*s34^2*d*s24*s13+4*s23*s12^2*d*s14^2*s24-12*s23^2*s12^2*s14^2+8*s23*s12^3*s24*s13-s23*s12^4*d*s13+24*s23*s34^2*s24*s13^2+12*s23*s12^2*s13^3+4*s23^2*s34*d*s14^2*s24+3*s23^2*s34^2*d*s24^2+8*s23*s34*s24^3*s13-8*s23^3*d*s14^2*s24+7*s23^2*d*s14*s24^2*s13+24*s23*s12*s34^2*s24*s13+4*s23^2*s12*s34*s13^2-6*s23*s12^2*s34^2*d*s24+6*s23*s12^3*s14*s13-s23*s34*d*s24^3*s13+11*s23^2*s34^2*d*s14*s13-2*s23*s12^2*s34*d*s14*s24-s23*s12*s34*d*s24^3+s23*s12^2*d*s14*s24*s13-36*s23^2*s12*s14^2*s13-6*s23^2*s34^2*s13^2-s23^2*s12^3*s34*d+2*s23^2*s12^2*s24*s13-4*s23^2*d*s14^3*s24+36*s23*s34*s14*s24*s13^2-12*s23^2*s34*s14*s24^2-4*s23*s34*d*s14^2*s13^2+16*s23^3*s34^2*s14+18*s23^2*s34*d*s14*s24*s13-4*s23^2*s34*s14^3+4*s23*s12*s34*s14^2*s13-4*s23*s12*s14^2*s24*s13+24*s23*s12*s24*s13^3-19*s23*s12*s34*d*s14*s13^2+6*s23*s14*s24^3*s13+8*s23*s34*s14^2*s13^2+4*s23*s14^2*s24*s13^2-4*s23^3*s34*d*s14*s24+s23*s12*d*s14*s24^3+s23^2*s12*d*s14*s24^2-10*s23*s34*d*s14*s24*s13^2+12*s23^3*s14^2*s24-6*s23*s34*d*s24^2*s13^2+2*s23^2*s13^4-10*s23^2*s34^3*s13-4*s23^2*s12^2*s14*s13+5*s23^2*s12*s34^2*d*s14+6*s23^2*s12*s13^3-3*s23*s12*s34^3*d*s24-8*s23^3*s34*d*s14^2-4*s23*s12*d*s13^4+10*s23^2*s12*s34*d*s14*s13+20*s23^3*s34*s14*s24-21*s23*s12*s34*d*s24*s13^2+24*s23*s34*s24^2*s13^2-s23*s12^3*s34*d*s14+18*s23*s12*s14*s13^3+12*s23^2*d*s14^2*s24*s13+24*s23*s12*s34*s24^2*s13-8*s23*s12^2*s14^2*s24+24*s23*s12^2*s34*s24*s13-12*s23^2*s34^3*s24+8*s23*s12*s34^3*s13+s23^2*d*s24^3*s13+4*s23^2*s12^2*d*s14^2+24*s23*s12^2*s34*s13^2-8*s23^2*s34*s24*s13^2-4*s23^3*s14^2*s13-3*s23*s34^3*d*s14*s13+5*s23^2*s12*d*s14*s13^2-4*s23*s12^2*s14^2*s13-4*s23*s34^3*d*s13^2-4*s23^2*s14*s13^3+14*s23^2*s12*d*s14*s24*s13+12*s23^3*s34*s14*s13+6*s23^2*s12*s34*d*s14*s24-s23^2*d*s13^4-9*s23*s34^2*d*s24*s13^2-7*s23*s12*s34^3*d*s13-s23^2*s12^2*s34^2*d-9*s23*s12*d*s24*s13^3-2*s23^2*s12*d*s24*s13^2-20*s23^2*s34*s14*s13^2-3*s23*s34^3*d*s24*s13+4*s23^2*d*s14^3*s13-s23*d*s14*s24^2*s13^2+18*s23*s12^2*s34*s14*s13-8*s23*s12*d*s14*s13^3-s23*s12*s34*d*s14*s24^2-9*s23*s34^2*d*s14*s13^2+2*s23^2*s24*s13^3-7*s23*s12*d*s14*s24*s13^2+2*s23^3*s12^2*d*s14+5*s23^2*s34^3*d*s14-12*s23^3*s12*s14^2-4*s23*s12*s34*s14^2*s24+12*s23*s12^2*s24^2*s13-3*s23^2*s12*d*s13^3-3*s23*s12^3*s34^2*d-8*s23^2*s12*s34*s24^2+4*s23*s14^2*s13^3-12*s23*s12^2*s34^2*d*s13+3*s23^2*s12^2*s34*d*s14-44*s23^2*s34*s14*s24*s13+8*s23*s12^3*s13^2+8*s23^3*s14*s24*s13+16*s23^2*s34*d*s14^2*s13-12*s23^2*s34^2*s24^2+24*s23*s12*s34^2*s13^2+24*s23^3*s14^3-12*s23^2*s12*s14^2*s24+s23^2*d*s24^2*s13^2-13*s23*s12*s34*d*s13^3+9*s23^2*s34^2*d*s14*s24+2*s23*s12^3*d*s14^2+8*s23*s24*s13^4-11*s23*s12^2*s34*d*s14*s13-3*s23*s12^2*d*s24^2*s13-5*s23*s34^2*d*s14*s24*s13+4*s23^2*s34*d*s24^2*s13-s23*s12^4*s34*d-5*s23^2*s12*s34*d*s13^2-2*s23*s12*s34^2*d*s14^2+12*s23*s24^2*s13^3+2*s23*s12^2*d*s14^2*s13+4*s23^2*s34*d*s14^3+6*s23*s14*s13^4-15*s23*s12^2*s34*d*s24*s13-s23^2*s12^3*d*s13-20*s23^2*s14*s24*s13^2+8*s23^2*d*s14^2*s13^2+s23*d*s14*s24^3*s13-12*s23^2*s12*s34^2*s14+18*s23*s12^2*s14*s24*s13-4*s23*s12*s14^2*s24^2+9*s23^2*d*s14*s24*s13^2-24*s23^2*s14^2*s13^2-2*s23^3*d*s14*s24^2-10*s23^2*s12*s34^2*s13-6*s23*s12*d*s24^2*s13^2-2*s23^2*s34*d*s13^3+12*s23*s34^2*s24^2*s13+3*s23*s12^3*d*s14*s24+8*s23*s12^3*s34*s13+3*s23^2*s34*d*s14*s24^2+3*s23^2*s12^3*d*s14-2*s23^3*s34^2*d*s14+4*s23^2*s12*s34*d*s14^2+8*s23*s34^3*s13^2-8*s23^2*s12*s14*s13^2+2*s23*s24^4*s13-12*s23^2*s12*s34*s14*s24-15*s23*s12*s34^2*d*s13^2-3*s23*s12^2*s34^3*d-s23*d*s13^5-4*s23*s12^3*d*s13^2+4*s23*s34^2*s14^2*s13-2*s23*s12*d*s14^2*s13^2+36*s23*s12*s14*s24*s13^2-4*s23^3*s12*s14*s13-2*s23^2*s24^2*s13^2+8*s23^2*s34^2*d*s14^2-4*s23*s12^3*s14^2+3*s23*s12^2*d*s14*s24^2-24*s23^2*s34^2*s14*s24-5*s23*s12^2*s34^2*d*s14+4*s23*s34*s14^2*s24*s13-5*s23*d*s14*s24*s13^3-12*s23*s12*s34*d*s14*s24*s13+4*s23^2*s12*s24*s13^2-4*s23^2*s12^2*s34*d*s13+2*s23^2*s34^3*d*s13-s23^2*d*s24*s13^3-4*s23^2*s12*d*s14^3+24*s23*s12*s34*s13^3-4*s23^2*s34*s24^3-s23*s34*d*s14*s24^2*s13+4*s23^3*s14*s24^2-s23*d*s24^3*s13^2-3*s23*s12^2*s34*d*s24^2+2*s23^2*s12^2*s34*s13-12*s23^2*s14^3*s13+48*s23*s12*s34*s24*s13^2+7*s23^2*s12^2*d*s14*s13-s23*s12*d*s24^3*s13-9*s23*s12*s34*d*s24^2*s13-5*s23*s12*s34^2*d*s14*s24-12*s23^2*s34*s14^2*s24+36*s23^3*s34*s14^2-3*s23*s12*s34^3*d*s14+18*s23*s34*s14*s24^2*s13-3*s23*s12^3*s34*d*s24+s23^2*d*s14*s13^3-s23*s12*s34^4*d-4*s23*s12*s34*d*s14^2*s13-s23^2*s12^2*d*s24*s13+36*s23*s12*s34*s14*s13^2+2*s23^2*s12*s34^2*d*s24-8*s23^4*s14^2+36*s23*s12*s34*s14*s24*s13-4*s23*s12^2*s34*s14^2-3*s23^2*s12^2*d*s13^2-2*s23^2*s24^3*s13-7*s23*s12^3*s34*d*s13-s23^2*d*s14*s24^3-4*s23^2*s12^2*s34^2+6*s23*s34^3*s14*s13+2*s23*s13^5-3*s23*d*s24*s13^4-48*s23^2*s14^2*s24*s13+12*s23^2*s12*s14^3+s23^2*s12*d*s24^2*s13-14*s23*s12*s34^2*d*s14*s13-36*s23^2*s34*s14^2*s13+8*s23*s12*s24^3*s13-2*s23*d*s14^2*s13^3+2*s23*s12*d*s14*s24^2*s13+18*s23*s34^2*s14*s24*s13-s23^2*s12*s34^2*d*s13-s23*s34^4*d*s13+24*s23*s12^2*s24*s13^2-12*s23^2*s34^3*s14-2*s23*s34^2*d*s14^2*s13+18*s23*s14*s24*s13^3+s23^2*s34^4*d-15*s23*s12*s34^2*d*s24*s13-4*s23^3*s14*s13^2-6*s23*s34^2*d*s13^3-14*s23^2*s34*s24^2*s13-3*s23*d*s14*s13^4+12*s23^2*s12*d*s14^2*s13+8*s23*s34^3*s24*s13-20*s23^2*s12*s14*s24*s13+2*s23^2*s34*s13^3+3*s23^2*s34^3*d*s24+12*s23*s12^2*s34^2*s13+s23^2*s12*s34^3*d-3*s23*s34^2*d*s24^2*s13+5*s23^2*s12^2*d*s14*s24+2*s23^2*s12^3*s13+18*s23*s12^2*s14*s13^2-15*s23*s12^2*s34*d*s13^2-3*s23*d*s24^2*s13^3-4*s23^2*s12^2*s34*s24+4*s23^2*s14^3*s24+24*s23*s12*s24^2*s13^2-4*s23*s34*d*s13^4+4*s23^3*s12*s14*s24+4*s23*s12*d*s14^2*s24*s13-12*s23^2*s34^2*s14^2+2*s23*s12*d*s14^2*s24^2+8*s23*s34*s13^4-3*s23*s12^3*d*s24*s13+18*s23*s34*s14*s13^3+s23^2*s34*d*s24*s13^2-s23^2*s12^2*s34*d*s24+2*s23*d*s14^2*s24^2*s13-12*s23^2*s12*s34*s24*s13+s23*s12^4*d*s14-28*s23^2*s34^2*s14*s13-6*s23*s12^2*d*s14*s13^2-16*s23^2*s14*s24^2*s13+2*s23*s12^4*s13+4*s23^3*s12*d*s14*s13-9*s23*s34*d*s14*s13^3+7*s23^2*s34*d*s14*s13^2+24*s23*s34*s24*s13^3+s23^2*s34*d*s24^3+6*s23^2*s12^2*s13^2+8*s23^3*s12*s34*s14-16*s23^2*s12*s34^2*s24+4*s23*s12*s14^2*s13^2+2*s23^3*d*s14*s13^2-9*s23*s34*d*s24*s13^3-8*s23^3*d*s14^3-9*s23*s12^2*d*s24*s13^2-22*s23^2*s34^2*s24*s13-3*s23*s12*s34^2*d*s24^2-20*s23^2*s12*s34*s14*s13+12*s23*s34^2*s13^3)*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(6*s12^2*d*s14*s24^2+4*s12*d*s24^4-11*s23*s12*d*s14*s24^2+10*s23*s34^2*s14*s24+s23*s34^4*d+3*s34*d*s14*s24^3+d*s14*s24*s13^3-11*s23*s12*s34^2*d*s14+3*s34*d*s14*s24*s13^2-12*s23^2*s34*s14^2-10*s12^2*s34^3+42*s23*s12*s24*s13^2-4*s23^2*s12*s34*d*s13+3*s12^2*s34^2*d*s14-8*s12*s14*s24^3-52*s23^2*s14*s24*s13-10*s12*s34^3*s13-4*s23*d*s14^2*s24*s13-6*s23*s12^2*s34^2+6*s12^2*s34*s13^2-8*s12*s14*s24*s13^2+9*s12*s34*d*s24*s13^2+8*s23^2*d*s14^2*s13-4*s23*s12*s14*s13^2+10*s23^2*s14*s24^2+3*s12*s34^2*d*s13^2+18*s12^2*s24^2*s13-4*s23^2*s12*s34*s24+10*s23^2*s12*s13^2+2*s23^2*s34^2*d*s13+16*s23*s12^3*s13+10*s23*s34*s13^3+3*s12*s34*d*s14*s13^2+2*s23^2*d*s24^2*s13-12*s23^2*s34^2*s24-4*s12*s34^4-5*s23*s34*d*s13^3+6*s12*d*s24^2*s13^2+4*s12^3*d*s14*s24+3*s23*s12^3*d*s14-8*s23*s34*d*s14^2*s24-16*s23^2*s34*s14*s13-8*s12^3*s14*s24-6*s12*s34^2*s13^2+4*s23*s12^3*s34+6*s24^3*s13^2-3*s23*d*s14*s24^2*s13-8*s12*s34*s14*s13^2-6*s23*s12^2*d*s13^2-6*s23^2*s12*s34^2+16*s23*s34*s14^2*s24-3*s23*s34^2*d*s14*s13+s12*s34^3*d*s14+9*s12^2*d*s14*s24*s13-22*s23*s12*s34*d*s14*s24-2*s14*s24^4+s12^4*d*s24+7*s12^3*s34*d*s24-8*s34*s14*s24^2*s13+3*s12^3*s34^2*d-12*s23^3*s12*s14-2*s23*s12*d*s14*s24*s13-5*s23*d*s14*s13^3+9*s12^2*s34*d*s14*s24+2*s12*s13^4+2*s23*s34^2*s14^2+6*s23^2*s12^2*d*s14+18*s23*s12^2*s34*s13+18*s12*s34*s24*s13^2+6*s12^2*d*s24^3+7*s23*s12*s34*d*s24^2+15*s12^2*s34*d*s24^2-16*s23^2*s14^3+4*s12^3*s24^2+8*s12^2*s13^3+8*s23^2*s12*d*s14*s13-2*s12^4*s14+2*s23^2*s34^3*d-8*s12^3*s34*s14+9*s12*d*s24^3*s13-8*s23^2*s34*s24*s13+s12^4*s34*d-3*s23*d*s24*s13^3+s23*s34^3*d*s13+14*s23*s14^2*s24^2-6*s34^2*s14*s24^2+5*s23*s34^2*d*s24*s13+24*s23*s12^2*s13^2+s23*s12*s34^3*d+7*s23*s34*d*s24^2*s13+9*s34^2*d*s24^2*s13+22*s12^3*s24*s13-4*s12^2*s24^3+12*s12^3*s13^2-4*s23^2*s12*d*s14*s24-6*s23*s34*d*s14*s24*s13+16*s23^3*s14^2+3*s34^2*d*s14*s24*s13+3*s12^2*s34*d*s13^2-11*s23*s12*s34*d*s13^2+6*s23*s34*s24^2*s13-2*s14*s24^2*s13^2+6*s23*s12^2*s24^2+4*s24*s13^4-4*s23^3*s34*d*s14+8*s23^2*d*s14^3+6*s23*s14^2*s13^2+15*s12^2*s34*d*s24*s13+4*s23*s34^3*d*s24-4*s23*s34*s14*s24*s13-9*s23*s12^2*s34*d*s14+10*s24^2*s13^3-20*s12*s34*s14*s24^2+3*s23*s12^2*d*s24^2-30*s12*s34^2*s24^2-2*s34^4*s24-4*s34^2*s14*s24*s13+8*s23^2*s34*d*s14^2-6*s12^3*s14*s13-4*s23*s34*d*s14^2*s13+8*s23^2*s34*s14*s24-6*s12*s24^4+6*s12^2*s34*d*s14*s13-7*s23*d*s14*s24^3+3*s12^3*s34*d*s13+18*s23*s24^2*s13^2+6*s34^2*s24*s13^2+4*s23*s14^2*s24*s13-6*s34*s24^3*s13+8*s23*s34*s14^2*s13-5*s23*s34^2*d*s14*s24-18*s23*s12*s34*d*s14*s13+4*s23^2*s34^2*d*s24+3*s12^2*d*s24*s13^2-4*s14*s24^3*s13+10*s23*s12^3*s24-5*s23*s12*d*s24*s13^2+2*s23^2*s12*s24^2+s34*d*s24*s13^3+4*s23^2*s12*s34*s13-10*s12^2*s34^2*s14+4*s23*s12*s14*s24^2+18*s12*s24*s13^3+15*s12*s34^2*d*s24^2-14*s23^2*s14*s13^2+6*s12*d*s14*s24*s13^2+3*s12^3*d*s14*s13+4*s23*s34*d*s24^3-18*s23*s12*s34^2*s24-8*s23^2*s34^2*s13+9*s12*s34*d*s14*s24^2+3*d*s24^4*s13-8*s23*s34*s24^3-2*s12*s14*s13^3-6*s12^3*s34^2+4*s23^2*s24*s13^2+4*s34^3*d*s24^2-4*s23^2*s12*d*s13^2+28*s23*s12*s34*s14^2+4*s23*s24^3*s13+6*s23*s34^2*s14*s13-7*s23*s12*d*s14*s13^2+12*s34*s24^2*s13^2+3*s12^2*d*s14*s13^2-10*s23*s14*s24^2*s13-18*s12^2*s34*s24^2-18*s12*s34^3*s24-26*s23^2*s12^2*s14+3*s12^3*d*s24*s13+9*s34*d*s24^3*s13+8*s23^2*s12^2*s13-2*s23*d*s13^4-2*s23*s12*s24^3+4*s23^2*s34*d*s14*s13+4*s23^3*d*s14*s13+4*s23^2*s14^2*s24+2*s12*s24^3*s13+16*s23*s12*s14^2*s13+6*s12*s34^2*d*s14*s24-s23*s12^3*s34*d+13*s12*s34*d*s24^3+6*s23*s14*s13^3+30*s12^2*s24*s13^2-s23*s12^2*d*s24*s13+6*s23*s34^2*d*s24^2-24*s12*s34*s14*s24*s13+2*s23^2*s12^3-16*s23^2*s12*s14*s24-8*s23*s34^3*s24+12*s12^2*s34^2*d*s24+5*s23*s12*s34^2*d*s24-6*s23^2*s34*s24^2+24*s23*s12*s34*s13^2-18*s12*s34^2*s24*s13+16*s23*s24*s13^3-2*s23^2*s34^2*s14+6*s34*d*s14*s24^2*s13+4*s23^3*s12*d*s14+4*s23*s12^4-6*s12^2*s14*s13^2-8*s23*d*s14^2*s24^2+24*s23*s12*s24^2*s13+d*s24^2*s13^3+s23*s12^3*d*s24+4*s23^2*s34*d*s24*s13-12*s23*s12*d*s14^2*s24+20*s23^2*s12*s34*s14-22*s12*s34*s24^3-2*s34^3*s24*s13-10*s12*s34^2*s14*s13-14*s12*s14*s24^2*s13+2*s23^2*d*s14*s13^2+21*s12*s34*d*s24^2*s13-12*s12^2*s34^2*s13+s23*s12^2*d*s14*s13+s12^4*d*s14-12*s23^3*s14*s13+7*s12*s34^3*d*s24-2*s23*s24^4-12*s23*s34^2*s24^2-6*s12*s34*s24^2*s13+3*s12^3*s34*d*s14+6*s34*d*s24^2*s13^2-2*s23^2*s34*d*s13^2-2*s23^2*s12^2*s34*d+s34^3*d*s14*s24+4*s12^3*d*s24^2-2*s24^4*s13+24*s12*s24^2*s13^2-7*s23*s12^2*s34*d*s13-12*s34^2*s24^3-26*s23*s12^2*s14*s13+3*s23*s12*d*s24^3-2*s23^2*d*s13^3+2*s23^2*s12^2*s34-s23*d*s14*s24*s13^2-13*s23*s34*d*s14*s24^2+4*s12*d*s14*s24^3-8*s34*s24^4+3*s34^2*d*s14*s24^2+24*s23*s12*s34*s14*s24+36*s23*s12^2*s24*s13-2*s34*s14*s24*s13^2-22*s12^2*s34*s14*s24-12*s23*s12*s34*d*s14^2+20*s23*s34*s14*s24^2+10*s34*s24*s13^3-2*s12^3*s34*s24+6*s12^4*s24+d*s24^5+20*s23^3*s34*s14+3*s12^2*s34^3*d-9*s23*s34*d*s14*s13^2+10*s23*s12^2*s14^2+s12*d*s14*s13^3+s23*s34^3*d*s14-6*s23*s12*d*s13^3-8*s23*s12*s34^3+8*s12^4*s13+3*s34^3*d*s24*s13-6*s34^2*s24^2*s13+2*s12^5+6*s12^3*s34*s13+12*s23*s34*s14*s13^2-16*s12^2*s34*s14*s13+4*s23*s12^2*s34*s14-2*s23^2*s12^2*d*s13+4*s23^2*s13^3+3*d*s14*s24^2*s13^2+16*s23*s12*s34*s14*s13+6*s23*s34^2*s13^2+3*s12*s34^3*d*s13-2*s23*s34*d*s24*s13^2+4*s23^3*s14*s24+s12*d*s24*s13^3+4*s23*s13^4-s23*s12^2*s34^2*d+3*s34^2*d*s24*s13^2+24*s23*s12*s34*s24*s13-22*s23*s12^2*s14*s24-8*s34^3*s24^2-4*s23*s12^2*d*s14^2+4*s34*d*s24^4+6*s12^2*s34*s24*s13+3*s23*d*s24^3*s13+2*s23*s12^2*s34*d*s24+24*s23*s34*s24*s13^2-6*s34*s14*s24^3+2*s23^2*s34*d*s24^2-8*s23*s12*d*s14^2*s13-2*s23*s12^3*d*s13-14*s23*s14*s24*s13^2+3*d*s24^3*s13^2-16*s12^2*s14*s24*s13+15*s12*s34^2*d*s24*s13-4*s23*d*s14^2*s13^2-36*s23*s12*s14*s24*s13+3*d*s14*s24^3*s13-12*s12^2*s14*s24^2-2*s23*s34^4+20*s23*s12*s34^2*s14+20*s23^2*s12*s14^2-s23*s12^2*d*s14*s24+d*s14*s24^4-16*s23*s12^3*s14+6*s34^2*d*s24^3+2*s23^2*s34^2*d*s14-10*s23^2*d*s14*s24^2+8*s23^2*s12*s24*s13-24*s12^2*s34^2*s24-16*s12*s34^2*s14*s24+2*s12*s34*s13^3+10*s23*s14*s24^3+s12*s34*d*s13^3+s34^4*d*s24-4*s12*s34^3*s14+8*s23^2*d*s14*s24*s13-12*s23^2*s14^2*s13-4*s23^3*d*s14*s24+3*s12*s34^2*d*s14*s13+s23*d*s24^2*s13^2+24*s23*s12*s14^2*s24+16*s23*s12*s13^3+9*s12^2*d*s24^2*s13-8*s23^2*s34*d*s14*s24+s12*s34^4*d+12*s12*s34*d*s14*s24*s13+4*s23^2*s12^2*s24+s23*d*s24^4+4*s23*s12*d*s24^2*s13+2*s23^2*s34*s13^2-2*s24^5-4*s23*s12*s34^2*d*s13-2*s34^3*s14*s24-12*s23*s12*s34*s24^2+2*s12^4*s34-40*s23^2*s12*s14*s13-2*s23*s34^3*s13+6*s12^2*s34^2*d*s13-8*s23^2*s12*s34*d*s14-3*s23*s34^2*d*s13^2+9*s12*d*s14*s24^2*s13-6*s23^2*s34^3)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (-1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)*(8*s23*s34^2*d*s14^2+2*s23*s12*d*s14*s24^2-42*s23*s34^2*s14*s24+s23*s34^4*d-s34*d*s14*s24^3-3*d*s14*s24*s13^3+14*s23*s12*s34^2*d*s14-9*s34*d*s14*s24*s13^2+40*s23^2*s34*s14^2+6*s12^2*s34^3+4*s23*s12*s24*s13^2-s34^5*d-3*s12^2*s34^2*d*s14-20*s23*s34^3*s14-10*s34^3*d*s13^2+8*s23^2*s14*s24*s13+26*s12*s34^3*s13+12*s23*d*s14^2*s24*s13-4*s23*s12^2*s34^2+30*s12^2*s34*s13^2+16*s12*s14*s24*s13^2-36*s12*s34*d*s24*s13^2-8*s23^2*d*s14^2*s13-20*s23*s12*s14*s13^2+4*s23^2*s14*s24^2-24*s12*s34^2*d*s13^2+18*s12^2*s24^2*s13+2*s23*s12^3*s13+2*s23*s34*s13^3-9*s12*s34*d*s14*s13^2-10*s23*s12*s34^2*s13+6*s12*s34^4-2*s23*s34*d*s13^3-12*s12*d*s24^2*s13^2+2*s23*s12^3*d*s14+8*s23*s34*d*s14^2*s24+12*s23^2*s34*s14*s13+42*s12*s34^2*s13^2+10*s34^4*s13+14*s24^3*s13^2+12*s23*d*s14*s24^2*s13+16*s12*s34*s14*s13^2-3*s23*s12^2*d*s13^2-16*s23*s34*s14^2*s24+24*s23*s34^2*d*s14*s13-3*s12*s34^3*d*s14-3*s12^2*d*s14*s24*s13+16*s23*s12*s34*d*s14*s24-4*s12^3*s34*d*s24+16*s34*s14*s24^2*s13-4*s12^3*s34^2*d+20*s23*s12*d*s14*s24*s13+4*s23*d*s14*s13^3-3*s12^2*s34*d*s14*s24+8*s12*s13^4-14*s23*s34^2*s14^2+2*s23^2*s12^2*d*s14+2*s23*s12^2*s34*s13+78*s12*s34*s24*s13^2+s23*s12*s34*d*s24^2-6*s12^2*s34*d*s24^2+16*s23^2*s14^3+12*s12^2*s13^3+4*s23^2*s12*d*s14*s13-4*s12*d*s24^3*s13-s12^4*s34*d-s23*d*s24*s13^3+2*s23*s34^3*d*s13-2*s23*s14^2*s24^2+6*s34^2*s14*s24^2+5*s23*s34^2*d*s24*s13+6*s23*s12^2*s13^2+s23*s12*s34^3*d+4*s23*s34*d*s24^2*s13-18*s34^2*d*s24^2*s13+10*s12^3*s24*s13+8*s12^3*s13^2+36*s23*s34*d*s14*s24*s13-8*s23^3*s14^2-9*s34^2*d*s14*s24*s13-18*s12^2*s34*d*s13^2-4*s23*s12^2*s34*s24-5*s23*s12*s34*d*s13^2-6*s12^2*d*s13^3-14*s23*s34*s24^2*s13+10*s14*s24^2*s13^2+10*s24*s13^4+12*s34^2*s14*s13^2-8*s23^2*d*s14^3-10*s23*s14^2*s13^2-24*s12^2*s34*d*s24*s13+3*s23*s34^3*d*s24-80*s23*s34*s14*s24*s13+6*s23*s12^2*s34*d*s14+18*s24^2*s13^3+4*s12*s34*s14*s24^2+18*s12*s34^2*s24^2+8*s34^4*s24+20*s34^2*s14*s24*s13-16*s23^2*s34*d*s14^2+2*s12^3*s14*s13+12*s23*s34*d*s14^2*s13+20*s23^2*s34*s14*s24-6*s12^2*s34*d*s14*s13-8*s12^3*s34*d*s13-2*s23*s24^2*s13^2-s12^4*d*s13+54*s34^2*s24*s13^2+2*s14*s13^4-28*s23*s14^2*s24*s13+22*s34*s24^3*s13-24*s23*s34*s14^2*s13+20*s23*s34^2*d*s14*s24+24*s23*s12*s34*d*s14*s13-12*s12^2*d*s24*s13^2+4*s14*s24^3*s13-2*s23*s12*d*s24*s13^2-22*s23*s34^2*s24*s13-16*s34*d*s24*s13^3+2*s12^2*s34^2*s14-4*s23*s12*s14*s24^2+30*s12*s24*s13^3-12*s12*s34^2*d*s24^2-4*s23^2*s14*s13^2-6*s12*d*s14*s24*s13^2-s12^3*d*s14*s13+s23*s34*d*s24^3-16*s23*s12*s34^2*s24-3*s12*s34*d*s14*s24^2-d*s24^4*s13-4*s23*s34*s24^3+6*s12*s14*s13^3+2*s12^3*s34^2-6*s34^3*d*s24^2-4*s23*s12*s34*s14^2-2*s23*s24^3*s13-50*s23*s34^2*s14*s13+10*s23*s12*d*s14*s13^2-4*s34*d*s14*s13^3+48*s34*s24^2*s13^2-4*s12*d*s13^4-3*s12^2*d*s14*s13^2-30*s23*s14*s24^2*s13+6*s12^2*s34*s24^2-8*s23^2*d*s14^2*s24-s34^4*d*s14+18*s12*s34^3*s24-4*s12^3*d*s24*s13-8*s34*d*s24^3*s13-s23*d*s13^4+8*s14*s24*s13^3+16*s23^2*s14^2*s24+14*s12*s24^3*s13-16*s23*s12*s14^2*s13-6*s12*s34^2*d*s14*s24-s23*s12^3*s34*d-4*s12*s34*d*s24^3-10*s23*s14*s13^3-5*s34^4*d*s13+30*s12^2*s24*s13^2-s23*s12^2*d*s24*s13-4*d*s24*s13^4+3*s23*s34^2*d*s24^2+24*s12*s34*s14*s24*s13+4*s23^2*s12*s14*s24-12*s23*s34^3*s24-12*s12^2*s34^2*d*s24+2*s23*s12*s34^2*d*s24+2*s13^5+4*s23*s12*s34*s13^2+66*s12*s34^2*s24*s13+8*s34^3*s14*s13+2*s23*s24*s13^3+16*s23^2*s34^2*s14-6*s34*d*s14*s24^2*s13+6*s12^2*s14*s13^2-2*s23*s12*s24^2*s13-6*d*s24^2*s13^3+4*s23*s12*d*s14^2*s24+8*s23^2*s12*s34*s14+6*s12*s34*s24^3+34*s34^3*s24*s13+14*s12*s34^2*s14*s13+10*s12*s14*s24^2*s13+2*s23^2*d*s14*s13^2-24*s12*s34*d*s24^2*s13+24*s12^2*s34^2*s13-10*s34^2*d*s13^3+8*s23*s12^2*d*s14*s13-d*s14*s13^4-12*s12*s34^3*d*s24-12*s23*s34^2*s24^2+54*s12*s34*s24^2*s13-s12^3*s34*d*s14-18*s34*d*s24^2*s13^2-3*s34^3*d*s14*s24+8*s34*s14*s13^3-5*s34*d*s13^4+4*s24^4*s13+36*s12*s24^2*s13^2-4*s23*s12^2*s34*d*s13+20*s34^3*s13^2+8*s34^2*s24^3-10*s23*s12^2*s14*s13+16*s23*d*s14*s24*s13^2+10*s23*s34*d*s14*s24^2+2*s34*s24^4-d*s13^5-3*s34^2*d*s14*s24^2-28*s23*s12*s34*s14*s24+2*s23*s12^2*s24*s13+22*s34*s14*s24*s13^2+2*s12^2*s34*s14*s24+4*s23*s12*s34*d*s14^2+2*s34^5-24*s23*s34*s14*s24^2+38*s34*s24*s13^3+2*s12^3*s34*s24-6*s12^2*s34^3*d-6*s34^2*d*s14*s13^2+18*s23*s34*d*s14*s13^2-6*s23*s12^2*s14^2+10*s34*s13^4-3*s12*d*s14*s13^3+10*s23*s34^3*d*s14-3*s23*s12*d*s13^3-8*s23*s12*s34^3+2*s12^4*s13-16*s34^3*d*s24*s13+42*s34^2*s24^2*s13+10*s12^3*s34*s13-40*s23*s34*s14*s13^2+8*s12^2*s34*s14*s13-4*s23*s12^2*s34*s14-3*d*s14*s24^2*s13^2-44*s23*s12*s34*s14*s13-6*s23*s34^2*s13^2-16*s12*s34^3*d*s13+s23*s34*d*s24*s13^2-12*s12*d*s24*s13^3+2*s23*s13^4-s23*s12^2*s34^2*d-24*s34^2*d*s24*s13^2+2*s34^4*s14-12*s23*s12*s34*s24*s13-2*s23*s12^2*s14*s24+20*s34^2*s13^3+12*s34^3*s24^2+4*s23*s12^2*d*s14^2-s34*d*s24^4+42*s12^2*s34*s24*s13+s23*d*s24^3*s13-s23*s12^2*s34*d*s24-4*s12^3*d*s13^2-8*s23*s34*s24*s13^2+2*s34*s14*s24^3-4*s34^3*d*s14*s13+8*s23*s12*d*s14^2*s13-s23*s12^3*d*s13-38*s23*s14*s24*s13^2-4*d*s24^3*s13^2+8*s12^2*s14*s24*s13-36*s12*s34^2*d*s24*s13+4*s23*d*s14^2*s13^2-40*s23*s12*s14*s24*s13-d*s14*s24^3*s13-4*s23*s34^4-24*s23*s12*s34^2*s14-8*s23^2*s12*s14^2+4*s23*s12^2*d*s14*s24-4*s34^2*d*s24^3-2*s23^2*s34^2*d*s14-2*s23^2*d*s14*s24^2+12*s12^2*s34^2*s24+8*s12*s34^2*s14*s24+30*s12*s34*s13^3-2*s23*s14*s24^3-16*s12*s34*d*s13^3-4*s34^4*d*s24+4*s12*s34^3*s14+16*s23^2*s14^2*s13-9*s12*s34^2*d*s14*s13+s23*d*s24^2*s13^2-8*s23*s12*s14^2*s24+6*s23*s12*s13^3-6*s12^2*d*s24^2*s13-4*s23^2*s34*d*s14*s24-4*s12*s34^4*d-12*s12*s34*d*s14*s24*s13+s23*s12*d*s24^2*s13-s23*s12*s34^2*d*s13+6*s34^3*s14*s24-8*s23*s12*s34*s24^2-4*s23^2*s12*s14*s13-10*s23*s34^3*s13-18*s12^2*s34^2*d*s13-3*s12*d*s14*s24^2*s13)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)*(s23*s12*d*s14*s24^2-s23*s12*s34^2*d*s14-2*s23^2*s34*s14^2+17*s23*s12*s24*s13^2-2*s23^2*s12*s34*d*s13-22*s23^2*s14*s24*s13+s23*s12^2*s34^2+2*s23^2*d*s14^2*s13+2*s23*s12*s14*s13^2-s23^2*s14*s24^2-2*s23^2*s12*s34*s24+5*s23^2*s12*s13^2+s23^2*s34^2*d*s13+5*s23*s12^3*s13+6*s23*s34*s13^3+s23^2*d*s24^2*s13+7*s23*s12*s34^2*s13-6*s23^2*s34^2*s24-3*s23*s34*d*s13^3+s23*s12^3*d*s14-14*s23^2*s34*s14*s13+2*s23*s12^3*s34+s23*d*s14*s24^2*s13-3*s23*s12^2*d*s13^2-3*s23^2*s12*s34^2-s23*s34^2*d*s14*s13-6*s23^3*s12*s14+2*s23*s12*d*s14*s24*s13-s23*d*s14*s13^3+3*s23^2*s12^2*d*s14+10*s23*s12^2*s34*s13-s23*s12*s34*d*s24^2+6*s23^2*s12*d*s14*s13+s23^2*s34^3*d-4*s23^2*s34*s24*s13-2*s23*d*s24*s13^3-s23*s34^3*d*s13-2*s23*s34^2*d*s24*s13+9*s23*s12^2*s13^2-s23*s12*s34^3*d-s23*s34*d*s24^2*s13+2*s23^2*s12*d*s14*s24+12*s23^3*s14^2+4*s23*s12^2*s34*s24-7*s23*s12*s34*d*s13^2+8*s23*s34*s24^2*s13+3*s23*s12^2*s24^2-6*s23*s12*s34*d*s24*s13-2*s23^3*s34*d*s14+2*s23*s34*s14*s24*s13+2*s23^2*s34*d*s14^2-6*s23^2*s34*s14*s24+8*s23*s24^2*s13^2-2*s23*s12*s34*d*s14*s13+2*s23^2*s34^2*d*s24+3*s23*s12^3*s24-4*s23*s12*d*s24*s13^2+7*s23*s34^2*s24*s13+s23^2*s12*s24^2+2*s23^2*s12*s34*s13-2*s23*s12*s14*s24^2-9*s23^2*s14*s13^2+s23*s12*s34^2*s24-4*s23^2*s34^2*s13+2*s23^2*s24*s13^2-2*s23^2*s12*d*s13^2+3*s23*s24^3*s13+2*s23*s34^2*s14*s13-s23*s12*d*s14*s13^2-2*s23^2*d*s14^2*s24-9*s23^2*s12^2*s14+4*s23^2*s12^2*s13-s23*d*s13^4+s23*s12*s24^3+6*s23^2*s34*d*s14*s13+2*s23^3*d*s14*s13+2*s23^2*s14^2*s24-s23*s12^3*s34*d+2*s23*s14*s13^3-2*s23*s12^2*d*s24*s13+s23^2*s12^3-10*s23^2*s12*s14*s24-2*s23*s12*s34^2*d*s24-3*s23^2*s34*s24^2+14*s23*s12*s34*s13^2-2*s23^2*s12*d*s14^2+7*s23*s24*s13^3-5*s23^2*s34^2*s14+2*s23^3*s12*d*s14+s23*s12^4+11*s23*s12*s24^2*s13+2*s23^2*s34*d*s24*s13-2*s23^2*s12*s34*s14+3*s23^2*d*s14*s13^2+s23*s12^2*d*s14*s13-6*s23^3*s14*s13-s23^2*s34*d*s13^2-s23^2*s12^2*s34*d-5*s23*s12^2*s34*d*s13-2*s23*s12^2*s14*s13-s23^2*d*s13^3+s23^2*s12^2*s34-2*s23*s12*s34*s14*s24+13*s23*s12^2*s24*s13+10*s23^3*s34*s14-2*s23*s34*d*s14*s13^2-3*s23*s12*d*s13^3+4*s23*s34*s14*s13^2-2*s23*s12^2*s34*s14-s23^2*s12^2*d*s13+2*s23^2*s13^3+2*s23*s12*s34*s14*s13+6*s23*s34^2*s13^2-4*s23*s34*d*s24*s13^2+2*s23^3*s14*s24+2*s23*s13^4-2*s23*s12^2*s34^2*d-4*s23^3*d*s14^2+18*s23*s12*s34*s24*s13-4*s23*s12^2*s14*s24-2*s23*s12^2*s34*d*s24+14*s23*s34*s24*s13^2+s23^2*s34*d*s24^2-s23*s12^3*d*s13+2*s23*s14*s24*s13^2-2*s23*s12*s14*s24*s13+6*s23^2*s12*s14^2+2*s23*s12^2*d*s14*s24-2*s23*s12^3*s14+3*s23^2*s34^2*d*s14-s23^2*d*s14*s24^2+4*s23^2*s12*s24*s13+6*s23^2*d*s14*s24*s13-6*s23^2*s14^2*s13-2*s23^3*d*s14*s24-s23*d*s24^2*s13^2+7*s23*s12*s13^3+2*s23^2*s34*d*s14*s24+2*s23^2*s12^2*s24-s23*s12*d*s24^2*s13+s23^2*s34*s13^2-5*s23*s12*s34^2*d*s13+2*s23*s12*s34*s24^2-18*s23^2*s12*s14*s13+2*s23*s34^3*s13+2*s23^2*s12*s34*d*s14-3*s23*s34^2*d*s13^2-3*s23^2*s34^3)),

INT["pentagon1x123",3,21,4,2,{1,0,2,-2,1}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-1/2*(16*s23*s12*s14*s24^2*s13+36*s12^2*s34^2*s14*s13+16*s23*s12*s34^2*s14*s13+36*s12^2*s14*s24^2*s13+8*s23*s14*s24^2*s13^2+8*s23*s34^2*s14*s13^2-4*s23^2*d*s14^2*s24^2+48*s12*s34*s14*s13^3+8*s23*s12^2*d*s14^2*s24-32*s23^2*s12^2*s14^2+24*s12*s34^2*s14*s24*s13+4*s14*s24^3*s13^2-8*s23^2*s34*d*s14^2*s24+8*s23*s12^4*s14-6*s12*s34*d*s14*s24^2*s13+s23^2*d*s14*s24^2*s13+4*s12^5*s14+32*s23*s12^3*s14*s13-10*s12^3*d*s14*s13^2+s23^2*s34^2*d*s14*s13+4*s23*s12^2*s34*d*s14*s24-6*s23*s12^2*d*s14*s24*s13-64*s23^2*s12*s14^2*s13+16*s23*s12^2*s34*s14*s24+12*s34^2*s14*s24*s13^2-4*s23^2*d*s14^3*s24+48*s12*s14*s24*s13^3+16*s23*s34*s14*s24*s13^2+8*s23*s12^2*s34*d*s14^2+8*s23*s34*d*s14^2*s13^2+4*s23^2*s12^3*s14+2*s23^2*s34*d*s14*s24*s13+40*s12^3*s14*s13^2+4*s23^2*s34*s14^3-6*s34*d*s14*s24*s13^3-56*s23*s12*s34*s14^2*s13-56*s23*s12*s14^2*s24*s13+8*s23*s12^2*s34^2*s14-18*s12^2*s34*d*s14*s13^2-6*s23*s12*s34*d*s14*s13^2-s12^2*d*s14*s24^3-28*s23*s34*s14^2*s13^2-28*s23*s14^2*s24*s13^2+8*s12*s34^3*s14*s13+2*s23*s12*d*s14*s24^3+s23^2*s12*d*s14*s24^2+4*s23*s34*d*s14*s24*s13^2+4*s23^3*s14^2*s24-12*s12*s34*d*s14*s13^3+12*s23^2*s12^2*s14*s13-3*s34^2*d*s14*s24*s13^2+s23^2*s12*s34^2*d*s14+2*s23^2*s12*s34*d*s14*s13-2*s23*s12^3*s34*d*s14+4*s12^2*s34^3*s14+32*s23*s12*s14*s13^3-5*s12*d*s14*s13^4-28*s23*s12^2*s14^2*s24+4*s23^2*s12^2*s14*s24-3*s12^4*s34*d*s14+4*s23^2*s12^2*d*s14^2-12*s23^3*s14^2*s13-12*s12*d*s14*s24*s13^3+2*s23*s34^3*d*s14*s13-3*s23^2*s12*d*s14*s13^2-60*s23*s12^2*s14^2*s13+4*s23^2*s14*s13^3+2*s23^2*s12*d*s14*s24*s13+2*s23^2*s12*s34*d*s14*s24+4*s14*s13^5+12*s12^3*s14*s24^2+4*s23^2*s34*s14*s13^2+4*s23^2*s12^2*s34*s14-4*s23^2*d*s14^3*s13+2*s23*d*s14*s24^2*s13^2+48*s23*s12^2*s34*s14*s13+12*s34*s14*s13^4-8*s23*s12*d*s14*s13^3-18*s12^2*d*s14*s24*s13^2-10*s12^2*d*s14*s13^3+6*s23*s12*s34*d*s14*s24^2+2*s23*s34^2*d*s14*s13^2-6*s23*s12*d*s14*s24*s13^2-3*s12^2*s34*d*s14*s24^2-s23^2*s34^3*d*s14-12*s23^3*s12*s14^2-16*s23*s12*s34*s14^2*s24+12*s34*s14*s24^2*s13^2-20*s23*s14^2*s13^3+s23^2*s12^2*s34*d*s14+12*s14*s24^2*s13^3+12*s34^2*s14*s13^3+16*s23^3*s14^3-16*s23^2*s12*s14^2*s24-3*s12^3*s34^2*d*s14-3*s23^2*s34^2*d*s14*s24-3*s12^3*d*s14*s24^2+4*s23*s12^3*d*s14^2+24*s12*s34*s14*s24^2*s13-6*s23*s12^2*s34*d*s14*s13+16*s23*s12^3*s14*s24+6*s23*s34^2*d*s14*s24*s13+12*s12^2*s34^2*s14*s24+4*s23*s12*s34^2*d*s14^2+12*s23*s12^2*d*s14^2*s13-4*s23^2*s34*d*s14^3+8*s23*s14*s13^4+16*s23*s12^3*s34*s14+4*s23^2*s14*s24*s13^2+4*s23^2*d*s14^2*s13^2+2*s23*d*s14*s24^3*s13+12*s14*s24*s13^4+8*s23*d*s14^2*s24*s13^2+48*s23*s12^2*s14*s24*s13-9*s12*s34^2*d*s14*s13^2-8*s23*s12*s14^2*s24^2+s23^2*d*s14*s24*s13^2-32*s23^2*s14^2*s13^2-12*s12^3*s34*d*s14*s13-2*s23*s12^3*d*s14*s24-3*s23^2*s34*d*s14*s24^2-s23^2*s12^3*d*s14-18*s12*s34*d*s14*s24*s13^2+48*s12^3*s14*s24*s13+12*s23^2*s12*s14*s13^2-3*s34*d*s14*s13^4+20*s12*s14*s13^4-9*s12*d*s14*s24^2*s13^2-d*s14*s13^5-5*s12^4*d*s14*s13+8*s23*s34*d*s14^2*s24*s13-18*s12^2*s34*d*s14*s24*s13-8*s23*s34^2*s14^2*s13+12*s23*s12*d*s14^2*s13^2+24*s34*s14*s24*s13^3-8*s23*s12*s34^2*s14^2-d*s14*s24^3*s13^2+48*s23*s12*s14*s24*s13^2+72*s12^2*s14*s24*s13^2-4*s23^2*s34^2*d*s14^2-20*s23*s12^3*s14^2+2*s23*s12^2*d*s14*s24^2+2*s23*s12^2*s34^2*d*s14-16*s23*s34*s14^2*s24*s13-2*s23*d*s14*s24*s13^3-2*s12*s34^3*d*s14*s13+8*s23*s12*s34*d*s14*s24*s13+48*s12^3*s34*s14*s13-4*s23^2*s12*d*s14^3+6*s23*s34*d*s14*s24^2*s13-2*s12*d*s14*s24^3*s13+20*s12^4*s14*s13+20*s23^2*s14^3*s13+8*s23*s12^2*s14*s24^2-3*s23^2*s12^2*d*s14*s13-s34^3*d*s14*s13^2-s12^2*s34^3*d*s14+6*s23*s12*s34^2*d*s14*s24+4*s23^3*s34*s14^2+2*s23*s12*s34^3*d*s14-3*s12^2*s34^2*d*s14*s24-s23^2*d*s14*s13^3+16*s23*s12*s34*d*s14^2*s13+72*s12^2*s34*s14*s24*s13-8*s23*s14^2*s24^2*s13+48*s23*s12*s34*s14*s13^2+40*s12^2*s14*s13^3+32*s23*s12*s34*s14*s24*s13-28*s23*s12^2*s34*s14^2+72*s12^2*s34*s14*s13^2+8*s12*s14*s24^3*s13-s23^2*d*s14*s24^3-9*s12^2*s34^2*d*s14*s13-16*s23^2*s14^2*s24*s13+20*s23^2*s12*s14^3+12*s12^4*s34*s14+4*s23*s12*s34^2*d*s14*s13-6*s12*s34^2*d*s14*s24*s13-16*s23^2*s34*s14^2*s13+4*s23*d*s14^2*s13^3+4*s23*s12*d*s14*s24^2*s13+12*s12^2*s34*s14*s24^2+4*s12^2*s14*s24^3+4*s23*s34^2*d*s14^2*s13+16*s23*s14*s24*s13^3+8*s23*s12*s34*d*s14^2*s24-9*s12^2*d*s14*s24^2*s13+12*s12^3*s34^2*s14+12*s12^4*s14*s24-2*s23*d*s14*s13^4+8*s23^2*s12*d*s14^2*s13+8*s23^2*s12*s14*s24*s13+24*s12^3*s34*s14*s24+s23^2*s12^2*d*s14*s24+48*s23*s12^2*s14*s13^2+4*s23^2*s14^3*s24-3*d*s14*s24^2*s13^3+16*s23*s12*d*s14^2*s24*s13-3*s34*d*s14*s24^2*s13^2+4*s23*s12*d*s14^2*s24^2+16*s23*s34*s14*s13^3-s12^5*d*s14+36*s12*s14*s24^2*s13^2+36*s12*s34^2*s14*s13^2+4*s23*d*s14^2*s24^2*s13-16*s23^2*s12*s34*s14^2-3*s34^2*d*s14*s13^3-2*s23*s12^4*d*s14-12*s23*s12^2*d*s14*s13^2-2*s23*s34*d*s14*s13^3+s23^2*s34*d*s14*s13^2-12*s12^3*d*s14*s24*s13-8*s23*s12^3*d*s14*s13-6*s12^3*s34*d*s14*s24-60*s23*s12*s14^2*s13^2+72*s12*s34*s14*s24*s13^2-3*d*s14*s24*s13^4-3*s12^4*d*s14*s24+4*s34^3*s14*s13^2+8*s23^2*s12*s34*s14*s13)*s23^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (s23^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)*(s12^2*d*s14*s24^2-2*s23*s12*d*s14*s24^2+6*s23*s34^2*s14*s24+2*d*s14*s24*s13^3-2*s23*s12*s34^2*d*s14+2*s34*d*s14*s24*s13^2-12*s23^2*s34*s14^2+s12^2*s34^2*d*s14+2*s23*s34^3*s14-2*s23^2*s14*s24*s13-4*s23*d*s14^2*s24*s13+s23*s12^2*s34^2-18*s12*s14*s24*s13^2-4*s23^2*d*s14^2*s13-18*s23*s12*s14*s13^2-7*s23^2*s14*s24^2+6*s12*s34*d*s14*s13^2+2*s23*s12*s34^2*s13+2*s12^3*d*s14*s24+2*s23*s12^3*d*s14-2*s23^2*s34*s14*s13-6*s12^3*s14*s24-2*s23*d*s14*s24^2*s13-18*s12*s34*s14*s13^2+2*s23*s34*s14^2*s24-2*s23*s34^2*d*s14*s13+6*s12^2*d*s14*s24*s13-4*s23*s12*s34*d*s14*s24+2*s23*d*s14*s13^3+2*s12^2*s34*d*s14*s24+s23*s34^2*s14^2+s23^2*s12^2*d*s14-8*s23^2*s14^3+2*s23^2*s12*d*s14*s13-3*s12^4*s14-6*s12^3*s34*s14+s23*s14^2*s24^2-2*s23^2*s12*d*s14*s24-4*s23*s34*d*s14*s24*s13+8*s23^3*s14^2+2*s23*s12^2*s34*s24+6*s23*s34*s24^2*s13-3*s14*s24^2*s13^2+s23*s12^2*s24^2-3*s34^2*s14*s13^2+4*s23^2*d*s14^3+13*s23*s14^2*s13^2+4*s23*s34*s14*s24*s13+4*s23^2*s34*d*s14^2-12*s12^3*s14*s13-4*s23*s34*d*s14^2*s13-14*s23^2*s34*s14*s24+6*s12^2*s34*d*s14*s13+s23*s24^2*s13^2-3*s14*s13^4+6*s23*s14^2*s24*s13+6*s23*s34*s14^2*s13+6*s23*s34^2*s24*s13-3*s12^2*s34^2*s14+2*s23*s12*s14*s24^2-3*s23^2*s14*s13^2+6*s12*d*s14*s24*s13^2+4*s12^3*d*s14*s13+6*s23*s12*s34^2*s24+4*s23*s34*s24^3-12*s12*s14*s13^3+6*s23*s12*s34*s14^2+2*s23*s24^3*s13+2*s23*s34^2*s14*s13+6*s23*s12*d*s14*s13^2+2*s34*d*s14*s13^3+6*s12^2*d*s14*s13^2+2*s23*s14*s24^2*s13+4*s23^2*d*s14^2*s24-3*s23^2*s12^2*s14+2*s23*s12*s24^3-6*s14*s24*s13^3-2*s23^2*s34*d*s14*s13-12*s23^2*s14^2*s24+26*s23*s12*s14^2*s13-6*s23*s14*s13^3-12*s12*s34*s14*s24*s13-2*s23^2*s12*s14*s24+4*s23*s34^3*s24-4*s23^2*s12*d*s14^2-7*s23^2*s34^2*s14-18*s12^2*s14*s13^2+2*s23*s12*s24^2*s13-4*s23*s12*d*s14^2*s24-2*s23^2*s12*s34*s14-6*s12*s34^2*s14*s13-6*s12*s14*s24^2*s13+s23^2*d*s14*s13^2+6*s23*s12^2*d*s14*s13+d*s14*s13^4+s12^4*d*s14+s23*s24^4+6*s23*s34^2*s24^2+2*s12^3*s34*d*s14-6*s34*s14*s13^3-18*s23*s12^2*s14*s13+4*s23*s12*s34*s14*s24-6*s34*s14*s24*s13^2-6*s12^2*s34*s14*s24-4*s23*s12*s34*d*s14^2+6*s23*s34*s14*s24^2+s34^2*d*s14*s13^2+13*s23*s12^2*s14^2+4*s12*d*s14*s13^3+2*s23*s12*s34^3-6*s23*s34*s14*s13^2-18*s12^2*s34*s14*s13-6*s23*s12^2*s34*s14+d*s14*s24^2*s13^2-12*s23*s12*s34*s14*s13+s23*s34^2*s13^2+4*s23*s12*s34*s24*s13-6*s23*s12^2*s14*s24-4*s23*s12^2*d*s14^2+2*s23*s34*s24*s13^2-8*s23*s12*d*s14^2*s13-6*s23*s14*s24*s13^2-18*s12^2*s14*s24*s13-4*s23*d*s14^2*s13^2-12*s23*s12*s14*s24*s13-3*s12^2*s14*s24^2+s23*s34^4+2*s23*s12*s34^2*s14+20*s23^2*s12*s14^2-6*s23*s12^3*s14+s23^2*s34^2*d*s14+s23^2*d*s14*s24^2+2*s23*s14*s24^3-2*s23^2*d*s14*s24*s13+20*s23^2*s14^2*s13+2*s12*s34^2*d*s14*s13+6*s23*s12*s14^2*s24+2*s23^2*s34*d*s14*s24+4*s12*s34*d*s14*s24*s13+6*s23*s12*s34*s24^2-6*s23^2*s12*s14*s13+2*s23*s34^3*s13-2*s23^2*s12*s34*d*s14+2*s12*d*s14*s24^2*s13)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (-1/2*s23^(-1)*(2*s12^2*d*s14*s24^2-s23*s12*d*s14*s24^2+4*d*s14*s24*s13^3-s23*s12*s34^2*d*s14+4*s34*d*s14*s24*s13^2-4*s23^2*s34*s14^2+2*s12^2*s34^2*d*s14-8*s23*d*s14^2*s24*s13-36*s12*s14*s24*s13^2-12*s23*s12*s14*s13^2+12*s12*s34*d*s14*s13^2+4*s12^3*d*s14*s24+s23*s12^3*d*s14-12*s12^3*s14*s24-s23*d*s14*s24^2*s13-36*s12*s34*s14*s13^2+4*s23*s34*s14^2*s24-s23*s34^2*d*s14*s13+12*s12^2*d*s14*s24*s13-2*s23*s12*s34*d*s14*s24-2*s23*s12*d*s14*s24*s13+s23*d*s14*s13^3+4*s12^2*s34*d*s14*s24+2*s23*s34^2*s14^2-16*s23^2*s14^3-6*s12^4*s14-12*s12^3*s34*s14+2*s23*s14^2*s24^2-2*s23*s34*d*s14*s24*s13-6*s14*s24^2*s13^2-6*s34^2*s14*s13^2+8*s23^2*d*s14^3+26*s23*s14^2*s13^2-s23*s12^2*s34*d*s14-24*s12^3*s14*s13-8*s23*s34*d*s14^2*s13+12*s12^2*s34*d*s14*s13+s23*d*s14*s24^3-6*s14*s13^4+12*s23*s14^2*s24*s13+12*s23*s34*s14^2*s13+3*s23*s34^2*d*s14*s24-2*s23*s12*s34*d*s14*s13-6*s12^2*s34^2*s14+12*s12*d*s14*s24*s13^2+8*s12^3*d*s14*s13-24*s12*s14*s13^3+12*s23*s12*s34*s14^2+3*s23*s12*d*s14*s13^2+4*s34*d*s14*s13^3+12*s12^2*d*s14*s13^2-12*s14*s24*s13^3-4*s23^2*s14^2*s24+52*s23*s12*s14^2*s13-4*s23*s14*s13^3-24*s12*s34*s14*s24*s13-36*s12^2*s14*s13^2-8*s23*s12*d*s14^2*s24-12*s12*s34^2*s14*s13-12*s12*s14*s24^2*s13+3*s23*s12^2*d*s14*s13+2*d*s14*s13^4+2*s12^4*d*s14+4*s12^3*s34*d*s14-12*s34*s14*s13^3-12*s23*s12^2*s14*s13-s23*d*s14*s24*s13^2+3*s23*s34*d*s14*s24^2-12*s34*s14*s24*s13^2-12*s12^2*s34*s14*s24-8*s23*s12*s34*d*s14^2+2*s34^2*d*s14*s13^2-s23*s34*d*s14*s13^2+26*s23*s12^2*s14^2+8*s12*d*s14*s13^3+s23*s34^3*d*s14-4*s23*s34*s14*s13^2-36*s12^2*s34*s14*s13-4*s23*s12^2*s34*s14+2*d*s14*s24^2*s13^2-8*s23*s12*s34*s14*s13-4*s23*s12^2*s14*s24-8*s23*s12^2*d*s14^2-16*s23*s12*d*s14^2*s13-4*s23*s14*s24*s13^2-36*s12^2*s14*s24*s13-8*s23*d*s14^2*s13^2-8*s23*s12*s14*s24*s13-6*s12^2*s14*s24^2+12*s23^2*s12*s14^2-s23*s12^2*d*s14*s24-4*s23*s12^3*s14+12*s23^2*s14^2*s13+4*s12*s34^2*d*s14*s13+12*s23*s12*s14^2*s24+8*s12*s34*d*s14*s24*s13+4*s12*d*s14*s24^2*s13)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (1/2*s23^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)*(4*s23*s12*d*s14*s24^2+4*s23*s12*s34^2*d*s14+4*s23^2*s34*s14^2+4*s12^2*s34^3+24*s23*s12*s24*s13^2-s34^3*d*s13^2-28*s23^2*s14*s24*s13+8*s12*s34^3*s13+10*s23*s12^2*s34^2+72*s12^2*s34*s13^2-18*s12*s34*d*s24*s13^2-4*s23^2*d*s14^2*s13-60*s23*s12*s14*s13^2-2*s23^2*s14*s24^2-9*s12*s34^2*d*s13^2+36*s12^2*s24^2*s13+8*s23*s12^3*s13+8*s23*s34*s13^3+20*s23*s12*s34^2*s13-9*s12*d*s24^2*s13^2+4*s23*s12^3*d*s14-28*s23^2*s34*s14*s13+36*s12*s34^2*s13^2+8*s23*s12^3*s34+4*s24^3*s13^2+4*s23*d*s14*s24^2*s13+4*s23*s34^2*d*s14*s13+8*s23*s12*s34*d*s14*s24-3*s12^4*d*s24-6*s12^3*s34*d*s24-3*s12^3*s34^2*d+16*s23*s12*d*s14*s24*s13+4*s23*d*s14*s13^3+20*s12*s13^4-2*s23^2*s12^2*d*s14+24*s23*s12^2*s34*s13+72*s12*s34*s24*s13^2-s12^2*d*s24^3-3*s12^2*s34*d*s24^2+12*s12^3*s24^2+40*s12^2*s13^3-4*s23^2*s12*d*s14*s13-2*s12*d*s24^3*s13-3*s12^4*s34*d+12*s23*s12^2*s13^2+48*s12^3*s24*s13+4*s12^2*s24^3+40*s12^3*s13^2+4*s23^2*s12*d*s14*s24+8*s23*s34*d*s14*s24*s13+16*s23^3*s14^2-18*s12^2*s34*d*s13^2+20*s23*s12^2*s34*s24-10*s12^2*d*s13^3+12*s23*s34*s24^2*s13+10*s23*s12^2*s24^2+12*s24*s13^4-18*s12^2*s34*d*s24*s13-16*s23*s34*s14*s24*s13+8*s23*s12^2*s34*d*s14+12*s24^2*s13^3-4*s23^2*s34*d*s14^2-4*s23^2*s34*s14*s24-12*s12^3*s34*d*s13+10*s23*s24^2*s13^2-5*s12^4*d*s13+12*s34^2*s24*s13^2+16*s23*s12*s34*d*s14*s13-18*s12^2*d*s24*s13^2+8*s23*s12^3*s24+12*s23*s34^2*s24*s13-6*s34*d*s24*s13^3-8*s23*s12*s14*s24^2+48*s12*s24*s13^3-10*s23^2*s14*s13^2+12*s23*s12*s34^2*s24+12*s12^3*s34^2+4*s23*s24^3*s13-8*s23*s34^2*s14*s13+12*s23*s12*d*s14*s13^2+12*s34*s24^2*s13^2-5*s12*d*s13^4-8*s23*s14*s24^2*s13+12*s12^2*s34*s24^2-4*s23^2*d*s14^2*s24-10*s23^2*s12^2*s14-12*s12^3*d*s24*s13+4*s23*s12*s24^3+4*s23^2*s34*d*s14*s13+4*s23^2*s14^2*s24+8*s12*s24^3*s13-20*s23*s14*s13^3+72*s12^2*s24*s13^2-3*d*s24*s13^4-28*s23^2*s12*s14*s24-3*s12^2*s34^2*d*s24+4*s13^5+24*s23*s12*s34*s13^2+24*s12*s34^2*s24*s13-4*s23^2*s12*d*s14^2+8*s23*s24*s13^3-2*s23^2*s34^2*s14+2*s23*s12^4+20*s23*s12*s24^2*s13-3*d*s24^2*s13^3-28*s23^2*s12*s34*s14-2*s23^2*d*s14*s13^2-6*s12*s34*d*s24^2*s13+36*s12^2*s34^2*s13-3*s34^2*d*s13^3+12*s23*s12^2*d*s14*s13+24*s12*s34*s24^2*s13-3*s34*d*s24^2*s13^2-3*s12^3*d*s24^2-3*s34*d*s13^4+36*s12*s24^2*s13^2+4*s34^3*s13^2-60*s23*s12^2*s14*s13+8*s23*d*s14*s24*s13^2-d*s13^5-16*s23*s12*s34*s14*s24+24*s23*s12^2*s24*s13+24*s34*s24*s13^3+24*s12^3*s34*s24+12*s12^4*s24-s12^2*s34^3*d+8*s23*s34*d*s14*s13^2+12*s34*s13^4+4*s23*s12*s34^3+20*s12^4*s13+4*s12^5+48*s12^3*s34*s13-28*s23*s34*s14*s13^2-28*s23*s12^2*s34*s14-56*s23*s12*s34*s14*s13+10*s23*s34^2*s13^2-2*s12*s34^3*d*s13-12*s12*d*s24*s13^3+2*s23*s13^4-3*s34^2*d*s24*s13^2+40*s23*s12*s34*s24*s13-28*s23*s12^2*s14*s24+12*s34^2*s13^3+72*s12^2*s34*s24*s13-10*s12^3*d*s13^2+20*s23*s34*s24*s13^2-28*s23*s14*s24*s13^2-d*s24^3*s13^2-6*s12*s34^2*d*s24*s13-56*s23*s12*s14*s24*s13-8*s23*s12*s34^2*s14+20*s23^2*s12*s14^2+8*s23*s12^2*d*s14*s24-20*s23*s12^3*s14-2*s23^2*s34^2*d*s14-s12^5*d-2*s23^2*d*s14*s24^2+12*s12^2*s34^2*s24+48*s12*s34*s13^3-12*s12*s34*d*s13^3+4*s23^2*d*s14*s24*s13+20*s23^2*s14^2*s13+8*s23*s12*s13^3-9*s12^2*d*s24^2*s13-4*s23^2*s34*d*s14*s24+12*s23*s12*s34*s24^2+12*s12^4*s34-20*s23^2*s12*s14*s13+4*s23*s34^3*s13-9*s12^2*s34^2*d*s13+4*s23^2*s12*s34*d*s14)),

INT["pentagon1x123",3,21,4,2,{1,0,1,-2,2}] -> 
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)*(4*s12^2*s14^2*s24^2-2*d*s14^2*s24^2*s13^2-8*s23*s34*s14^3*s13-6*s23^2*d*s14^2*s24^2+8*s23*s34*d*s14^3*s13+8*s23*s12^2*d*s14^2*s24+12*s23^2*s12^2*s14^2-12*s23^2*s34*d*s14^2*s24-6*s12*s34*d*s14*s24^2*s13+s23^2*d*s14*s24^2*s13+4*s12^2*s34^2*s14^2-4*s12*s34^2*d*s14^2*s13-16*s23*s14^3*s13^2-10*s12^3*d*s14*s13^2+s23^2*s34^2*d*s14*s13+4*s23*s12^2*s34*d*s14*s24-6*s23*s12^2*d*s14*s24*s13+24*s23^2*s12*s14^2*s13-12*s23^2*d*s14^3*s24+8*s23*s12^2*s34*d*s14^2+12*s23^2*s34*s14*s24^2+8*s23*s34*d*s14^2*s13^2-8*s12*d*s14^2*s13^3+2*s23^2*s34*d*s14*s24*s13-2*s34^2*d*s14^2*s13^2+12*s23^2*s34*s14^3-6*s34*d*s14*s24*s13^3+24*s23*s12*s34*s14^2*s13+24*s12^2*s14^2*s24*s13+24*s23*s12*s14^2*s24*s13+24*s12^2*s34*s14^2*s13-18*s12^2*s34*d*s14*s13^2-6*s23*s12*s34*d*s14*s13^2-s12^2*d*s14*s24^3+12*s23*s34*s14^2*s13^2+12*s23*s14^2*s24*s13^2+2*s23*s12*d*s14*s24^3+s23^2*s12*d*s14*s24^2+4*s23*s34*d*s14*s24*s13^2-4*s12*d*s14^2*s24^2*s13-12*s23^3*s14^2*s24-12*s12*s34*d*s14*s13^3-3*s34^2*d*s14*s24*s13^2+s23^2*s12*s34^2*d*s14-8*s12*s34*d*s14^2*s24*s13+2*s23^2*s12*s34*d*s14*s13+4*s23^2*s14*s24^3-2*s23*s12^3*s34*d*s14+4*s23^2*d*s14^2*s24*s13-5*s12*d*s14*s13^4+12*s23*s12^2*s14^2*s24-3*s12^4*s34*d*s14+2*s23^2*s12^2*d*s14^2+4*s23^3*s14^2*s13+8*s12^3*s34*s14^2-12*s12*d*s14*s24*s13^3+2*s23*s34^3*d*s14*s13-3*s23^2*s12*d*s14*s13^2+4*s12^4*s14^2+16*s12*s34*s14^2*s24*s13+36*s23*s12^2*s14^2*s13+2*s23^2*s12*d*s14*s24*s13+2*s23^2*s12*s34*d*s14*s24+8*s34*s14^2*s13^3+8*s14^2*s24*s13^3+4*s23^2*d*s14^3*s13+2*s23*d*s14*s24^2*s13^2+8*s12*s14^2*s24^2*s13-8*s23*s12*d*s14*s13^3-18*s12^2*d*s14*s24*s13^2-10*s12^2*d*s14*s13^3+6*s23*s12*s34*d*s14*s24^2+2*s23*s34^2*d*s14*s13^2+8*s12^2*s34*s14^2*s24-6*s23*s12*d*s14*s24*s13^2-3*s12^2*s34*d*s14*s24^2-s23^2*s34^3*d*s14+4*s23^3*s12*s14^2-8*s23*s12*s34*s14^3+12*s23*s14^2*s13^3+s23^2*s12^2*s34*d*s14+8*s23^2*s34*s14*s24*s13+4*s23^2*s34*d*s14^2*s13-24*s23^3*s14^3-3*s12^3*s34^2*d*s14-3*s23^2*s34^2*d*s14*s24-3*s12^3*d*s14*s24^2-6*s23*s12^2*s34*d*s14*s13+6*s23*s34^2*d*s14*s24*s13+8*s34*s14^2*s24*s13^2-2*s12^2*s34^2*d*s14^2+8*s23*s12*s34^2*d*s14^2+24*s12^2*s14^2*s13^2-12*s23^2*s34*d*s14^3-2*d*s14^2*s13^4+2*s23^2*d*s14^2*s13^2+2*s23*d*s14*s24^3*s13+4*s23^2*s12*s34^2*s14+8*s23*d*s14^2*s24*s13^2+8*s12*s34^2*s14^2*s13-9*s12*s34^2*d*s14*s13^2+s23^2*d*s14*s24*s13^2+12*s23^2*s14^2*s13^2-12*s12^3*s34*d*s14*s13+4*s14^2*s24^2*s13^2-2*s23*s12^3*d*s14*s24-3*s23^2*s34*d*s14*s24^2-s23^2*s12^3*d*s14-18*s12*s34*d*s14*s24*s13^2+4*s23^2*s12*s34*d*s14^2-3*s34*d*s14*s13^4+8*s23^2*s12*s34*s14*s24-9*s12*d*s14*s24^2*s13^2-d*s14*s13^5-5*s12^4*d*s14*s13+16*s23*s34*d*s14^2*s24*s13-8*s12^3*d*s14^2*s13-18*s12^2*s34*d*s14*s24*s13-12*s12^2*d*s14^2*s13^2-4*s34*d*s14^2*s13^3-d*s14*s24^3*s13^2+16*s12*s14^2*s13^3+8*s23*s12*s34*d*s14^3-6*s23^2*s34^2*d*s14^2+12*s23*s12^3*s14^2+2*s23*s12^2*d*s14*s24^2+12*s23^2*s34^2*s14*s24+2*s23*s12^2*s34^2*d*s14-2*s23*d*s14*s24*s13^3-2*s12*s34^3*d*s14*s13+8*s23*s12*s34*d*s14*s24*s13+4*s23^2*s12*d*s14^3-12*s12*d*s14^2*s24*s13^2+6*s23*s34*d*s14*s24^2*s13+4*s23^2*s12*d*s14^2*s24-2*s12*d*s14*s24^3*s13-8*s23*s12*s14^3*s24-36*s23^2*s14^3*s13-3*s23^2*s12^2*d*s14*s13+4*s34^2*s14^2*s13^2-s34^3*d*s14*s13^2-s12^2*s34^3*d*s14+6*s23*s12*s34^2*d*s14*s24-8*s23^2*d*s14^4+24*s23^2*s34*s14^2*s24+16*s12^3*s14^2*s13-12*s23^3*s34*s14^2+2*s23*s12*s34^3*d*s14-3*s12^2*s34^2*d*s14*s24-s23^2*d*s14*s13^3+16*s23*s12*s34*d*s14^2*s13+8*s23*d*s14^3*s24*s13+16*s23*s12*d*s14^3*s13+4*s14^2*s13^4+12*s23*s12^2*s34*s14^2+8*s23*d*s14^3*s13^2-12*s12^2*s34*d*s14^2*s13+24*s12*s34*s14^2*s13^2-s23^2*d*s14*s24^3-9*s12^2*s34^2*d*s14*s13+24*s12*s14^2*s24*s13^2+8*s12^3*s14^2*s24-36*s23^2*s12*s14^3+4*s23*s12*s34^2*d*s14*s13-6*s12*s34^2*d*s14*s24*s13-4*s12^2*s34*d*s14^2*s24+4*s23*s12*d*s14*s24^2*s13-4*d*s14^2*s24*s13^3-4*s34*d*s14^2*s24*s13^2+4*s23^2*s34^3*s14+8*s23*s12*d*s14^3*s24+8*s23^2*s14^4+8*s23*s34^2*d*s14^2*s13+16*s23*s12*s34*d*s14^2*s24-9*s12^2*d*s14*s24^2*s13-2*s23*d*s14*s13^4-2*s12^4*d*s14^2+4*s23^2*s12*d*s14^2*s13-4*s12^3*s34*d*s14^2+s23^2*s12^2*d*s14*s24-32*s23*s12*s14^3*s13+12*s23^2*s14^3*s24-3*d*s14*s24^2*s13^3+16*s23*s12*d*s14^2*s24*s13-3*s34*d*s14*s24^2*s13^2+12*s23^2*s34^2*s14^2+8*s23*s12*d*s14^2*s24^2-12*s12^2*d*s14^2*s24*s13-s12^5*d*s14-2*s12^2*d*s14^2*s24^2+8*s23*d*s14^2*s24^2*s13-8*s23*s14^3*s24*s13-3*s34^2*d*s14*s13^3-2*s23*s12^4*d*s14+4*s23^2*s34^2*s14*s13-12*s23*s12^2*d*s14*s13^2+4*s23^2*s14*s24^2*s13-16*s23*s12^2*s14^3-2*s23*s34*d*s14*s13^3+s23^2*s34*d*s14*s13^2-12*s12^3*d*s14*s24*s13-8*s23*s12^3*d*s14*s13-6*s12^3*s34*d*s14*s24+36*s23*s12*s14^2*s13^2+12*s23^2*s14^2*s24^2+8*s23*s12^2*d*s14^3-3*d*s14*s24*s13^4-4*s12^3*d*s14^2*s24-3*s12^4*d*s14*s24-12*s12*s34*d*s14^2*s13^2+4*s23^2*s12*s14*s24^2)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (-1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(16*s23*s34^2*d*s14^2-4*s12^2*d*s14*s24^2-3*s12*d*s24^4+4*s23*s12*d*s14*s24^2-48*s23*s34^2*s14*s24-8*s34*d*s14*s24^3-18*s12^2*s14^2*s13+2*d*s14*s24*s13^3+4*s23*s12*s34^2*d*s14-8*s34*d*s14*s24*s13^2+20*s23^2*s34*s14^2-6*s12^2*s34^3-12*s23*s12*s24*s13^2+4*s34*s14^2*s24*s13-s34^5*d-4*s12^2*s34^2*d*s14+4*s12*s14*s24^3-16*s23*s34^3*s14-3*s34^3*d*s13^2+9*s12*d*s14^2*s13^2+28*s23^2*s14*s24*s13+20*s23*s12*s14^3-12*s12*s34^3*s13-10*s23*s12^2*s34^2-24*s12^2*s34*s13^2-24*s12*s14*s24*s13^2-6*s12*s34*d*s24*s13^2-4*s23^2*d*s14^2*s13+10*s23^2*s14*s24^2-3*s12*s34^2*d*s13^2-30*s12^2*s24^2*s13-12*s23*s14^3*s24+6*s34*s14^2*s24^2-4*s23*s34*s13^3+6*s12*s34*d*s14*s13^2-20*s23*s12*s34^2*s13+2*s12*s34^4-3*s12*d*s24^2*s13^2+2*s12^3*d*s14*s24+4*s23*s12^3*d*s14+3*s12^3*d*s14^2+32*s23*s34*d*s14^2*s24+28*s23^2*s34*s14*s13-3*s34^2*d*s14^2*s24-8*s12^3*s14*s24-30*s12*s34^2*s13^2-4*s23*s12^3*s34+2*s34^4*s13-6*s24^3*s13^2+4*s23*d*s14*s24^2*s13-24*s12*s34*s14*s13^2-52*s23*s34*s14^2*s24+4*s23*s34^2*d*s14*s13-6*s12*s34^3*d*s14+6*s12^2*d*s14*s24*s13+8*s23*s12*s34*d*s14*s24+4*s14*s24^4-2*s12^3*s34*d*s24+12*s34*s14*s24^2*s13-s12^3*s34^2*d+4*s23*d*s14*s13^3-8*s12^2*s34*d*s14*s24-26*s23*s34^2*s14^2+2*s23^2*s12^2*d*s14-12*s23*s12^2*s34*s13+2*s14^2*s24^3-60*s12*s34*s24*s13^2-3*s12^2*d*s24^3-9*s12^2*s34*d*s24^2+16*s23^2*s14^3-10*s12^3*s24^2+4*s23^2*s12*d*s14*s13-2*s12^4*s14-8*s12^3*s34*s14-6*s12*d*s24^3*s13-8*s23*s12*d*s14^3-26*s23*s14^2*s24^2+24*s34^2*s14*s24^2-18*s34^2*d*s24^2*s13-16*s12^3*s24*s13-6*s12^2*s24^3-4*s23^2*s12*d*s14*s24+8*s23*s34*d*s14*s24*s13-16*s23^3*s14^2-18*s34^2*d*s14*s24*s13-6*s14^2*s13^3-20*s23*s12^2*s34*s24-24*s23*s34*s24^2*s13-6*s14*s24^2*s13^2-10*s23*s12^2*s24^2-4*s24*s13^4-6*s34^2*s14*s13^2-8*s23^2*d*s14^3-2*s23*s14^2*s13^2-6*s12^2*s34*d*s24*s13+8*s23*s34*s14*s24*s13-10*s24^2*s13^3+12*s12*s34*s14*s24^2+2*s34^3*s14^2+12*s12*s34^2*s24^2+10*s34^4*s24+12*s34^2*s14*s24*s13-4*s23^2*s34*d*s14^2-3*s34^2*d*s14^2*s13-8*s12^3*s14*s13+20*s23^2*s34*s14*s24+2*s12*s24^4+6*s12^2*s34*d*s14*s13+8*s23*d*s14*s24^3-10*s23*s24^2*s13^2-18*s34^2*s24*s13^2-2*s14*s13^4+20*s23*s14^2*s24*s13+8*s34*s24^3*s13+20*s23*s34*s14^2*s13+24*s23*s34^2*d*s14*s24-6*s34*s14^2*s13^2+4*s14*s24^3*s13-4*s23*s12^3*s24-24*s23*s34^2*s24*s13-6*s14^2*s24*s13^2-2*s34*d*s24*s13^3+20*s23*s14^3*s13-6*s12^2*s34^2*s14+4*s23*s12*s14*s24^2-16*s12*s24*s13^3-18*s12*s34^2*d*s24^2+2*s23^2*s14*s13^2+6*s12*d*s14*s24*s13^2+8*s12^3*d*s14*s13-24*s23*s12*s34^2*s24-18*s12*s34*d*s14*s24^2-3*d*s24^4*s13-8*s23*s34*s24^3-3*d*s14^2*s24^2*s13-8*s12*s14*s13^3-10*s12^3*s34^2-10*s34^3*d*s24^2-6*s12^2*s14^2*s24+20*s23*s12*s34*s14^2-8*s23*s24^3*s13+4*s23*s34^2*s14*s13+12*s23*s12*d*s14*s13^2+2*s34*d*s14*s13^3-18*s34*s24^2*s13^2+12*s12^2*d*s14*s13^2+4*s23*s14*s24^2*s13-18*s12^2*s34*s24^2-4*s23^2*d*s14^2*s24-2*s34^4*d*s14+8*s12*s34^3*s24+2*s23^2*s12^2*s14-3*s12*d*s14^2*s24^2-12*s34*d*s24^3*s13-8*s23*s12*s24^3-8*s14*s24*s13^3-4*s23^2*s34*d*s14*s13+20*s23^2*s14^2*s24+3*d*s14^2*s13^3-12*s12*s24^3*s13-4*s23*s12*s14^2*s13-18*s12*s34^2*d*s14*s24-12*s12*s34*d*s24^3-3*s34^4*d*s13-24*s12^2*s24*s13^2-24*s12*s34*s14*s24*s13+2*s12*s34*d*s14^2*s13+28*s23^2*s12*s14*s24-8*s23*s34^3*s24-9*s12^2*s34^2*d*s24-12*s23*s12*s34*s13^2-36*s12*s34^2*s24*s13+4*s34^3*s14*s13-4*s23^2*s12*d*s14^2-4*s23*s24*s13^3+10*s23^2*s34^2*s14-18*s34*d*s14*s24^2*s13-12*s12^2*s14*s13^2+16*s23*d*s14^2*s24^2-20*s23*s12*s24^2*s13-d*s24^2*s13^3+s12^2*d*s14^2*s24+28*s23^2*s12*s34*s14+8*s12*s34*s24^3+8*s34^3*s24*s13-12*s12*s34^2*s14*s13-12*s12*s14*s24^2*s13+2*s23^2*d*s14*s13^2-18*s12*s34*d*s24^2*s13-30*s12^2*s34^2*s13-s34^2*d*s13^3+12*s23*s12^2*d*s14*s13+2*d*s14*s13^4+2*s12^4*d*s14-12*s12*s34^3*d*s24-2*s23*s24^4-12*s23*s34^2*s24^2-36*s12*s34*s24^2*s13+2*s12^3*s34*d*s14-9*s34*d*s24^2*s13^2-8*s34^3*d*s14*s24+6*s34^2*s14^2*s24-s12^3*d*s24^2-8*s34*s14*s13^3+2*s24^4*s13-30*s12*s24^2*s13^2-6*s34^3*s13^2+20*s34^2*s24^3-12*s12*s14^2*s24*s13-12*s12*s34*s14^2*s13+24*s23*s34*d*s14*s24^2-6*s12*d*s14*s24^3+10*s34*s24^4-12*s34^2*d*s14*s24^2+s12^2*s34*d*s14^2+8*s23*s12*s34*s14*s24-12*s23*s12^2*s24*s13-12*s34*s14*s24*s13^2-6*s34*d*s14^2*s24*s13-12*s12^2*s34*s14*s24+8*s23*d*s14^3*s24-18*s12*s14^2*s13^2+2*s34^5-48*s23*s34*s14*s24^2-20*s34*s24*s13^3-20*s12^3*s34*s24+s34*d*s14^2*s13^2-4*s12^4*s24-6*s12^3*s14^2-d*s24^5-3*s12^2*s34^3*d-4*s34^2*d*s14*s13^2-2*s23*s12^2*s14^2-4*s34*s13^4+8*s12*d*s14*s13^3+8*s23*s34^3*d*s14+4*s12*s34*s14^2*s24-8*s23*s12*s34^3-3*s34*d*s14^2*s24^2-12*s34^3*d*s24*s13+12*s34^2*s24^2*s13-16*s12^3*s34*s13+20*s23*s34*s14*s13^2-24*s12^2*s34*s14*s13+20*s23*s12^2*s34*s14+2*s12*s14^2*s24^2-8*s23*d*s14^3*s13-4*d*s14*s24^2*s13^2+40*s23*s12*s34*s14*s13-10*s23*s34^2*s13^2-6*s12*s34^3*d*s13-9*s34^2*d*s24*s13^2+2*s12*d*s14^2*s24*s13+4*s34^4*s14-40*s23*s12*s34*s24*s13+20*s23*s12^2*s14*s24+2*s12*s34^2*s14^2-10*s34^2*s13^3+20*s34^3*s24^2-5*s34*d*s24^4-60*s12^2*s34*s24*s13-20*s23*s34*s24*s13^2+16*s34*s14*s24^3+2*s34^2*s14^2*s13-6*s34^3*d*s14*s13+8*s23*s34*d*s14^3+9*s12^2*d*s14^2*s13+20*s23*s14*s24*s13^2-12*s23*s34*s14^3-3*d*s24^3*s13^2-24*s12^2*s14*s24*s13+d*s14^2*s24*s13^2-18*s12*s34^2*d*s24*s13+40*s23*s12*s14*s24*s13-6*d*s14*s24^3*s13-6*s12^2*s14*s24^2-2*s23*s34^4+4*s23*s12*s34^2*s14-12*s23^2*s12*s14^2-2*d*s14*s24^4-10*s34^2*d*s24^3+2*s23^2*s34^2*d*s14+2*s23^2*d*s14*s24^2-3*s12*s34^2*d*s14^2-18*s12^2*s34^2*s24+12*s12*s34^2*s14*s24-16*s12*s34*s13^3-16*s23*s14*s24^3-5*s34^4*d*s24+4*s12*s34^3*s14-4*s23^2*d*s14*s24*s13-12*s23^2*s14^2*s13-8*s12*s34^2*d*s14*s13-6*s12^2*s34*s14^2+20*s23*s12*s14^2*s24-d*s14^2*s24^3-3*s12^2*d*s24^2*s13+4*s23^2*s34*d*s14*s24-3*s12*s34^4*d-16*s12*s34*d*s14*s24*s13+2*s14^2*s24^2*s13+2*s24^5+16*s34^3*s14*s24-24*s23*s12*s34*s24^2-4*s12^4*s34+4*s23^2*s12*s14*s13-8*s23*s34^3*s13-s34^3*d*s14^2-6*s12*s34*d*s14^2*s24-3*s12^2*s34^2*d*s13-4*s23^2*s12*s34*d*s14-8*s12*d*s14*s24^2*s13)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)*(10*s23*s34^2*d*s14^2-4*s12^2*d*s14*s24^2-s23*s12*d*s14*s24^2-12*s23*s34^2*s14*s24-4*s34*d*s14*s24^3-18*s12^2*s14^2*s13-s23*s12*s34^2*d*s14-8*s34*d*s14*s24*s13^2+12*s23^2*s34*s14^2+4*s34*s14^2*s24*s13-4*s12^2*s34^2*d*s14+4*s12*s14*s24^3-4*s23*s34^3*s14+9*s12*d*s14^2*s13^2+20*s23*s12*s14^3+4*s23*d*s14^2*s24*s13-12*s23*s14^3*s24+6*s34*s14^2*s24^2+s23*s12^3*d*s14+3*s12^3*d*s14^2+20*s23*s34*d*s14^2*s24-3*s34^2*d*s14^2*s24-s23*d*s14*s24^2*s13-36*s23*s34*s14^2*s24-s23*s34^2*d*s14*s13-4*s12*s34^3*d*s14-2*s23*s12*s34*d*s14*s24+2*s14*s24^4+12*s34*s14*s24^2*s13-2*s23*s12*d*s14*s24*s13+s23*d*s14*s13^3-8*s12^2*s34*d*s14*s24-18*s23*s34^2*s14^2+2*s14^2*s24^3+24*s23^2*s14^3-8*s23*s12*d*s14^3-18*s23*s14^2*s24^2+12*s34^2*s14*s24^2-2*s23*s34*d*s14*s24*s13-12*s34^2*d*s14*s24*s13-6*s14^2*s13^3+2*s14*s24^2*s13^2+2*s34^2*s14*s13^2-8*s23^2*d*s14^3-10*s23*s14^2*s13^2-8*s23*s34*s14*s24*s13-s23*s12^2*s34*d*s14+12*s12*s34*s14*s24^2+2*s34^3*s14^2+12*s34^2*s14*s24*s13-3*s34^2*d*s14^2*s13+4*s23*s34*d*s14^2*s13+s23*d*s14*s24^3-4*s23*s14^2*s24*s13-4*s23*s34*s14^2*s13+3*s23*s34^2*d*s14*s24-2*s23*s12*s34*d*s14*s13-6*s34*s14^2*s13^2+4*s14*s24^3*s13-6*s14^2*s24*s13^2+20*s23*s14^3*s13+2*s12^2*s34^2*s14-4*s23*s12*s14*s24^2+4*s12^3*d*s14*s13-12*s12*s34*d*s14*s24^2-3*d*s14^2*s24^2*s13-6*s12^2*s14^2*s24-4*s23*s12*s34*s14^2-4*s23*s34^2*s14*s13+3*s23*s12*d*s14*s13^2+6*s12^2*d*s14*s13^2-4*s23*s14*s24^2*s13-s34^4*d*s14-3*s12*d*s14^2*s24^2+12*s23^2*s14^2*s24+3*d*s14^2*s13^3-20*s23*s12*s14^2*s13-12*s12*s34^2*d*s14*s24+8*s12*s34*s14*s24*s13+2*s12*s34*d*s14^2*s13+4*s34^3*s14*s13-12*s34*d*s14*s24^2*s13+10*s23*d*s14^2*s24^2+s12^2*d*s14^2*s24+4*s23*s12*d*s14^2*s24+4*s12*s34^2*s14*s13+4*s12*s14*s24^2*s13+3*s23*s12^2*d*s14*s13+d*s14*s13^4+s12^4*d*s14-4*s34^3*d*s14*s24+6*s34^2*s14^2*s24-12*s12*s14^2*s24*s13-12*s12*s34*s14^2*s13-s23*d*s14*s24*s13^2+3*s23*s34*d*s14*s24^2-4*s12*d*s14*s24^3-6*s34^2*d*s14*s24^2+s12^2*s34*d*s14^2-8*s23*s12*s34*s14*s24+4*s34*s14*s24*s13^2-6*s34*d*s14^2*s24*s13+4*s12^2*s34*s14*s24+4*s23*s12*s34*d*s14^2+8*s23*d*s14^3*s24-18*s12*s14^2*s13^2-12*s23*s34*s14*s24^2+s34*d*s14^2*s13^2-6*s12^3*s14^2-4*s34^2*d*s14*s13^2-s23*s34*d*s14*s13^2-10*s23*s12^2*s14^2+4*s12*d*s14*s13^3+s23*s34^3*d*s14+4*s12*s34*s14^2*s24-3*s34*d*s14^2*s24^2+2*s12*s14^2*s24^2-8*s23*d*s14^3*s13-4*d*s14*s24^2*s13^2+2*s12*d*s14^2*s24*s13+2*s34^4*s14+2*s12*s34^2*s14^2+2*s23*s12^2*d*s14^2+8*s34*s14*s24^3+2*s34^2*s14^2*s13-4*s34^3*d*s14*s13+8*s23*s34*d*s14^3+4*s23*s12*d*s14^2*s13+9*s12^2*d*s14^2*s13-12*s23*s34*s14^3+d*s14^2*s24*s13^2+2*s23*d*s14^2*s13^2-4*d*s14*s24^3*s13+2*s12^2*s14*s24^2-4*s23*s12*s34^2*s14-4*s23^2*s12*s14^2-s23*s12^2*d*s14*s24-d*s14*s24^4-3*s12*s34^2*d*s14^2+12*s12*s34^2*s14*s24-4*s23*s14*s24^3+4*s12*s34^3*s14-4*s23^2*s14^2*s13-8*s12*s34^2*d*s14*s13-6*s12^2*s34*s14^2-4*s23*s12*s14^2*s24-d*s14^2*s24^3-16*s12*s34*d*s14*s24*s13+2*s14^2*s24^2*s13+8*s34^3*s14*s24-s34^3*d*s14^2-6*s12*s34*d*s14^2*s24-8*s12*d*s14*s24^2*s13)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      ((s12^2*d*s14*s24^2-2*s23*s12*d*s14*s24^2+2*d*s14*s24*s13^3-2*s23*s12*s34^2*d*s14+2*s34*d*s14*s24*s13^2-4*s23^2*s34*s14^2+s12^2*s34^3+6*s23*s12*s24*s13^2+s12^2*s34^2*d*s14-2*s23^2*s14*s24*s13+2*s12*s34^3*s13-4*s23*d*s14^2*s24*s13+s23*s12^2*s34^2+18*s12^2*s34*s13^2-12*s12*s14*s24*s13^2-4*s23^2*d*s14^2*s13-30*s23*s12*s14*s13^2-3*s23^2*s14*s24^2+9*s12^2*s24^2*s13+4*s23*s12^3*s13+2*s23*s34*s13^3+6*s12*s34*d*s14*s13^2+2*s23*s12*s34^2*s13+2*s12^3*d*s14*s24+2*s23*s12^3*d*s14-2*s23^2*s34*s14*s13-4*s12^3*s14*s24+9*s12*s34^2*s13^2+2*s23*s12^3*s34+s24^3*s13^2-2*s23*d*s14*s24^2*s13-12*s12*s34*s14*s13^2-2*s23*s34^2*d*s14*s13+6*s12^2*d*s14*s24*s13-4*s23*s12*s34*d*s14*s24+2*s23*d*s14*s13^3+2*s12^2*s34*d*s14*s24+5*s12*s13^4+s23^2*s12^2*d*s14+6*s23*s12^2*s34*s13+18*s12*s34*s24*s13^2-4*s23^2*s14^3+3*s12^3*s24^2+10*s12^2*s13^3+2*s23^2*s12*d*s14*s13-2*s12^4*s14-4*s12^3*s34*s14+6*s23*s12^2*s13^2+12*s12^3*s24*s13+s12^2*s24^3+10*s12^3*s13^2-2*s23^2*s12*d*s14*s24-4*s23*s34*d*s14*s24*s13+8*s23^3*s14^2+2*s23*s12^2*s34*s24-2*s14*s24^2*s13^2+s23*s12^2*s24^2+3*s24*s13^4-2*s34^2*s14*s13^2+4*s23^2*d*s14^3+8*s23*s14^2*s13^2-4*s23*s34*s14*s24*s13+3*s24^2*s13^3+4*s23^2*s34*d*s14^2-8*s12^3*s14*s13-4*s23*s34*d*s14^2*s13-6*s23^2*s34*s14*s24+6*s12^2*s34*d*s14*s13+s23*s24^2*s13^2+3*s34^2*s24*s13^2-2*s14*s13^4+4*s23*s14^2*s24*s13+4*s23*s34*s14^2*s13+2*s23*s12^3*s24-2*s12^2*s34^2*s14-2*s23*s12*s14*s24^2+12*s12*s24*s13^3-7*s23^2*s14*s13^2+6*s12*d*s14*s24*s13^2+4*s12^3*d*s14*s13-8*s12*s14*s13^3+3*s12^3*s34^2+4*s23*s12*s34*s14^2-2*s23*s34^2*s14*s13+6*s23*s12*d*s14*s13^2+2*s34*d*s14*s13^3+3*s34*s24^2*s13^2+6*s12^2*d*s14*s13^2-2*s23*s14*s24^2*s13+3*s12^2*s34*s24^2+4*s23^2*d*s14^2*s24-7*s23^2*s12^2*s14-4*s14*s24*s13^3-2*s23^2*s34*d*s14*s13-4*s23^2*s14^2*s24+2*s12*s24^3*s13+16*s23*s12*s14^2*s13-10*s23*s14*s13^3+18*s12^2*s24*s13^2-8*s12*s34*s14*s24*s13-2*s23^2*s12*s14*s24+s13^5+6*s23*s12*s34*s13^2+6*s12*s34^2*s24*s13-4*s23^2*s12*d*s14^2+2*s23*s24*s13^3-3*s23^2*s34^2*s14+s23*s12^4-12*s12^2*s14*s13^2+2*s23*s12*s24^2*s13-4*s23*s12*d*s14^2*s24-2*s23^2*s12*s34*s14-4*s12*s34^2*s14*s13-4*s12*s14*s24^2*s13+s23^2*d*s14*s13^2+9*s12^2*s34^2*s13+6*s23*s12^2*d*s14*s13+d*s14*s13^4+s12^4*d*s14+6*s12*s34*s24^2*s13+2*s12^3*s34*d*s14-4*s34*s14*s13^3+9*s12*s24^2*s13^2+s34^3*s13^2-30*s23*s12^2*s14*s13-4*s23*s12*s34*s14*s24+6*s23*s12^2*s24*s13-4*s34*s14*s24*s13^2-4*s12^2*s34*s14*s24-4*s23*s12*s34*d*s14^2+6*s34*s24*s13^3+6*s12^3*s34*s24+3*s12^4*s24+s34^2*d*s14*s13^2+8*s23*s12^2*s14^2+3*s34*s13^4+4*s12*d*s14*s13^3+5*s12^4*s13+s12^5+12*s12^3*s34*s13-12*s23*s34*s14*s13^2-12*s12^2*s34*s14*s13-12*s23*s12^2*s34*s14+d*s14*s24^2*s13^2-24*s23*s12*s34*s14*s13+s23*s34^2*s13^2+s23*s13^4+4*s23*s12*s34*s24*s13-12*s23*s12^2*s14*s24+3*s34^2*s13^3-4*s23*s12^2*d*s14^2+18*s12^2*s34*s24*s13+2*s23*s34*s24*s13^2-8*s23*s12*d*s14^2*s13-12*s23*s14*s24*s13^2-12*s12^2*s14*s24*s13-4*s23*d*s14^2*s13^2-24*s23*s12*s14*s24*s13-2*s12^2*s14*s24^2-2*s23*s12*s34^2*s14+20*s23^2*s12*s14^2-10*s23*s12^3*s14+s23^2*s34^2*d*s14+s23^2*d*s14*s24^2+3*s12^2*s34^2*s24+12*s12*s34*s13^3-2*s23^2*d*s14*s24*s13+20*s23^2*s14^2*s13+2*s12*s34^2*d*s14*s13+4*s23*s12*s14^2*s24+4*s23*s12*s13^3+2*s23^2*s34*d*s14*s24+4*s12*s34*d*s14*s24*s13+3*s12^4*s34-14*s23^2*s12*s14*s13-2*s23^2*s12*s34*d*s14+2*s12*d*s14*s24^2*s13)*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)),

INT["pentagon1x123",3,21,4,3,{1,-3,1,0,2}] -> 
  INT["pentagon1x123",3,21,4,3,{1,-3,2,0,1}] *
      (-1) +
  INT["pentagon1x123",3,21,4,3,{2,-3,1,0,1}] *
      (-1) +
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(-2+d)^(-1)*s14^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)*(36*s23^3*s14*s13^4+9*s23^2*s34*d^2*s14^2*s24*s13^2+12*s23^2*s12*s34*d^2*s14^2*s24*s13-36*s23^2*s14^3*s24*s13^2+36*s23^3*s34*d^2*s14^2*s13^2-72*s23^2*s12^2*s34*s24*s13^2+6*s23^2*s34*d^2*s14*s24^3*s13+120*s23^3*s12*s14^2*s13^2-12*s23^2*s12*s34^3*d^2*s14*s13+18*s23^2*s12*s34^5*d+6*s23^3*s12^2*d*s14^3+24*s23^2*s34^3*d*s14^3-12*s23^3*d*s14^2*s24^2*s13-12*s23^2*s12^2*s34^3*d^2*s13+240*s23^2*s34^3*d*s14*s13^2-18*s23^3*s12^2*d*s14*s13^2-12*s23^2*s12^3*s34^2*s14+12*s23^4*s34*d*s14^2*s24-120*s23^3*s34*d*s14*s13^3+12*s23^2*s12*d*s14^4*s24+6*s23^3*s34^2*d^2*s14*s24^2-12*s23^4*s12*d^2*s14^2*s13-24*s23^2*s12^3*s34*s14*s13+24*s23^2*d*s14^3*s13^3-36*s23^2*s12*s34^2*d^2*s24*s13^2-12*s23^2*s12^2*s34*s14^3-24*s23^2*s34*d*s14^2*s24^2*s13-3*s23^2*s34^5*d^2*s14+144*s23^3*s34^3*s14^2-36*s23^2*s34^2*s14^2*s24^2+180*s23^2*s12*s34^3*d*s13^2+120*s23^3*s34^2*s14^2*s24-8*s23^2*s13^6-24*s23^2*s12^2*s34^4-12*s23^2*s12^2*d*s14^3*s13-36*s23^2*s34^5*s14+144*s23^3*s34*s14*s13^3+180*s23^2*s34^3*d*s24*s13^2+36*s23^4*s34^2*d*s14^2-12*s23^4*d^2*s14^3*s13+3*s23^2*s12*s34^3*d^2*s14^2-24*s23^2*s12*s34^3*d^2*s24*s13-12*s23^4*s34*d^2*s14^3-96*s23^2*s12^2*s34^3*s13-144*s23^3*s12*s34^2*d*s14*s13+48*s23^2*s12*d*s14*s24*s13^3-9*s23^2*s12*s34*d^2*s14^2*s24^2+36*s23^2*s34^5*d*s13+12*s23^3*s34^3*d^2*s14*s24+12*s23^3*s12*d^2*s14*s24*s13^2-144*s23^2*s12*s34*s14^2*s24*s13-180*s23^2*s12^2*s34*s14*s13^2+24*s23^2*s12^2*s34^3*d*s14-20*s23^2*s34^3*d^2*s13^3-72*s23^2*s34*s14^3*s24*s13-3*s23^2*d^2*s14^2*s24^3*s13+144*s23^3*s14^2*s13^3-12*s23^3*s14^3*s24^2-18*s23^2*s12*s34^2*d^2*s14*s13^2+6*s23^2*d*s24^3*s13^3-24*s23^3*s12*s34*d*s14^2*s24-180*s23^2*s34^2*s14*s24^2*s13+3*s23^2*s34^2*d^2*s14^3*s24-8*s23^2*s34^3*s24^3-6*s23^2*s12*s34^4*d^2*s24+48*s23^3*s14^3*s24*s13+6*s23^2*s12^3*s34*d^2*s14*s13+90*s23^2*s34^4*d*s13^2-36*s23^2*s12*s34^2*s14^3+144*s23^3*s34^2*s14*s24*s13+108*s23^2*s12^2*s34^2*d*s13^2+120*s23^2*s34*d*s14*s13^4-120*s23^2*s12*s34^4*s13-8*s23^2*s34^6-24*s23^2*s12^2*s13^4+6*s23^2*s12^2*s34*d^2*s14^2*s13-12*s23^2*s14^4*s13^2+6*s23^3*s34^4*d^2*s14+12*s23^3*s12*d*s14^3*s24+6*s23^3*d^2*s14*s24^2*s13^2+3*s23^2*s12^3*s34^2*d^2*s14+6*s23^2*s12^3*d*s13^3-30*s23^3*d*s14*s13^4-36*s23^2*s34^2*s14^3*s24-12*s23^2*s12^2*s34*d^2*s13^3-288*s23^3*s34^2*d*s14^2*s13+144*s23^2*s12*s34*d*s14*s24*s13^2-6*s23^2*s12^3*d*s14^2*s13+12*s23^4*d*s14^2*s24*s13-360*s23^2*s34^3*s14*s13^2+12*s23^3*s12^2*s14*s13^2-3*s23^2*s12^2*d^2*s24*s13^3+12*s23^4*s12*d*s14^3+12*s23^3*s34*d^2*s14^3*s13+9*s23^2*s34*d^2*s14*s24^2*s13^2+48*s23^3*s12*s14^3*s13+3*s23^2*s34^3*d^2*s14^2*s24+9*s23^2*s12^2*s34^2*d^2*s14*s24+18*s23^2*s12*s34*d^2*s14*s24^2*s13-3*s23^2*s34^4*d^2*s14*s24-9*s23^2*s12^2*d^2*s14^2*s24*s13-12*s23^3*s12^2*s34*d^2*s14^2+72*s23^2*s34*d*s24^2*s13^3-24*s23^3*s12*d*s14^2*s24*s13-24*s23^2*s12*d*s14^3*s24*s13+36*s23^3*s12*s34*d^2*s14*s13^2+3*s23^2*d^2*s14^2*s24^2*s13^2-12*s23^2*s34^2*s14^4+36*s23^3*s12*d*s14^4-24*s23^2*s12*s34^2*d*s14^2*s24-36*s23^2*s12*s34^2*s14*s24^2-36*s23^2*s12*s14^3*s13^2+3*s23^2*s34^2*d^2*s14^2*s24^2+144*s23^3*s34^3*s14*s13-24*s23^2*s12*s34*s14^3*s24+90*s23^2*s34*d*s24*s13^4-288*s23^2*s34^2*s14^2*s24*s13+3*s23^2*s12*d^2*s14^3*s13^2-48*s23^2*s34*s13^5-12*s23^2*s12^2*d*s14^2*s13^2-72*s23^3*s12*s34*d*s14*s24*s13+36*s23^3*s34^2*d^2*s14*s24*s13-12*s23^4*d^2*s14^2*s13^2+144*s23^2*s34*d*s14^2*s13^3-12*s23^2*s34*d*s14^3*s24^2+48*s23^3*s14*s24*s13^3+3*s23^2*s12^2*s34^2*d^2*s14^2-3*s23^2*s34^4*d^2*s14^2-336*s23^2*s34*s14*s24*s13^3-144*s23^2*s12^2*s34^2*s13^2-12*s23^2*s12^2*s34*d*s14^3-96*s23^3*d*s14^2*s13^3+6*s23^3*d*s14^3*s24^2-6*s23^2*s12*s34*d^2*s14^3*s24-72*s23^2*s12*s34*s14*s24^2*s13+6*s23^3*s34^2*d^2*s14^3-36*s23^2*s12^2*s14*s24*s13^2+3*s23^2*s12^2*d^2*s14*s13^3+s23^2*s12^3*d^2*s14^3-240*s23^2*s34^3*s24*s13^2+18*s23^2*s12^3*s34^2*d*s13-72*s23^2*s12*s34*s14^3*s13+48*s23^3*s34^3*s14*s24+3*s23^2*s12*d^2*s14^3*s24^2+3*s23^2*s12*d^2*s14^2*s13^3-36*s23^2*s12*s14*s24^2*s13^2-60*s23^2*s34^4*s14^2+9*s23^2*s34^2*d^2*s14^2*s24*s13-96*s23^2*s12*s14^2*s13^3-12*s23^2*s12*s14^3*s24^2-15*s23^2*s12*s34*d^2*s13^4-360*s23^2*s12*s34^2*s14*s24*s13-504*s23^2*s12*s34^2*s14*s13^2-96*s23^3*s34^3*d*s14^2-18*s23^2*s34^2*d^2*s14^2*s13^2+240*s23^2*s34^2*d*s14*s13^3+90*s23^2*s12*s34^2*d*s14^2*s13-24*s23^2*s24^2*s13^4-24*s23^2*s34^2*s24^3*s13+9*s23^2*s12*d^2*s14*s24^2*s13^2+48*s23^3*s12*s34^3*s14-72*s23^2*s34*s14^2*s24^2*s13+6*s23^2*s34^2*d*s14^4-102*s23^3*d*s14^3*s13^2+24*s23^2*d*s14*s24^2*s13^3+24*s23^3*s12^2*s34*s14^2+6*s23^2*s12*s34*d^2*s14^3*s13-12*s23^2*s34^3*d^2*s24^2*s13-9*s23^2*s12^2*s34^2*d^2*s24*s13-15*s23^2*s34^4*d^2*s24*s13-48*s23^4*s34*s14^2*s13+18*s23^2*d*s24*s13^5-6*s23^2*s12*d^2*s24*s13^4+72*s23^2*s34*d*s14^3*s13^2-6*s23^2*s34*d*s14^2*s24^3-48*s23^2*s12*s24*s13^4+24*s23^3*s14^2*s24^2*s13-132*s23^2*s34^2*s14^3*s13+48*s23^2*d*s14*s24*s13^4-60*s23^2*s14^2*s13^4-36*s23^2*s14^2*s24^2*s13^2-84*s23^3*s34^2*d*s14^2*s24+180*s23^2*s34^2*d*s24*s13^3-15*s23^2*s34^2*d^2*s13^4+54*s23^2*s12*s34^2*d*s24^2*s13-288*s23^2*s12*s34^2*s24*s13^2-9*s23^2*s12^2*s34*d^2*s14^2*s24-24*s23^2*s12*s24^2*s13^3-3*s23^2*s12*d^2*s13^5-12*s23^2*s14^4*s24^2+144*s23^3*s12*s34*s14*s13^2-18*s23^2*s34^2*d^2*s24^2*s13^2-12*s23^2*s34^3*d^2*s14*s24*s13-96*s23^2*s12*s34^3*s14^2+18*s23^2*s34^4*d*s24^2-48*s23^2*s12*s34^4*s24-3*s23^2*s12*d^2*s24^2*s13^3-84*s23^2*s12*s14*s13^4-12*s23^2*s12*s34*d*s14^4+24*s23^2*d*s14*s13^5-48*s23^3*s12*s34^3*d*s14+18*s23^2*s34*d*s24^3*s13^2-3*s23^2*s12*d^2*s14*s13^4-24*s23^2*s34*d*s14^3*s24*s13-24*s23^3*s12*s14^3*s24-12*s23^3*s12^2*d^2*s14^2*s13-15*s23^2*s34^4*d^2*s14*s13+9*s23^2*s12^2*s34^2*d^2*s14*s13-12*s23^2*s34^3*d^2*s14^2*s13-168*s23^3*s34*d*s14^2*s24*s13-60*s23^2*s34^3*s14*s24^2-12*s23^3*s34*d^2*s14^3*s24+24*s23^3*s34*s14*s24^2*s13+24*s23^3*s34^3*d^2*s14*s13+120*s23^3*s12*s34^2*s14^2+30*s23^2*d*s14^2*s24*s13^3-3*s23^2*d^2*s14^2*s13^4-18*s23^2*s12*d*s14^2*s24^2*s13+120*s23^3*s34*s14^4-36*s23^3*s12*s34^2*d*s14*s24-24*s23^2*s12^2*s34^3*s24+3*s23^2*d^2*s14^3*s24*s13^2+18*s23^2*s34^5*d*s24+9*s23^2*s12*s34*d^2*s14^2*s13^2+192*s23^2*s12*s34*d*s14*s13^3-24*s23^2*s34*s14^4*s13+12*s23^4*d^2*s14^3*s24+144*s23^2*s12*s34^2*d*s14*s24*s13+432*s23^3*s34^2*s14^2*s13-3*s23^2*s12^3*s34*d^2*s13^2+288*s23^2*s34^2*d*s14*s24*s13^2-288*s23^2*s12*s34*s14^2*s13^2-160*s23^2*s34^3*s13^3-60*s23^2*s12^2*s14*s13^3-12*s23^2*s12*s34^2*d*s14^3-15*s23^2*s12*s34^4*d^2*s13+36*s23^2*s34*d*s13^5+9*s23^2*s12*s34^2*d^2*s14*s24^2-3*s23^2*s34^2*d^2*s14^3*s13+9*s23^2*s34^2*d^2*s14*s24^2*s13-72*s23^2*s12*s14^2*s24*s13^2-168*s23^3*s12*s34*d*s14^2*s13-24*s23^2*s12^3*s34*s13^2+204*s23^3*s14^3*s13^2-48*s23^4*s14^4+48*s23^3*s12*s34*s14*s24*s13+6*s23^2*s12*d^2*s14^2*s24*s13^2-72*s23^4*s34*s14^3+54*s23^2*s12^2*s34*d*s24*s13^2-s23^2*s34^3*d^2*s24^3+6*s23^2*d*s13^6-12*s23^2*d*s14^3*s24^2*s13-144*s23^2*s34^2*s24^2*s13^2+18*s23^2*s12^2*d*s13^4-12*s23^2*s12*d*s14^4*s13-3*s23^2*s12*s34^5*d^2+48*s23^2*s12*s34^4*d*s14+144*s23^2*s12*s34*d*s24*s13^3+24*s23^2*s34^3*d*s14*s24^2-30*s23^2*s12*s34^2*d^2*s13^3+72*s23^4*s34*d*s14^2*s13+12*s23^3*s12^2*s34*d^2*s14*s13+6*s23^2*s12*s34^3*d^2*s14*s24-3*s23^2*s12^2*s34^3*d^2*s24-18*s23^3*s12^2*s34^2*d*s14+240*s23^3*s34*s14^2*s24*s13-9*s23^2*s12*s34*d^2*s24^2*s13^2-36*s23^3*s34*d*s14*s24^2*s13-12*s23^3*s34*d^2*s14^2*s24^2-3*s23^2*d^2*s24^2*s13^4-48*s23^3*d*s14*s24*s13^3-12*s23^4*s12*s34*d^2*s14^2-360*s23^2*s34^2*s14^2*s13^2-4*s23^2*s12^3*s14^3+204*s23^3*s34^2*s14^3+192*s23^2*s34*d*s14*s24*s13^3+18*s23^2*s12*s34^3*d*s24^2+36*s23^3*s34*d^2*s14*s24*s13^2+72*s23^2*s12^2*s34*d*s14*s13^2-84*s23^3*s12*d*s14^2*s13^2-12*s23^2*d*s14^4*s24*s13-6*s23^2*s12^3*s34*d*s14^2+12*s23^3*s12*d^2*s14*s13^3+24*s23^3*s12*s14*s24*s13^2-3*s23^2*s34^2*d^2*s24^3*s13+3*s23^2*s12^3*d^2*s14*s13^2-24*s23^2*s12^2*s24*s13^3-72*s23^2*s12*s34*s24^2*s13^2+36*s23^3*s34^2*d^2*s14*s13^2-24*s23^4*s12*s14^3-3*s23^2*d^2*s24*s13^5+18*s23^2*s12^3*s34*d*s13^2-3*s23^2*s34*d^2*s14^2*s24^3-3*s23^2*s34*d^2*s14^3*s13^2-4*s23^2*s14^3*s24^3+36*s23^2*s12*d*s24*s13^4-72*s23^2*s12^2*s34*s14^2*s13-6*s23^2*d*s14^2*s24^3*s13-180*s23^2*s34*s14*s13^4+24*s23^3*s14^5+36*s23^3*s34^4*s14-8*s23^2*s12^3*s13^3-3*s23^2*s34^5*d^2*s24+12*s23^3*s34^2*s14*s24^2+6*s23^3*d^2*s14^3*s13^2+90*s23^2*s34^4*d*s24*s13-336*s23^2*s12*s34^3*s14*s13-24*s23^2*s12*s34*d*s14^3*s13+72*s23^2*s34^3*d*s24^2*s13+48*s23^3*s34*s14^3*s24+54*s23^2*s12^2*s34^2*d*s24*s13+6*s23^2*s34^3*d*s24^3+6*s23^2*s34^6*d-30*s23^2*s34^2*d^2*s14*s13^3-s23^2*d^2*s13^6-504*s23^2*s34^2*s14*s24*s13^2+9*s23^2*s12*s34^2*d^2*s14^2*s13-3*s23^2*s12^2*d^2*s13^4-120*s23^2*s12*s14*s24*s13^3-12*s23^2*s12^2*s14^3*s13+6*s23^2*s12*d^2*s14*s24*s13^3+30*s23^2*s12*d*s14^2*s13^3+3*s23^2*s12*s34^2*d^2*s14^3-24*s23^3*s12*s14^4+216*s23^2*s34^2*d*s14^2*s13^2-6*s23^2*s34*d^2*s13^5+90*s23^2*s12*s34^4*d*s13-36*s23^3*s12*d*s14*s24*s13^2-96*s23^2*s34*s24^2*s13^3-24*s23^3*s14^4*s24+72*s23^2*s12^2*s34^2*d*s14*s13+144*s23^2*s34^3*d*s14^2*s13+120*s23^2*s34^4*d*s14*s13-12*s23^3*s12^2*d*s14^2*s13-192*s23^2*s12*s34^3*s24*s13+6*s23^2*s12^2*d*s14^4+9*s23^2*s12^2*d^2*s14*s24*s13^2+6*s23^3*s12^2*s34^2*d^2*s14+18*s23^2*s12^2*s34^3*d*s24-3*s23^2*s12*s34^4*d^2*s14+180*s23^2*s12*s34^2*d*s13^3-12*s23^2*s14^3*s24^2*s13-12*s23^3*s12^2*s14^3-44*s23^2*s34^3*s14^3-120*s23^2*s34*s24*s13^4+6*s23^2*s34*d^2*s14^2*s24^2*s13-336*s23^2*s34^3*s14*s24*s13-84*s23^3*d*s14^2*s24*s13^2-3*s23^2*d^2*s14*s13^5+48*s23^2*s12*d*s14*s13^4-3*s23^2*s34*d^2*s24^3*s13^2-12*s23^3*s12*s34*d^2*s14^3-18*s23^2*s12^2*s34*d*s14^2*s24-48*s23^2*s12*s34*d*s14^2*s24*s13-12*s23^2*s34*s14^3*s24^2-240*s23^2*s34*s14^2*s13^3+108*s23^2*s34^2*d*s24^2*s13^2+90*s23^2*s34*d*s14^2*s24*s13^2-24*s23^2*s34^5*s24-12*s23^3*d^2*s14^2*s24^2*s13-24*s23^4*s14^3*s24-3*s23^2*s12^3*s34*d^2*s14^2-96*s23^2*s14^2*s24*s13^3+18*s23^2*s12*d*s24^2*s13^3+24*s23^3*s12*s34^2*s14*s24-30*s23^2*s34^2*d^2*s24*s13^3-3*s23^2*s12^2*s34^4*d^2+12*s23^4*s12*s34*d*s14^2-84*s23^3*s12*s34^2*d*s14^2-3*s23^2*s12*s34^3*d^2*s24^2-12*s23^3*s12*d^2*s14^3*s13-9*s23^2*s12*s34^2*d^2*s24^2*s13-9*s23^2*s12^2*s34*d^2*s24*s13^2-72*s23^2*s12*s34^2*s14^2*s24+6*s23^2*s12^3*s34^3*d+24*s23^3*s12*s34*d^2*s14*s24*s13-36*s23^2*s12^2*s14^2*s13^2-144*s23^3*s34^2*d*s14*s24*s13-336*s23^2*s12*s34*s14*s13^3+90*s23^2*s12*s34*d*s13^4-240*s23^2*s34^2*s24*s13^3+12*s23^3*s34^3*d^2*s14^2+3*s23^2*d^2*s14*s24^3*s13^2-24*s23^4*s34^2*s14^2-36*s23^2*s14*s13^5+72*s23^2*s34^2*d*s14^3*s13+6*s23^2*d*s14^4*s24^2-360*s23^2*s12*s34*s14*s24*s13^2-12*s23^2*s12*s34*d^2*s14*s13^3-180*s23^2*s12^2*s34^2*s14*s13+18*s23^2*s12^2*s34*d^2*s14*s24*s13-6*s23^2*s12*d^2*s14^3*s24*s13-180*s23^2*s34^4*s14*s13+8*s23^5*d^2*s14^3+12*s23^4*d*s14^3*s24-24*s23^3*s12*d^2*s14^2*s24*s13-84*s23^2*s14*s24*s13^4-96*s23^2*s34^3*s24^2*s13-12*s23^2*d*s14^2*s24^2*s13^2+3*s23^2*s12^2*d^2*s14^3*s24-240*s23^2*s12*s34^3*s13^2+48*s23^3*s12*s34*s14^3-120*s23^3*s34^3*d*s14*s13+36*s23^2*d*s14^2*s13^4-24*s23^2*s12*s14^3*s24*s13+12*s23^3*s12*s34^2*d^2*s14*s24+24*s23^3*s34*s14^2*s24^2+90*s23^2*s12*s34*d*s14^2*s13^2-60*s23^2*s14*s24^2*s13^3+s23^2*d^2*s14^3*s24^3-48*s23^3*s12*d*s14*s13^3-3*s23^2*s34^4*d^2*s24^2-12*s23^4*d^2*s14^2*s24*s13+18*s23^2*s34^2*d*s24^3*s13-12*s23^2*s34*d*s14^4*s24-24*s23^2*s24*s13^5-180*s23^3*s34^2*d*s14*s13^2+18*s23^2*s12*d*s13^5+72*s23^2*s34*d*s14*s24^2*s13^2-8*s23^5*s14^3-360*s23^2*s34^2*s14*s13^3+90*s23^2*s34^2*d*s13^4-192*s23^2*s12*s34*s24*s13^3-18*s23^2*s12^2*d*s14^2*s24*s13+36*s23^3*d*s14^4*s24+48*s23^3*s12*s34*s14^2*s24-8*s23^2*s12^3*s34^3+9*s23^2*s12^2*s34*d^2*s14*s13^2+48*s23^2*s12*s34^3*d*s14*s24+54*s23^2*s12*s34*d*s24^2*s13^2+18*s23^2*d*s24^2*s13^4-12*s23^3*s34*d*s14^2*s24^2-18*s23^3*d*s14*s24^2*s13^2-120*s23^2*s34^4*s13^2+12*s23^3*s12*s34^3*d^2*s14+24*s23^3*s12^2*s14^2*s13-240*s23^2*s34^3*s14^2*s13-120*s23^2*s34^4*s24*s13+18*s23^2*s12*s34*d^2*s14*s24*s13^2+3*s23^2*s34^3*d^2*s14*s24^2-72*s23^2*s12^2*s34^2*s24*s13-24*s23^2*s12*s34*d^2*s24*s13^3-24*s23^4*s34*d^2*s14^2*s13-36*s23^3*s12^2*s34*d*s14*s13+24*s23^3*s12^2*s34*s14*s13+240*s23^3*s12*s34*s14^2*s13-36*s23^3*d*s14^4*s13-36*s23^2*s12^2*s34^2*s14^2-72*s23^2*s12*s34^2*s24^2*s13+72*s23^2*s12^2*s34*d*s13^3-30*s23^3*s34^4*d*s14+48*s23^3*s12*s14^2*s24*s13-s23^2*s12^3*d^2*s13^3-24*s23^4*s14^2*s13^2-18*s23^3*s34^2*d*s14*s24^2-12*s23^2*s34^2*s14*s24^3+6*s23^2*s34*d^2*s14^3*s24*s13+12*s23^4*s12*d*s14^2*s13+216*s23^2*s12*s34^2*d*s24*s13^2-18*s23^2*s12^2*s34^2*d^2*s13^2-15*s23^2*s34^4*d^2*s13^2-12*s23^2*s14*s24^3*s13^2-s23^2*d^2*s14^3*s13^3+12*s23^2*s34*d*s14^4*s13-120*s23^2*s12*s34*s13^4+6*s23^3*s12^2*d^2*s14*s13^2-30*s23^2*s34^3*d^2*s14*s13^2-24*s23^2*s12*s14^4*s24-3*s23^2*d^2*s14*s24*s13^4+48*s23^3*s12*s14*s13^3-12*s23^4*s34*d^2*s14^2*s24+144*s23^3*s34*s14*s24*s13^2+24*s23^3*s34*d^2*s14*s13^3-12*s23^3*d^2*s14^3*s24*s13-24*s23^2*s34^4*s24^2-12*s23^3*s12^2*s34*d*s14^2-96*s23^2*s34^3*s14^2*s24-288*s23^3*s34*d*s14^2*s13^2+192*s23^2*s12*s34^3*d*s14*s13+192*s23^2*s34^3*d*s14*s24*s13-120*s23^2*s34^2*s13^4+12*s23^4*s12*d^2*s14^3-s23^2*d^2*s24^3*s13^3+288*s23^2*s12*s34^2*d*s14*s13^2-12*s23^2*s34^2*d*s14^3*s24-s23^2*s12^3*s34^3*d^2-24*s23^3*s12*s34*d^2*s14^2*s24+3*s23^2*d^2*s14*s24^2*s13^3-24*s23^2*s12*s13^5-288*s23^2*s12*s34^2*s14^2*s13+90*s23^2*s34^2*d*s14^2*s24*s13+36*s23^3*s12*s34^2*d^2*s14*s13-102*s23^3*s34^2*d*s14^3-3*s23^2*s12^3*s34^2*d^2*s13+144*s23^2*s12*s34^3*d*s24*s13-18*s23^2*s12*s34*d*s14^2*s24^2+432*s23^3*s34*s14^2*s13^2-48*s23^3*s34^3*d*s14*s24+120*s23^3*s14^2*s24*s13^2-3*s23^2*s12^2*s34*d^2*s14^3-84*s23^2*s12*s34^4*s14-288*s23^2*s34*s14^2*s24*s13^2-3*s23^2*s12^2*d^2*s14^3*s13-24*s23^2*s12*s34^3*s24^2+36*s23^2*s34^4*d*s14^2-240*s23^2*s12*s34^2*s13^3-12*s23^2*s12^2*s34^2*d*s14^2-84*s23^2*s34^4*s14*s24+6*s23^2*d*s14^4*s13^2-30*s23^2*s34^3*d^2*s24*s13^2-36*s23^2*s12^2*s34^2*s14*s24-12*s23^2*s12^2*s14^4-24*s23^2*s34*s14*s24^3*s13+12*s23^3*s12^2*s34^2*s14+84*s23^4*d*s14^3*s13-12*s23^2*s34*d^2*s24^2*s13^3-12*s23^2*s34*d^2*s14*s24*s13^3-8*s23^2*s24^3*s13^3-144*s23^3*s34*d*s14*s24*s13^2+18*s23^2*s12^2*d*s24*s13^3-s23^2*s34^3*d^2*s14^3-204*s23^3*s34*d*s14^3*s13+6*s23^3*s12^2*d^2*s14^3+72*s23^2*s12^2*s34^3*d*s13+120*s23^3*s14^4*s13+48*s23^2*s34^4*d*s14*s24-24*s23^2*s12*s34^5+30*s23^2*s34^3*d*s14^2*s24-36*s23^3*s34*d*s14^4+24*s23^2*s34^5*d*s14-60*s23^2*s12^2*s34^3*s14-72*s23^2*s12^2*s34*s14*s24*s13+12*s23^3*s12*d^2*s14^3*s24-30*s23^2*s12*s34^3*d^2*s13^2+144*s23^3*s12*s34^2*s14*s13+6*s23^3*d^2*s14*s13^4-3*s23^2*s12^3*d^2*s14^2*s13+36*s23^3*s34^2*d^2*s14^2*s13-72*s23^4*s14^3*s13-48*s23^2*s34^5*s13+18*s23^2*s12^2*s34^4*d-15*s23^2*s34*d^2*s14*s13^4-24*s23^2*s12^2*s34*d*s14^2*s13+12*s23^3*s34*d^2*s14*s24^2*s13+12*s23^3*d^2*s14*s24*s13^3-132*s23^2*s34*s14^3*s13^2+6*s23^3*d^2*s14^3*s24^2+12*s23^3*d^2*s14^2*s13^3+12*s23^3*s14*s24^2*s13^2+408*s23^3*s34*s14^3*s13-24*s23^2*s12*s34*d*s14^3*s24-120*s23^2*s12*s34^3*s14*s24+84*s23^4*s34*d*s14^3+30*s23^2*s12*s34^3*d*s14^2+24*s23^2*s12^2*d*s14*s13^3+72*s23^2*s34^2*d*s14*s24^2*s13-6*s23^2*s34^5*d^2*s13+216*s23^3*s34^2*s14*s13^2-12*s23^2*s12^3*s14*s13^2-24*s23^2*s12*d*s14^2*s24*s13^2+48*s23^4*d*s14^4-12*s23^4*s34^2*d^2*s14^2+3*s23^2*s12^2*d^2*s14^2*s13^2-96*s23^2*s12^2*s34*s13^3-44*s23^2*s14^3*s13^3+36*s23^4*d*s14^2*s13^2-180*s23^2*s34*s14*s24^2*s13^2-3*s23^2*s34*d^2*s14^3*s24^2-3*s23^2*d^2*s14^3*s24^2*s13-12*s23^2*s34*d^2*s14^2*s13^3-9*s23^2*s12*d^2*s14^2*s24^2*s13-24*s23^2*s34*s24^3*s13^2-12*s23^2*s34^2*d*s14^2*s24^2+36*s23^2*s12*s34^4*d*s24-24*s23^2*s12^3*s34^2*s13+3*s23^2*d^2*s14^2*s24*s13^3-s23^2*s34^6*d^2-12*s23^2*s12*d*s14^3*s13^2-15*s23^2*s34*d^2*s24*s13^4-12*s23^2*d*s14^3*s24*s13^2-12*s23^2*s12^2*s14^3*s24+3*s23^2*s34^2*d^2*s14*s24^3+3*s23^2*s12^2*s34^3*d^2*s14-144*s23^3*s12*s34*d*s14*s13^2+120*s23^2*s34^3*d*s13^3-18*s23^2*s34^2*d^2*s14*s24*s13^2+6*s23^2*s12*s34^2*d^2*s14^2*s24+18*s23^2*s12*s34^2*d^2*s14*s24*s13)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (1/2*(30*s23^2*s34*d*s24^2*s13^2-60*s23*s34*s14^3*s24^2-21*s23*s34^2*d*s14*s24^3+3*s23^3*s12^2*d*s14*s24-24*s23*s12*s34*d*s14*s13^3+30*s23^2*s34^3*d*s14*s24-36*s23*s34^2*d*s14*s24*s13^2-54*s12^2*d*s14^2*s24^2*s13-12*s23*s14^2*s24*s13^3-120*s23*s12*s34*s14^3*s24-4*s23^4*s12*d*s14^2+60*s34*s14*s24^3*s13^2-30*s23*s12*d*s14^2*s24^2*s13+32*s23*s12*d^2*s14^2*s24^3+144*s12^2*s34^2*s14*s24^2-36*s23*s34^2*s14^2*s24*s13-d^2*s14*s24^6-64*s23^3*d*s14^4-12*s12^2*s34*d*s14*s13^3+126*s23*s12*s34^2*s14*s24^2-18*s34*d*s14^2*s24^3*s13-16*s23^2*s34*d^2*s24*s13^3-72*s23^3*s12*s14^2*s24+18*s23^3*s34*d^2*s14*s24*s13-36*s23^2*s12^2*s34*d*s14*s13-18*s12^2*s34^2*d^2*s14*s24^2+48*s23^3*s12*d*s14^2*s13-36*s23*s12^3*s34*s14^2+48*s23^4*d*s14^3+24*s23*s34*d*s14^3*s24^2+24*s23^2*s34*s14*s24^3+2*s14*s24^6+20*s23^2*s12*s34^3*d*s24-36*s23*s12*d^2*s14*s24^3*s13+9*s23^3*s12*s34^2*d^2*s14+20*s12^3*s14*s13^3-6*s23^2*s12^2*s34*d^2*s13^2-270*s23^2*s34^2*s14^2*s13-18*s12*s34^2*d*s14^2*s24*s13-36*s23*s12^3*s34*d^2*s14*s24+126*s23*s12^2*s14*s24*s13^2-3*s23*s12^2*d^2*s14*s13^3-s23^3*s12^3*d^2*s14-9*s23^2*s12^3*d^2*s14*s13-60*s23*s14^3*s24^2*s13-90*s23^2*s12*s34^2*s14^2+72*s12*s14^2*s24^3*s13+33*s23^3*s34^2*d^2*s14*s13-30*s12^2*d^2*s14*s24^3*s13+24*s23*s12^2*s34*d*s14^3-9*s23*s34^2*d^2*s14*s24^2*s13-21*s23*d*s14*s24^3*s13^2-6*s12*s34^3*d*s14^2*s24-6*s12*s34^4*d*s14*s24-27*s23*s12*s34^2*d^2*s14*s24^2-6*s23^2*s12^3*s34*d*s14+12*s23^3*s12*s14*s24*s13-12*s23^2*s34^5+24*s23^2*s12*s34*d^2*s14^2*s13-27*s12*s34^2*d*s14^2*s24^2-126*s23^3*d*s14^2*s13^2+33*s23^2*s12^2*s34*d*s14^2-216*s23^2*s34*s14*s24*s13^2-24*s23^2*s34*d^2*s14*s13^3+8*s23^2*d^2*s14^3*s24*s13-6*s23*s12*s34^3*d^2*s14*s24+120*s23*s12^3*s14*s24*s13-60*s23*s12^2*s14^3*s13+72*s23^2*s12^2*s34*s14*s24+18*s23^3*s12*s34^2*s14-3*s23^2*s12^2*d^2*s14*s13^2-36*s12^3*s34*d*s14^2*s24+24*s23^3*s34^2*d^2*s14^2+24*s23^2*s12^3*d^2*s14^2+90*s23^2*s34^2*d*s14*s24*s13+10*s23^2*s12^2*s34^3*d-144*s23^3*s34*d*s14^3-10*s23*s12^3*d*s14^2*s13-3*s23*s12^4*d*s14*s13+11*s23^3*d^2*s14*s13^3+18*s23^3*s14*s24*s13^2-3*s12^2*s34^3*d^2*s14*s24+189*s23^2*s34*d*s14^2*s13^2-9*s23*s12^3*s34^2*d^2*s14-12*s12*s34^2*d^2*s14*s24^3-12*s12^3*d^2*s14*s24*s13^2-9*s12^3*s34^2*d*s14^2-252*s23^2*s12*s14^2*s24*s13-90*s23^2*s12*s14^2*s24^2-9*s34*d*s14^2*s24^4-6*s23^2*s12*s34^2*d^2*s14*s24-24*s12^3*s34^2*d*s14*s13+72*s23^2*s12*d^2*s14^2*s24^2-180*s23^2*s12*s34*s14^2*s13+96*s12^3*s34^2*s14*s24+60*s23*s12^3*s14*s24^2-15*s12^2*d^2*s14*s24^4+30*s12*s14^2*s24^4-24*s12*s34^3*d*s14*s24*s13+12*s23^2*s12*d*s14*s24^3-24*s23*s34*d*s14*s24*s13^3+6*s23*s14*s24^5-9*s23*d^2*s14*s24^4*s13-36*s23^2*s34^2*s24^2*s13+180*s12*s34*s14*s24^2*s13^2+36*s23^2*s12*d^2*s14^2*s24*s13-3*d*s14^2*s24^5-63*s23*s12^2*s34*d*s14*s13^2-3*d*s14*s24^2*s13^4+264*s23^3*s14^3*s13-18*s23^2*s34^2*d*s14*s24^2-15*s23*s12*d^2*s14*s24^4-15*s12^4*d*s14^2*s24-d^2*s14*s24^3*s13^3-18*s23*s12*s34^2*d*s14^2*s13+180*s12^2*s34^2*s14*s24*s13-72*s12*s34^2*d*s14*s24^2*s13+20*s23^2*s12*s34^4*d-3*s34*d^2*s14*s24^3*s13^2-27*s23*s12*d^2*s14*s24^2*s13^2-126*s23^2*s14^2*s24^2*s13-12*s23^2*s13^5-3*s34*d^2*s14*s24^5+24*s12^4*s34^2*s14+24*s23*s12^2*d*s14^3*s13-84*s23^2*s12^2*s14^3-18*s12^2*d^2*s14*s24^2*s13^2+54*s12*s14^2*s24^2*s13^2-72*s23^2*s12*s34^3*s14+54*s23*s12^2*s34*s14*s13^2+20*s23^2*s34^4*d*s24+84*s23^2*s14^4*s24-6*s23^2*s34^2*d^2*s24^2*s13+36*s23^3*s12*s34*s14*s13-72*s23^2*s12*s34^2*s24*s13-48*s12^3*s34*d*s14*s24*s13+108*s23*s12*s34^2*s14*s24*s13-126*s23^2*s12^2*s34*s14^2-9*s12^2*s34^2*d*s14^2*s13-3*s23^3*s12*d^2*s14*s24^2+46*s23^2*d*s14^3*s13^2-27*s23^2*d*s14^2*s24^3+8*s23*d^2*s14^2*s24^3*s13+18*s23*s14*s24^2*s13^3-60*s23^2*s34*s13^4-36*s23^3*s12*d^2*s14^3-24*s23*s34*s14^3*s24*s13+60*s12*s34^3*s14*s24^2-3*s12^5*s34*d^2*s14-21*s23*s12^2*s34^3*d*s14-135*s23^3*s34*d*s14*s13^2+60*s12^2*s14^2*s24^3-108*s23*s12*s34*s14^2*s24^2+6*s23^3*s12^2*s14*s24-72*s23^2*s34^3*s14*s24+s12^6*d*s14-3*d*s14^2*s24^2*s13^3-18*s23^3*s12^2*d*s14^2+63*s23^2*s34^3*d*s14^2+54*s23*s34^2*s14*s24^2*s13-9*s34*d*s14^2*s24^2*s13^2+108*s12^2*s34*s14^2*s24^2-18*s23^2*s34^2*d^2*s14^2*s13-45*s23^3*s34^3*d*s14+6*s23*s12^5*s14-3*s12^4*d^2*s14*s13^2+12*s34*s14*s24^5+72*s12^3*s34*s14^2*s24-168*s23^2*s12*s14^3*s24+60*s12^4*s34*s14*s24-216*s23^2*s12*s34^2*s14*s13+24*s23*s12^2*s34*d^2*s14^2*s24+72*s23^2*s12*s14*s24^2*s13-54*s23^2*s34^4*s14-28*s23^2*s12*d^2*s14^3*s24-9*s12^4*s34*d*s14^2-12*s34*d*s14*s24^4*s13+36*s23^2*s12^2*s14*s24^2-12*s23^2*s34^3*s24^2-120*s23^2*s34^2*s13^3-27*s23^2*s12*d^2*s14*s24^2*s13+36*s12*s34*s14^2*s24*s13^2-18*s23*s12*s34^2*d^2*s14*s24*s13-20*s23^2*s34^3*d^2*s13^2-3*s23^2*d^2*s14*s24*s13^3+192*s12*s34*s14*s24^3*s13+30*s12^2*s14*s24^4+30*s12^4*s14^2*s24-8*s12^3*d*s14*s13^3+180*s23^3*s14^2*s13^2-6*s23^3*s12*s34*d^2*s14*s24-9*s23*s12^2*s34^2*d^2*s14*s13-36*s23^2*s12*d*s14*s24*s13^2+60*s12*s14*s24^4*s13-144*s23^3*d*s14^3*s13+84*s23^2*s12*s14^4+6*s23^3*s12^2*s34*s14-16*s23^4*s34*d^2*s14^2-48*s23*s12^2*s14^2*s13^2-30*s23*s12^3*d^2*s14*s24^2-3*s12*d^2*s14*s24^2*s13^3+84*s23*s12^3*s34*s14*s13-9*s12^2*s34^2*d^2*s14*s24*s13-s34^3*d^2*s14*s24^3-96*s23^2*s12*s34*s13^3-s12^3*s34^3*d^2*s14-3*s34^4*d*s14*s24^2-81*s23^2*s12^2*d*s14^2*s24-3*s12^3*s34*d^2*s14*s13^2-3*s34^3*d*s14^2*s24^2+3*s23^2*d*s14*s24^4-9*s23*s12^4*s34*d^2*s14-36*s12^3*d*s14^2*s24*s13+92*s23^2*s34*d*s14^3*s13+8*s23^4*d^2*s14^2*s24+138*s23^3*s34*s14*s13^2+20*s14*s24^3*s13^3-18*s23^2*s12*s34*d*s14*s24^2-21*s23*s34^3*d*s14*s24^2-12*s23^4*s34*s14^2+6*s12^2*s14*s13^4-6*s23*s12*s34^4*d*s14+18*s23^2*d^2*s14^2*s24^2*s13+18*s23^3*s12*s34*d^2*s14*s13+24*s23*s12^3*d*s14^3-36*s23^3*s14^2*s24^2+18*s12^4*s14^2*s13+20*s12^3*d*s14*s24^3-16*s23*d*s14^2*s24^4-27*s12*d*s14^2*s24^2*s13^2-3*s12^2*s34^4*d*s14-2*s23^2*s34^3*d^2*s24^2+8*s23^2*s12*s34*d^2*s14^3+72*s12^3*s14^2*s24*s13+27*s23^2*s12*s34^2*d*s14^2+8*s23^2*s12*d^2*s14^3*s13-120*s23^2*s34^3*s13^2-4*s23^2*s12*d^2*s13^4-15*s12^4*d^2*s14*s24^2+12*s23^2*s34^2*d^2*s14^2*s24+48*s12^4*s34*s14*s13+48*s23^2*s12*s14^3*s13+10*s23^2*d*s24^2*s13^3+36*s12^3*s34*s14^2*s13+100*s23^2*s34^2*d*s13^3-16*s23^4*d^2*s14^2*s13-16*s23^2*s34*d*s14^3*s24-48*s12*s34*d*s14*s24^3*s13-3*s23^2*s12^2*s34^2*d^2*s14-6*s23^2*s34^4*d^2*s14+24*s23*s12^2*d^2*s14^2*s24*s13+90*s23^2*s12*s34*d*s14*s13^2+6*s23^3*s34*s14*s24^2-18*s12*s34*d*s14^2*s24*s13^2+33*s23^2*s12^2*d*s14^2*s13-30*s12^3*s34*d^2*s14*s24^2+39*s23^2*d*s14*s13^4-12*s12*d^2*s14*s24^3*s13^2-3*s23*s12^5*d^2*s14-9*s23*s12^3*d^2*s14*s13^2+27*s23^2*d*s14^2*s24*s13^2-48*s23*s14^3*s24^3+72*s23^2*s12^2*s14*s24*s13-96*s23^2*s34^3*s24*s13+120*s23*s12^3*s34*s14*s24+6*s12^2*s34^3*s14^2-10*s23*s12^3*s34*d*s14^2-27*s23*s12^2*s34^2*d^2*s14*s24-12*s12^4*s34*d*s14*s13-36*s23^2*s12^2*s34^2*s13-6*s23^2*d*s14*s24^3*s13-9*s23*s34*d^2*s14*s24^2*s13^2+96*s23^3*d*s14^3*s24+12*s23^3*s12*s34*s14*s24-12*s23^2*s14^4*s13+63*s23^2*d*s14^2*s13^3+82*s23^2*d*s14^3*s24^2-27*s12^2*s34^2*d*s14^2*s24+9*s23^3*s12*d^2*s14*s13^2-12*s23*s34^3*s14^2*s24-6*s23*d*s14^2*s24*s13^3-4*s23^2*s12*s34^4*d^2+50*s23^2*s34^4*d*s13+180*s23*s12^2*s34*s14*s24^2+30*s23^2*s12^2*s34^2*d*s13+48*s23^3*s12*s34*d*s14^2-2*s23^2*s34^2*d^2*s14^3-72*s23^2*s12*s34*d*s14*s24*s13+48*s23*s12*d*s14^3*s24*s13+18*s14^2*s24^4*s13+180*s23^3*s34^2*s14^2+72*s23*s12^2*d*s14^3*s24-30*s23^2*s12^3*s14^2+90*s23^2*s34*d*s14*s24*s13^2-3*s23^3*d^2*s14*s24^2*s13-72*s23^2*s14*s24*s13^3-3*s12*s34^3*d^2*s14*s24^2+80*s23^2*s12*s34*d*s13^3+6*s12*d*s14*s24^5-9*d*s14^2*s24^3*s13^2-48*s23*s12^2*s34^2*s14^2+252*s23*s12*s34*s14*s24^2*s13+120*s12^2*s14*s24^3*s13-96*s23*s12*s14^2*s24*s13^2+18*s12^2*s34*s14^2*s13^2-6*s23^2*s34*d^2*s14*s24^2*s13-33*s23^3*d*s14*s24*s13^2-36*s23*s12*s34*s14^2*s13^2+6*s12^2*s14^2*s13^3+54*s12^2*s14^2*s24*s13^2-216*s23^2*s34^3*s14*s13+120*s23*s12*s14*s24^3*s13+6*s23^3*s12^2*s14*s13+24*s23*d*s14^3*s24^2*s13+42*s23*s34^2*s14*s24^3-54*s12^2*s34*d*s14^2*s24*s13+10*s23^2*d*s13^5+20*s23^2*d*s24*s13^4-3*s23^3*s34*d*s14*s24^2-36*s23*s12^3*d^2*s14*s24*s13-36*s23^2*s12*d*s14^4-24*s23^2*s12*s34^2*d^2*s13^2+60*s23^2*s12*s34*d*s24*s13^2-3*s23^3*s12^2*s34*d^2*s14+42*s23*s14*s24^3*s13^2+288*s12^2*s34*s14*s24^2*s13+33*s23^2*s34*d*s14^2*s24^2-3*s34^2*d^2*s14*s24^3*s13-72*s12*s34*d*s14*s24^2*s13^2-s23^3*d^2*s14*s24^3+72*s12*s34^2*s14*s24*s13^2+80*s23^2*s34^3*d*s24*s13-6*s23*d*s14*s24*s13^4+192*s12^3*s34*s14*s24*s13+15*s23*s12^4*d*s14*s24-64*s23*s12^3*d*s14^2*s24-54*s23*s12^2*s34*d^2*s14*s24*s13-54*s23*s12^2*d^2*s14*s24^2*s13-144*s23*s12^2*s14^3*s24-18*s23^2*s12^2*d^2*s14*s24^2-18*s12^3*s34*d*s14^2*s13-3*s23*s34*d*s14*s24^4+6*s12^5*s14^2-6*s23^3*s12*d^2*s14*s24*s13-6*s34^2*d*s14*s24^4+36*s23^2*s12*s34*d^2*s14^2*s24-3*s23^2*s12*s34^3*d^2*s14-9*s23^2*s34*d^2*s14*s24^3-2*s23^2*s12^2*s34^3*d^2-18*s23^3*d*s14^2*s24^2-18*s23*s34*d^2*s14*s24^3*s13-18*s23^2*d*s14*s24^2*s13^2-18*s23*s12^2*s34*d*s14*s24^2-9*s12^4*d*s14^2*s13-96*s23^2*s34*s24*s13^3+234*s23^2*s34^2*d*s14*s13^2-24*s23^3*s14^3*s24+42*s23*s12^3*s14*s13^2-36*s12*d*s14^2*s24^3*s13-3*s12^4*s34^2*d^2*s14+30*s23^2*s12*d*s14*s13^3+30*s23*s34*s14*s24^4+6*s34^3*s14^2*s24^2-24*s12^3*s34^2*d*s14*s24+12*s23^2*s12*d^2*s14^2*s13^2+60*s12^3*s34^2*s14*s13-6*d*s14*s24^4*s13^2-252*s23^2*s12*s34*s14^2*s24+60*s12^4*s14*s24*s13-9*s34^2*d*s14^2*s24^2*s13+120*s12^3*s14*s24^2*s13+82*s23^2*s12^2*d*s14^3-9*s23^2*s12*s34^2*d^2*s14*s13-63*s23*s12^2*d*s14*s24*s13^2-90*s23^2*s12*s14^2*s13^2+24*s23*s12*s34*d^2*s14^2*s24^2+144*s12^2*s14*s24^2*s13^2+18*s23*s12^2*s34^3*s14-42*s23*s12*d*s14*s24*s13^3-48*s23^3*s12*s14^2*s13+24*s34*s14*s24^2*s13^3+2*s12^6*s14-15*s12*s34*d^2*s14*s24^4+48*s23^2*s14^3*s24*s13-192*s23*s12*s34*s14^2*s24*s13-24*s23*s12*s34*s14^3*s13+48*s23^3*s34*d^2*s14^2*s13-24*s23^3*s12*s14^3+24*s23^2*s34*d^2*s14^2*s24*s13+126*s23*s12*s14*s24^2*s13^2+36*s12^2*s34^2*s14*s13^2+6*s12^5*d*s14*s24-2*s23^2*s12^2*d^2*s13^3-18*s23*s12*s34*d^2*s14*s24*s13^2+108*s12^2*s34*s14^2*s24*s13+3*s23^2*s12^4*d*s14-72*s12^2*s34*d*s14*s24^2*s13-36*s23*s34*s14^2*s24^3-24*s12^2*d*s14*s24*s13^3+156*s23^2*s34^3*d*s14*s13-12*s23*s12*s34*d*s14*s24^3-3*s23^3*s12^2*d*s14*s13+50*s23^2*s34*d*s13^4-21*s23*d*s14*s24^2*s13^3-126*s23*s12*s34*d*s14*s24^2*s13+6*s34^4*s14*s24^2-3*s23*d^2*s14*s24^5+18*s34^2*s14^2*s24^2*s13-18*s23^2*s12^2*d*s14*s24*s13-12*s23^2*s12*s34^2*d^2*s24*s13-12*s34^3*d*s14*s24^2*s13+8*s23*s12^4*d^2*s14^2+54*s12*s34^2*s14^2*s24^2-30*s23*s12^2*d^2*s14*s24^3-9*s12^2*s34*d^2*s14*s24*s13^2-96*s23*s34*s14^2*s24^2*s13-18*s23*s12^3*s34*d^2*s14*s13+9*s23^3*s34^2*d^2*s14*s24-12*s23^2*s12^3*d^2*s14*s24-9*s34^2*d*s14^2*s24^3+40*s12^3*s14*s24^3+80*s23^2*s12*s34^3*d*s13+20*s23^2*s12*d*s24*s13^3+46*s23^3*s34^3*s14-96*s23*s12^2*d*s14^2*s24^2-90*s23^2*s34^2*s14^2*s24-36*s23^3*s12*d*s14^2*s24-18*s23^2*s12^2*s34*d*s14*s24+120*s23^2*s34^2*d*s24*s13^2-10*s23*s34*d*s14^2*s24^3-216*s23^2*s34*s14*s13^3+48*s12*s34^3*s14*s24*s13-21*s23*s12^3*d*s14*s13^2+138*s23^3*s34^2*s14*s13+24*s23^2*s12^3*s14*s13-24*s12^3*d*s14*s24*s13^2+30*s23^2*s12*s34^3*d*s14+60*s12*s34*s14*s24^4-6*s12^4*s34*d^2*s14*s13-63*s23*s12^2*s34^2*d*s14*s24+12*s12^5*s34*s14+6*s23^3*s14*s24^2*s13-36*s23^3*d^2*s14^3*s24+44*s23^4*d*s14^2*s13+8*s23^2*s34*d^2*s14^3*s24-3*s23*d*s14*s24^4*s13-9*s23^2*s12*s34*d^2*s14*s13^2+12*s23^2*s34*d*s14^4-48*s23^3*s12*s34*s14^2+18*s23^2*s12^2*d^2*s14^2*s13+60*s23*s12^2*s14*s24^3-6*s23^2*d^2*s14*s13^4+66*s23^2*s12*d*s14^2*s24*s13-16*s23^2*s12*d*s14^3*s13+30*s23*s12^4*s34*s14-14*s23^2*s12^2*d^2*s14^3-144*s23^2*s34^2*s24*s13^2-16*s23^2*d*s14^3*s24*s13-6*s12*d*s14^2*s24*s13^3-30*s12^3*d*s14^2*s24^2+2*s23^3*s14*s24^3+27*s23^2*s34^2*d*s14^2*s24+15*s12^4*d*s14*s24^2-2*s23^2*d^2*s24^2*s13^3+20*s12^3*s34^3*s14-3*s23*s34^3*d^2*s14*s24^2+252*s23*s12^2*s34*s14*s24*s13-30*s12^3*d^2*s14*s24^2*s13-20*s12^3*d^2*s14*s24^3-66*s23^3*s12*s34*d*s14*s13-6*s12^4*s34^2*d*s14-9*s23^2*s34^2*d^2*s14*s24*s13-216*s23^2*s12*s34*s14*s13^2+48*s34*s14*s24^4*s13+8*s23*d^2*s14^2*s24^4+54*s12^2*s34^2*s14^2*s24+2*s23^3*s12^3*s14-3*s23^3*s34*d^2*s14*s24^2-66*s23^3*s34*d*s14*s24*s13-4*s23^2*d^2*s24*s13^4+6*s23^3*s12*s14*s24^2+24*s12^2*s34*s14*s13^3+18*s34*s14^2*s24^2*s13^2-12*s23*s12*d*s14*s24^3*s13+10*s23^2*s12^2*d*s13^3-60*s23*s12^2*s34*s14^3-96*s23*s12*s34^2*s14^2*s24-3*s23^2*s12^4*d^2*s14-12*s23^2*s12*s34*d^2*s24*s13^2-3*s12^5*d*s14^2-6*s12*d^2*s14*s24^5+48*s23*s12*s34*d*s14^3*s24+128*s23^3*s14^4-27*s12^2*d*s14^2*s24*s13^2-9*s23*d^2*s14*s24^3*s13^2-63*s23*s34^2*d*s14*s24^2*s13-48*s23*s34^2*s14^2*s24^2+12*s12^5*s14*s24-72*s23^2*s12*s34*s24*s13^2-12*s23*s14^3*s24*s13^2+6*s14*s24^2*s13^4+180*s23*s12^2*s14*s24^2*s13+54*s23*s12^2*s34^2*s14*s13-16*s23^2*s12*s34^3*d^2*s13+72*s12*s34*s14^2*s24^3-24*s12*s34^3*d*s14*s24^2+30*s23*s12^4*s14*s24-120*s23*s12*s14^3*s24*s13-120*s23^2*s34*s14^3*s13+24*s23*s12*d^2*s14^2*s24^2*s13-14*s23^2*d^2*s14^3*s24^2-6*s23^2*d^2*s14^2*s13^3+42*s23*s12^3*s34^2*s14-33*s23^3*s12*d*s14*s13^2-10*s23^2*s34*d^2*s13^4-324*s23^2*s34^2*s14*s13^2+264*s23^3*s34*s14^3-16*s23*s12^4*d*s14^2-2*s23^2*s34^5*d^2+27*s23^2*s12*d*s14^2*s13^2-12*s12^3*s34^2*d^2*s14*s24-24*s23^2*s24*s13^4+108*s12*s34*s14^2*s24^2*s13-6*s23^2*s12*d^2*s14*s24*s13^2-36*s23^2*s34*s24^2*s13^2+30*s12^4*s14*s24^2+12*s23^2*s12*s34^2*d^2*s14^2-72*s12^2*s34^2*d*s14*s24*s13+20*s23^2*s12*d*s13^4-24*s12*d*s14*s24^2*s13^3+18*s12^3*s34^2*s14^2+90*s23^2*s12*s34^2*d*s14*s13-72*s23^2*s12*s14*s13^3+120*s12^3*s34*s14*s24^2-36*s12*s34*d*s14^2*s24^3-3*d^2*s14*s24^5*s13-54*s23*s12^2*s34*d^2*s14*s24^2-36*s23^2*s34^2*d^2*s14*s13^2+10*s23^2*s34^3*d*s24^2-16*s23^2*s12*s34*d*s14^3-6*s23*s12*d*s14*s13^4-3*s12^2*d*s14*s13^4-15*s12^4*d^2*s14*s24*s13-90*s23^2*s12^2*s14^2*s24-3*s23^2*s12*d^2*s14*s13^3+20*s34^3*s14*s24^3+8*s23*s12^3*s34*d^2*s14^2+6*s14^2*s24^2*s13^3-9*s23*s34*d^2*s14*s24^4-48*s23^3*s14^2*s24*s13+18*s23^2*s12^2*d*s14*s24^2+66*s23^2*s12*s34*d*s14^2*s24+360*s23^3*s34*s14^2*s13+3*s23*s12^5*d*s14-24*s23*s34^3*d*s14*s24*s13-3*s34^2*d^2*s14*s24^4+12*s12*s34^4*s14*s24-24*s12*s34*d*s14*s24*s13^3+24*s23^3*d^2*s14^2*s24^2-6*s34*d^2*s14*s24^4*s13-24*s23*s12*s34^3*d*s14*s13-6*s23^2*s34*d*s14*s24^3-90*s23^2*s14^2*s13^3+30*s23^2*d*s14*s24*s13^3-84*s23^2*s14^3*s24^2-12*s12^2*s34^3*d*s14*s13+s23^3*d*s14*s24^3+18*s23^2*s34*d^2*s14^2*s24^2-16*s23^2*s34^3*d^2*s24*s13+12*s23^2*d*s14^4*s13-12*s23^4*s12*s14^2-126*s23*s12*s34^2*d*s14*s24*s13-18*s23^2*s12*d*s14*s24^2*s13-12*s23*s12*s14^3*s13^2-180*s23^2*s34*s14^2*s24*s13-20*s23^2*s34^2*d^2*s13^3-24*s23^2*s12*s34^3*s24+39*s23^2*s34^4*d*s14-18*s23^2*s12^2*s34^2*d*s14+32*s23*s12^3*d^2*s14^2*s24-15*s23*s12^4*d^2*s14*s24-15*s12*d*s14^2*s24^4-96*s23*s12^2*s34*s14^2*s13-4*s23^2*s12*d^2*s24*s13^3-10*s23*d*s14^2*s24^3*s13+48*s23*s12^2*d^2*s14^2*s24^2+96*s12*s34^2*s14*s24^3+96*s12*s14*s24^3*s13^2-27*s23^2*s12^2*s34*d^2*s14*s24-24*s23^2*s12*s24*s13^3+48*s23^3*s12*d^2*s14^2*s24-18*s12^2*s34^2*d*s14*s13^2-108*s23*s12^2*s14^2*s24*s13-24*s23^2*s34^2*d^2*s24*s13^2+8*s23*s34*d^2*s14^2*s24^3-48*s23*s12^3*s14^3-36*s12*s34^2*d*s14*s24*s13^2-270*s23^2*s34*s14^2*s13^2-6*s23^2*s12^2*s34^2*d^2*s13+60*s23^2*s12*s34^2*d*s24*s13-36*s23*s12*s34^2*d*s14*s13^2-10*s23^2*s34^4*d^2*s13+46*s23^2*s34^2*d*s14^3+3*s23*d*s14*s24^5+24*s23^2*s14*s24^3*s13+24*s12^2*s34^3*s14*s13-42*s23*s12^3*s34*d*s14*s13-54*s23^2*s14*s13^4+30*s23*s12^2*d*s14*s24^3+18*s12^4*s34*s14^2-12*s23^4*s14^2*s13+12*s23^2*s12^3*d*s14*s24-90*s23^2*s14^2*s24*s13^2+60*s12^3*s14^2*s24^2+30*s23*s12*s14*s24^4-33*s23^3*s34^2*d*s14*s24+36*s23*s12*s14*s24*s13^3-9*s12*s34^2*d^2*s14*s24^2*s13-90*s23^2*s34^3*s14^2-24*s34*d*s14*s24^3*s13^2-36*s23^3*s12^2*s14^2-6*s12^5*d^2*s14*s24+120*s23^2*s12*s34^2*d*s13^2+36*s23^3*s34*s14*s24*s13-6*s12*d*s14*s24*s13^4-8*d*s14*s24^3*s13^3-12*s23*s12*s34^2*s14^3-24*s23^2*s34^4*s24-3*s23^3*s12^2*s34*d*s14-2*s23^2*d^2*s13^5-12*s23^2*s24^2*s13^3+12*s14*s24^5*s13-54*s12^2*s34*d*s14^2*s24^2-3*s23^3*s12^2*d^2*s14*s13+36*s34*s14^2*s24^3*s13-63*s23*s12*d*s14*s24^2*s13^2-24*s23^2*s34^3*d^2*s14*s13+60*s12^2*s14*s24*s13^3-36*s23*s12*s34*d^2*s14*s24^3-30*s12^2*s34*d^2*s14*s24^3-30*s23*s12*s34*d*s14^2*s24^2-3*s12^2*d*s14^2*s13^3-36*s12^2*d*s14*s24^2*s13^2-18*s23*s34^2*d*s14^2*s24*s13-16*s23^2*s12*s34*d^2*s13^3-24*s12^3*s34*d^2*s14*s24*s13-252*s23^3*s34*d*s14^2*s13-6*s23*s12*d*s14^2*s13^3+72*s23*s12*d*s14^3*s24^2+12*s12*s34^3*s14^2*s24-12*s23*s34^2*s14^3*s24-36*s23^2*s34*d*s14*s24^2*s13-21*s23*s12^2*d*s14*s13^3+6*s23^2*s14*s24^4-6*s23*s12*s34^3*d*s14^2-12*s23*s12^3*s34*d*s14*s24+60*s12^2*s34^3*s14*s24-135*s23^3*s34^2*d*s14*s13+18*s12^3*s14^2*s13^2-6*s23^2*s12^3*d*s14*s13-12*s23^4*s14^2*s24-126*s23^2*s34*s14^2*s24^2+36*s23*s12*s34^3*s14*s24+9*s23^3*d^2*s14*s24*s13^2-3*s12^2*s34^3*d*s14^2-63*s23*s12*s34^2*d*s14*s24^2-4*s23^2*s34^4*d^2*s24-36*s12^2*s34^2*d*s14*s24^2-24*s23^2*s12*s13^4+6*s12^2*s34^4*s14+60*s12*s14*s24^2*s13^3-6*s23^2*s12^2*s34*d^2*s14*s13+54*s23*s34*s14*s24^2*s13^2+48*s23^2*s12*s34*s14^3-108*s23*s12^2*s34*s14^2*s24-15*s12*d^2*s14*s24^4*s13+36*s34^2*s14*s24^2*s13^2+18*s34*s14^2*s24^4+18*s23*s34^3*s14*s24^2-12*s23*s12^3*d*s14*s24*s13-s12^6*d^2*s14-48*s23*s14^2*s24^2*s13^2+48*s23^3*s34*d*s14^2*s24-6*s23^2*s34^3*d^2*s14^2+24*s23^3*s12^2*d^2*s14^2-64*s23*s12*d*s14^2*s24^3-30*s12^2*d*s14^2*s24^3-18*s23*s12*s34*d*s14^2*s13^2+180*s12^2*s34*s14*s24*s13^2+d*s14*s24^6+80*s23^2*s34*d*s24*s13^3-9*s23^2*s34*d^2*s14*s24*s13^2-108*s23*s12*s14^2*s24^2*s13-6*s23^2*s34*d^2*s24^2*s13^2-3*s23*s12^2*s34^3*d^2*s14-9*s23*s34^2*d^2*s14*s24^3+108*s23*s12*s34*s14*s24*s13^2-12*s23^2*s12*s34*d^2*s14*s24*s13-3*s23^2*s34^3*d^2*s14*s24-9*s12^2*s34*d*s14^2*s13^2-3*s23^3*s12^2*d^2*s14*s24-3*s12^5*d^2*s14*s13-60*s23^2*s34^2*s14^3-12*s34*d*s14*s24^2*s13^3-3*s23^3*d*s14*s24^2*s13+96*s23^3*s12*d*s14^3-60*s23^2*s34^4*s13-12*s23*s12*s34^3*s14^2+108*s12^2*s14^2*s24^2*s13-126*s23^2*s12^2*s14^2*s13-30*s23*s12^2*d*s14^2*s24*s13+15*s12^2*d*s14*s24^4-18*s34^2*d*s14*s24^2*s13^2-12*s23^2*s12*d^2*s14*s24^3-24*s12*s34*d^2*s14*s24^3*s13-9*s23*s12^2*s34*d^2*s14*s13^2+60*s12^3*s34*s14*s13^2+24*s23^2*s12*s14*s24^3-9*d*s14^2*s24^4*s13+15*s23*s12*d*s14*s24^4+100*s23^2*s34^3*d*s13^2-3*s23^2*s34^2*d^2*s14*s24^2+12*s23^2*d^2*s14^2*s24*s13^2+24*s12^4*s14*s13^2-12*s23^2*s34*s14^4+30*s23*s14*s24^4*s13-36*s23^2*s12*s34^2*d*s14*s24-6*s23*s34^3*d*s14^2*s24-24*s12*d*s14*s24^3*s13^2-6*s23*s34^4*d*s14*s24+48*s12*s34*s14*s24*s13^3+11*s23^3*s34^3*d^2*s14-63*s23*s34*d*s14*s24^2*s13^2-81*s23^2*s12*d*s14^2*s24^2-9*s23^2*d^2*s14*s24^3*s13-3*s12^3*s34^2*d^2*s14*s13+24*s34^3*s14*s24^2*s13-96*s23^2*s12*s34^3*s13+33*s23^2*d*s14^2*s24^2*s13-9*s23*s12^4*d^2*s14*s13+8*s23*s12^3*d^2*s14^2*s13-18*s23^2*s34*d^2*s14^2*s13^2-45*s23^3*d*s14*s13^3-24*s12^2*s34^3*d*s14*s24-60*s23^2*s14^3*s13^2-30*s23^2*s14^2*s24^3-36*s23^2*s12^2*s34*s13^2-12*s23*s12*s14^2*s13^3-144*s23*s12*s14^3*s24^2-24*s12*s34^2*d*s14*s24^3-36*s23^2*d*s14^4*s24-3*s23*s12^4*s34*d*s14-48*s23^3*s34*s14^2*s24+54*s23^2*s12*s34*d*s14^2*s13+156*s23^2*s34*d*s14*s13^3-42*s23*s12*s34^3*d*s14*s24+6*s14^2*s24^5-8*s12^3*s34^3*d*s14+24*s23^3*d^2*s14^2*s13^2-12*s23^2*s12^2*s13^3+18*s14^2*s24^3*s13^2+12*s12*s14*s24*s13^4+36*s12*s34^2*s14^2*s24*s13-18*s23^2*s12^2*d*s14*s13^2-54*s12*s34*d*s14^2*s24^2*s13+6*s23^2*s12^4*s14+44*s23^4*s34*d*s14^2-36*s23*s14^2*s24^3*s13-27*s23^2*s12^2*d^2*s14*s24*s13-54*s23*s12*s34*d^2*s14*s24^2*s13+12*s12^5*s14*s13-3*s23*d^2*s14*s24^2*s13^3+24*s23^2*s12^3*s34*s14+8*s23^4*s12*d^2*s14^2-72*s12^2*s34*d*s14*s24*s13^2+120*s12^2*s34*s14*s24^3+18*s23^3*s12*s14*s13^2-36*s23*s12*s34^2*s14^2*s13+48*s23^3*d*s14^2*s24*s13+24*s23*d*s14^3*s24^3+18*s12^2*s34^2*s14^2*s13+33*s23^3*s34*d^2*s14*s13^2+120*s23*s12*s34*s14*s24^3-9*s23^2*s12^3*s34*d^2*s14-6*s23*s12*d^2*s14*s24*s13^3+48*s23^2*s34*s14^3*s24+30*s23^2*s34^2*d*s24^2*s13+30*s23*s12^4*s14*s13+54*s23^2*s34*d*s14^2*s24*s13+3*s23^3*s12*d*s14*s24^2+24*s23^2*d^2*s14^2*s24^3-2*s23^2*d^2*s14^3*s13^2+24*s14*s24^4*s13^2+s23^3*s12^3*d*s14+12*s12*s14*s24^5-33*s23^3*s12*s34^2*d*s14-12*s23^2*s12^2*s34^3-4*s23^2*s12*s34^3*d^2*s24-126*s23*s12*s34*d*s14*s24*s13^2+10*s23^2*s34^5*d+126*s23*s12^2*s34^2*s14*s24+30*s23^2*s12^2*s34*d*s13^2+84*s23*s34*s14*s24^3*s13+24*s34^2*s14*s24^4+12*s12*s14^2*s24*s13^3-3*s12^2*d^2*s14*s24*s13^3+60*s34^2*s14*s24^3*s13-36*s12^2*s34*d^2*s14*s24^2*s13-24*s23^4*d^2*s14^3-36*s23*s34*s14^2*s24*s13^2-144*s23^2*s12*s34^2*s13^2-24*s12^3*s34*d*s14*s13^2+72*s23^2*s12^2*d^2*s14^2*s24-3*s23^2*d^2*s14*s24^4+18*s23*s12^2*s14*s13^3-21*s23*s12^3*s34^2*d*s14-4*s23^2*s34*d^2*s14^3*s13-4*s23^4*d*s14^2*s24+12*s23^3*s34*d^2*s14^3-27*s23^2*s12*s34*d^2*s14*s24^2-3*d^2*s14*s24^4*s13^2+180*s12*s34^2*s14*s24^2*s13-15*s12^4*s34*d^2*s14*s24-63*s23*s12^2*s34^2*d*s14*s13-27*s23^2*s12^3*d*s14^2+12*s23^3*d^2*s14^3*s13-126*s23^3*s34^2*d*s14^2+24*s23^2*s12^3*s14*s24+18*s23^3*s34^2*s14*s24-27*s23*s12^2*d^2*s14*s24*s13^2-24*s23^2*s12*s34^4+30*s23*s12^3*d*s14*s24^2-8*s34^3*d*s14*s24^3+18*s23^2*s12^2*s34*d^2*s14^2+18*s34^2*s14^2*s24^3+72*s23^2*s12*s34*s14*s24^2-24*s34^2*d*s14*s24^3*s13-9*s12*s34*d^2*s14*s24^2*s13^2-18*s23*s12^2*d*s14*s24^2*s13-126*s23*s12^2*s34*d*s14*s24*s13-6*s23^3*s12*s34*d*s14*s24-s12^3*d^2*s14*s13^3+96*s12^3*s14*s24*s13^2-216*s23^2*s34^2*s14*s24*s13-18*s23*s34*d*s14^2*s24*s13^2-6*s12^4*d*s14*s13^2-6*s23^3*s12*d*s14*s24*s13+189*s23^2*s34^2*d*s14^2*s13+46*s23^3*s14*s13^3-9*s12^3*d*s14^2*s13^2-30*s23*s12^2*s34*d*s14^2*s24-3*s23^2*d^2*s14*s24^2*s13^2+164*s23^2*s12*d*s14^3*s24-42*s23*s34*d*s14*s24^3*s13-36*s23*s12^3*s14^2*s13)*(s23+s12+s34+s14+s24+s13)^(-1)*(-2+d)^(-1)*s14^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (1/2*(12*s23*s34*s14^3*s24^2+384*s23*s34*s14^2*s13^3-9*s23*s34^2*d*s14*s24^3-64*s34*s24^3*s13^3-16*s12^3*s34^3*s24-412*s23*s12*s34*d*s14*s13^3+48*s23^2*s34^3*d*s14*s24-618*s23*s34^2*d*s14*s24*s13^2-96*s12*s34*s13^5+4*s12^4*d*s13^3-24*s34^5*s24^2-12*s12*d^2*s24^2*s13^4+120*s23*s34^2*s13^4-24*s12^3*s34^2*d^2*s13^2+180*s23*s14^2*s24*s13^3+12*s23^3*s34*d^2*s14^2*s24+24*s23*s12*s34*s14^3*s24-15*s12*s34*d^2*s14*s13^4+64*s12^3*s34*d*s13^3-84*s34*s14*s24^3*s13^2-36*s12^2*s34^2*s14*s24^2-30*s34^4*d^2*s24^2*s13+540*s23*s34^2*s14^2*s24*s13-90*s23*s34*d*s24*s13^4+240*s34^2*d*s24*s13^4-40*s23^3*d*s14^4+120*s12^2*s34*d*s14*s13^3+24*s23*s12*s34*d^2*s14^2*s13^2+24*s23*s34^4*s24^2+54*s23*s12*s34^2*s14*s24^2+6*s34*d*s14^2*s24^3*s13+3*s23*s12^2*s34^4*d^2-54*s23*s12^2*s34*d*s24*s13^2+36*s23^2*s12^2*s34*d*s14*s13-4*s34^3*s24^4-12*s23^3*s12*d*s14^2*s13-48*s12*s34*d^2*s24^2*s13^3+12*s23*s12^3*s34*s14^2+28*s34^6*d*s13-256*s23*s34*d*s14^2*s13^3+30*s34^2*d*s14^2*s13^3-28*s12^3*s14*s13^3+12*s34*d*s24^4*s13^2-468*s23^2*s34^2*s14^2*s13-36*s23*s12^2*d*s14^2*s13^2+54*s12*s34^2*d*s14^2*s24*s13+120*s23*s34*s24*s13^4-240*s34^3*s24^2*s13^2-18*s23*s12^3*s34^2*d*s13+48*s12^3*s34^2*d*s24*s13-108*s12*s34^2*s14^2*s13^2+54*s23*s12^2*s14*s24*s13^2+10*s23*s12^2*d^2*s14*s13^3-16*s12*s13^6-360*s34^2*s14*s24*s13^3+16*s12^3*d*s13^4+12*s23*s14^3*s24^2*s13-132*s23^2*s12*s34^2*s14^2-16*s34^4*s24^3+30*s23*s34^2*d^2*s14*s24^2*s13-3*s34^5*d^2*s14*s24-9*s23*d*s14*s24^3*s13^2+18*s12*s34^3*d*s14^2*s24+60*s12*s34^4*d*s14*s24+504*s23*s34*s14*s24*s13^3+10*s23*d^2*s14*s13^5-150*s34^4*s14*s13^2+9*s23*s12*s34*d^2*s24^2*s13^2-24*s23^2*s12*s34*d^2*s14^2*s13+9*s12*s34^2*d*s14^2*s24^2+3*s23*s12^2*d^2*s13^4+105*s34^2*d*s14*s13^4+192*s12^2*s34*d*s24*s13^3-36*s23^3*d*s14^2*s13^2-6*s23*s34^3*d*s24^3+18*s23^2*s12^2*s34*d*s14^2-144*s23^2*s34*s14*s24*s13^2-24*s23^2*s34*d^2*s14*s13^3+8*s23^2*d^2*s14^3*s24*s13+20*s23*s12*s34^3*d^2*s14*s24-16*s34*d^2*s24^3*s13^3-60*s12*s34*d^2*s24*s13^4+12*s23*s12^2*s14^3*s13-108*s23*s12^2*s34^2*d*s13^2-235*s23*s34*d*s14*s13^4-s34^6*d^2*s14-6*s23^2*s12^2*d^2*s14*s13^2+12*s23^3*s34^2*d^2*s14^2-16*s34^6*s24+144*s23^2*s34^2*d*s14*s24*s13-84*s23^3*s34*d*s14^3+12*s23*s12^2*s34*d^2*s13^3-3*s12^2*s34^3*d^2*s14*s24+96*s23*s34*s24^2*s13^3+6*s23*s34*d^2*s13^5+390*s23^2*s34*d*s14^2*s13^2-144*s23*s12*s34*d*s24*s13^3-18*s12^2*s34*d^2*s24^2*s13^2+48*s12*s34^5*d*s24+3*s12^3*s34^2*d*s14^2-48*s23^2*s12*s14^2*s24*s13-240*s34^4*s24*s13^2+3*s23*d^2*s24*s13^5+20*s23*s34^4*d^2*s14*s24-12*s23^2*s12*s34^2*d^2*s14*s24+24*s23*s12*s13^5+8*s23*s34^3*d^2*s14^2*s24-288*s12*s34^2*s24^2*s13^2+3*s23*s12^2*d^2*s24*s13^3+48*s12^3*s34^2*d*s14*s13+24*s12^2*s34^5*d-4*s12*s34^3*d^2*s24^3+270*s23*s34*s14*s13^4-60*s34^3*s14^2*s13^2+240*s34^2*d*s14*s24*s13^3-264*s23^2*s12*s34*s14^2*s13-24*s12^3*s34^2*s14*s24+3*s23*s34^5*d^2*s24+240*s34^2*d*s24^2*s13^3-16*s12^3*s24*s13^3+240*s12*s34^3*d*s14*s24*s13+96*s12*s34*d*s13^5-412*s23*s34*d*s14*s24*s13^3-252*s12*s34*s14*s24^2*s13^2+12*s23^2*s12*d^2*s14^2*s24*s13-195*s23*s12^2*s34*d*s14*s13^2+30*d*s14*s24^2*s13^4+68*s23^3*s14^3*s13+18*s23^2*s34^2*d*s14*s24^2-72*s23*s34*d*s24^2*s13^3+64*s12^3*s34^3*d*s13-180*s23*s34^3*d*s24*s13^2-d^2*s14*s24^3*s13^3-300*s23*s12*s34^2*d*s14^2*s13-6*s12*d^2*s14*s24*s13^4+48*s23*s34^5*s13-252*s12^2*s34^2*s14*s24*s13+144*s12*s34^2*d*s14*s24^2*s13-30*s12*s34^3*d^2*s14*s13^2-3*s34*d^2*s14*s24^3*s13^2+16*s12^3*d*s24*s13^3+48*s12*s34^4*d*s24^2-24*s23^2*s14^2*s24^2*s13-18*s23*d*s24^2*s13^4-6*s34^5*d^2*s24^2-6*s12^4*s34^2*s14-16*s12*s34^3*s24^3-64*s34^3*s24^3*s13+384*s23*s34^3*s14^2*s13+24*s23*s34^2*d^2*s14^2*s24*s13-18*s12*s14^2*s24^2*s13^2-48*s23^2*s12*s34^3*s14+270*s23*s12^2*s34*s14*s13^2-60*s12*s34^2*d^2*s13^4+12*s23^2*s14^4*s24+8*s23*s12*s34^3*d^2*s14^2+24*s12^3*s34*d*s14*s24*s13+540*s23*s12*s34^2*s14*s24*s13-24*s23^2*s12^2*s34*s14^2+120*s23*s34^4*s24*s13+27*s12^2*s34^2*d*s14^2*s13+130*s23^2*d*s14^3*s13^2+90*s23*s14*s24^2*s13^3-3*s12^4*s34*d^2*s13^2-8*s23^3*s12*d^2*s14^3+3*s23*s34^4*d^2*s24^2+120*s23*s34*s14^3*s24*s13-12*s12^3*s34*d^2*s24*s13^2-84*s12*s34^3*s14*s24^2+540*s23*s34^2*s14*s13^3-65*s23*s12^2*s34^3*d*s14-36*s12*s34^5*s14+24*s23*s12*s34^5-18*s23*s12*d*s13^5+36*s23*s12*s34*s14^2*s24^2-3*s34^2*d^2*s24^4*s13-s34^7*d^2-96*s34^5*s24*s13+8*s23*s24^3*s13^3-36*s12*s34^2*d^2*s14*s24*s13^2-48*s23^2*s34^3*s14*s24-90*s23*s34^2*d*s13^4+6*s23*s12*s34^4*d^2*s24-12*s12^2*s34^4*d^2*s24+9*d*s14^2*s24^2*s13^3+130*s23^2*s34^3*d*s14^2+9*s23*s12^2*s34^2*d^2*s24*s13+24*s12*d*s14*s13^5+270*s23*s34^2*s14*s24^2*s13+27*s34*d*s14^2*s24^2*s13^2-78*s23^2*s34^2*d^2*s14^2*s13-35*s34^3*d^2*s13^4+4*d*s24^4*s13^3+12*s23*s12^2*s34^3*d^2*s13+72*s12^2*s34^2*d*s24^2*s13+270*s23*s34^4*s14*s13-144*s23^2*s12*s34^2*s14*s13-36*s23^2*s34^4*s14+240*s23*s12*s34^3*s13^2-4*s23^2*s12*d^2*s14^3*s24+6*s34*d*s14*s24^4*s13-24*s12*s34*d^2*s14*s24*s13^3-48*s12*s34^2*s24^3*s13+96*s23*s34^3*s24^2*s13+72*s23*s12^2*s34*s24*s13^2+126*s23*s14*s24*s13^4+80*s23*s34^3*d^2*s14*s24*s13+9*d*s14^2*s24*s13^4+16*d*s24^3*s13^4-84*s34^2*s13^5-64*s23*d*s14^2*s13^4-108*s12*s34*s14^2*s24*s13^2+60*s23*s12*s34^2*d^2*s14*s24*s13-12*s23^2*d^2*s14*s24*s13^3-48*s12*s34*s14*s24^3*s13-470*s23*s34^3*d*s14*s13^2-54*s23*s12*s34^2*d*s24^2*s13+16*s12^3*d*s14*s13^3+24*s23^3*s14^2*s13^2+s23*s34^6*d^2-120*s12*s34^3*d^2*s24*s13^2+30*s23*s12^2*s34^2*d^2*s14*s13+48*s12*d*s24*s13^5+36*s23^2*s12*d*s14*s24*s13^2-84*s23^3*d*s14^3*s13-120*s12^2*s34^4*s13+12*s23^2*s12*s14^4-48*s23*s34*d*s14^3*s24*s13-60*s34^5*s14*s13+96*s23*s12^2*s14^2*s13^2-3*s12*d^2*s14*s24^2*s13^3+36*s23*s12^3*s34*s14*s13-6*s23*s12^3*s34^3*d-9*s12^2*s34^2*d^2*s14*s24*s13-s34^3*d^2*s14*s24^3+48*s23*s14^3*s13^3-s12^3*s34^3*d^2*s14+30*s34^4*d*s14*s24^2+240*s23*s34^2*s24*s13^3-3*s12^3*s34*d^2*s14*s13^2+9*s34^3*d*s14^2*s24^2-180*s23*s12*s34^3*d*s13^2+260*s23^2*s34*d*s14^3*s13+240*s12^2*s34^3*d*s13^2-28*s14*s24^3*s13^3-16*s12*s34^6-35*s34^4*d^2*s13^3-65*s23*s34^3*d*s14*s24^2+30*s23*s12*s34^2*d^2*s13^3-48*s12^2*s14*s13^4-103*s23*s12*s34^4*d*s14+6*s23^2*d^2*s14^2*s24^2*s13-24*s34*d^2*s24*s13^5+9*s12*d*s14^2*s24^2*s13^2+30*s12^2*s34^4*d*s14-60*s12^2*s34^2*d^2*s13^3+8*s23^2*s12*s34*d^2*s14^3+s23*d^2*s13^6+108*s23^2*s12*s34^2*d*s14^2-6*s23*s34^6*d+24*s23*s12*s34^3*s24^2-64*s23*s34^4*d*s14^2+240*s23*s12*s34^2*s13^3+8*s23^2*s12*d^2*s14^3*s13-12*s23^2*s12^2*s14*s13^2+126*s23*s12*s34^4*s14-60*s34*s14*s13^5-s34^3*d^2*s24^4-12*s23^2*s34^2*d^2*s14^2*s24-24*s23^2*s12*s34^2*s14*s24-12*s12^4*s34*s14*s13+126*s23*s34^4*s14*s24-96*s23^2*s12*s14^3*s13+3*s23*s12^2*s34^3*d^2*s24-12*s12^3*s34*s14^2*s13+s23*s12^3*s34^3*d^2+24*s12^2*s34^3*d*s24^2-18*s34^2*d^2*s14*s24^2*s13^2+32*s23^2*s34*d*s14^3*s24+24*s12*s34*d*s14*s24^3*s13-6*s23^2*s12^2*s34^2*d^2*s14-6*s23^2*s34^4*d^2*s14-4*s34^4*d^2*s24^3+s23*d^2*s24^3*s13^3+8*s23*s12^3*s13^3+144*s23^2*s12*s34*d*s14*s13^2+30*s34^3*d*s14^2*s13^2+54*s12*s34*d*s14^2*s24*s13^2+18*s23^2*s12^2*d*s14^2*s13+105*s34^4*d*s14*s13^2-480*s12*s34^3*s24*s13^2-12*s12^4*s34*s13^2+30*s23^2*d*s14*s13^4-18*s23*s12*s34^3*d*s24^2-24*s12^2*s24^2*s13^3+72*s23*s12*s34*s24^2*s13^2-6*s12^2*d^2*s13^5-36*s34^5*s14*s24+108*s23^2*d*s14^2*s24*s13^2-360*s34^3*s14*s24*s13^2-20*s34^3*d^2*s14*s13^3-15*s34*d^2*s14*s24*s13^4-18*s12^2*s34^3*s14^2+6*s12^4*s34*d*s14*s13+3*s23*s34^2*d^2*s24^3*s13+3*s34^5*d*s14^2-48*s12^2*s34^4*s24-72*s12^2*s34*s24^2*s13^2+30*s23*s34*d^2*s14*s24^2*s13^2-12*s23^3*d*s14^3*s24-84*s23^2*s14^4*s13-96*s34*s24*s13^5+130*s23^2*d*s14^2*s13^3-2*s23^2*d*s14^3*s24^2+9*s12^2*s34^2*d*s14^2*s24+120*s34^4*d*s14*s24*s13+180*s23*s34^3*s14^2*s24-100*s23*d*s14^2*s24*s13^3-320*s12*s34^3*s13^3+36*s34^3*d*s14^2*s24*s13-12*s23^3*s12*s34*d*s14^2-14*s23^2*s34^2*d^2*s14^3-144*s23*s12*s34*d*s14^2*s24*s13+72*s23^2*s12*s34*d*s14*s24*s13-21*s34^5*d^2*s13^2-6*s34*d^2*s14*s13^5+16*s12*d*s13^6+240*s12*s34^4*d*s13^2+24*s23^3*s34^2*s14^2+144*s23^2*s34*d*s14*s24*s13^2+3*s23*s12^3*s34*d^2*s13^2-48*s23^2*s14*s24*s13^3-48*s12^2*s24*s13^4+24*s23*s34^5*s24+16*s12^3*s34^3*d*s24-72*s23*s12*s34^2*d*s14^2*s24-12*s34*d^2*s14*s24^2*s13^3-3*s12*s34^3*d^2*s14*s24^2+3*d*s14^2*s24^3*s13^2+96*s23*s12^2*s34^2*s14^2+108*s23*s12*s34*s14*s24^2*s13-30*s12^2*s34^4*d^2*s13-72*s34*s14^2*s24*s13^3+48*s12*s34^2*d*s24^3*s13+192*s23*s12*s14^2*s24*s13^2-54*s12^2*s34*s14^2*s13^2-12*s23^2*s34*d^2*s14*s24^2*s13+48*s23*s34^3*s14^3+s23*s12^3*d^2*s13^3+540*s23*s12*s34*s14^2*s13^2-18*s12^2*s14^2*s13^3-18*s12^2*s14^2*s24*s13^2+15*s23*s12*s34^4*d^2*s13-144*s23^2*s34^3*s14*s13-80*s34^3*d^2*s24*s13^3-24*s23*s12*s34^2*d*s14^3+240*s34^4*d*s24*s13^2+18*s23*s34^2*s14*s24^3-360*s12*s34^3*s14*s13^2+18*s12^2*s34*d*s14^2*s24*s13+240*s34^3*d*s24^2*s13^2+120*s23*s12*s34*s13^4-96*s12^3*s34^2*s13^2-12*s23^2*s12*d*s14^4+15*s23*s34^4*d^2*s13^2+4*s34^7*d+18*s23*s14*s24^3*s13^2-72*s12^2*s34*s14*s24^2*s13+24*s23*s12^3*s34^2*s13+18*s23^2*s34*d*s14^2*s24^2-3*s34^2*d^2*s14*s24^3*s13+24*s23*s34*s24^3*s13^2-180*s23*s34^2*d*s24*s13^3-12*s12^2*s34^3*d^2*s14*s13+144*s12*s34*d*s14*s24^2*s13^2-576*s12*s34^2*s14*s24*s13^2+96*s12*s34^5*d*s13-30*s12*s34^2*d^2*s14*s13^3-103*s23*d*s14*s24*s13^4-48*s12^3*s34*s14*s24*s13-28*s34^6*s13-24*s23^2*s12^2*s34*s14*s13+3*s23*s12*d^2*s24^2*s13^3+24*s23*s34*d^2*s14^2*s24*s13^2-288*s12^2*s34^2*s24*s13^2+6*s12^3*s34*d*s14^2*s13-4*d^2*s24*s13^6+3*s34^2*d*s14*s24^4+54*s12*s34^2*d*s14^2*s13^2+12*s23^2*s12*s34*d^2*s14^2*s24-6*s12^2*d^2*s24^2*s13^3+288*s23*s12*s34^2*s24*s13^2+80*s23*s12*s34^3*d^2*s14*s13-12*s23^2*s12*s34^3*d^2*s14+18*s23*s34^2*d^2*s24^2*s13^2-120*s23*s34^3*d*s13^3+18*s23^2*d*s14*s24^2*s13^2+3*d*s14^2*s13^5+16*s12*d*s24^3*s13^3-180*s34*s14*s24*s13^4-72*s12^2*s34^2*d^2*s24*s13^2-72*s23*s34*d*s14^2*s24^2*s13+20*s23*s12*d^2*s14*s13^4-6*s12^2*s34^5*d^2-18*s23*s34*d*s24^3*s13^2-16*s24*s13^6+180*s23^2*s34^2*d*s14*s13^2+20*s23^3*s14^3*s24-7*s34*d^2*s13^6+96*s34^2*d*s24^3*s13^2-3*s12^2*d^2*s14*s13^4+18*s23*s12^3*s14*s13^2-18*s12*s14^2*s13^4+6*s23*s34^5*d^2*s13-12*s34^2*s24^4*s13+54*s23*s14*s13^5+48*s23^2*s12*d*s14*s13^3-18*s34^3*s14^2*s24^2-80*s12*s34^3*d^2*s13^3+12*s12^3*s34^2*d*s14*s24-12*s23^2*s12*d^2*s14^2*s13^2-84*s12^3*s34^2*s14*s13+3*d*s14*s24^4*s13^2-48*s23^2*s12*s34*s14^2*s24+96*s23*s12^2*s34*s13^3-24*s34^5*d^2*s24*s13+192*s12*s34^3*d*s24^2*s13+27*s34^2*d*s14^2*s24^2*s13+240*s12*s34^4*d*s24*s13-2*s23^2*s12^2*d*s14^3+32*s23*s34^3*d^2*s14^2*s13-36*s14*s24*s13^5+36*s23*s12*s34^2*d^2*s24*s13^2-36*s23^2*s12*s34^2*d^2*s14*s13+50*s23*s34^4*d^2*s14*s13-27*s23*s12^2*d*s14*s24*s13^2+15*s34*d*s14^2*s13^4-132*s23^2*s12*s14^2*s13^2+12*s12^4*s34^2*d*s13+756*s23*s12*s34^2*s14*s13^2-36*s12^2*s14*s24^2*s13^2+90*s23*s12^2*s34^3*s14+120*s23*s34^4*s13^2+15*s23*s12*s34*d^2*s13^4-3*d^2*s14*s24*s13^5-130*s23*s12*d*s14*s24*s13^3+288*s12*s34^2*d*s24^2*s13^2-d^2*s14*s13^6-47*s23*s34^5*d*s14+84*s34^2*d*s13^5+24*s23*s12*s34^3*d^2*s24*s13+48*s23*s34^2*d^2*s14^2*s13^2-192*s34*s14*s24^2*s13^3-96*s23^2*s14^3*s24*s13+384*s23*s12*s34*s14^2*s24*s13+120*s23*s12*s34*s14^3*s13+24*s23^3*s34*d^2*s14^2*s13+20*s23^3*s12*s14^3-30*s12^2*s34*d^2*s13^4-24*s23^2*s34*d^2*s14^2*s24*s13+8*s23*s12*d^2*s14^2*s13^3+54*s23*s12*s14*s24^2*s13^2-288*s12^2*s34^2*s14*s13^2-18*s23*s12^2*s34^4*d+64*s34^3*d*s24^3*s13+60*s23*s12*s34*d^2*s14*s24*s13^2-36*s12^2*s34*s14^2*s24*s13-30*s34^3*d^2*s14*s24*s13^2-84*s34^5*s13^2-64*s12^3*s34^3*s13+36*s12^2*s34*d*s14*s24^2*s13-48*s12^2*s34^3*d^2*s24*s13+12*s23*s34*s14^2*s24^3+144*s23*s34*s14^3*s13^2-470*s23*s34^2*d*s14*s13^3+48*s12^2*d*s14*s24*s13^3+120*s23^2*s34^3*d*s14*s13-120*s12*s34^2*d^2*s24*s13^3+120*s12*s34^4*d*s14*s13+36*s12*s34^3*d*s14^2*s13-65*s23*d*s14*s24^2*s13^3-6*s34^5*d^2*s14*s13-54*s23*s12*s34*d*s14*s24^2*s13-48*s34^4*s14*s24^2+120*s34*d*s24^2*s13^4-54*s34^2*s14^2*s24^2*s13+15*s23*s34^4*d^2*s24*s13+120*s34^3*d*s14*s24^2*s13+12*s23*s34^3*d^2*s24^2*s13+120*s23*s12*s34^2*d^2*s14*s13^2-18*s12*s34^2*s14^2*s24^2-9*s12^2*s34*d^2*s14*s24*s13^2+192*s23*s34*s14^2*s24^2*s13-3*s12*s34^5*d^2*s14-140*s34^4*s13^3-18*s12*s34^4*s14^2-48*s12^3*s34^2*s24*s13+8*s23*s12^3*s34^3-d^2*s13^7-12*s12^2*d^2*s24*s13^4-48*s12*s24^2*s13^4+3*s34^2*d*s14^2*s24^3+12*s23^3*d^2*s14^2*s24*s13+24*s23*s24*s13^5-132*s23^2*s34^2*s14^2*s24-12*s12*s34*d^2*s24^3*s13^2+16*s34^6*d*s24-18*s12^2*s34^2*d^2*s14*s13^2-140*s34^3*s13^4+24*d*s24^2*s13^5-72*s23*s34*d*s14^3*s13^2-10*s14*s13^6-144*s23^2*s34*s14*s13^3+6*s23*s12*d^2*s24*s13^4-384*s12*s34^3*s14*s24*s13-9*s23*s12^3*d*s14*s13^2+12*s12^3*d*s14*s24*s13^2+48*s23^2*s12*s34^3*d*s14-60*s34^2*s14^2*s13^3+140*s34^3*d*s14*s13^3+20*s23*s34^3*d^2*s13^3-27*s23*s12^2*s34^2*d*s14*s24-8*s23^3*d^2*s14^3*s24-30*s34^2*d^2*s14*s24*s13^3-18*s23*s34^2*d*s24^3*s13-192*s12^2*s34*s24*s13^3+80*s23*s34*d^2*s14*s24*s13^3+8*s23^2*s34*d^2*s14^3*s24-24*s23^2*s34*s14*s24^2*s13+4*s12^4*s34^3*d-36*s23^2*s12*s34*d^2*s14*s13^2-24*s12*s34^3*d^2*s14*s24*s13-6*s23*d*s24^3*s13^3+36*s23^2*s34*d*s14^4-15*s34^4*d^2*s14*s13^2+6*s23^2*s12^2*d^2*s14^2*s13-240*s12*s34^4*s13^2-6*s23^2*d^2*s14*s13^4+36*s23^2*s12*d*s14^2*s24*s13-24*s12*s34^5*d^2*s13-3*d^2*s14*s24^2*s13^4+192*s23*s12*s34*s24*s13^3+32*s23^2*s12*d*s14^3*s13-6*s34^5*s14^2-2*s23^2*s12^2*d^2*s14^3+32*s23^2*d*s14^3*s24*s13+18*s12*d*s14^2*s24*s13^3+320*s12*s34^3*d*s13^3+108*s23^2*s34^2*d*s14^2*s24+24*s23*s24^2*s13^4-28*s12^3*s34^3*s14-72*s23*s12^2*s34*d*s14^2*s13-48*s12*s24*s13^5-120*s34^4*s24^2*s13+10*s23*s34^3*d^2*s14*s24^2+72*s23*s12^2*s34^2*s24*s13-36*s23*s34^5*d*s13+108*s23*s12^2*s34*s14*s24*s13+96*s23*s12^2*s34^3*s13+96*s23*s34^4*s14^2+3*s12^4*s34^2*d*s14-48*s12*s34*s24^3*s13^2-240*s34^2*s24*s13^4-36*s23^2*s34^2*d^2*s14*s24*s13-144*s23^2*s12*s34*s14*s13^2-12*s34*s14*s24^4*s13+96*s34*d*s24*s13^5+28*s34*d*s13^6+16*s12^3*s34^4*d-4*s34^7+8*s23^4*s14^3-60*s34^3*d^2*s24^2*s13^2-18*s12^2*s34^2*s14^2*s24-60*s34^4*d^2*s24*s13^2+504*s23*s12*s34*s14*s13^3-72*s23*s12*d*s14^2*s24*s13^2-192*s12^2*s34*s14*s13^3-54*s34*s14^2*s24^2*s13^2-24*s23*d*s14^3*s13^3+12*s23*s12^2*s34*s14^3+192*s23*s12*s34^2*s14^2*s24-16*s12^3*s13^4-12*s12*s34^2*d^2*s24^3*s13-72*s23*s34^2*d*s14^3*s13+56*s23^3*s14^4-64*s12^3*s34*s13^3+120*s12^2*s34*d*s13^4-90*s23*s12*s34*d*s13^4+9*s12^2*d*s14^2*s24*s13^2-3*s12^4*s34^2*d^2*s13-4*s12^4*s13^3+320*s34^3*d*s24*s13^3-21*s34^2*d^2*s13^5-195*s23*s34^2*d*s14*s24^2*s13+10*s23*s34^5*d^2*s14-240*s34^2*s24^2*s13^3+96*s23*s34^2*s14^2*s24^2+42*s34*d*s14*s13^5-4*s34^6*d^2*s24+60*s23*s14^3*s24*s13^2-48*s14*s24^2*s13^4-36*s23*d*s14^2*s24^2*s13^2-24*s23*s34^3*d*s14^3+4*d*s13^7+270*s23*s12^2*s34^2*s14*s13-30*s34^4*s14^2*s13+48*s12*s34^3*d*s14*s24^2-150*s34^2*s14*s13^4+120*s23*s34^2*d^2*s14*s24*s13^2-18*s23*s12*s34^5*d+96*s23*s14^2*s13^4+24*s12*s34^5*d*s14+24*s23*s12*s14^3*s24*s13-432*s23^2*s34*s14^3*s13-36*s12*s14*s13^5-2*s23^2*d^2*s14^3*s24^2-26*s23^2*d^2*s14^2*s13^3+18*s23*s12^3*s34^2*s14-12*s23^2*s14*s24^2*s13^2-216*s23^2*s34^2*s14*s13^2+68*s23^3*s34*s14^3-10*s34^6*s14+108*s23^2*s12*d*s14^2*s13^2-48*s12*s34^5*s24-192*s12^2*s34^3*s24*s13+4*s34^3*d*s24^4-18*s23*s12^2*s34^3*d*s24-36*s12*s34*s14^2*s24^2*s13-16*s12^3*s34^4-12*s23^2*s12*d^2*s14*s24*s13^2-4*s13^7-6*s23*d*s13^6-60*s12*s34^4*d^2*s24*s13+96*s34^5*d*s24*s13+8*s23*s34^4*d^2*s14^2-48*s12*s34^3*d^2*s24^2*s13-12*s23^2*s12*s34^2*d^2*s14^2+144*s12^2*s34^2*d*s14*s24*s13-235*s23*s34^4*d*s14*s13+192*s23*s12*s34^3*s24*s13-216*s23*s12*s34^2*d*s24*s13^2-256*s23*s34^3*d*s14^2*s13+48*s12*d*s14*s24^2*s13^3-6*s12^3*s34^2*s14^2+144*s23^2*s12*s34^2*d*s14*s13-48*s23^2*s12*s14*s13^3+288*s12^2*s34^2*d*s24*s13^2+160*s23*s34^3*s13^3-4*s12*d^2*s24^3*s13^3+504*s23*s34^3*s14*s24*s13-4*s12^4*s34^3+3*s23*s34*d^2*s24^3*s13^2-3*s12^2*s34^4*d^2*s14-36*s23^2*s34^2*d^2*s14*s13^2+32*s23^2*s12*s34*d*s14^3+240*s12^2*s34^2*d*s13^3+144*s23*s12^2*s34^2*s13^2-103*s23*s12*d*s14*s13^4+30*s12^2*d*s14*s13^4-180*s23*s12*s34^2*d*s13^3+20*s23*s12*s34^4*d^2*s14-24*s34^2*d^2*s24^3*s13^2-120*s34*s24^2*s13^4+240*s23*s34^3*s24*s13^2-12*s23^2*s12*d^2*s14*s13^3-24*s23^2*s12*s14*s24*s13^2-28*s34^3*s14*s24^3-18*s14^2*s24^2*s13^3+9*s34^4*d*s14^2*s24+9*s12*s34^4*d*s14^2-18*s23*s12*d*s24^2*s13^3+24*s12^2*d*s13^5+36*s23^2*s12*s34*d*s14^2*s24+48*s23^3*s34*s14^2*s13+24*s12^2*d*s24^2*s13^3-412*s23*s34^3*d*s14*s24*s13+16*d*s24*s13^6-96*s12*s34^4*s14*s24+240*s12*s34*d*s14*s24*s13^3-6*s14^2*s13^5-108*s23*s34^2*d*s24^2*s13^2-412*s23*s12*s34^3*d*s14*s13-156*s23^2*s14^2*s13^3+48*s23^2*d*s14*s24*s13^3+120*s12^2*s34^3*d*s14*s13+6*s23^2*s34*d^2*s14^2*s24^2+30*s23*s34^2*d^2*s24*s13^3+36*s23^2*d*s14^4*s13+240*s12*s34^2*d*s14*s13^3-390*s23*s12*s34^2*d*s14*s24*s13+3*s23*s12*s34^3*d^2*s24^2+60*s23*s12*s14^3*s13^2-264*s23^2*s34*s14^2*s24*s13-6*s12^2*s34^3*d^2*s24^2+30*s23^2*s34^4*d*s14+18*s23^2*s12^2*s34^2*d*s14+16*s34^4*d*s24^3-4*s12^3*s34^3*d^2*s24+192*s23*s12^2*s34*s14^2*s13+48*s12^2*d*s24*s13^4-30*s34*s14^2*s13^4+540*s23*s34^3*s14*s13^2-24*s12*s34^2*s14*s24^3-6*d^2*s24^2*s13^5-18*s14^2*s24*s13^4-24*s12*s14*s24^3*s13^2-12*s23^2*s12^2*s34^2*s14+16*s12*s34^6*d+48*s12*s34*d*s24^3*s13^2-60*s12*s34^4*d^2*s13^2-4*s12*d^2*s13^6+84*s34^5*d*s13^2+180*s12^2*s34^2*d*s14*s13^2-36*s23*s12*d*s24*s13^4+36*s23*s12^2*s14^2*s24*s13-18*s23*s12^3*s34*d*s13^2-240*s12^2*s34^3*s13^2+42*s34^5*d*s14*s13+360*s12*s34^2*d*s14*s24*s13^2-15*s12*s34^4*d^2*s14*s13-468*s23^2*s34*s14^2*s13^2-618*s23*s12*s34^2*d*s14*s13^2-72*s23*s34^3*d*s24^2*s13-30*s34*d^2*s24^2*s13^4+130*s23^2*s34^2*d*s14^3+12*s23^3*s12*s34*d^2*s14^2-90*s23*s34^4*d*s24*s13+504*s23*s12*s34^3*s14*s13-192*s12^2*s34^3*s14*s13-18*s23*s12^3*s34*d*s14*s13-36*s23^2*s14*s13^4-132*s23^2*s14^2*s24*s13^2+180*s23*s12*s14*s24*s13^3-16*s34^3*d^2*s24^3*s13-9*s12*s34^2*d^2*s14*s24^2*s13+120*s23*s12*s34^4*s13-156*s23^2*s34^3*s14^2+48*s34*d*s14*s24^3*s13^2+60*s12*d*s14*s24*s13^4+16*d*s14*s24^3*s13^3-90*s23*s34^4*d*s13^2+60*s23*s12*s34^2*s14^3+100*s23*s34^2*d^2*s14*s13^3+756*s23*s34^2*s14*s24*s13^2+192*s12^2*s34^3*d*s24*s13-12*s34*s14^2*s24^3*s13+480*s12*s34^2*d*s24*s13^3-27*s23*s12*d*s14*s24^2*s13^2-24*s23^2*s34^3*d^2*s14*s13-84*s12^2*s14*s24*s13^3-72*s12*s34^2*d^2*s24^2*s13^2+7*d*s14*s13^6+9*s12^2*d*s14^2*s13^3+18*s12^2*d*s14*s24^2*s13^2-6*s23*s12^3*d*s13^3-384*s23*s34^2*d*s14^2*s13^2-90*s23*s12*s34^4*d*s13-144*s23*s12*s34^3*d*s24*s13-24*s24^2*s13^5-300*s23*s34^2*d*s14^2*s24*s13-72*s23^3*s34*d*s14^2*s13+120*s12^2*s34^4*d*s13-100*s23*s12*d*s14^2*s13^3-36*s12*s34^3*s14^2*s24+60*s23*s34^2*s14^3*s24+240*s12*s34^2*d*s13^4+36*s23^2*s34*d*s14*s24^2*s13-12*s12^3*s34^2*d^2*s24*s13-65*s23*s12^2*d*s14*s13^3-100*s23*s12*s34^3*d*s14^2-84*s12^2*s34^3*s14*s24-4*s12*s34^6*d^2-6*s12^3*s14^2*s13^2+126*s23*s12*s14*s13^4-24*s23^2*s34*s14^2*s24^2-6*s12*s34^4*d^2*s14*s24+24*s34^5*d*s14*s24+180*s23*s12*s34^3*s14*s24+9*s12^2*s34^3*d*s14^2-47*s23*d*s14*s13^5-27*s23*s12*s34^2*d*s14*s24^2+12*s23^3*s12*d^2*s14^2*s13+8*s23*s34^6+24*s34^5*d*s24^2+18*s12^2*s34^2*d*s14*s24^2-48*s12^3*s34*s24*s13^2+192*s12*s34*d*s24^2*s13^3-12*s12*s34^4*d^2*s24^2+9*s23*s12^2*s34*d^2*s24*s13^2-48*s12^2*s34^4*s14-84*s12*s14*s24^2*s13^3-12*s23^2*s12^2*s34*d^2*s14*s13+270*s23*s34*s14*s24^2*s13^2-24*s12^2*s34^3*s24^2+32*s23*s34*d^2*s14^2*s13^3-240*s12^2*s34^2*s13^3-3*s34*d^2*s24^4*s13^2-96*s23^2*s12*s34*s14^3+36*s23*s12^2*s34*s14^2*s24-16*s12^3*s34^3*d^2*s13-288*s34^2*s14*s24^2*s13^2-360*s12*s34^2*s14*s13^3+90*s23*s34^3*s14*s24^2-320*s34^3*s24*s13^3+120*s12*s34*d*s14*s13^4+48*s12^2*s34^4*d*s24+96*s23*s14^2*s24^2*s13^2-12*s23^3*s34*d*s14^2*s24-26*s23^2*s34^3*d^2*s14^2+144*s23*s34^2*s14^3*s13-72*s12*s34^3*s14^2*s13+120*s34^4*d*s24^2*s13-24*s23*d*s14^3*s24*s13^2+15*s23*s34*d^2*s24*s13^4-24*s23*s12*d*s14^3*s13^2-300*s23*s12*s34*d*s14^2*s13^2-12*s12^2*s34*d^2*s14*s13^3-252*s12^2*s34*s14*s24*s13^2-60*s34^2*d^2*s24*s13^4-240*s12*s34^4*s24*s13+8*s23*d^2*s14^2*s24*s13^3-15*s34^4*d^2*s14*s24*s13-36*s23*s34^2*d*s14^2*s24^2-36*s23*s12*s34^4*d*s24+15*s23*s34^2*d^2*s13^4-36*s23^2*s34*d^2*s14*s24*s13^2+36*s23*s12*s14^2*s24^2*s13+10*s23*s12^2*s34^3*d^2*s14+540*s23*s12*s34*s14*s24*s13^2+80*s23*s12*s34*d^2*s14*s13^3-24*s23^2*s12*s34*d^2*s14*s24*s13-12*s23^2*s34^3*d^2*s14*s24+3*s23*s12*d^2*s13^5+27*s12^2*s34*d*s14^2*s13^2+24*s23*s12*s24^2*s13^3-216*s23^2*s34^2*s14^3+48*s23*s12*s34^4*s24+120*s34*d*s14*s24^2*s13^3+12*s12^4*s34*d*s13^2-12*s23^3*s12*d*s14^3+180*s23*s12*s34^3*s14^2-18*s23*s34^4*d*s24^2+48*s12*d*s24^2*s13^4-60*s34^2*d^2*s24^2*s13^3-24*s23^2*s12^2*s14^2*s13-200*s34^3*s14*s13^3+180*s34^2*d*s14*s24^2*s13^2-480*s12*s34^2*s24*s13^3+30*s23*s12^2*s34*d^2*s14*s13^2-84*s12^3*s34*s14*s13^2+36*s12*s34*d*s14^2*s13^3+8*s23*s34^3*s24^3-6*s23^2*s34^2*d^2*s14*s24^2+12*s23*s34*d^2*s24^2*s13^3-12*s23^2*d^2*s14^2*s24*s13^2-12*s34*s24^4*s13^2-6*s12^4*s14*s13^2-84*s23^2*s34*s14^4+120*s34*d*s14*s24*s13^4+36*s23^2*s12*s34^2*d*s14*s24-100*s23*s34^3*d*s14^2*s24+12*s12*d*s14*s24^3*s13^2-18*s23*d*s24*s13^5-103*s23*s34^4*d*s14*s24-384*s12*s34*s14*s24*s13^3+140*s34^3*d*s13^4-18*s23*s12^2*d*s24*s13^3-96*s12*s34^5*s13-195*s23*s34*d*s14*s24^2*s13^2-3*s12^3*s34^2*d^2*s14*s13+48*s23*s12*s24*s13^4-72*s23*s12^2*s34^3*d*s13-192*s34^3*s14*s24^2*s13+18*s23^2*d*s14^2*s24^2*s13-180*s34^4*s14*s24*s13-60*s12^2*s34^3*d^2*s13^2+9*s12*d*s14^2*s13^4-24*s12^2*s13^5+140*s34^4*d*s13^3-78*s23^2*s34*d^2*s14^2*s13^2+48*s12^2*s34^3*d*s14*s24-216*s23^2*s14^3*s13^2+72*s12^2*s34*d*s24^2*s13^2+180*s23*s12*s14^2*s13^3+12*s12*s34^2*d*s14*s24^3+30*s23*s12*s34^3*d^2*s13^2-12*s23^2*d*s14^4*s24-48*s23^2*s12*s34*s14*s24*s13-16*s12*s24^3*s13^3+24*s23*s12*s34*d^2*s24*s13^3-180*s12*s34^4*s14*s13-48*s12^2*s34*d^2*s24*s13^3+24*s23*s12^2*s34^4-15*s34^2*d^2*s14*s13^4-54*s23*s12*s34*d*s24^2*s13^2+216*s23^2*s12*s34*d*s14^2*s13+120*s23^2*s34*d*s14*s13^3-130*s23*s12*s34^3*d*s14*s24+16*s12^3*s34^3*d*s14+54*s23*s34^5*s14+12*s23^3*d^2*s14^2*s13^2-12*s12^4*s34^2*s13-6*s14^2*s24^3*s13^2-96*s12*s14*s24*s13^4+64*s34*d*s24^3*s13^3-108*s12*s34^2*s14^2*s24*s13+240*s12*s34*d*s24*s13^4+18*s23^2*s12^2*d*s14*s13^2+18*s12*s34*d*s14^2*s24^2*s13-120*s12^2*s34*s13^4+50*s23*s34*d^2*s14*s13^4-192*s12*s34^3*s24^2*s13+24*s23*s34^2*s24^3*s13+15*s34^4*d*s14^2*s13+12*s23*s14^2*s24^3*s13-28*s34*s13^6-12*s34^3*d^2*s14*s24^2*s13+12*s34^2*d*s24^4*s13+576*s23*s34^2*s14^2*s13^2-240*s12*s34*s24*s13^4-96*s34^2*s24^3*s13^2+10*s23*d^2*s14*s24^2*s13^3-48*s23*s12*s34*d*s14^3*s13-3*s12*d^2*s14*s13^5-54*s23*s12^2*s34^2*d*s24*s13-16*s12^3*s34*d^2*s13^3+144*s12^2*s34*d*s14*s24*s13^2-24*s23*s34^2*d*s14^3*s24+36*s34*d*s14^2*s24*s13^3-s12^4*d^2*s13^3+540*s23*s12*s34^2*s14^2*s13-12*s23^3*d*s14^2*s24*s13+96*s12^3*s34^2*d*s13^2-54*s12^2*s34^2*s14^2*s13+48*s12^3*s34*d*s24*s13^2+24*s23*s12^2*s24*s13^3+3*s23*s12*s34^5*d^2-12*s23^2*s34^2*s14*s24^2+24*d*s14*s24*s13^5+20*s23*s12*d^2*s14*s24*s13^3+3*s23*s12^3*s34^2*d^2*s13-96*s23^2*s34*s14^3*s24+216*s23^2*s34*d*s14^2*s24*s13-4*s12^3*d^2*s13^4-14*s23^2*d^2*s14^3*s13^2-6*s14*s24^4*s13^2-24*s12^2*s34^5-108*s34^2*s14^2*s24*s13^2-18*s34^4*s14^2*s24-390*s23*s12*s34*d*s14*s24*s13^2+24*s23*s12*s34^2*d^2*s14^2*s13+30*s23*s34^3*d^2*s24*s13^2+54*s23*s12^2*s34^2*s14*s24+240*s34^3*d*s14*s24*s13^2-4*s12^3*d^2*s24*s13^3+36*s23*s34*s14*s24^3*s13-72*s12*s34*s14^2*s13^3-6*s34^2*s14*s24^4+240*s12*s34^3*d*s14*s13^2-36*s12*s14^2*s24*s13^3+24*s23*s12^2*s13^4-3*s12^2*d^2*s14*s24*s13^3-84*s34^2*s14*s24^3*s13-7*s34^6*d^2*s13+3*s23*d^2*s24^2*s13^4-36*s23*s12^2*s34^2*d*s14^2-8*s23^4*d^2*s14^3+540*s23*s34*s14^2*s24*s13^2+48*s12^3*s34*d*s14*s13^2-48*s12*s34^4*s24^2-72*s12^2*s34^2*s24^2*s13-36*s23*s34*d*s13^5-3*s34^4*d^2*s14*s24^2-12*s12*s34^5*d^2*s24+90*s23*s12^2*s14*s13^3-9*s23*s12^3*s34^2*d*s14-4*s24^4*s13^3-28*s23^2*s34*d^2*s14^3*s13+16*s23^3*s34*d^2*s14^3-72*s34^3*s14^2*s24*s13+72*s23*s12*s34^2*s24^2*s13-72*s23*s12^2*s34*d*s13^3+48*s23*s34*s13^5-252*s12*s34^2*s14*s24^2*s13-12*s12*d^2*s24*s13^5-195*s23*s12^2*s34^2*d*s14*s13+18*s23*s12^2*s34^2*d^2*s13^2+7*s34^6*d*s14-240*s12*s34^2*s13^4+24*s23*s12^3*s34*s13^2+16*s23^3*d^2*s14^3*s13-36*s23^3*s34^2*d*s14^2-s12^4*s34^3*d^2+8*s23*s13^6-18*s23*s12^2*d*s13^4+16*s34^3*d*s14*s24^3+s23*s34^3*d^2*s24^3+6*s23^2*s12^2*s34*d^2*s14^2-180*s12*s34*s14*s13^4-6*s34^2*s14^2*s24^3-16*s24^3*s13^4+144*s23*s34^2*s24^2*s13^2+8*s23*d^2*s14^2*s13^4-4*d^2*s24^3*s13^4+48*s34^2*d*s14*s24^3*s13-9*s12*s34*d^2*s14*s24^2*s13^2+9*s23*s12*s34^2*d^2*s24^2*s13-18*s23*s34^5*d*s24+100*s23*s34^3*d^2*s14*s13^2-54*s23*s12^2*s34*d*s14*s24*s13-192*s12*s34*s24^2*s13^3+480*s12*s34^3*d*s24*s13^2+24*s23*s12^2*s34^3*s24-24*s12*s34*d^2*s13^5+20*s23*d^2*s14*s24*s13^4-s12^3*d^2*s14*s13^3-24*s12^3*s14*s24*s13^2-144*s23^2*s34^2*s14*s24*s13+54*s34^2*d*s14^2*s24*s13^2-300*s23*s34*d*s14^2*s24*s13^2+3*s12^4*d*s14*s13^2+390*s23^2*s34^2*d*s14^2*s13+3*s12^3*d*s14^2*s13^2-4*s12^3*s34^4*d^2+16*s12*s34^3*d*s24^3-d^2*s24^4*s13^3-18*s12^2*s34^2*d^2*s24^2*s13-6*s23^2*d^2*s14*s24^2*s13^2-4*s23^2*s12*d*s14^3*s24-18*s23*s34*d*s14*s24^3*s13+12*s23*s12^3*s14^2*s13)*(s23+s12+s34+s14+s24+s13)^(-1)*(-2+d)^(-1)*s14^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (-1/2*(d*s24^2-2*s12^2+2*s34*d*s13-4*s34*s24+2*d*s24*s13-2*s24^2-2*s13^2-4*s34*s13+s12^2*d+d*s13^2+2*s34*d*s24-2*s34^2+s34^2*d+8*s23*s14-4*s12*s13+2*s12*d*s24+2*s12*s34*d-4*s12*s34+2*s12*d*s13-4*s23*d*s14-4*s24*s13-4*s12*s24)^(-1)*(s23+s12+s34+s14+s24+s13)^(-1)*s14^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)*(30*s23^2*s34*d*s24^2*s13^2+3*s23^3*s12^2*d*s14*s24+22*s23^2*s34^3*d*s14*s24-4*s23^3*s34*d^2*s14^2*s24-4*s23^4*s12*d*s14^2-16*s23^2*s34*d^2*s24*s13^3-24*s23^3*s12*s14^2*s24+18*s23^3*s34*d^2*s14*s24*s13-12*s23^2*s12^2*s34*d*s14*s13+8*s23^3*s12*d*s14^2*s13+40*s23^4*d*s14^3+8*s23^2*s34*s14*s24^3+20*s23^2*s12*s34^3*d*s24+9*s23^3*s12*s34^2*d^2*s14-6*s23^2*s12^2*s34*d^2*s13^2-114*s23^2*s34^2*s14^2*s13-s23^3*s12^3*d^2*s14-4*s23^2*s12^3*d^2*s14*s13-30*s23^2*s12*s34^2*s14^2+33*s23^3*s34^2*d^2*s14*s13-2*s23^2*s12^3*s34*d*s14+12*s23^3*s12*s14*s24*s13-12*s23^2*s34^5+6*s23^2*s12*s34*d^2*s14^2*s13-80*s23^3*d*s14^2*s13^2-9*s23^2*s12^2*s34*d*s14^2-168*s23^2*s34*s14*s24*s13^2-12*s23^2*s34*d^2*s14*s13^3+24*s23^2*s12^2*s34*s14*s24+18*s23^3*s12*s34^2*s14+10*s23^3*s34^2*d^2*s14^2+s23^2*s12^3*d^2*s14^2+66*s23^2*s34^2*d*s14*s24*s13+10*s23^2*s12^2*s34^3*d-36*s23^3*s34*d*s14^3+11*s23^3*d^2*s14*s13^3+18*s23^3*s14*s24*s13^2+63*s23^2*s34*d*s14^2*s13^2-12*s23^2*s12*s14^2*s24*s13+6*s23^2*s12*s14^2*s24^2+3*s23^2*s12*d^2*s14^2*s24^2-60*s23^2*s12*s34*s14^2*s13+4*s23^2*s12*d*s14*s24^3-36*s23^2*s34^2*s24^2*s13-6*s23^2*s12*d^2*s14^2*s24*s13+108*s23^3*s14^3*s13-6*s23^2*s34^2*d*s14*s24^2+20*s23^2*s12*s34^4*d-6*s23^2*s14^2*s24^2*s13-12*s23^2*s13^5-12*s23^2*s12^2*s14^3-56*s23^2*s12*s34^3*s14+20*s23^2*s34^4*d*s24-6*s23^2*s34^2*d^2*s24^2*s13+36*s23^3*s12*s34*s14*s13-72*s23^2*s12*s34^2*s24*s13-6*s23^2*s12^2*s34*s14^2-3*s23^3*s12*d^2*s14*s24^2+6*s23^2*d*s14^3*s13^2-3*s23^2*d*s14^2*s24^3-60*s23^2*s34*s13^4-135*s23^3*s34*d*s14*s13^2+6*s23^3*s12^2*s14*s24-56*s23^2*s34^3*s14*s24-8*s23^3*s12^2*d*s14^2+21*s23^2*s34^3*d*s14^2-3*s23^2*s34^2*d^2*s14^2*s13-45*s23^3*s34^3*d*s14-24*s23^2*s12*s14^3*s24-168*s23^2*s12*s34^2*s14*s13+24*s23^2*s12*s14*s24^2*s13-38*s23^2*s34^4*s14+12*s23^2*s12^2*s14*s24^2-12*s23^2*s34^3*s24^2-120*s23^2*s34^2*s13^3-12*s23^2*s12*d^2*s14*s24^2*s13-20*s23^2*s34^3*d^2*s13^2+132*s23^3*s14^2*s13^2-6*s23^3*s12*s34*d^2*s14*s24-12*s23^2*s12*d*s14*s24*s13^2-36*s23^3*d*s14^3*s13+6*s23^3*s12^2*s34*s14-16*s23^4*s34*d^2*s14^2-96*s23^2*s12*s34*s13^3-9*s23^2*s12^2*d*s14^2*s24+s23^2*d*s14*s24^4+12*s23^2*s34*d*s14^3*s13+8*s23^4*d^2*s14^2*s24+138*s23^3*s34*s14*s13^2-6*s23^2*s12*s34*d*s14*s24^2-12*s23^4*s34*s14^2-3*s23^2*d^2*s14^2*s24^2*s13+18*s23^3*s12*s34*d^2*s14*s13-12*s23^3*s14^2*s24^2-2*s23^2*s34^3*d^2*s24^2-9*s23^2*s12*s34^2*d*s14^2-12*s23^2*s12^2*s14*s13^2-120*s23^2*s34^3*s13^2-4*s23^2*s12*d^2*s13^4+3*s23^2*s34^2*d^2*s14^2*s24-24*s23^2*s12*s34^2*s14*s24+10*s23^2*d*s24^2*s13^3+100*s23^2*s34^2*d*s13^3-16*s23^4*d^2*s14^2*s13-12*s23^2*s34*d*s14^3*s24-3*s23^2*s34^4*d^2*s14+66*s23^2*s12*s34*d*s14*s13^2+6*s23^3*s34*s14*s24^2-9*s23^2*s12^2*d*s14^2*s13+25*s23^2*d*s14*s13^4-9*s23^2*d*s14^2*s24*s13^2+24*s23^2*s12^2*s14*s24*s13-96*s23^2*s34^3*s24*s13-36*s23^2*s12^2*s34^2*s13-2*s23^2*d*s14*s24^3*s13+36*s23^3*d*s14^3*s24+12*s23^3*s12*s34*s14*s24+21*s23^2*d*s14^2*s13^3+6*s23^2*d*s14^3*s24^2+9*s23^3*s12*d^2*s14*s13^2-4*s23^2*s12*s34^4*d^2+50*s23^2*s34^4*d*s13+30*s23^2*s12^2*s34^2*d*s13+8*s23^3*s12*s34*d*s14^2-24*s23^2*s12*s34*d*s14*s24*s13+132*s23^3*s34^2*s14^2+2*s23^2*s12^3*s14^2+66*s23^2*s34*d*s14*s24*s13^2-3*s23^3*d^2*s14*s24^2*s13-56*s23^2*s14*s24*s13^3+80*s23^2*s12*s34*d*s13^3-33*s23^3*d*s14*s24*s13^2-152*s23^2*s34^3*s14*s13+6*s23^3*s12^2*s14*s13+10*s23^2*d*s13^5+20*s23^2*d*s24*s13^4-3*s23^3*s34*d*s14*s24^2-24*s23^2*s12*s34^2*d^2*s13^2+60*s23^2*s12*s34*d*s24*s13^2-3*s23^3*s12^2*s34*d^2*s14-9*s23^2*s34*d*s14^2*s24^2-s23^3*d^2*s14*s24^3+80*s23^2*s34^3*d*s24*s13-24*s23^2*s12^2*s34*s14*s13-6*s23^2*s12^2*d^2*s14*s24^2-6*s23^3*s12*d^2*s14*s24*s13-6*s23^2*s12*s34*d^2*s14^2*s24-4*s23^2*s34*d^2*s14*s24^3-2*s23^2*s12^2*s34^3*d^2-8*s23^3*d*s14^2*s24^2-6*s23^2*d*s14*s24^2*s13^2-96*s23^2*s34*s24*s13^3+150*s23^2*s34^2*d*s14*s13^2-36*s23^3*s14^3*s24+22*s23^2*s12*d*s14*s13^3+3*s23^2*s12*d^2*s14^2*s13^2-12*s23^2*s12*s34*s14^2*s24+6*s23^2*s12^2*d*s14^3-30*s23^2*s12*s14^2*s13^2+20*s23^3*s34*d^2*s14^2*s13-36*s23^3*s12*s14^3+6*s23^2*s34*d^2*s14^2*s24*s13-2*s23^2*s12^2*d^2*s13^3+s23^2*s12^4*d*s14+100*s23^2*s34^3*d*s14*s13-3*s23^3*s12^2*d*s14*s13+50*s23^2*s34*d*s13^4-6*s23^2*s12^2*d*s14*s24*s13-12*s23^2*s12*s34^2*d^2*s24*s13+9*s23^3*s34^2*d^2*s14*s24-4*s23^2*s12^3*d^2*s14*s24-4*s23^3*d^2*s14^2*s24*s13+80*s23^2*s12*s34^3*d*s13+20*s23^2*s12*d*s24*s13^3+46*s23^3*s34^3*s14-30*s23^2*s34^2*s14^2*s24-16*s23^3*s12*d*s14^2*s24-6*s23^2*s12^2*s34*d*s14*s24+120*s23^2*s34^2*d*s24*s13^2-152*s23^2*s34*s14*s13^3+138*s23^3*s34^2*s14*s13+8*s23^2*s12^3*s14*s13+22*s23^2*s12*s34^3*d*s14+6*s23^3*s14*s24^2*s13+44*s23^4*d*s14^2*s13-24*s23^2*s34*s14*s24^2*s13-3*s23^2*s12^2*d^2*s14^2*s13-3*s23^2*d^2*s14*s13^4-18*s23^2*s12*d*s14^2*s24*s13-12*s23^2*s12*d*s14^3*s13-144*s23^2*s34^2*s24*s13^2-12*s23^2*d*s14^3*s24*s13+2*s23^3*s14*s24^3-9*s23^2*s34^2*d*s14^2*s24-2*s23^2*d^2*s24^2*s13^3-66*s23^3*s12*s34*d*s14*s13-168*s23^2*s12*s34*s14*s13^2-24*s23^4*s14^3+2*s23^3*s12^3*s14-3*s23^3*s34*d^2*s14*s24^2-66*s23^3*s34*d*s14*s24*s13-4*s23^2*d^2*s24*s13^4+6*s23^3*s12*s14*s24^2+10*s23^2*s12^2*d*s13^3-s23^2*s12^4*d^2*s14-12*s23^2*s12*s34*d^2*s24*s13^2+24*s23^3*s14^4-72*s23^2*s12*s34*s24*s13^2-16*s23^2*s12*s34^3*d^2*s13-24*s23^2*s34*s14^3*s13-s23^2*d^2*s14^2*s13^3-12*s23^2*s14*s24^2*s13^2-33*s23^3*s12*d*s14*s13^2-10*s23^2*s34*d^2*s13^4-228*s23^2*s34^2*s14*s13^2+108*s23^3*s34*s14^3-2*s23^2*s34^5*d^2-9*s23^2*s12*d*s14^2*s13^2-24*s23^2*s24*s13^4-36*s23^2*s34*s24^2*s13^2+3*s23^2*s12*s34^2*d^2*s14^2+20*s23^2*s12*d*s13^4+66*s23^2*s12*s34^2*d*s14*s13-56*s23^2*s12*s14*s13^3-18*s23^2*s34^2*d^2*s14*s13^2+10*s23^2*s34^3*d*s24^2-12*s23^2*s12*s34*d*s14^3+6*s23^2*s12^2*s14^2*s24-24*s23^2*s12*s14*s24*s13^2+6*s23^2*s12^2*d*s14*s24^2-18*s23^2*s12*s34*d*s14^2*s24+264*s23^3*s34*s14^2*s13+10*s23^3*d^2*s14^2*s24^2-2*s23^2*s34*d*s14*s24^3-38*s23^2*s14^2*s13^3+22*s23^2*d*s14*s24*s13^3-12*s23^2*s14^3*s24^2+s23^3*d*s14*s24^3-3*s23^2*s34*d^2*s14^2*s24^2-16*s23^2*s34^3*d^2*s24*s13-12*s23^4*s12*s14^2-6*s23^2*s12*d*s14*s24^2*s13-60*s23^2*s34*s14^2*s24*s13-20*s23^2*s34^2*d^2*s13^3-24*s23^2*s12*s34^3*s24+25*s23^2*s34^4*d*s14-6*s23^2*s12^2*s34^2*d*s14-4*s23^2*s12*d^2*s24*s13^3-12*s23^2*s12^2*s34*d^2*s14*s24-12*s23^2*s12^2*s34^2*s14-24*s23^2*s12*s24*s13^3+20*s23^3*s12*d^2*s14^2*s24-24*s23^2*s34^2*d^2*s24*s13^2-114*s23^2*s34*s14^2*s13^2-6*s23^2*s12^2*s34^2*d^2*s13+60*s23^2*s12*s34^2*d*s24*s13-10*s23^2*s34^4*d^2*s13+6*s23^2*s34^2*d*s14^3-4*s23^3*s12*s34*d^2*s14^2+8*s23^2*s14*s24^3*s13-38*s23^2*s14*s13^4-12*s23^4*s14^2*s13+4*s23^2*s12^3*d*s14*s24-30*s23^2*s14^2*s24*s13^2-33*s23^3*s34^2*d*s14*s24-38*s23^2*s34^3*s14^2-12*s23^3*s12^2*s14^2+120*s23^2*s12*s34^2*d*s13^2+36*s23^3*s34*s14*s24*s13-24*s23^2*s34^4*s24-3*s23^3*s12^2*s34*d*s14-2*s23^2*d^2*s13^5-12*s23^2*s24^2*s13^3-3*s23^3*s12^2*d^2*s14*s13-12*s23^2*s34^3*d^2*s14*s13-16*s23^2*s12*s34*d^2*s13^3-160*s23^3*s34*d*s14^2*s13-12*s23^2*s34*d*s14*s24^2*s13+2*s23^2*s14*s24^4-135*s23^3*s34^2*d*s14*s13-2*s23^2*s12^3*d*s14*s13-12*s23^4*s14^2*s24-6*s23^2*s34*s14^2*s24^2+9*s23^3*d^2*s14*s24*s13^2-4*s23^2*s34^4*d^2*s24-4*s23^3*s12*d^2*s14^2*s13-24*s23^2*s12*s13^4+8*s23^3*s34*d*s14^2*s24-s23^2*s34^3*d^2*s14^2+10*s23^3*s12^2*d^2*s14^2+80*s23^2*s34*d*s24*s13^3-6*s23^2*s34*d^2*s24^2*s13^2-3*s23^3*s12^2*d^2*s14*s24-12*s23^2*s34^2*s14^3-3*s23^3*d*s14*s24^2*s13+36*s23^3*s12*d*s14^3-60*s23^2*s34^4*s13-6*s23^2*s12^2*s14^2*s13-4*s23^2*s12*d^2*s14*s24^3+8*s23^2*s12*s14*s24^3+100*s23^2*s34^3*d*s13^2+3*s23^2*d^2*s14^2*s24*s13^2-12*s23^2*s12*s34^2*d*s14*s24+11*s23^3*s34^3*d^2*s14-9*s23^2*s12*d*s14^2*s24^2-4*s23^2*d^2*s14*s24^3*s13-96*s23^2*s12*s34^3*s13-9*s23^2*d*s14^2*s24^2*s13-3*s23^2*s34*d^2*s14^2*s13^2-45*s23^3*d*s14*s13^3-12*s23^2*s14^3*s13^2+2*s23^2*s14^2*s24^3-36*s23^2*s12^2*s34*s13^2-48*s23^2*s12*s34*s14*s24*s13-18*s23^2*s12*s34*d*s14^2*s13+100*s23^2*s34*d*s14*s13^3+10*s23^3*d^2*s14^2*s13^2-12*s23^2*s12^2*s13^3-6*s23^2*s12^2*d*s14*s13^2+2*s23^2*s12^4*s14+44*s23^4*s34*d*s14^2-12*s23^2*s12^2*d^2*s14*s24*s13+8*s23^2*s12^3*s34*s14+8*s23^4*s12*d^2*s14^2+18*s23^3*s12*s14*s13^2+8*s23^3*d*s14^2*s24*s13+33*s23^3*s34*d^2*s14*s13^2-12*s23^2*s34^2*s14*s24^2-4*s23^2*s12^3*s34*d^2*s14+30*s23^2*s34^2*d*s24^2*s13-18*s23^2*s34*d*s14^2*s24*s13+3*s23^3*s12*d*s14*s24^2+s23^2*d^2*s14^2*s24^3+s23^3*s12^3*d*s14-33*s23^3*s12*s34^2*d*s14-12*s23^2*s12^2*s34^3-4*s23^2*s12*s34^3*d^2*s24+10*s23^2*s34^5*d+30*s23^2*s12^2*s34*d*s13^2-8*s23^4*d^2*s14^3-144*s23^2*s12*s34^2*s13^2+3*s23^2*s12^2*d^2*s14^2*s24-s23^2*d^2*s14*s24^4-4*s23^4*d*s14^2*s24-12*s23^2*s12*s34*d^2*s14*s24^2-3*s23^2*s12^3*d*s14^2-80*s23^3*s34^2*d*s14^2+8*s23^2*s12^3*s14*s24+18*s23^3*s34^2*s14*s24-24*s23^2*s12*s34^4-3*s23^2*s12^2*s34*d^2*s14^2+24*s23^2*s12*s34*s14*s24^2-6*s23^3*s12*s34*d*s14*s24-168*s23^2*s34^2*s14*s24*s13-6*s23^3*s12*d*s14*s24*s13+63*s23^2*s34^2*d*s14^2*s13+46*s23^3*s14*s13^3+12*s23^2*s12*d*s14^3*s24)),

INT["pentagon1x123",3,21,4,3,{1,-2,1,-1,2}] -> 
  INT["pentagon1x123",3,21,4,3,{1,-2,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,4,3,{2,-2,1,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(-2+d)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)*(4*s23^2*s34*d*s24^2*s13^2-72*s23*s34*s14^2*s13^3+s23*d^2*s14^2*s24^2*s13^2+140*s23*s12*s34*d*s14*s13^3-40*s23^2*s34^3*d*s14*s24+108*s23*s34^2*d*s14*s24*s13^2-80*s23*s34^2*s13^4-48*s23*s14^2*s24*s13^3-8*s23^3*s34*d^2*s14^2*s24+8*s23*s12*s34*s14^3*s24+20*s23^4*s12*d*s14^2-4*s23*s12*d*s14^2*s24^2*s13-s23*s12*d^2*s14^2*s24^3-s23^2*s12^2*d^2*s24*s13^2-48*s23*s34^2*s14^2*s24*s13+88*s23*s34*d*s24*s13^4+24*s23^3*d*s14^4+2*s23^2*s12*s34*d^2*s24^2*s13-s23*s12*s34*d^2*s14^2*s13^2-3*s23*s12^2*s34^4*d^2+2*s23^3*d*s24^2*s13^2-32*s23^3*s12*s14^2*s24+8*s23^2*s12^3*d*s13^2-8*s23^3*s34*d^2*s14*s24*s13+144*s23*s12^2*s34*d*s24*s13^2-60*s23^2*s12^2*s34*d*s14*s13+12*s23^3*s34^2*d*s13^2+28*s23^3*s12*d*s14^2*s13+8*s23*s12^3*s34*s14^2+3*s23*s12*d^2*s14^2*s24*s13^2+s23*s12^2*s34^2*d^2*s14^2+42*s23*s34*d*s14^2*s13^3-16*s23^4*d*s14^3+8*s23^2*s34*s14*s24^3-8*s23^2*s12*s34^3*d*s24+2*s23*s12*d^2*s14*s24^3*s13-7*s23^2*s12^2*s34*d^2*s13^2+156*s23^2*s34^2*s14^2*s13+8*s23*s12^2*d*s14^2*s13^2-128*s23*s34*s24*s13^4+6*s23*s12^3*s34*d^2*s14*s24+36*s23*s12^3*s34^2*d*s13-72*s23*s12^2*s14*s24*s13^2+6*s23^2*s12^3*d^2*s14*s13+12*s23^2*s12*s34^2*s14^2-4*s23^3*s34^2*d^2*s14*s13-16*s23^2*s12*s34*s24^2*s13+2*s23*s34^2*d^2*s14*s24^2*s13-4*s23*d*s14*s24^3*s13^2-216*s23*s34*s14*s24*s13^3+2*s23*s12*s34^2*d^2*s14*s24^2-8*s23^2*s12^3*s34*d*s14-2*s23*d^2*s14*s13^5+24*s23^3*s12*s14*s24*s13+4*s23^2*s34^5-15*s23*s12*s34*d^2*s24^2*s13^2+6*s23^2*s12*s34*d^2*s14^2*s13-6*s23*s12^2*d^2*s13^4+10*s23^3*d*s14^2*s13^2-20*s23^2*s12^2*s34*d*s14^2+176*s23^2*s34*s14*s24*s13^2+16*s23^2*s34*d^2*s14*s13^3-4*s23^2*d^2*s14^3*s24*s13+12*s23^3*s12*s34^2*d*s13-2*s23*s12*s34^3*d^2*s14*s24-8*s23^4*d*s14*s13^2+8*s23*s12^2*s14^3*s13+126*s23*s12^2*s34^2*d*s13^2+8*s23^2*s12^2*s34*s14*s24+64*s23*s34*d*s14*s13^4+16*s23^2*s12^2*d^2*s14*s13^2-12*s23^3*s34^2*d^2*s14^2-s23*s12*d^2*s24^3*s13^2+8*s23^4*s12*s34*s14-5*s23^2*s12^3*d^2*s14^2-2*s23^2*s12^3*s34*d^2*s13-152*s23^2*s34^2*d*s14*s24*s13+4*s23^2*s12^2*s34^3*d+60*s23^3*s34*d*s14^3-21*s23*s12^2*s34*d^2*s13^3-4*s23*s12^4*d*s14*s13+4*s23^3*d^2*s14*s13^3+32*s23^3*s14*s24*s13^2-144*s23*s34*s24^2*s13^3-5*s23*s34*d^2*s13^5-136*s23^2*s34*d*s14^2*s13^2+204*s23*s12*s34*d*s24*s13^3+2*s23*s12^3*s34^2*d^2*s14+40*s23^2*s12*s14^2*s24*s13-3*s23*d^2*s24*s13^5-12*s23^2*s12*s14^2*s24^2+8*s23^2*s12*s34^2*d^2*s14*s24-32*s23*s12*s13^5-9*s23*s12^2*d^2*s24*s13^3-3*s23^2*s12*d^2*s14^2*s24^2-96*s23*s34*s14*s13^4+120*s23^2*s12*s34*s14^2*s13+108*s23*s34*d*s14*s24*s13^3+30*s23*s12^2*d*s24^2*s13^2+4*s23^2*s34^2*s24^2*s13-18*s23^2*s12*d^2*s14^2*s24*s13+20*s23^2*s12^2*s34*d*s24*s13+88*s23*s12^2*s34*d*s14*s13^2-40*s23^3*s14^3*s13-26*s23^2*s34^2*d*s14*s24^2-16*s23^2*s12^3*s34*s13+90*s23*s34*d*s24^2*s13^3+88*s23*s34^3*d*s24*s13^2+44*s23*s12*s34^2*d*s14^2*s13-8*s23*s34^5*s13-4*s23^3*s24^2*s13^2-4*s23^2*s12*s34^4*d+2*s23^3*s12^2*s34^2*d+8*s23*s12*d^2*s14*s24^2*s13^2+20*s23^2*s14^2*s24^2*s13+30*s23*d*s24^2*s13^4-12*s23^2*s13^5+16*s23^4*s14*s13^2-8*s23^4*s12*d*s14*s13-4*s23*s12^2*d*s14^3*s13+20*s23^2*s12^2*s14^3-24*s23*s34^3*s14^2*s13+s23*s34^2*d^2*s14^2*s24*s13+4*s23^2*s12^2*s34^2*d*s24+16*s23^2*s12*s34^3*s14-144*s23*s12^2*s34*s14*s13^2-12*s23^2*s34^4*d*s24+8*s23*s12^4*s34*d*s13-8*s23^2*s14^4*s24-s23*s12*s34^3*d^2*s14^2+7*s23^2*s34^2*d^2*s24^2*s13+56*s23^3*s12*s34*s14*s13-40*s23^2*s12*s34^2*s24*s13-144*s23*s12*s34^2*s14*s24*s13+20*s23^2*s12^2*s34*s14^2-32*s23*s34^4*s24*s13-38*s23^2*d*s14^3*s13^2+4*s23^2*d*s14^2*s24^3-4*s23^2*s34*d*s24^3*s13-s23*d^2*s14^2*s24^3*s13-72*s23*s14*s24^2*s13^3-44*s23^2*s34*s13^4+s23^2*s12*s34^2*d^2*s24^2+8*s23^3*s12*d^2*s14^3-24*s23^3*s34*s24*s13^2-8*s23*s34*s14^3*s24*s13-144*s23*s34^2*s14*s13^3+16*s23*s12^2*s34^3*d*s14-36*s23^3*s34*d*s14*s13^2+24*s23*s12*d*s13^5+8*s23*s12*s34*s14^2*s24^2-48*s23*s12^2*s24^2*s13^2-32*s23*s24^3*s13^3+48*s23^2*s34^3*s14*s24+60*s23*s34^2*d*s13^4-32*s23*s12^3*s34*s24*s13-3*s23*s12*s34^4*d^2*s24+18*s23^3*s12^2*d*s14^2-32*s23^2*s34^3*d*s14^2-21*s23*s12^2*s34^2*d^2*s24*s13-72*s23*s34^2*s14*s24^2*s13+17*s23^2*s34^2*d^2*s14^2*s13-16*s23^3*s12*s34*s24*s13+20*s23^3*s34^3*d*s14-15*s23*s12^2*s34^3*d^2*s13+16*s23^2*s12*s14^3*s24-24*s23*s34^4*s14*s13+64*s23^2*s12*s34^2*s14*s13+2*s23*s12^2*s34*d^2*s14^2*s24+40*s23^2*s12*s14*s24^2*s13+20*s23^2*s34^4*s14-128*s23*s12*s34^3*s13^2+4*s23^2*s12*d^2*s14^3*s24+4*s23^3*s12*d*s13^3-48*s23*s34^3*s24^2*s13-192*s23*s12^2*s34*s24*s13^2+12*s23^2*s34^3*s24^2-72*s23*s14*s24*s13^4-2*s23*s34^3*d^2*s14*s24*s13-56*s23^2*s34^2*s13^3+14*s23*d*s14^2*s13^4+2*s23^2*s12*d^2*s14*s24^2*s13-2*s23*s12*s34^2*d^2*s14*s24*s13+2*s23^2*s34^3*d^2*s13^2+14*s23^2*d^2*s14*s24*s13^3+64*s23*s34^3*d*s14*s13^2+72*s23*s12*s34^2*d*s24^2*s13-s23*s12*s34^2*d^2*s24^3+36*s23^3*s14^2*s13^2-4*s23*s12^2*s34^2*d^2*s14*s13-2*s23*s12*s34*d^2*s24^3*s13-128*s23^2*s12*d*s14*s24*s13^2+52*s23^3*d*s14^3*s13-4*s23^2*s12^2*s34^2*s24-24*s23^2*s12*s14^4+8*s23^3*s12^2*s34*s14+4*s23^4*s34*d^2*s14^2-24*s23*s12^2*s14^2*s13^2-24*s23*s12^3*s34*s14*s13+6*s23*s12^3*s34^3*d-8*s23*s14^3*s13^3-104*s23^2*s12*s34*s13^3-192*s23*s34^2*s24*s13^3+20*s23^2*s12^2*d*s14^2*s24+108*s23*s12*s34^3*d*s13^2+2*s23*s12^4*s34*d^2*s14+12*s23^3*s34*d*s24*s13^2-64*s23^2*s34*d*s14^3*s13-4*s23^2*s34^2*d*s24^3+4*s23^4*d^2*s14^2*s24+56*s23^3*s34*s14*s13^2-16*s23^2*s12*s34*d*s14*s24^2-28*s23*s12*s34^2*d^2*s13^3+32*s23^4*s34*s14^2+8*s23*s12*s34^4*d*s14-11*s23^2*d^2*s14^2*s24^2*s13+8*s23^3*s12*s34*d^2*s14*s13-4*s23*s12^3*d*s14^3-20*s23^3*s14^2*s24^2+3*s23^2*s34^3*d^2*s24^2-4*s23^2*s12*s34*d^2*s14^3-s23*d^2*s13^6+4*s23^3*s12^2*s34*d*s13-20*s23^2*s12*s34^2*d*s14^2-192*s23*s12*s34^2*s13^3-4*s23^2*s12*d^2*s14^3*s13+28*s23^2*s12^2*s14*s13^2-4*s23^3*s12^2*s13^2+4*s23^2*s34^2*s24^3-24*s23^2*s34^3*s13^2-3*s23^2*s12*d^2*s13^4-s23^2*s34^2*d^2*s14^2*s24+32*s23^2*s12*s34^2*s14*s24+3*s23*s12^2*s34*d^2*s14^2*s13+32*s23^2*s12*s14^3*s13+8*s23^2*d*s24^2*s13^3-6*s23*s12^2*s34^3*d^2*s24-3*s23*s12^3*s34^3*d^2+32*s23^2*s34^2*d*s13^3-4*s23^4*d^2*s14^2*s13-4*s23^2*s34*d*s14^3*s24+8*s23^2*s12^2*s34^2*d^2*s14+4*s23^2*s34^4*d^2*s14-s23*s12^2*d^2*s14^2*s24*s13-s23*d^2*s24^3*s13^3-32*s23*s12^3*s13^3-112*s23^2*s12*s34*d*s14*s13^2-8*s23^2*s12^2*d*s14^2*s13-14*s23^2*d*s14*s13^4+6*s23*s12*s34^3*d*s24^2-192*s23*s12*s34*s24^2*s13^2+4*s23*s12^3*d^2*s14*s13^2-88*s23^2*d*s14^2*s24*s13^2+32*s23^2*s12^2*s14*s24*s13+8*s23^2*s34^3*s24*s13+2*s23*s12^3*s34*d*s14^2+4*s23*s12^2*s34^2*d^2*s14*s24-s23*s34^2*d^2*s24^3*s13-44*s23^2*s12^2*s34^2*s13-16*s23^2*d*s14*s24^3*s13+4*s23*s34*d^2*s14*s24^2*s13^2+12*s23^3*d*s14^3*s24+8*s23^3*s12*s34*s14*s24+24*s23^2*s14^4*s13-52*s23^2*d*s14^2*s13^3+6*s23^2*d*s14^3*s24^2+8*s23^3*s12*d^2*s14*s13^2+4*s23*d*s24^4*s13^2-6*s23*s12^2*s34*d^2*s24^2*s13+14*s23*d*s14^2*s24*s13^3+s23^2*s12*s34^4*d^2-8*s23^2*s34^4*d*s13+32*s23^2*s12^2*s34^2*d*s13-24*s23^3*s12*s34*d*s14^2+2*s23^2*s34^2*d^2*s14^3-28*s23^2*s12^2*s24*s13^2+16*s23*s12*s34*d*s14^2*s24*s13-160*s23^2*s12*s34*d*s14*s24*s13-8*s23*s12*d*s14^3*s24*s13-68*s23^3*s34^2*s14^2-8*s23*s12^2*d*s14^3*s24-4*s23^2*s12^3*s14^2-184*s23^2*s34*d*s14*s24*s13^2-11*s23*s12^3*s34*d^2*s13^2-4*s23^3*d^2*s14*s24^2*s13+64*s23^2*s14*s24*s13^3+10*s23*s12*s34^2*d*s14^2*s24+68*s23^2*s12*s34*d*s13^3+8*s23*s12^2*s34^2*s14^2-72*s23*s12*s34*s14*s24^2*s13-56*s23*s12*s14^2*s24*s13^2+8*s23^2*s34*d^2*s14*s24^2*s13-28*s23^3*d*s14*s24*s13^2-3*s23*s12^3*d^2*s24*s13^2-4*s23*s12^3*d^2*s13^3-96*s23*s12*s34*s14^2*s13^2-4*s23^3*s34^4-8*s23*s12*s34^4*d^2*s13+72*s23^2*s34^3*s14*s13+4*s23*s12*s34^2*d*s14^3+16*s23^3*s12^2*s14*s13-4*s23*d*s14^3*s24^2*s13+8*s23^2*d*s13^5+16*s23^2*d*s24*s13^4+6*s23*s12^3*d^2*s14*s24*s13-128*s23*s12*s34*s13^4+8*s23^2*s12*d*s14^4-5*s23*s34^4*d^2*s13^2-6*s23^2*s12*s34^2*d^2*s13^2+56*s23^2*s12*s34*d*s24*s13^2+4*s23^3*s12^2*s34*d^2*s14-24*s23*s14*s24^3*s13^2-32*s23*s12^3*s34^2*s13-4*s23^2*s34*d*s14^2*s24^2-8*s23^4*s34^2*d*s14-64*s23*s34*s24^3*s13^2+132*s23*s34^2*d*s24*s13^3-20*s23^2*s34^3*d*s24*s13+36*s23*d*s14*s24*s13^4+6*s23*s12^4*d*s13^2+8*s23^5*d*s14^2-16*s23^3*s34*s13^3+6*s23*s12^3*d*s14^2*s24+14*s23*s12^2*s34*d^2*s14*s24*s13+6*s23*s12^2*d^2*s14*s24^2*s13+24*s23^2*s12^2*s34*s14*s13-32*s23*s12*s34*s24^3*s13+6*s23*s12^2*s34^2*d*s24^2+16*s23*s12^2*s14^3*s24-6*s23*s12*d^2*s24^2*s13^3+2*s23*s34*d^2*s14^2*s24*s13^2-6*s23^2*s12*s34*d^2*s14^2*s24-288*s23*s12*s34^2*s24*s13^2-10*s23*s12*s34^3*d^2*s14*s13+6*s23^2*s12*s34^3*d^2*s14-9*s23*s34^2*d^2*s24^2*s13^2+4*s23^3*s12*s34^2*d*s24-2*s23^2*s34*d^2*s14*s24^3-s23^2*s12^2*s34^3*d^2+14*s23^3*d*s14^2*s24^2+2*s23*s34*d^2*s14*s24^3*s13+60*s23*s34^3*d*s13^3-74*s23^2*d*s14*s24^2*s13^2-4*s23^3*s13^4-2*s23*s34*d*s14^2*s24^2*s13-4*s23*s12*d^2*s14*s13^4+36*s23*s34*d*s24^3*s13^2-72*s23^2*s34*s24*s13^3-96*s23^2*s34^2*d*s14*s13^2-24*s23^3*s14^3*s24-24*s23*s12^3*s14*s13^2-s23*s34^5*d^2*s13-24*s23*s14*s13^5-48*s23^2*s12*d*s14*s13^3-6*s23*s12^3*s34*d^2*s24*s13+5*s23^2*s12*d^2*s14^2*s13^2+40*s23^2*s12*s34*s14^2*s24-144*s23*s12^2*s34*s13^3-22*s23^2*s12^2*d*s14^3-s23*s34^3*d^2*s14^2*s13-36*s23*s12*s34^2*d^2*s24*s13^2+26*s23^2*s12*s34^2*d^2*s14*s13-2*s23*s34^4*d^2*s14*s13+4*s23*s12^2*d*s14*s24*s13^2+108*s23^2*s12*s14^2*s13^2+s23*s12*s34*d^2*s14^2*s24^2-216*s23*s12*s34^2*s14*s13^2-40*s23*s34^4*s13^2-17*s23*s12*s34*d^2*s13^4+56*s23*s12*d*s14*s24*s13^3+8*s23^3*s12*s14^2*s13+8*s23^4*s12*s14*s13-18*s23*s12*s34^3*d^2*s24*s13-3*s23*s34^2*d^2*s14^2*s13^2+72*s23^2*s14^3*s24*s13-48*s23*s12*s34*s14^2*s24*s13-8*s23*s12*s34*s14^3*s13-32*s23^2*s12^2*s34*s24*s13-20*s23^3*s34*d^2*s14^2*s13+24*s23^3*s12*s14^3+2*s23^2*s34*d^2*s14^2*s24*s13-72*s23*s12*s14*s24^2*s13^2+6*s23*s12^2*s34^4*d-3*s23^2*s12^2*d^2*s13^3+2*s23*s12*s34*d^2*s14*s24*s13^2-8*s23*s12^4*s34*s13-16*s23*s34*s14^3*s13^2+96*s23*s34^2*d*s14*s13^3-68*s23^2*s34^3*d*s14*s13-4*s23^3*s12^2*s34^2-24*s23^3*s12^2*d*s14*s13+28*s23^2*s34*d*s13^4+20*s23*d*s14*s24^2*s13^3+2*s23^3*s34^4*d+4*s23*s12*s34*d*s14*s24^2*s13-20*s23^2*s12*s24^2*s13^2-56*s23^2*s12^2*d*s14*s24*s13-3*s23*s34^4*d^2*s24*s13+2*s23^2*s12*s34^2*d^2*s24*s13-3*s23*s34^3*d^2*s24^2*s13-18*s23*s12*s34^2*d^2*s14*s13^2-s23*s12^4*d^2*s14^2+s23^2*s12*d^2*s24^2*s13^2+6*s23*s12^3*s34^2*d*s24-32*s23*s34*s14^2*s24^2*s13+6*s23*s12^3*s34*d^2*s14*s13-8*s23^3*s34^2*d^2*s14*s24-24*s23^3*s12*s34*s13^2-32*s23*s12^3*s24*s13^2-20*s23^3*d^2*s14^2*s24*s13+12*s23^2*s12*s34^3*d*s13+32*s23^2*s12*d*s24*s13^3-24*s23^3*s34^3*s14-32*s23*s24*s13^5+6*s23*s12^2*d*s14^2*s24^2+60*s23^2*s34^2*s14^2*s24+32*s23^3*s12*d*s14^2*s24+2*s23^3*s34^2*d*s24^2-20*s23^2*s12^2*s34*d*s14*s24+12*s23^2*s34^2*d*s24*s13^2+8*s23*s34*d*s14^3*s13^2+56*s23^2*s34*s14*s13^3-9*s23*s12*d^2*s24*s13^4+4*s23*s12^3*d*s14*s13^2-8*s23^3*s34^2*s14*s13+8*s23^2*s12^3*s14*s13-16*s23^3*s34^3*s13-16*s23^2*s12*s34^3*d*s14-10*s23*s34^3*d^2*s13^3-3*s23*s12^2*s34^2*d^2*s24^2+16*s23*s12^2*s34^2*d*s14*s24+8*s23^3*s14*s24^2*s13+8*s23^3*d^2*s14^3*s24+18*s23*s34^2*d*s24^3*s13+8*s23^4*s14*s24*s13-6*s23*s34*d^2*s14*s24*s13^3-s23*s12^4*d^2*s13^2+20*s23^4*d*s14^2*s13-4*s23^2*s34*d^2*s14^3*s24-4*s23*d*s14*s24^4*s13+104*s23^2*s34*s14*s24^2*s13+34*s23^2*s12*s34*d^2*s14*s13^2+18*s23*d*s24^3*s13^3-8*s23^2*s34*d*s14^4+32*s23^3*s12*s34*s14^2+4*s23^2*s12*s34^2*s24^2-7*s23^2*s12^2*d^2*s14^2*s13+4*s23^2*d^2*s14*s13^4-288*s23*s12*s34*s24*s13^3-12*s23^2*s12*d*s14^3*s13+2*s23^2*s12^2*d^2*s14^3-48*s23^2*s34^2*s24*s13^2-16*s23^2*d*s14^3*s24*s13-s23^2*s12^3*s34^2*d^2-40*s23^2*s34^2*d*s14^2*s24-48*s23*s24^2*s13^4+4*s23^3*s12*d*s24*s13^2+s23^2*d^2*s24^2*s13^3+18*s23*s12^2*s34*d*s14^2*s13-96*s23*s12^2*s34^2*s24*s13+6*s23*s34^5*d*s13-72*s23*s12^2*s34*s14*s24*s13-48*s23*s12^2*s34^3*s13-56*s23^3*s12*s34*d*s14*s13+26*s23^2*s34^2*d^2*s14*s24*s13+80*s23^2*s12*s34*s14*s13^2-8*s23^3*s12*s13^3+16*s23^4*s14^3-216*s23*s12*s34*s14*s13^3-4*s23^3*s34*d^2*s14*s24^2-8*s23^3*s34*d*s14*s24*s13+6*s23*s12*d*s14^2*s24*s13^2-s23^2*d^2*s24*s13^4-16*s23*s12*d*s14*s24^3*s13+2*s23*s12^4*s34^2*d+4*s23*d*s14^3*s13^3+24*s23^2*s12^2*d*s13^3+8*s23*s12^2*s34*s14^3+8*s23*s12*s34^2*s14^2*s24-2*s23^2*s12*s34*d^2*s24*s13^2+4*s23*s34^2*d*s14^3*s13-40*s23^3*s14^4-16*s23^4*s34*d*s14*s13+98*s23*s12*s34*d*s13^4-24*s23^3*s34^2*s24*s13+22*s23*s12^3*d*s24*s13^2+2*s23*d^2*s14*s24^3*s13^2+20*s23*s34^2*d*s14*s24^2*s13-8*s23^3*s12*s34^2*s24-104*s23^2*s12*s34*s24*s13^2-8*s23*s14^3*s24*s13^2-2*s23*d*s14^2*s24^2*s13^2+s23*s12*s34^2*d^2*s14^2*s24-72*s23*s12^2*s34^2*s14*s13-4*s23^2*s12^3*s34^2+8*s23^3*s12*s34*d*s24*s13-6*s23*s34^2*d^2*s14*s24*s13^2+2*s23*s12*s34^5*d-24*s23*s14^2*s13^4+8*s23*s12*s14^3*s24*s13+112*s23^2*s34*s14^3*s13-3*s23*s12^3*s34^2*d^2*s24+36*s23*s12^2*s34*d*s24^2*s13-2*s23*s12*d^2*s14^2*s24^2*s13-8*s23*s12^4*s13^2+2*s23^2*d^2*s14^3*s24^2+7*s23^2*d^2*s14^2*s13^3+68*s23^2*s14*s24^2*s13^2-52*s23^3*s12*d*s14*s13^2-3*s23^2*s34*d^2*s13^4+96*s23^2*s34^2*s14*s13^2-8*s23^5*s14^2-88*s23^3*s34*s14^3+2*s23*s12^4*d*s14^2+s23^2*s34^5*d^2-68*s23^2*s12*d*s14^2*s13^2-28*s23^2*s24*s13^4+28*s23*s12^3*s34*d*s24*s13+12*s23*s12^2*s34^3*d*s24+24*s23^2*s12*d^2*s14*s24*s13^2+6*s23*d*s13^6-28*s23^2*s34*s24^2*s13^2+s23^2*s12*s34^2*d^2*s14^2+16*s23*s34^4*d*s14*s13-96*s23*s12*s34^3*s24*s13+24*s23^2*s12*d*s13^4+216*s23*s12*s34^2*d*s24*s13^2+14*s23*s34^3*d*s14^2*s13-80*s23^2*s12*s34^2*d*s14*s13+32*s23^2*s12*s14*s13^3-80*s23*s34^3*s13^3+6*s23*s12^2*s34*d^2*s14*s24^2-72*s23*s34^3*s14*s24*s13-2*s23*s34*d^2*s24^3*s13^2+24*s23^2*s34^2*d^2*s14*s13^2-12*s23^2*s34^3*d*s24^2-144*s23*s12^2*s34^2*s13^2+44*s23*s12*d*s14*s13^4-48*s23*s12^2*s34*s24^2*s13+152*s23*s12*s34^2*d*s13^3-2*s23*s12*s34^4*d^2*s14-12*s23^2*s12^2*s14^2*s24-128*s23*s34^3*s24*s13^2+14*s23^2*s12*d^2*s14*s13^3+96*s23^2*s12*s14*s24*s13^2+s23*s12^3*s34*d^2*s14^2+4*s23^3*s34*d*s24^2*s13-12*s23^2*s12^3*s13^2-24*s23^3*s34^2*s13^2-64*s23^3*s14^2*s24*s13+60*s23*s12*d*s24^2*s13^3-24*s23^2*s12*s34*d*s14^2*s24-32*s23^3*s34*s14^2*s13+36*s23*s34^3*d*s14*s24*s13+32*s23^4*s34*s14*s13+4*s23^3*d^2*s14^2*s24^2+90*s23*s34^2*d*s24^2*s13^2+68*s23*s12*s34^3*d*s14*s13-4*s23^2*s34*d*s14*s24^3+84*s23^2*s14^2*s13^3-72*s23^2*d*s14*s24*s13^3-4*s23^2*s14^3*s24^2-5*s23^2*s34*d^2*s14^2*s24^2-18*s23*s34^2*d^2*s24*s13^3+8*s23^2*s34^3*d^2*s24*s13-8*s23^2*d*s14^4*s13-16*s23^4*s12*s14^2+88*s23*s12*s34^2*d*s14*s24*s13-3*s23*s12*s34^3*d^2*s24^2-52*s23^2*s12*d*s14*s24^2*s13-8*s23*s12*s14^3*s13^2+216*s23^2*s34*s14^2*s24*s13+12*s23^3*s12*s34*d*s13^2-2*s23^2*s34^2*d^2*s13^3+8*s23^2*s12*s34^3*s24-18*s23^2*s34^4*d*s14-6*s23^2*s12^2*s34^2*d*s14-3*s23*s12^3*d^2*s14^2*s24-16*s23*s12^2*s34*s14^2*s13-2*s23^2*s12*d^2*s24*s13^3-2*s23*d*s14^2*s24^3*s13-3*s23*s12^2*d^2*s14^2*s24^2-96*s23*s34^3*s14*s13^2+10*s23^2*s12^2*s34*d^2*s14*s24-4*s23^2*s12^2*s34^2*s14-56*s23^2*s12*s24*s13^3-4*s23^3*s12*d^2*s14^2*s24+66*s23*s12*d*s24*s13^4-8*s23*s12^2*s14^2*s24*s13+6*s23^2*s34^2*d^2*s24*s13^2+54*s23*s12^3*s34*d*s13^2+8*s23*s12^3*s14^3+204*s23^2*s34*s14^2*s13^2-5*s23^2*s12^2*s34^2*d^2*s13+16*s23^2*s12*s34^2*d*s24*s13+156*s23*s12*s34^2*d*s14*s13^2+30*s23*s34^3*d*s24^2*s13+3*s23^2*s34^4*d^2*s13-26*s23^2*s34^2*d*s14^3-4*s23^3*s12*s34*d^2*s14^2+4*s23^3*s12*s34^3*d+22*s23*s34^4*d*s24*s13-72*s23*s12*s34^3*s14*s13+16*s23^2*s14*s24^3*s13+12*s23*s12^3*s34*d*s14*s13+12*s23^2*s14*s13^4+8*s23^2*s12*d*s24^2*s13^2+156*s23^2*s14^2*s24*s13^2+20*s23^3*s34^2*d*s14*s24-144*s23*s12*s14*s24*s13^3-32*s23*s12*s34^4*s13+36*s23^2*s34^3*s14^2-12*s23^3*s12^2*s14^2+60*s23^2*s12*s34^2*d*s13^2+8*s23^3*s34*s14*s24*s13+30*s23*s34^4*d*s13^2+12*s23^2*s34^4*s24-16*s23^3*s12^2*s34*d*s14-12*s23*s34^2*d^2*s14*s13^3-216*s23*s34^2*s14*s24*s13^2-s23^2*d^2*s13^5-20*s23^2*s24^2*s13^3-32*s23*s12*s24^3*s13^2+4*s23^3*s12^2*d^2*s14*s13+4*s23^3*s34^3*d*s24-4*s23*s12*d*s14*s24^2*s13^2+16*s23^2*s34^3*d^2*s14*s13+2*s23*s12*s34*d^2*s14*s24^3+2*s23*s12*s34*d*s14^2*s24^2-8*s23^3*s12*s34^3-8*s23^3*s34*s24^2*s13+24*s23*s12^3*d*s13^3+42*s23*s34^2*d*s14^2*s13^2+32*s23*s12*s34^4*d*s13+84*s23*s12*s34^3*d*s24*s13+14*s23*s34^2*d*s14^2*s24*s13-8*s23^2*s12*s34*d^2*s13^3+64*s23^3*s34*d*s14^2*s13+24*s23*s12*d*s14^2*s13^3-4*s23*s12*d*s14^3*s24^2-100*s23^2*s34*d*s14*s24^2*s13+36*s23*s12^2*d*s14*s13^3-2*s23*s12^4*s34*d^2*s13+10*s23*s12*s34^3*d*s14^2+12*s23^3*s34^2*d*s14*s13-72*s23*s12*s14*s13^4-20*s23^2*s12^3*d*s14*s13-16*s23^4*s14^2*s24+20*s23^2*s34*s14^2*s24^2+16*s23*d*s14*s13^5+8*s23*s12*s34^2*d*s14*s24^2+3*s23^2*s34^4*d^2*s24-s23^2*s12^2*s34^2*d^2*s24-16*s23^3*s12*d^2*s14^2*s13-8*s23^3*s12^2*s34*s13-24*s23*s12^2*s34*d^2*s24*s13^2-36*s23^2*s12*s13^4+24*s23^2*s12^2*s34*d^2*s14*s13-144*s23*s34*s14*s24^2*s13^2-3*s23*s34*d^2*s14^2*s13^3-24*s23^2*s12*s34*s14^3+16*s23*s12^2*s34*s14^2*s24+2*s23*s12^2*d^2*s14^2*s13^2-16*s23*s12^3*d*s14*s24*s13-32*s23*s14^2*s24^2*s13^2+36*s23^3*s34*d*s14^2*s24+5*s23^2*s34^3*d^2*s14^2-8*s23^3*s12^2*d^2*s14^2-8*s23*s34^2*s14^3*s13-12*s23*s34*d^2*s24*s13^4+4*s23*s12*d*s14^3*s13^2+2*s23*s12*d*s14^2*s24^3+16*s23^2*s12^2*d*s24*s13^2+4*s23^2*s12*s34*d*s24^2*s13+58*s23*s12*s34*d*s14^2*s13^2+4*s23*s12*s34*d^2*s14^2*s24*s13+s23*d^2*s14^2*s24*s13^3+6*s23*s12*s34^4*d*s24+36*s23^2*s34*d*s24*s13^3-10*s23*s34^2*d^2*s13^4-4*s23^2*s24^3*s13^2+34*s23^2*s34*d^2*s14*s24*s13^2+4*s23^3*d*s24*s13^3-16*s23*s12*s14^2*s24^2*s13+5*s23^2*s34*d^2*s24^2*s13^2-2*s23*s12^2*s34^3*d^2*s14-288*s23*s12*s34*s14*s24*s13^2-14*s23*s12*s34*d^2*s14*s13^3+32*s23^2*s12*s34*d^2*s14*s24*s13+6*s23^2*s34^3*d^2*s14*s24+8*s23^3*s34^3*d*s13-4*s23*s12*d^2*s13^5-96*s23*s12*s24^2*s13^3+28*s23^2*s34^2*s14^3-8*s23^3*d*s14*s24^2*s13-28*s23^3*s12*d*s14^3+4*s23^2*s34^4*s13-4*s23^2*s12*s34^2*d*s24^2+20*s23^2*s12^2*s14^2*s13-2*s23*s12^2*d*s14^2*s24*s13+2*s23*s12*s34^2*d*s24^3-3*s23*s12^2*d^2*s24^2*s13^2-2*s23^2*s12^2*s34*d^2*s24*s13-2*s23*s12^2*s34*d^2*s14*s13^2+2*s23^3*s12^2*d*s13^2+8*s23^2*s34^3*d*s13^2-9*s23*s34*d^2*s24^2*s13^3+3*s23^2*d^2*s14^2*s24*s13^2+8*s23^2*s34*s14^4-32*s23^2*s12*s34^2*d*s14*s24+16*s23^4*s34^2*s14+22*s23*d*s24*s13^5-4*s23^3*s34^3*d^2*s14+66*s23*s12^2*d*s24*s13^3+40*s23*s34*d*s14*s24^2*s13^2+16*s23^2*s12*d*s14^2*s24^2-2*s23^2*d^2*s14*s24^3*s13-96*s23*s12*s24*s13^4+54*s23*s12^2*s34^3*d*s13+12*s23^3*s34^2*d*s24*s13-24*s23^2*s12*s34^3*s13+8*s23^2*d*s14^2*s24^2*s13+s23^2*s34^2*d^2*s24^3+2*s23*s12^4*d^2*s14*s13+19*s23^2*s34*d^2*s14^2*s13^2-28*s23^3*d*s14*s13^3+84*s23^2*s14^3*s13^2-4*s23^2*s14^2*s24^3-76*s23^2*s12^2*s34*s13^2-48*s23*s12*s14^2*s13^3+8*s23*s12*s14^3*s24^2-22*s23*s12*s34^3*d^2*s13^2+8*s23^2*d*s14^4*s24+128*s23^2*s12*s34*s14*s24*s13-30*s23*s12*s34*d^2*s24*s13^3+8*s23^4*s34*s14*s24+126*s23*s12*s34*d*s24^2*s13^2-40*s23^3*s34*s14^2*s24-88*s23^2*s12*s34*d*s14^2*s13-60*s23^2*s34*d*s14*s13^3+16*s23*s12*s34^3*d*s14*s24-8*s23^3*d^2*s14^2*s13^2-36*s23^2*s12^2*s13^3-4*s23^3*s34^2*s24^2-54*s23^2*s12^2*d*s14*s13^2+18*s23*s12*d*s24^3*s13^2-20*s23^4*s34*d*s14^2-8*s23*s34*d^2*s14*s13^4-32*s23*s34^2*s24^3*s13-s23*s12^4*s34^2*d^2-8*s23*s14^2*s24^3*s13+10*s23^2*s12^2*d^2*s14*s24*s13+10*s23*s12*s34*d^2*s14*s24^2*s13-72*s23*s34^2*s14^2*s13^2+2*s23*d^2*s14*s24^2*s13^3+8*s23*s12*s34*d*s14^3*s13+90*s23*s12^2*s34^2*d*s24*s13-4*s23^4*s12*d^2*s14^2+4*s23*s34*d*s24^4*s13-8*s23^4*s34*d*s14*s24+56*s23^3*s12*s14*s13^2-8*s23^4*d*s14*s24*s13+2*s23^2*s34*d^2*s24^3*s13-48*s23*s12*s34^2*s14^2*s13+88*s23^3*d*s14^2*s24*s13-96*s23*s12^2*s24*s13^3+4*s23^3*s34*d^2*s14*s13^2-s23*s12*s34^5*d^2+36*s23^2*s34^2*s14*s24^2+8*s23^3*s34*d*s13^3+6*s23^2*s12^3*s34*d^2*s14+2*s23*s12*d^2*s14*s24*s13^3-10*s23*s12^3*s34^2*d^2*s13+16*s23^2*s34*s14^3*s24-8*s23^3*s24*s13^3-16*s23^2*s34^2*d*s24^2*s13-8*s23*s34*s24^4*s13-128*s23^2*s34*d*s14^2*s24*s13+s23^2*d^2*s14^2*s24^3+2*s23^2*d^2*s14^3*s13^2-4*s23^3*s12*s34^2*d*s14-4*s23^2*s12^2*s34^3+2*s23^2*s12*s34^3*d^2*s24+128*s23*s12*s34*d*s14*s24*s13^2-2*s23*s12*s34^2*d^2*s14^2*s13-4*s23^2*s34^5*d-12*s23*s34^3*d^2*s24*s13^2+52*s23^2*s12^2*s34*d*s13^2-24*s23*s34*s14*s24^3*s13-8*s23^4*s12*s34*d*s14-48*s23*s12^2*s13^4-s23^2*s12^3*d^2*s13^2-24*s23^3*s12*s34^2*s13-3*s23*d^2*s24^2*s13^4+10*s23*s12^2*s34^2*d*s14^2+8*s23^4*d^2*s14^3-96*s23*s34*s14^2*s24*s13^2-96*s23^2*s12*s34^2*s13^2-9*s23^2*s12^2*d^2*s14^2*s24+s23*s34*d^2*s14^2*s24^2*s13+30*s23*s34*d*s13^5-72*s23*s12^2*s14*s13^3+8*s23*s12^3*s34^2*d*s14+4*s23^2*s34*d^2*s14^3*s13+12*s23^2*s12^3*s34*d*s13+12*s23^4*d*s14^2*s24-8*s23^3*s34*d^2*s14^3-8*s23^3*s12*s24*s13^2-96*s23*s12*s34^2*s24^2*s13+114*s23*s12^2*s34*d*s13^3+2*s23^2*s12*s34*d^2*s14*s24^2-40*s23*s34*s13^5+68*s23*s12^2*s34^2*d*s14*s13-27*s23*s12^2*s34^2*d^2*s13^2+20*s23*s12*s34*d*s24^3*s13-64*s23*s12^3*s34*s13^2+8*s23^2*s12^3*d*s14^2-8*s23^3*d^2*s14^3*s13+54*s23^3*s34^2*d*s14^2-8*s23^3*s34^3*s24-8*s23*s13^6-24*s23^3*s34^2*s14*s24+10*s23*s12^2*d^2*s14*s24*s13^2+4*s23^2*s12*s34^4+36*s23*s12^2*d*s13^4-s23^2*s12^2*s34*d^2*s14^2-144*s23*s34^2*s24^2*s13^2-s23*d^2*s14^2*s13^4+16*s23^2*s12*s34*s14*s24^2-8*s23*s24^4*s13^2+4*s23^2*s12^3*s34^2*d-12*s23*s12*s34^2*d^2*s24^2*s13-8*s23*s34^3*d^2*s14*s13^2-24*s23*s12^2*d*s14*s24^2*s13+20*s23*s12^2*s34*d*s14*s24*s13-16*s23^3*s12*s34*d*s14*s24-2*s23*d^2*s14*s24*s13^4+2*s23^3*d*s13^4+160*s23^2*s34^2*s14*s24*s13+28*s23*s34*d*s14^2*s24*s13^2-32*s23^3*s12*d*s14*s24*s13-116*s23^2*s34^2*d*s14^2*s13+40*s23^3*s14*s13^3+4*s23*s12^2*s34*d*s14^2*s24+s23^2*d^2*s24^3*s13^2+8*s23^2*d^2*s14*s24^2*s13^2-16*s23^2*s12*d*s14^3*s24-4*s23*s34*d*s14*s24^3*s13)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (1/2*(d*s24^2-2*s12^2+2*s34*d*s13-4*s34*s24+2*d*s24*s13-2*s24^2-2*s13^2-4*s34*s13+s12^2*d+d*s13^2+2*s34*d*s24-2*s34^2+s34^2*d+8*s23*s14-4*s12*s13+2*s12*d*s24+2*s12*s34*d-4*s12*s34+2*s12*d*s13-4*s23*d*s14-4*s24*s13-4*s12*s24)^(-1)*(30*s23*s24^3*s13^2-200*s23*s12*s14*s24^2*s13+94*s12^2*s34^2*s14*s13-2*s23*d^2*s24^5-s12^5*d^2*s14+24*s12^2*s14^2*s24^2+6*s23^2*s34^4-8*s23*s12^3*d^2*s24^2-2*s23*s34^2*d^2*s14^2*s13-4*s23*s34^2*s14^3-128*s23*s12*s34^2*s14*s13+4*s23*s34^4*s13+48*s12^2*s14*s24^2*s13+20*s23*s12*s34*d^2*s14^2*s24-6*d*s14^2*s24^2*s13^2-8*s23^2*s12*s34*d*s24^2-60*s12*s34^2*d*s24^2*s13-12*s12*d^2*s24^4*s13-d^2*s24^3*s13^3+2*s23^3*s12^2*s34-8*s23^3*s12*d^2*s14^2-88*s23*s14*s24^2*s13^2-2*s23*d^2*s14^2*s13^3-3*s12^3*s34^3*d^2-16*s23*s34*s14^3*s13-2*s23*s12^4*s34*d^2-15*s12^3*s34^2*d^2*s24-84*s23*s34^2*s14*s13^2+3*s23^3*d*s13^3-8*s23*s34*d^2*s13^4-2*s23*d^2*s14*s24*s13^3+16*s12*s34^4*s14-36*s23*s12*s13^4-4*s23*d^2*s24*s13^4-12*s23^3*s12*s34*s13+32*s12*s34^2*s14^2*s24-6*s23^2*s12*d^2*s24^2*s13-18*s12^2*s34*d^2*s14*s24*s13+32*s12*s34^2*s13^3+84*s12*s34^3*s24^2+44*s23^2*s12*s24^2*s13+8*s34^4*s14*s24+21*s23*s12^2*d*s13^3+14*s23^2*d*s14^2*s24^2-18*s23*s12*s34^2*d^2*s14*s13-2*s23*s12^4*d^2*s14+28*s12*s34*s14*s13^3+20*s24^3*s13^3-12*s23^2*s34^2*d*s24*s13-36*s12^3*d*s24*s13^2+8*s23*s34*d*s14^3*s13-2*s12*s34*d*s13^4-8*s23*s14*s24^4+15*s23^2*d^2*s14*s24^3+8*s12*s34^5-30*s12*s34*d^2*s24^3*s13-3*s12^2*s34^2*d^2*s14*s13-3*d^2*s14*s24^3*s13^2+s23^3*s34^2*d*s24-10*s23^2*s12^3*d*s24-s12^5*s34*d^2-42*s23*s12^2*d*s14^2*s24+52*s23^2*s12^2*s14^2-2*d*s14^2*s24^4+84*s23*s12^3*s24*s13-6*s23^2*s12^2*s34*d^2*s24+4*s12*d*s24^5-11*s23*s12^4*d*s13+42*s34^2*s14*s24^3-60*s23*s34^2*s24*s13^2-4*s23*d^2*s24^2*s13^3+152*s12*s34^2*s14*s24*s13+60*s23*s12^3*s24^2+14*s14*s24^3*s13^2-30*s23*s12^2*s13^3+8*s12*s34*s13^4+4*s23^2*s34*d*s14^2*s24-20*s23*s12^4*s14-6*s23^2*s34^2*d*s24^2+64*s23*s34*s24^3*s13-8*s23*s12^3*s34^2*d^2-52*s12*s34*d*s14*s24^2*s13-d^2*s24^6-4*s23^2*s34*d^2*s24^3-20*s23*s34^2*d^2*s24^2*s13+8*s23^4*d*s14*s24+16*s23^3*d*s14^2*s24+53*s23^2*d*s14*s24^2*s13+20*s12^2*s34^2*s14^2-6*s12*s34^2*d*s14^2*s13+48*s23*s12*s34^2*s24*s13+4*s23*s34*d^2*s14^2*s24*s13+180*s12^2*s34^2*s24*s13-2*s34^2*d*s24^4-s34^3*d^2*s14*s24^2-72*s23^2*s12*s34*s13^2+13*s23^2*s12^2*d^2*s14*s24-36*s23*s14^2*s24^3-12*s23*s14^3*s13^2-2*s12^5*s14+35*s23*s12^2*s34^2*d*s24-9*s12*d^2*s14*s24^2*s13^2-27*s12^2*s34^2*d^2*s24^2+17*s23^2*d^2*s14*s24*s13^2-36*s34^2*d*s24^3*s13-48*s23*s12^3*s14*s13+40*s12^3*s24^3+3*s12^3*d*s14*s13^2-4*s12^5*d*s13-20*s23*s34*d*s24^3*s13-43*s23^2*s34^2*d*s14*s13-40*s23*s12^2*s34*d*s14*s24-32*s23*s12*s34^2*d^2*s24^2-21*s12^2*s34^2*d^2*s24*s13+10*s23*s12*s34*d*s24^3-46*s23*s12*s34^2*d^2*s24*s13-16*s23^3*d^2*s14^3-18*d*s24^4*s13^2+74*s23*s12^2*d*s14*s24*s13+72*s23^2*s12*s14^2*s13+40*s12*s34*s24*s13^3-36*s23^2*s34^2*s13^2-7*d*s14*s24^4*s13-4*s23*d^2*s14*s13^4+4*s34^3*s14^2*s24-4*s23^2*s12^3*s34*d+12*s23^2*s12*d^2*s14^2*s13+s23^3*s12*d*s13^2+78*s23*s12*s34^2*s24^2+20*s12^2*s34*d*s24^3-6*s12*s34*d^2*s14*s24*s13^2-40*s23*s12^2*s34*s14*s24-2*s23*s34^5*d+18*s34^4*s24^2+12*s34^2*s14*s24*s13^2-40*s23^3*s12*s34*d*s14+18*s23*s12^2*s34^3+40*s23^2*s12^2*s24*s13+26*s34*s14*s24^4-2*s23*s12^2*d^2*s14*s13^2+16*s23^2*d*s14^3*s24-32*s12*s34*d*s24*s13^3-3*s23^2*s12^4*d+8*s23^3*s12*d^2*s14*s13+8*s12*s14*s24*s13^3-9*s23*d*s24^4*s13-112*s23*s34*s14*s24*s13^2+28*s12^2*s34*s13^3-12*s23*s34*d^2*s14*s13^3-14*s23*s12^2*s34*d*s14^2-62*s23^2*s34*s14*s24^2+46*s23*s34*d*s14^2*s13^2-2*s12*s34^3*d^2*s14*s24-15*s12*s34*d^2*s24^2*s13^2-2*s12*d*s14^2*s13^3-46*s23^2*s12^3*s14-32*s23^3*s34^2*s14-62*s23^2*s34*d*s14*s24*s13-10*s23*s12^3*s34*d^2*s13-12*s23^4*s14*s24+6*s12^3*s14*s13^2-8*s12*s34^4*d*s13+52*s23^2*s34*s14^3-10*s34*d*s14*s24*s13^3+22*s23*s12*d^2*s14^2*s24^2+24*s23^3*d*s14*s24*s13-6*s23^2*s12*d*s24^3-6*s23*s12^3*d^2*s24*s13-8*s12*d*s24*s13^4-160*s23*s12*s34*s14^2*s13+32*s12^2*s14^2*s24*s13-64*s23*s12*s14^2*s24*s13+32*s12^2*s34*s14^2*s13-2*s23^2*s34*d^2*s24*s13^2-10*s12^2*d^2*s24^4-16*s23*s12^2*s34^2*s14-6*d*s14^2*s24^3*s13-13*s12^2*s34*d*s14*s13^2-48*s23*s12*s24*s13^3-2*s23*s34^4*d^2*s13+114*s23*s12*s34*d*s14*s13^2-8*s12^4*s34*d^2*s24+6*s12^2*d*s14*s24^3-8*s23^2*s12*s34*d*s24*s13-10*s23^2*s12*s34^2*d^2*s13-76*s23*s14*s24^3*s13+72*s34*s24^3*s13^2-4*s34*d^2*s24^5+48*s12^3*s34^2*s13+6*s23*s34^2*d*s14*s24^2-68*s23*s34*s14^2*s13^2-16*s23*s14^2*s24*s13^2-3*s23^2*s12^2*d^2*s24^2-4*s23^3*s34*d*s14*s24-6*s12^4*d*s13^2+52*s12*s34^3*s14*s13-8*s34^4*d*s24*s13-28*s34^3*d*s24^2*s13-6*s23*s12*d*s14*s24^3+17*s23^2*s12*d*s14*s24^2+60*s23*s34*d*s14*s24*s13^2+68*s12^3*s24*s13^2-42*s34^2*d*s24^2*s13^2-18*s12*d*s14^2*s24^2*s13+40*s23^3*s14^2*s24-7*s23*s34*d*s24^2*s13^2-44*s12*d*s24^2*s13^3+20*s23^4*s34*s14-3*s34*d^2*s14*s24^4-18*s23^2*s13^4-d^2*s14*s24^5-10*s12*s34*d*s14*s13^3-5*s12^4*d^2*s14*s24+96*s23*s12^2*s34*s24^2-14*s23*s34*d^2*s24*s13^3+2*s23^3*s12^2*s13-58*s23^2*s12^2*s14*s13-11*s12*s34^3*d^2*s24^2-12*s23*s34^2*d^2*s13^3-18*s34^2*d*s14*s24*s13^2-10*s23*s12^2*d^2*s24*s13^2-15*s23^2*s12*s34^2*d*s14+48*s23*s12*s34^3*s24-4*s23*s34^4*d*s14-36*s23^2*s12*s13^3+2*s23^3*s34*s24^2-22*s23*s12^2*s34*d^2*s13^2+20*s12^4*s34*s13+12*s23*s12*s34^3*d*s24-24*s12*s34*d*s14^2*s24*s13-s12^2*s34^4*d+48*s23^3*s34*d*s14^2-12*s12^3*s34*d^2*s14*s24+120*s12*s34^3*s24*s13+16*s23*s12*s34^4+28*s23*s12*d*s13^4-9*s12*s34^2*d^2*s14*s24^2-42*s23^2*s12*s34*d*s14*s13-8*s23^3*s34*s14*s24+52*s23*s12*s34*d*s24*s13^2+8*s12^2*s34^3*d*s24-6*s23*s34*s24^2*s13^2-3*s34^2*d^2*s14*s24^2*s13-s23^2*d*s24^4+8*s23^3*d^2*s14*s13^2+12*s34*s14^2*s24^3+6*s14*s24^5+21*s23^2*s34*d^2*s14*s13^2-42*s23^2*s14*s24^3-5*s23*s34^3*d*s24^2-8*s12*s34^2*d*s13^3+240*s12^2*s34*s24^2*s13-5*s23^2*s12^2*s34^2*d^2-48*s12^2*s34*d*s24*s13^2-18*s23*s12^3*s34*d*s14+42*s12^2*s34^3*s14-72*s23*s12*s14*s13^3-64*s23^2*d*s14^2*s24*s13+20*s34^3*s14*s24*s13+144*s23*s12*s34*s24^2*s13-12*s12*d^2*s14*s24^3*s13-2*s12*d*s14*s13^4-6*s34*d^2*s24^3*s13^2-2*s23*s12^3*d^2*s14*s13-4*s23*s12^2*s14^2*s24+96*s23*s12^2*s34*s24*s13+12*s23^2*s34^3*s24-134*s23^2*s12^2*s14*s24+6*s23^3*s12^2*s24+7*s12^4*s34*d*s14+12*s23*s12*s34^3*s13-12*s34*s24*s13^4-12*s23*s34^2*d^2*s24^3-8*s23^2*d*s24^3*s13-14*s12*s34*d*s14*s24^3-38*s23^2*s12^2*d*s14^2-42*s23*s12^2*s34*s13^2-3*s12^4*d^2*s14*s13-12*s23^2*s12*d^2*s14^3-36*s23^2*s34*s24*s13^2+72*s23^3*s14^2*s13-6*s12*s34^3*d^2*s24*s13+6*s23^2*s24^4+16*s12^3*s34*s14^2-60*s12*d*s24^3*s13^2-12*s12*d*s14*s24*s13^3+14*s23*s34^3*d*s14*s13+s23^2*s34^3*d^2*s13-27*s23^2*s12*d*s14*s13^2+4*s12^4*s14^2+48*s12*s34*s14^2*s24*s13-14*s23*s12*d^2*s24^2*s13^2-12*s23*s12^2*s14^2*s13-s34*d^2*s24^2*s13^3-s12*d*s14*s24^4+12*s12*s24^5+128*s12^2*s24^3*s13+4*s12*s34^2*d*s24^3-s12^2*s34^4*d^2+28*s23*s34^3*d*s13^2+10*s23^2*s14*s13^3+25*s23^2*s34*d^2*s14*s24^2-9*s12^2*d^2*s24^2*s13^2+62*s23^2*s12*d*s14*s24*s13-44*s23*s12*s14*s24^3-28*s12^2*d*s24*s13^3+16*s23^3*s34*s14*s13-70*s23^2*s12*s34*d*s14*s24+s23*s12*d*s24^4-4*d*s24^5*s13+8*s23^3*d^2*s14*s24^2+13*s23^2*d*s13^4-4*s12^2*s34^3*d*s13+42*s23*s34^2*d*s24*s13^2+34*s23*s12*s34^3*d*s13-30*s23*s12^2*s34*d^2*s24^2+28*s12^4*s34*s24+24*s23^2*s12*s24^3+2*s23^3*s34*d*s24*s13-18*s23^3*s34*s13^2-4*s34^4*d*s14*s24-6*s12^3*s34*d^2*s14*s13+8*s23^2*s12^2*s34^2*d-2*s34^3*d*s14^2*s24+20*s23*s12*d*s24*s13^3-14*s23*s12^3*s34*d^2*s24-10*s23^2*s12*d*s24*s13^2-8*s12*s34^4*d*s24+12*s12^3*s14*s24^2+2*s23*s12*d^2*s14*s24^2*s13-6*s34^2*d*s14^2*s24^2+20*s23^4*s14*s13+2*s23^3*s24^2*s13+18*s23^2*s34*s14*s13^2+30*s23*s34*d*s14^2*s24^2-6*s34*d^2*s14*s24^3*s13-8*s12*d*s14^2*s24^3+2*s23*s34^3*d*s24*s13+28*s34^2*s24^4-6*s23^2*s12^2*s34*s14+8*s23^3*s12*d^2*s14*s24-48*s23^2*d*s14^3*s13-3*s12^4*d^2*s24*s13+44*s23*d*s14*s24^2*s13^2-12*s12^3*d^2*s24^2*s13+88*s12^2*s34*s24^3+10*s23*s34*d^2*s14*s24^3-6*s23*s12*s34^3*d^2*s14-s12^2*s34^3*d^2*s14-3*s34^2*d^2*s14*s24^3+10*s23*s12^3*s34^2-18*s12^2*d^2*s14*s24^2*s13+28*s12*s14^2*s24^2*s13-84*s23*s12^2*s34*s14*s13+12*s23*s12^2*d^2*s14*s24^2-16*s23^3*s34*d*s14*s13-2*s23^2*s12^2*d^2*s13^2+48*s23*s12*d*s14*s13^3-18*s12^3*s34*d^2*s24*s13+72*s12*s34^3*s14*s24-5*s12^4*d*s24^2-2*s12*s34^3*d*s14^2-6*s12*s34^2*d^2*s24*s13^2-7*s12^2*d*s14*s24*s13^2-9*s23^2*s12*s34^2*d^2*s24-2*s23*s34^4*d^2*s24-12*s23^3*s34*s24*s13-3*s12^4*s34*d^2*s13-3*s12^2*d*s14*s13^3-26*s23*s12*s34*d*s14*s24^2+66*s23*s34^2*d*s14*s13^2-88*s23*s34*s14^2*s24^2+52*s12^3*s34^2*s24+12*s34*s24^2*s13^3-4*s24*s13^5-8*s34^3*d*s24^3-12*s34*d*s14^2*s24^2*s13-24*s23^2*s24*s13^3+44*s12^2*s34*s14^2*s24+74*s23*s12*d*s14*s24*s13^2+20*s12^3*s34^3+22*s23^3*s12^2*d*s14-15*s23^2*s34^3*d*s14-6*s12*s34^2*d^2*s14*s24*s13+2*s23*s12*d^2*s14^2*s13^2+72*s23^3*s12*s14^2-56*s23*s12*s34*s14^3-136*s23*s12*s34*s14^2*s24+20*s12^3*s34*d*s24^2+26*s34*s14*s24^2*s13^2+144*s23*s12^2*s24^2*s13+22*s23^2*s12*d*s13^3+17*s23*s12^3*s34^2*d+32*s23^2*s12*s34*s24^2-28*s23*s14^3*s24^2+9*s23^2*s12^2*d^2*s14*s13-32*s23*s14^2*s13^3-s23^2*s12^3*d^2*s14-18*s23*s12*d^2*s24^3*s13-10*s12^3*d^2*s24^3+55*s23*s12^2*s34^2*d*s13+132*s12^2*s24^2*s13^2-57*s23^2*s12^2*s34*d*s14-16*s23^3*d*s14^2*s13+12*s23^2*s34*s14*s24*s13-5*s23^2*s34*d^2*s13^3-8*s23^4*d*s14*s13-46*s23*s12*s34*d^2*s24^2*s13-18*s12^2*d^2*s24^3*s13-12*s12*s34^2*d*s14^2*s24+60*s23*s12^2*s24^3-2*s14*s24^2*s13^3+6*s23*s12^3*s13^2-36*s12^2*s34*d^2*s24^2*s13-s34^4*d^2*s24^2-6*s23*d^2*s24^3*s13^2-24*s23^3*s14*s24*s13+24*s23^2*s34^2*d*s13^2-88*s23^2*s34*d*s14^2*s13+52*s12*s34*s24^4-11*s23*s12^4*d*s24+12*s23^2*s34^2*s24^2+6*s23*d^2*s14*s24^4-4*s12^2*s34*d*s13^3+216*s12*s34^2*s24^2*s13-3*s23^3*s12*d*s24^2+8*s23^2*s12*d^2*s14^2*s24-60*s23*s12*s34^2*s13^2+32*s23^2*s12*s14^2*s24+12*s34^4*s24*s13-12*s23^2*d*s24^2*s13^2+86*s23*s12*s34*d*s13^3+s12^3*s34^2*d*s14-12*s12^3*d^2*s14*s24*s13-25*s23^2*s34^2*d*s14*s24-s23^2*s12^3*s34*d^2+14*s12^3*d*s14*s24^2-4*s12^5*d*s24-24*s23*s12^3*d*s14^2-36*s23*s24*s13^4-s23^3*s12^3*d+152*s12*s34*s14*s24^2*s13-s23^2*d^2*s24*s13^3-30*s23*s12*s34^2*d^2*s13^2+22*s23*s12^2*s34*d*s14*s13-60*s23*s12^2*d*s24^2*s13+8*s23^2*s12*s34*d^2*s14^2-3*s12^2*s34^2*d^2*s13^2-7*d*s24^2*s13^4+8*s12^3*s13^3-68*s23*s12^3*s14*s24+4*s34^5*s24-6*s12^3*s34^2*d^2*s13+30*s23*s34^2*d*s14*s24*s13-8*s34^2*s24*s13^3-s23^3*d*s24^3-8*s23*s34*d^2*s24^4-36*s23*s34^2*s14*s24^2+8*s23*d^2*s14^2*s24^3-18*s23^2*s34*d*s24^2*s13-32*s23*s34*s14^3*s24+6*s23*d^2*s14^2*s24^2*s13-4*s23*s34^3*s14^2-3*s23^3*d*s24^2*s13+4*s34*s14^2*s24*s13^2+s23*s12^4*s34*d+48*s23^2*s12*s34*d*s13^2-6*s12^2*s34^2*d*s14^2+16*s23*s34^4*s24-52*s23*s12*s34^2*s14*s24+110*s12^2*s34^2*s14*s24-2*s23*d^2*s13^5+40*s23*s12*s34^2*d*s14^2-3*s23^2*s12^2*d^2*s24*s13-18*s23*s24^2*s13^3+8*s12^3*s34^3*d-2*s23*s12^3*d^2*s13^2+6*s23^2*s12^4+12*s12^2*s14^2*s13^2+56*s34*s14*s24^3*s13+8*s23^4*s12*d*s14-20*s23*s12^2*d*s14^2*s13-32*s23^2*s34*d*s14^3-7*s23^2*s12^2*s34*d^2*s13-20*s34*d*s24^4*s13-32*s23*s14*s13^4+10*s12*s34*d*s24^4+2*s23*s12^2*s34^2*d^2*s14-3*s34*d^2*s14*s24^2*s13^2+16*s23*s34*d*s14^3*s24+4*s23*s12^2*s34*d*s24*s13-10*s23^2*s12^3*d*s13-d^2*s14*s24^2*s13^3+9*s23^3*s34^2*d*s13-9*s12^2*s34^2*d^2*s14*s24+7*s23^2*d^2*s14*s13^3+16*s23*s12*d^2*s14^2*s24*s13-4*s23*s12^3*s34*s14+34*s23^2*s14*s24*s13^2+4*s23*s12*s34^2*d^2*s14*s24-62*s23^2*d*s14^2*s13^2-6*s23*s12^2*d*s24^3+72*s12*s24^4*s13+84*s12*s34*s14*s24^3+34*s23*d*s14*s24^3*s13+4*s23^3*s12*s34*s24+10*s23^2*s34^2*d^2*s14^2-58*s23^2*s12*s34^2*s14+30*s23*s12*s24^4-4*s14*s24*s13^4+2*s12^5*s34*d+52*s34^3*s24^2*s13+48*s12*s34^3*s13^2+92*s12*s34^2*s24^3+10*s23*d*s14^2*s24*s13^2+20*s12*s34^2*s14^2*s13-172*s23*s12^2*s14*s24*s13-18*s12*s34^2*d*s14*s13^2-56*s23*s12*s14^2*s24^2-3*d^2*s24^5*s13-s12^2*d^2*s24*s13^3+6*s23*s12^5+48*s12*s24^2*s13^3+3*s23^3*s34^3*d+50*s23^2*s12*s34*d^2*s14*s24-18*s23*s34^2*d^2*s24*s13^2+4*s23^3*s12*s24*s13-37*s23^2*d*s14*s24*s13^2-2*s23*s12^4*d^2*s24+84*s23^2*s14^2*s13^2+10*s23^3*d*s14*s24^2-7*s34^4*d*s24^2+8*s12*s34^3*s14^2+40*s12*s34^4*s24-36*s23^2*s12*s34^2*s13+4*s12^3*s34*d*s14*s13-10*s23*s12*d^2*s24*s13^3-3*s23^2*s34^2*d^2*s13^2+25*s23^2*s12^2*s34*d^2*s14-47*s23*s12*d*s24^2*s13^2+34*s23^2*s34*d*s13^3+42*s23*s34^2*s24^2*s13+4*s14^2*s24^2*s13^2+36*s23^2*s12^2*s24^2-5*s12*d^2*s14*s24^4-2*s23*s12^2*d^2*s14*s24*s13+30*s23*s12^3*d*s14*s24-28*s34*d*s24^2*s13^3+16*s23*s12^3*s34*s13-13*s23^2*s34*d*s14*s24^2+23*s23^2*s12^3*d*s14-44*s12*s34*d*s14*s24*s13^2+18*s23^3*s34^2*d*s14-3*d^2*s14*s24^4*s13-26*s23*s12^2*s34^2*d^2*s13-72*s12^2*d*s24^2*s13^2-32*s12*s34^3*d*s24*s13-6*s12^2*s34^2*d*s13^2+16*s23^2*s12*s34*d*s14^2+12*s12^3*s14*s24*s13-6*s34^2*d*s14^2*s24*s13-4*s23*s34^3*d^2*s14*s13+8*s12^4*s34^2-9*s12*d^2*s24^3*s13^2-24*s23*s34^3*s13^2+34*s23*s34^2*s24^3-2*s23^2*s12*s14*s13^2-18*s12*s34*d*s14^2*s24^2-s12^5*d^2*s24+30*s23*s24^4*s13+30*s34^3*s14*s24^2-18*s12*s34*d^2*s14*s24^2*s13+6*s23*s12^3*d^2*s14^2+17*s23^2*s12*d^2*s14*s13^2-68*s23^2*s12*s34*s14*s24+90*s23*s12*s34^2*d*s13^2-22*s23*s12*s34*d^2*s13^3+4*s12*s14*s13^4-3*s12^3*s34^2*d^2*s14+9*s23^2*d^2*s14*s24^2*s13+17*s23*s12^2*s34^3*d-23*s12*d*s14*s24^2*s13^2-12*s12*s34*d^2*s14*s24^3-3*s23^2*d^2*s24^3*s13+7*s12^4*d*s14*s13-s12^2*s34*d^2*s13^3+32*s23*s34*d*s14^2*s24*s13-s12^6*d+16*s24^5*s13-6*s12^3*d*s14^2*s13-2*s23*s12*s34^2*d^2*s14^2-20*s12^2*s34*d*s14*s24*s13+10*s23*d*s13^5-32*s23*s34*s14*s24^3-6*s23^3*s12*s34^2-6*s12^2*d*s14^2*s13^2-5*s23*s12^3*d*s13^2-18*s12^2*s34*d^2*s14*s24^2-40*s23*s34^2*s14^2*s13+84*s34^2*s24^3*s13+28*s23*s12*d*s14^2*s13^2+22*s23*s34*s24^4-11*s23^2*s12*s34*d^2*s13^2-6*s23^3*s13^3-4*s34*s14*s24*s13^3+8*s23^3*s34*d^2*s14*s13-100*s23*s12*s34^2*s14^2-13*d*s14*s24^3*s13^2-6*s23*s12*d^2*s14*s13^3-156*s23*s12*s14*s24*s13^2-8*s12^3*s34*d*s24*s13+26*s23*s12*s34*d^2*s14*s24^2-s12^2*d^2*s14*s13^3+26*s12^2*s14*s24*s13^2+4*s12*s14^2*s13^3+12*s12^3*s34^2*d*s13-48*s12*s34^2*d*s24*s13^2+8*s23^3*s12*s14*s13+4*s23^2*s24^2*s13^2+24*s23*s12*s34*d*s14^3-12*s23*s34^2*d^2*s14*s13^2+3*s23*s34*d*s24^4-26*s23^2*s34^2*d*s14^2+32*s23^3*s12*d*s14*s24+30*s23*s12^4*s24+18*s14*s24^4*s13+4*s23^2*d^2*s14^3*s13-4*s23*s34*d*s14*s24^3-40*s12^3*d*s24^2*s13-20*s12^4*d*s24*s13+16*s23*s12^3*s14^2-12*s23*s12^2*d^2*s24^3-15*s34^2*d*s14*s24^3+18*s23*s12^2*d*s14*s24^2-22*s23^2*s34^2*s14*s24-3*s23^2*s12*d^2*s24*s13^2-8*s23*s12^2*s34^2*d*s14-17*s12*s34*d^2*s24^4+118*s12*s34^2*s14*s24^2-72*s23*s34*s14^2*s24*s13+12*s12^5*s24+108*s12^2*s34^2*s24^2+8*s23*s34*d^2*s14^2*s24^2+30*s23*d*s14*s24*s13^3-14*s12*s34^3*d*s14*s13+8*s34^2*s14^2*s24*s13+72*s23*s12*s34*d*s14*s24*s13-2*s34*d*s24*s13^4+4*s23^2*s34*d^2*s14^3-8*s23^2*s12*s24*s13^2-10*s23*s34^3*d^2*s24*s13-14*s34^3*d*s14*s24*s13+10*s23^2*s12^2*s34*d*s13-3*s23^3*s12^2*d*s13+54*s23*s12^2*s34^2*s24-2*s23^2*s34^3*d*s13+17*s23^2*s34^2*d^2*s14*s24-10*s12^3*d^2*s14*s24^2+40*s12^3*s34*s14*s13+8*s23^2*d*s24*s13^3-35*s34^2*d*s14*s24^2*s13+32*s23^2*s12*d*s14^3-92*s23*s12*s34*s13^3-18*s23*s12^2*d^2*s24^2*s13-6*s23^3*s12*s13^2+12*s23^2*s34*s24^3+12*s34*s24^5-6*s23*d*s14*s24^4+112*s12^3*s24^2*s13-12*s12*d*s14^2*s24*s13^2+6*s23^2*s12^2*d^2*s14^2+50*s23*s34*d*s14*s24^2*s13-24*s23^2*s12*d*s14^2*s24-6*s23^3*s34^3-14*s12*d*s14*s24^3*s13-s23^2*d^2*s24^2*s13^2+8*s23^2*d^2*s14^2*s24*s13-3*s12^4*s34*d^2*s14+60*s34*s24^4*s13-12*s12*s34^3*d*s13^2-2*s12^4*s14*s13+s23*s34^2*d*s24^3-40*s23^3*s14*s24^2-48*s23*s12*s14^3*s24-48*s12^2*s34*d*s24^2*s13-18*s23*s12*s34^3*d^2*s13-21*s23*d*s24^3*s13^2+12*s23*s12^2*s34*d*s24^2+24*s23^2*s34*d^2*s14^2*s13+144*s12^2*s34*s24*s13^2-6*s23*s34*d^2*s14*s24*s13^2-16*s23^2*s12^2*s34*s13+84*s23^2*s14^3*s13+36*s12^2*s24*s13^3-48*s23*s12*s34*s24*s13^2-84*s23*s12^2*s14*s24^2-8*s23*s12*d^2*s24^4-2*s23^2*d^2*s13^4-3*s23^2*s12*s34^3*d^2-3*s12^2*s34^3*d^2*s13-6*s23^3*s12*s34*d*s24+9*s23^2*s12^2*d*s14*s13-2*s24^2*s13^4-8*s23*s34^3*d^2*s13^2-21*s12*s34^2*d^2*s24^3-38*s23*s12*d*s24^3*s13-8*s23^4*s34*d*s14-3*s12^4*s34^2*d^2-6*s23^3*s34^2*s24+8*s14^2*s24^3*s13+24*s23^2*s12^3*s24-8*s23^3*d^2*s14^2*s13-28*s23*s12*s34*d*s24^2*s13-40*s12^2*d*s24^3*s13+14*s23^2*d^2*s14^2*s13^2-7*s12^2*s34^3*d*s14-2*s23*s12*s34^2*d*s14*s24-16*s23^2*d*s14^4+48*s12^4*s24*s13-8*s23^2*s34*s14^2*s24-3*s23^3*s34*d*s24^2+12*s12^3*s14^2*s13+6*s23*s24^5-24*s23^3*s34*s14^2+18*s23*s12*s34^3*d*s14-8*s23*s34^3*s14*s24+10*s23*s12^2*d^2*s14^2*s13-9*s34*d^2*s24^4*s13+58*s34^2*s14*s24^2*s13+72*s12^2*s34^3*s24-124*s23*s34*s14*s24^2*s13+6*s23*s12^3*s34*d*s24+40*s12*s34*s14^2*s24^2-13*s12^2*s34^2*d*s14*s24-2*s34^5*d*s24-2*s12*s34^4*d^2*s24-13*s23^2*d*s14*s13^3+120*s12^3*s34*s24*s13-2*s23*s34^3*d*s14^2-38*s23*s12^2*s34*d^2*s24*s13+36*s12^3*s34*s13^2+22*s23*s34^2*d*s14^2*s24+2*s23*s12*s34^4*d+68*s23*s12*s34*d*s14^2*s13+136*s12^2*s34*s14*s24*s13-4*s23^2*s12*d^2*s13^3-22*s12^3*s34*d^2*s24^2+8*s23*d*s14^3*s24*s13-4*s34^3*d^2*s24^3+16*s23*s12*d*s14^3*s13-12*s34^3*d*s24*s13^2-28*s23^2*s12^2*d*s24*s13+48*s34^2*s24^2*s13^2+12*s12^4*s13^2-52*s23*s14^2*s24^2*s13+7*s23^2*s34^3*d^2*s14-s12^2*d*s13^4-28*s23*s12*s34^3*s14-172*s23*s12*s34*s14*s13^2-6*s23*s34^4*d*s24+10*s12^2*s14*s13^3+4*s12^4*s34*d*s13+s23^2*s34^4*d^2+2*s23^2*s12*s34^2*d*s24+32*s23^4*s14^2-208*s23*s12*s34*s14*s24*s13-48*s23*s12^2*s34*s14^2+30*s12^2*s24^4+8*s23*d*s14^3*s13^2+6*s23*d*s14^2*s24^3+2*s23^2*s12^2*d*s13^2-12*s12^2*s34*d*s14^2*s13+34*s23^2*s34*d^2*s14*s24*s13+16*s23^2*s24^3*s13+62*s12^2*s34*s14*s13^2-5*s23^2*s34*d^2*s24^2*s13-5*s12^4*d^2*s24^2+16*s12*s34*s14^2*s13^2-s23^2*s34^2*d^2*s24*s13+68*s12^2*s34^3*s13+12*s23*s12^3*s34*d*s13-3*s12^3*d^2*s24*s13^2+52*s12*s14*s24^3*s13-56*s12*s34*d*s24^3*s13-3*s23^2*d*s14*s24^3-4*s23^2*s12^2*s34^2-17*s12^2*s34^2*d*s14*s13-8*s23^4*d^2*s14^2-20*s23*s34^3*s14*s13+20*s23*s12^2*d^2*s14^2*s24+16*s12*s14^2*s24*s13^2-9*s12^2*d^2*s14*s24*s13^2-12*s23*s13^5+20*s23*d*s24*s13^4-4*s23*s12*d^2*s14*s24*s13^2-3*s23^3*s12^2*s34*d+16*s12^3*s14^2*s24+128*s23^2*s14^2*s24*s13+9*s23^3*s34*d*s13^2-12*s23^2*s12*s14^3+6*s12^4*s34*s14-26*s23^2*s12*d*s24^2*s13+12*s23*s12^2*s34*d^2*s14^2+84*s23*s12*s34^2*d*s14*s13+16*s23^3*s12*s34*d^2*s14+2*s23^2*d^2*s14^2*s24^2-52*s12*s34^2*d*s14*s24*s13+96*s23^2*s34*s14^2*s13-6*s23^3*s24*s13^2+108*s23*s12*s24^3*s13-18*s12^2*s34*d*s14^2*s24-12*s23^2*s12^2*d*s24^2+24*s23*d*s14^2*s13^3+88*s23*s12*d*s14*s24^2*s13+16*s23*d*s14^3*s24^2+2*s12^2*s13^4-20*d*s24^3*s13^3-2*d*s14^2*s24*s13^3-68*s23*s34^2*s14*s24*s13-6*s34*d*s14^2*s24*s13^2+96*s12^2*s34*s14*s24^2+2*s24^6+30*s23^2*s12*s34^2*d*s13+2*s23*s34^4*d*s13+28*s12^2*s14*s24^3-68*s23*s12*s34*s14*s24^2+10*s12^4*s34*d*s24+42*s23*s12^2*s24*s13^2+2*s34*d*s24^5-40*s23^3*s12^2*s14-28*s34*d*s14*s24^3*s13-2*s23^2*s34^3*s14-4*s23*s12*s34^4*d^2+4*s14^2*s24^4+24*s23*s12*d*s14^3*s24-2*s23*d^2*s14*s24^2*s13^2+5*s12^2*d*s24^4-3*s23*s12^5*d+30*s12^4*s24^2+32*s23^2*s14^4+20*s23*s34^2*d*s14^2*s13+72*s12^3*s34*s24^2-3*s12^3*s34*d^2*s13^2-52*s23*s14*s24*s13^3-24*s12*s34^2*d^2*s24^2*s13-20*s12*d*s24^4*s13-3*s23^2*s12*d^2*s24^3+16*s23*s12*s34*d*s14^2*s24-5*s23^2*s34^4*d-3*d^2*s24^4*s13^2+44*s23*s12*s34^2*d*s24*s13+2*s23^3*s12^3+34*s12^3*s34^2*s14+48*s23^3*s14*s13^2-2*s12^4*s14*s24+52*s23*s34^2*d*s13^3-8*s12*s34^3*d*s24^2+16*s23^2*s34*s24^2*s13+17*s23^2*s12*s34^2*d^2*s14+26*s23*d*s14*s13^4+18*s23^2*s12*d^2*s14*s24*s13-2*s12^4*d*s14^2-52*s23^2*s12*d*s14^2*s13+12*s23*s34^3*s24*s13-172*s23^2*s12*s14*s24*s13+76*s23*s12*s34*s24^3-6*s12^3*s34*d*s14^2+6*s23^3*s12*s24^2-48*s23^2*s34*s13^3-9*s34^2*d^2*s24^3*s13-18*s23*s34*d^2*s24^3*s13-3*s12^3*d^2*s14*s13^2+21*s23^2*s34^2*d^2*s14*s13-10*s23^2*s34^3*d*s24+180*s12*s34*s24^2*s13^2-3*s23^3*s12^2*d*s24-2*s12*s34^5*d+6*s23*s12^2*s34^2*s13-12*s12^2*s34^2*d*s24*s13+44*s12^3*s34*s14*s24+22*s23*s12^2*s34*d^2*s14*s24+4*s23^2*s12*s34^3*d-16*s23^3*d^2*s14^2*s24-11*s23*s34^2*d*s24^2*s13+4*s12^5*s34-4*s12*s34^4*d*s14-8*s23*s34^3*d^2*s24^2-13*s34^3*d*s14*s24^2+43*s23^2*s12^2*d*s14*s24+12*s34^2*s14^2*s24^2+6*s23*s12^3*s34*d^2*s14-18*s23^3*s34^2*s13+12*s23^2*s12^3*s13-6*s23*s12*d^2*s13^4-68*s23*s12^2*s14*s13^2-2*s12*d^2*s14*s24*s13^3+10*s23*s12^4*s34+2*s23^3*s12*s34*d*s13-10*s12^2*s34^3*d^2*s24-s23^2*d^2*s24^4+59*s23*s12^2*s34*d*s13^2+10*s12^4*s34^2*d-s23*d*s24^2*s13^3-18*s23*s12*s34^3*d^2*s24-12*s23^4*s12*s14-32*s23*s12*s14^3*s13-16*s23^3*s34*d^2*s14^2+28*s23^2*s12^2*s34*s24+20*s23^2*s14^3*s24+32*s24^4*s13^2+4*s23^2*s34*d^2*s14^2*s24+16*s34*s14^2*s24^2*s13+28*s12^3*s34^2*d*s24+66*s23*s12*s24^2*s13^2-10*s12^2*d^2*s14*s24^3-18*s23*s12*s34*d^2*s14*s13^2+16*s12*s14^2*s24^3-12*s23^2*s12*s34*d^2*s24*s13+38*s23*s34*d*s13^4+2*s23*s34^2*d^2*s14*s24^2-80*s23^3*s12*s14*s24+s23^3*d*s24*s13^2-16*s23^3*s12*d*s14^2-9*d*s14*s24^2*s13^3+8*s23^3*s34*d^2*s14*s24+2*s23^3*s24^3+4*s23*s12*d*s14^2*s24*s13+16*s23*s12*d^2*s14*s24^3-3*s34^3*d^2*s24^2*s13-31*s34*d*s14*s24^2*s13^2+12*s23^2*s34^2*s14^2+2*s23*d^2*s14*s24^3*s13-12*s23*s12*d*s14^2*s24^2-56*s23*s34^2*s14^2*s24-18*s12^2*d*s14^2*s24*s13-9*s23^2*s12*s34*d^2*s24^2-44*s23*s34*s13^4-42*s23*s12^3*d*s24*s13-6*s34*d*s14^2*s24^3-92*s23*s34*s14*s13^3+6*s23^2*s34*d*s24*s13^2+s23*d*s24^5+4*s23*d^2*s14^2*s24*s13^2+3*s12^5*d*s14-3*s12^2*s34*d^2*s14*s13^2-14*s23*s12^3*d*s24^2-12*s12^2*d*s14^2*s24^2-20*s12*s34^3*d*s14*s24-6*s23*s34^2*d^2*s14*s24*s13+72*s12^2*s34^2*s13^2-4*s23*s34*d^2*s14^2*s13^2-10*s23^2*s12^2*s34*d*s24+34*s12*s14*s24^2*s13^2-96*s12*s34*d*s24^2*s13^2+8*s23^2*s12^3*s34+8*s34^3*s24*s13^2+60*s12*s34^2*s14*s13^2+24*s23*d*s14^2*s24^2*s13+8*s12^5*s13-s23^2*s12^3*d^2*s24-8*s23*s14^3*s24*s13-64*s23^2*s12*s34*s14^2-6*s23*s12^2*d^2*s13^3+12*s23*s12^4*d*s14+6*s23^2*s34^2*s14*s13+30*s23*s12^2*d*s14*s13^2-6*s23*d^2*s24^4*s13-114*s23^2*s14*s24^2*s13-2*s12*s34*d^2*s24*s13^3+s23^3*s12*s34^2*d-12*s23^2*d^2*s14^3*s24+18*s23*s12^4*s13-12*s23^3*s12*d*s14*s13-20*s23*s12^2*s14^3+74*s23*s34*d*s14*s13^3-6*s34^2*d^2*s24^4+52*s23*s12^3*s34*s24-41*s23^2*s34*d*s14*s13^2-92*s23*s34*s24*s13^3-28*s23*s12^2*s34^2*d^2*s24-4*s12^3*d*s13^3-12*s12^2*s34*d^2*s24*s13^2+14*s12^3*d*s14*s24*s13-2*s23^2*s34*d*s24^3+d*s24^6+20*s23*s12^3*d*s14*s13-48*s34*d*s24^3*s13^2-12*s23^2*s12^2*s13^2+32*s34^3*s24^3+24*s23^3*s12*s34*s14-4*s23^2*s34^2*d^2*s24^2+32*s12*s34^4*s13+14*s12^3*s34*d*s14*s24+8*s23^2*s12*s34^2*s24-5*s12*d^2*s24^5+34*s23^2*s12*s34*d^2*s14*s13-38*s23*s12*s34*d^2*s24*s13^2+4*s23*s34^5+108*s12*s24^3*s13^2-60*s23*s12*s14^2*s13^2-29*s12*s34^2*d*s14*s24^2-34*s23^3*d*s14*s13^2-20*s23^2*s14^2*s24^2+8*s23*s12^2*d*s14^3-6*s23^3*s12*d*s24*s13+2*s12^6+88*s12*s34*s14*s24*s13^2-2*d*s14*s24*s13^4-d*s14*s24^5+54*s23*s34*d*s24*s13^3-8*s12^3*d*s14^2*s24+11*s12^4*d*s14*s24-28*s12^2*s34*d^2*s24^3+22*s12*s14*s24^4-26*s23*s12*s34*d^2*s24^3+22*s12^2*s34^4-8*s34^2*d*s24*s13^3+32*s23^3*d*s14^3-31*s23*s12^2*d*s24*s13^2+29*s23^2*s12*d^2*s14*s24^2+120*s12*s34^2*s24*s13^2+19*s23*s12*s34^2*d*s24^2-60*s23^2*s12*s34*s14*s13-3*s34^2*d^2*s24^2*s13^2-16*s23*s34*d^2*s24^2*s13^2+4*s23*s34^4*s14+24*s12^2*s34^2*d*s24^2-10*s23*s12^2*s34^3*d^2+200*s12*s34*s24^3*s13-6*s12*s34*d*s14^2*s13^2-56*s23*s34^2*s13^3+30*s23*s34^3*s24^2-7*s34*d*s14*s24^4-130*s23^2*s12*s14*s24^2-2*s23*s34^3*d^2*s14*s24-2*s12*d^2*s24^2*s13^3)*(s23+s12+s34+s14+s24+s13)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (1/2*(d*s24^2-2*s12^2+2*s34*d*s13-4*s34*s24+2*d*s24*s13-2*s24^2-2*s13^2-4*s34*s13+s12^2*d+d*s13^2+2*s34*d*s24-2*s34^2+s34^2*d+8*s23*s14-4*s12*s13+2*s12*d*s24+2*s12*s34*d-4*s12*s34+2*s12*d*s13-4*s23*d*s14-4*s24*s13-4*s12*s24)^(-1)*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23*s24^3*s13^2-24*s23*s12*s14*s24^2*s13+62*s12^2*s34^2*s14*s13+4*s23^2*s34^4-22*s23*s34^2*d^2*s14^2*s13-28*s23*s34^2*s14^3-80*s23*s12*s34^2*s14*s13-14*s23*s34^4*s13+36*s12^2*s14*s24^2*s13-4*s23*s12*s34*d^2*s14^2*s24-6*d*s14^2*s24^2*s13^2-132*s12*s34^2*d*s24^2*s13+4*d^2*s24^3*s13^3+4*s23^3*s12*d^2*s14^2-76*s23*s14*s24^2*s13^2-6*s23*d^2*s14^2*s13^3+4*s12^3*s34^3*d^2-48*s23*s34*s14^3*s13-48*s23*s12*s34*d^2*s14*s24*s13+4*s12^3*s34^2*d^2*s24+12*s34^3*d^2*s14*s24*s13+16*s34^5*s13-144*s23*s34^2*s14*s13^2+3*s23*s34*d^2*s13^4-20*s23*d^2*s14*s24*s13^3+14*s12*s34^4*s14+30*s23*s12*s13^4+s23*d^2*s24*s13^4+16*s12*s34^2*s14^2*s24+6*s12^2*s34*d^2*s14*s24*s13+160*s12*s34^2*s13^3-2*s34^4*d*s14^2+12*s12*s34^3*s24^2+22*s34^4*s14*s24-21*s23*s12^2*d*s13^3-10*s23^2*d*s14^2*s24^2+8*s23^2*s12*s34^3-48*s23*s12*s34^2*d^2*s14*s13+116*s12*s34*s14*s13^3+36*s24^3*s13^3-12*s23^2*s34^2*d*s24*s13-22*s12^3*d*s24*s13^2+24*s23*s34*d*s14^3*s13-90*s12*s34*d*s13^4+4*s12*s34^5+8*s12*s34*d^2*s24^3*s13+9*s12^2*s34^2*d^2*s14*s13+d^2*s14*s24^3*s13^2-4*s23*s12^2*d*s14^2*s24+4*s23^2*s12^2*s14^2+s34^6*d^2+18*s34^2*s14*s24^3+12*s23*s34^2*s24*s13^2-s23*d^2*s24^2*s13^3+184*s12*s34^2*s14*s24*s13+15*s34^4*d^2*s13^2+38*s14*s24^3*s13^2+30*s23*s12^2*s13^3+100*s12*s34*s13^4-44*s23^2*s34*d*s14^2*s24-2*s23^2*s34^2*d*s24^2-4*s23*s34*s24^3*s13+s23*s12^3*s34^2*d^2-74*s12*s34*d*s14*s24^2*s13-7*s23*s34^2*d^2*s24^2*s13-8*s23^3*d*s14^2*s24+4*s23^2*d*s14*s24^2*s13+4*s12^2*s34^2*s14^2-18*s12*s34^2*d*s14^2*s13+4*s23*s12*s34^2*s24*s13-20*s23*s34*d^2*s14^2*s24*s13+84*s12^2*s34^2*s24*s13-3*s34^2*d*s24^4+3*s34^3*d^2*s14*s24^2+24*s23^2*s12*s34*s13^2-4*s23*s14^2*s24^3-20*s23*s14^3*s13^2-s23*s12^2*s34^2*d*s24+3*s12*d^2*s14*s24^2*s13^2+4*s12^3*d^2*s13^3+6*s12^2*s34^2*d^2*s24^2-50*s34^2*d*s24^3*s13-13*s12^3*d*s14*s13^2+6*s23*s34*d*s24^3*s13-24*s23^2*s34^2*d*s14*s13+10*s23*s12^2*s34*d*s14*s24-s23*s12*s34^2*d^2*s24^2+36*s12^2*s34^2*d^2*s24*s13-2*s23*s12*s34^2*d^2*s24*s13-8*s23^3*d^2*s14^3-7*d*s24^4*s13^2+34*s23*s12^2*d*s14*s24*s13-24*s23^2*s12*s14^2*s13+264*s12*s34*s24*s13^3+24*s23^2*s34^2*s13^2-2*d*s14*s24^4*s13-6*s23*d^2*s14*s13^4+12*s34^3*s14^2*s24+12*s23^2*s12*d^2*s14^2*s13-10*s23*s12*s34^2*s24^2+18*s12*s34*d^2*s14*s24*s13^2+5*s23*s34^5*d+12*s34^4*s24^2+192*s34^2*s14*s24*s13^2+10*s34^2*d^2*s14*s13^3+8*s23^3*s12*s34*d*s14-2*s23*s12^2*s34^3+4*s34*s14*s24^4-14*s23*s12^2*d^2*s14*s13^2-16*s23^2*d*s14^3*s24-228*s12*s34*d*s24*s13^3+104*s12*s14*s24*s13^3-232*s23*s34*s14*s24*s13^2+108*s12^2*s34*s13^3-28*s23*s34*d^2*s14*s13^3+20*s23*s12^2*s34*d*s14^2+4*s23^2*s34*s14*s24^2-8*s23^4*d*s14^2+112*s23*s34*d*s14^2*s13^2+6*s12*s34^3*d^2*s14*s24+70*s34^2*s13^4+36*s12*s34*d^2*s24^2*s13^2-6*s12*d*s14^2*s13^3-16*s23^3*s34^2*s14-8*s23^2*s34*d*s14*s24*s13+2*s23*s12^3*s34*d^2*s13+6*s34^5*d^2*s13+22*s12^3*s14*s13^2-60*s12*s34^4*d*s13-12*s34^2*d*s14^2*s13^2+84*s23^2*s34*s14^3-92*s34*d*s14*s24*s13^3+2*s23*s12*d^2*s14^2*s24^2+8*s23^3*d*s14*s24*s13-46*s12^3*s34*d*s13^2-66*s12*d*s24*s13^4-120*s23*s12*s34*s14^2*s13+16*s12^2*s14^2*s24*s13-104*s23*s12*s14^2*s24*s13+16*s12^2*s34*s14^2*s13-80*s34^3*d*s13^3+12*s23*s12^2*s34^2*s14-2*d*s14^2*s24^3*s13-71*s12^2*s34*d*s14*s13^2+44*s23*s12*s24*s13^3-3*s23*s34^4*d^2*s13+146*s23*s12*s34*d*s14*s13^2-8*s23^2*s12*s34*d*s24*s13-12*s23*s14*s24^3*s13+16*s23*s34^2*d*s14^3+80*s34*s24^3*s13^2+16*s12^3*s34^2*s13+46*s23*s34^2*d*s14*s24^2-148*s23*s34*s14^2*s13^2-144*s23*s14^2*s24*s13^2+8*s23^3*s34*d*s14*s24-5*s12^4*d*s13^2+76*s12*s34^3*s14*s13-70*s34^4*d*s24*s13-90*s34^3*d*s24^2*s13+254*s23*s34*d*s14*s24*s13^2+28*s12^3*s24*s13^2-162*s34^2*d*s24^2*s13^2-6*s12*d*s14^2*s24^2*s13+12*s23^3*s14^2*s24+5*s23*s34*d*s24^2*s13^2-72*s12*d*s24^2*s13^3+74*s23*s34^3*d*s14*s24+4*s23^2*s13^4-84*s12*s34*d*s14*s13^3+16*s23^2*s34^3*s13-12*s23^2*s12^2*s14*s13+40*s34^2*d^2*s24*s13^3+12*s12*s34^3*d^2*s24^2+2*s23*s34^2*d^2*s13^3-126*s34^2*d*s14*s24*s13^2+s23*s12^2*d^2*s24*s13^2-4*s23^2*s12*s34^2*d*s14-20*s23*s12*s34^3*s24+34*s23*s34^4*d*s14+8*s23^2*s12*s13^3+7*s23*s12^2*s34*d^2*s13^2+4*s12^4*s34*s13+14*s23*s12*s34^3*d*s24-24*s12*s34*d*s14^2*s24*s13-8*s34^3*d*s14^2*s13-12*s12^2*s34^4*d+24*s23^3*s34*d*s14^2+120*s12*s34^3*s24*s13-27*s34^4*d*s14*s13-10*s23*s12*s34^4-21*s23*s12*d*s13^4+3*s12*s34^2*d^2*s14*s24^2+40*s23^2*s12*s34*d*s14*s13-8*s23^3*s34*s14*s24-38*s23*s12*s34*d*s24*s13^2-24*s12^2*s34^3*d*s24+10*s23*s34*s24^2*s13^2+9*s34^2*d^2*s14*s24^2*s13+4*s34*s14^2*s24^3-4*s23^2*s34*d^2*s14*s13^2+3*s12*s34^4*d^2*s14-5*s34^5*d*s14+15*s23*s34^3*d*s24^2-160*s12*s34^2*d*s13^3+48*s12^2*s34*s24^2*s13-24*s23*s34*d^2*s14*s24^2*s13-156*s12^2*s34*d*s24*s13^2+2*s23*s12^3*s34*d*s14+10*s12^2*s34^3*s14-40*s23*s12*s14*s13^3-76*s23^2*d*s14^2*s24*s13+108*s34^3*s14*s24*s13+4*s23*s12*s34*s24^2*s13-23*s12*d*s14*s13^4+24*s12*s13^5+12*s34*d^2*s24^3*s13^2-4*s23*s12^3*d^2*s14*s13-4*s23*s12^2*s14^2*s24+20*s23*s12^2*s34*s24*s13+8*s23^2*s34^3*s24-2*s12^4*s34*d*s14+120*s34*s24*s13^4-s23*s34^2*d^2*s24^3+40*s12*s34^3*d^2*s13^2-8*s12*s34*d*s14*s24^3+d^2*s14*s13^5-10*s23^2*s12^2*d*s14^2+58*s23*s12^2*s34*s13^2-4*s23^2*s12*d^2*s14^3+24*s23^2*s34*s24*s13^2-4*s23^3*s14^2*s13+48*s12*s34^3*d^2*s24*s13+5*s34*d^2*s14*s13^4-26*s12*d*s24^3*s13^2-58*s12*d*s14*s24*s13^3+124*s23*s34^3*d*s14*s13+44*s23^2*s12*d*s14*s13^2+48*s12*s34*s14^2*s24*s13-s23*s12*d^2*s24^2*s13^2-36*s23*s12^2*s14^2*s13+24*s34*d^2*s24^2*s13^3-10*s12*s34^2*d*s24^3+6*s12^2*s34^4*d^2+2*s23*s34^3*d*s13^2-32*s23^2*s14*s13^3+4*s23^2*s34*d^2*s14*s24^2+6*s12^2*d^2*s24^2*s13^2+24*s23^2*s12*d*s14*s24*s13-66*s12^2*d*s24*s13^3-32*s23^3*s34*s14*s13+8*s23^2*s12*s34*d*s14*s24+18*s12*s34^2*d^2*s14*s13^2+16*s34*s14^2*s13^3+10*s14*s13^5-2*s23^2*d*s13^4-66*s12^2*s34^3*d*s13+6*s23*s34^2*d*s24*s13^2+16*s14^2*s24*s13^3-17*s34^4*d*s14*s24+2*s12^3*s34*d^2*s14*s13-2*s23^2*s12^2*s34^2*d-6*s34^3*d*s14^2*s24-26*s23*s12*d*s24*s13^3-4*s23^2*s12*d*s24*s13^2-30*s12*s34^4*d*s24-4*s23*s12*d^2*s14*s24^2*s13-6*s34^2*d*s14^2*s24^2+4*s34^5*d^2*s24-8*s23*s34^3*d^2*s14^2+12*s12*s34^3*d^2*s14*s13-32*s23^2*s34*s14*s13^2+24*s23*s34*d*s14^2*s24^2+2*s34*d^2*s14*s24^3*s13-s23*s34^5*d^2+32*s23*s34^3*d*s24*s13+20*s34*d^2*s24*s13^4+2*s34^2*s24^4+4*d^2*s24*s13^5-4*s23^2*s12^2*s34*s14-64*s23^2*d*s14^3*s13+82*s23*d*s14*s24^2*s13^2-16*s23*s12*s34^3*d^2*s14+3*s12^2*s34^3*d^2*s14+s34^2*d^2*s14*s24^3+2*s23*s12^3*s34^2+50*s34^4*s13^2+20*s12*s14^2*s24^2*s13-8*s23*s12^2*s34*s14*s13+46*s34*s14*s13^4+16*s23^3*s34*d*s14*s13+54*s23*s12*d*s14*s13^3+8*s12^3*s34*d^2*s24*s13+40*s12*s34^3*s14*s24-6*s12*s34^3*d*s14^2+72*s12*s34^2*d^2*s24*s13^2-41*s12^2*d*s14*s24*s13^2-3*s23*s34^4*d^2*s24+2*s12^4*s34*d^2*s13-27*s12^2*d*s14*s13^3+14*s23*s12*s34*d*s14*s24^2+168*s23*s34^2*d*s14*s13^2-48*s23*s34*s14^2*s24^2+6*s34*d^2*s13^5-4*s12^3*s34^2*s24+156*s34*s24^2*s13^3+28*s24*s13^5-12*s34^3*d*s24^3-12*s34*d*s14^2*s24^2*s13+8*s23^2*s24*s13^3+4*s12^2*s34*s14^2*s24+124*s23*s12*d*s14*s24*s13^2-12*s12^2*s34*d*s14*s24^2-4*s12^3*s34^3+6*s12^2*d^2*s13^4-24*s23^2*s34^3*d*s14+18*s12*s34^2*d^2*s14*s24*s13-10*s23*s12*d^2*s14^2*s13^2+12*s23^3*s12*s14^2-8*s23*s12*s34*s14^3-64*s23*s12*s34*s14^2*s24+154*s34*s14*s24^2*s13^2-4*s23^2*s12*d*s13^3-3*s23*s12^3*s34^2*d-4*s23*s14^3*s24^2-4*s23^2*s12^2*d^2*s14*s13-48*s23*s14^2*s13^3+10*s34^3*d^2*s14*s13^2-65*s34^2*d*s13^4-23*s23*s12^2*s34^2*d*s13+48*s12^2*s24^2*s13^2+3*d^2*s14*s24*s13^4-3*s34^6*d+12*s23^2*s12^2*s34*d*s14-16*s23^3*d*s14^2*s13+16*s23^2*s34*s14*s24*s13+d^2*s13^6-2*s23*s12*s34*d^2*s24^2*s13-12*s12*s34^2*d*s14^2*s24+62*s14*s24^2*s13^3+10*s23*s12^3*s13^2+12*s12^2*s34*d^2*s24^2*s13+6*s34^4*d^2*s24^2-s23*d^2*s24^3*s13^2-8*s23^3*s14*s24*s13-12*s23^2*s34^2*d*s13^2-116*s23^2*s34*d*s14^2*s13-20*s12*d*s13^5+84*s34^2*s14*s13^3+4*s23^2*s34^2*s24^2-102*s12^2*s34*d*s13^3+120*s12*s34^2*s24^2*s13+4*s23^2*s12*d^2*s14^2*s24+60*s23*s12*s34^2*s13^2+16*s34^3*s14^2*s13-8*s23^3*s14^3+16*s23^2*s12*s14^2*s24+60*s34^4*s24*s13-2*s23^2*d*s24^2*s13^2-56*s23*s12*s34*d*s13^3-9*s12^3*s34^2*d*s14-28*s23^2*s34^2*d*s14*s24-2*s23*s12^3*d*s14^2+22*s23*s24*s13^4+136*s12*s34*s14*s24^2*s13+6*s23*s12*s34^2*d^2*s13^2+48*s23*s12^2*s34*d*s14*s13+4*s23^2*s12*s34*d^2*s14^2+36*s12^2*s34^2*d^2*s13^2-36*d*s24^2*s13^4+24*s12^3*s13^3+8*s34^5*s24+12*s12^3*s34^2*d^2*s13+238*s23*s34^2*d*s14*s24*s13+200*s34^2*s24*s13^3-44*s23*s34^2*s14*s24^2-4*s23^2*s34*d*s24^2*s13-32*s23*s34*s14^3*s24+2*s23*d^2*s14^2*s24^2*s13-8*s23*s34^2*d^2*s14^2*s24-52*s23*s34^3*s14^2+44*s34*s14^2*s24*s13^2-12*s23^2*s12*s34*d*s13^2-6*s12^2*s34^2*d*s14^2-18*s23*s34^4*s24-32*s23*s12*s34^2*s14*s24-16*s23*s12*s34*d^2*s14^2*s13+22*s12^2*s34^2*s14*s24+40*s34^3*d^2*s24*s13^2+s23*d^2*s13^5+34*s23*s12*s34^2*d*s14^2+14*s23*s24^2*s13^3-6*s12^3*s34^3*d+s23*s12^3*d^2*s13^2+12*s12^2*s14^2*s13^2+56*s34*s14*s24^3*s13+26*s23*s12^2*d*s14^2*s13-64*s23^2*s34*d*s14^3-10*s34*d*s24^4*s13-2*d*s14^2*s13^4-20*s23*s14*s13^4-10*s23*s12^2*s34^2*d^2*s14+9*s34*d^2*s14*s24^2*s13^2+16*s23*s34*d*s14^3*s24-14*s23*s12^2*s34*d*s24*s13+3*d^2*s14*s24^2*s13^3+3*s12^2*s34^2*d^2*s14*s24-4*s23^2*d^2*s14*s13^3+4*s23*s12^3*s34*s14-20*s23^2*s14*s24*s13^2-20*s23*s12*s34^2*d^2*s14*s24-42*s23^2*d*s14^2*s13^2+34*s34^4*s14*s13+12*s12*s34*s14*s24^3+14*s23*d*s14*s24^3*s13+22*s23^2*s34^2*d^2*s14^2+12*s23^2*s12*s34^2*s14+42*s14*s24*s13^4+84*s34^3*s24^2*s13+120*s12*s34^3*s13^2+4*s12*s34^2*s24^3+96*s23*d*s14^2*s24*s13^2+28*s12*s34^2*s14^2*s13-12*s23*s12^2*s14*s24*s13-114*s12*s34^2*d*s14*s13^2-8*s23*s12*s14^2*s24^2+12*s12^2*d^2*s24*s13^3+96*s12*s24^2*s13^3+4*s12*d^2*s13^5-6*s23*s34^2*d^2*s24*s13^2+20*s23^2*d*s14*s24*s13^2+12*s23^2*s14^2*s13^2+80*s34^3*s13^3-18*s34^4*d*s24^2+8*s12*s34^3*s14^2+12*s12*s34^4*s24+24*s23^2*s12*s34^2*s13-22*s12^3*s34*d*s14*s13+2*s23*s12*d^2*s24*s13^3+3*s34^4*d^2*s14*s24-4*s23^2*s12^2*s34*d^2*s14-5*s23*s12*d*s24^2*s13^2-5*d*s13^6-8*s23^2*s34*d*s13^3-22*s23*s34^2*s24^2*s13+20*s14^2*s24^2*s13^2-8*s23*s12^2*d^2*s14*s24*s13-126*s34*d*s24^2*s13^3+12*s23*s12^3*s34*s13-4*s23^2*s34*d*s14*s24^2+15*s34^2*d^2*s13^4-154*s12*s34*d*s14*s24*s13^2+8*s23^3*s34^2*d*s14+5*s23*s12^2*s34^2*d^2*s13-36*s12^2*d*s24^2*s13^2-156*s12*s34^3*d*s24*s13-126*s12^2*s34^2*d*s13^2+20*s23^2*s12*s34*d*s14^2+20*s12^3*s14*s24*s13-18*s34^2*d*s14^2*s24*s13-36*s23*s34^3*d^2*s14*s13-2*s12^4*s34^2+4*s12*d^2*s24^3*s13^2+4*s23*s34^3*s13^2-6*s23*s34^2*s24^3-44*s23^2*s12*s14*s13^2-33*s34*d*s14*s13^4-6*s12*s34*d*s14^2*s24^2+30*s34^3*s14*s24^2+6*s12*s34*d^2*s14*s24^2*s13+2*s23*s12^3*d^2*s14^2-8*s23^2*s12*d^2*s14*s13^2-42*s23*s12*s34^2*d*s13^2+8*s23*s12*s34*d^2*s13^3+34*s12*s14*s13^4+s12^3*s34^2*d^2*s14+4*s23^2*d^2*s14*s24^2*s13-s23*s12^2*s34^3*d-43*s12*d*s14*s24^2*s13^2-7*d*s14*s13^5+2*s34^6-2*s12^4*d*s14*s13+24*s12^2*s34*d^2*s13^3+164*s23*s34*d*s14^2*s24*s13-2*s12^3*d*s14^2*s13-6*s23*s12*s34^2*d^2*s14^2-70*s12^2*s34*d*s14*s24*s13-7*s23*d*s13^5-8*s23*s34*s14*s24^3-6*s12^2*d*s14^2*s13^2-7*s23*s12^3*d*s13^2-152*s23*s34^2*s14^2*s13+52*s34^2*s24^3*s13+62*s23*s12*d*s14^2*s13^2-8*s34*d*s14^2*s13^3+148*s34*s14*s24*s13^3-36*s23*s12*s34^2*s14^2-15*d*s14*s24^3*s13^2-16*s23*s12*d^2*s14*s13^3-96*s23*s12*s14*s24*s13^2-28*s12^3*s34*d*s24*s13-4*s23*s12*s34*d^2*s14*s24^2+3*s12^2*d^2*s14*s13^3+82*s12^2*s14*s24*s13^2+12*s12*s14^2*s13^3-32*s12^3*s34^2*d*s13-288*s12*s34^2*d*s24*s13^2-8*s23^3*s12*s14*s13+4*s23^2*s24^2*s13^2+8*s23*s12*s34*d*s14^3-48*s23*s34^2*d^2*s14*s13^2-74*s23^2*s34^2*d*s14^2+8*s14*s24^4*s13+12*s23^2*d^2*s14^3*s13-22*d*s24*s13^5+6*s23*s34*d*s14*s24^3+84*s12*s24*s13^4-11*s34^2*d*s14*s24^3+36*s23^2*s34^2*s14*s24+6*s23*s12^2*s34^2*d*s14+38*s12*s34^2*s14*s24^2-240*s23*s34*s14^2*s24*s13+90*s23*d*s14*s24*s13^3-68*s12*s34^3*d*s14*s13+40*s34^2*s14^2*s24*s13+176*s23*s12*s34*d*s14*s24*s13-100*s34*d*s24*s13^4+12*s23^2*s34*d^2*s14^3+8*s23^2*s12*s24*s13^2-8*s23*s34^3*d^2*s24*s13-76*s34^3*d*s14*s24*s13-4*s23^2*s12^2*s34*d*s13-2*s23*s12^2*s34^2*s24-8*s23^2*s34^3*d*s13+8*s23^2*s34^2*d^2*s14*s24-24*s23*s12^2*s34*d^2*s14*s13+24*s12^3*s34*s14*s13-4*s23^2*d*s24*s13^3-73*s34^2*d*s14*s24^2*s13+16*s23^2*s12*d*s14^3+80*s23*s12*s34*s13^3+6*d^2*s24^2*s13^4-12*s12*d*s14^2*s24*s13^2+6*s23^2*s12^2*d^2*s14^2+128*s23*s34*d*s14*s24^2*s13+4*s12*s34^5*d^2-20*s23^2*s12*d*s14^2*s24-8*s12*d*s14*s24^3*s13+20*s23^2*d^2*s14^2*s24*s13+12*s34*s24^4*s13-140*s12*s34^3*d*s13^2+4*s12^4*s14*s13+5*s23*s34^2*d*s24^3-16*s23*s12*s14^3*s24-48*s12^2*s34*d*s24^2*s13+s23*d*s24^3*s13^2+36*s23^2*s34*d^2*s14^2*s13+168*s12^2*s34*s24*s13^2-60*s23*s34*d^2*s14*s24*s13^2+8*s23^2*s12^2*s34*s13+68*s23^2*s14^3*s13+84*s12^2*s24*s13^3+68*s23*s12*s34*s24*s13^2+4*s34^4*s14^2+24*s12^2*s34^3*d^2*s13+20*s23^2*s12^2*d*s14*s13+24*s34^2*s14^2*s13^2+48*s24^2*s13^4-2*s23*s34^3*d^2*s13^2+4*s12*s34^2*d^2*s24^3-58*s34^3*d*s14*s13^2+s12^4*s34^2*d^2+8*s14^2*s24^3*s13+18*s34^2*d^2*s14*s24*s13^2+4*s23^3*d^2*s14^2*s13+2*s23*s12*s34*d*s24^2*s13+14*s23^2*d^2*s14^2*s13^2-17*s12^2*s34^3*d*s14+52*s23*s12*s34^2*d*s14*s24-16*s23^2*d*s14^4+12*s34*d^2*s14*s24*s13^3+40*s23^2*s34*s14^2*s24+4*s12^3*s14^2*s13-36*s23^3*s34*s14^2+38*s23*s12*s34^3*d*s14-64*s23*s34^3*s14*s24-2*s23*s12^2*d^2*s14^2*s13+2*s34*d^2*s24^4*s13+122*s34^2*s14*s24^2*s13-120*s23*s34*s14*s24^2*s13+8*s12*s34*s14^2*s24^2-29*s12^2*s34^2*d*s14*s24-12*s34^5*d*s24+12*s12*s34^4*d^2*s24+24*s23^2*d*s14*s13^3+24*s12^3*s34*s24*s13+44*s23*s34^3*d*s14^2+2*s23*s12^2*s34*d^2*s24*s13+44*s12^3*s34*s13^2+68*s23*s34^2*d*s14^2*s24+7*s23*s12*s34^4*d+96*s23*s12*s34*d*s14^2*s13+104*s12^2*s34*s14*s24*s13+24*s23*d*s14^3*s24*s13+4*s34^3*d^2*s24^3+16*s23*s12*d*s14^3*s13-160*s34^3*d*s24*s13^2+4*s14^2*s13^4+180*s34^2*s24^2*s13^2+6*s12^4*s13^2-68*s23*s14^2*s24^2*s13+4*s23^2*s34^3*d^2*s14-30*s12^2*d*s13^4-20*s23*s12*s34^3*s14-100*s23*s12*s34*s14*s13^2+15*s23*s34^4*d*s24+42*s12^2*s14*s13^3-6*s12^4*s34*d*s13+6*s13^6-4*s23^2*s12*s34^2*d*s24-28*s34*d*s13^5+8*s23^4*s14^2-128*s23*s12*s34*s14*s24*s13-16*s23*s12^2*s34*s14^2+8*s23*d*s14^3*s13^2-2*s23^2*s12^2*d*s13^2-12*s12^2*s34*d*s14^2*s13+8*s23^2*s34*d^2*s14*s24*s13+94*s12^2*s34*s14*s13^2+32*s12*s34*s14^2*s13^2+36*s12^2*s34^3*s13-10*s23*s12^3*s34*d*s13+4*s12^3*d^2*s24*s13^2+28*s12*s14*s24^3*s13+20*s12*s34^4*d^2*s13-36*s12*s34*d*s24^3*s13+4*s23^2*s12^2*s34^2-61*s12^2*s34^2*d*s14*s13-20*s34^5*d*s13-104*s23*s34^3*s14*s13+4*s23*s12^2*d^2*s14^2*s24+32*s12*s14^2*s24*s13^2+3*s12^2*d^2*s14*s24*s13^2+10*s23*s13^5-13*s23*d*s24*s13^4-28*s23*s12*d^2*s14*s24*s13^2+48*s23^2*s14^2*s24*s13-12*s23^2*s12*s14^3-4*s23*s12^2*s34*d^2*s14^2+130*s23*s12*s34^2*d*s14*s13-2*s23^2*d^2*s14^2*s24^2-134*s12*s34^2*d*s14*s24*s13+80*s23^2*s34*s14^2*s13-6*s12^2*s34*d*s14^2*s24+34*s23*d*s14^2*s13^3+38*s23*s12*d*s14*s24^2*s13+36*s12^2*s13^4-26*d*s24^3*s13^3-6*d*s14^2*s24*s13^3-212*s23*s34^2*s14*s24*s13+s12^4*d^2*s13^2-18*s34*d*s14^2*s24*s13^2+12*s12^2*s34*s14*s24^2-12*s23^2*s12*s34^2*d*s13+13*s23*s34^4*d*s13-12*s23*s12*s34*s14*s24^2+22*s23*s12^2*s24*s13^2-26*s34*d*s14*s24^3*s13+32*s23^2*s34^3*s14-s23*s12*s34^4*d^2+8*s23*s12*d*s14^3*s24-14*s23*d^2*s14*s24^2*s13^2+20*s34^3*d^2*s13^3+32*s23^2*s14^4+122*s23*s34^2*d*s14^2*s13+12*s12^3*s34*d^2*s13^2-84*s23*s14*s24*s13^3+36*s12*s34^2*d^2*s24^2*s13+44*s23*s12*s34*d*s14^2*s24-12*s12^2*d*s14*s24^2*s13-2*s23^2*s34^4*d+d^2*s24^4*s13^2+2*s23*s12*s34^2*d*s24*s13+2*s12^3*s34^2*s14-16*s23^3*s14*s13^2-22*s23*s34^2*d*s13^3-30*s12*s34^3*d*s24^2+8*s23^2*s34*s24^2*s13-10*s23*s34^4*d^2*s14+22*s23*d*s14*s13^4+32*s34*s13^5-12*s23^2*s12*d*s14^2*s13-32*s23*s34^3*s24*s13-16*s23^2*s12*s14*s24*s13-2*s12^3*s34*d*s14^2+16*s23^2*s34*s13^3+12*s34^2*d^2*s24^3*s13-2*s23*s34*d^2*s24^3*s13+s12^3*d^2*s14*s13^2+4*s23^2*s34^2*d^2*s14*s13-4*s23^2*s34^3*d*s24+204*s12*s34*s24^2*s13^2-10*s12*s34^5*d+26*s23*s12^2*s34^2*s13-114*s12^2*s34^2*d*s24*s13+4*s12^3*s34*s14*s24-8*s23*s12^2*s34*d^2*s14*s24-4*s23^2*s12*s34^3*d-4*s23^3*d^2*s14^2*s24+25*s23*s34^2*d*s24^2*s13+s34^5*d^2*s14-15*s12*s34^4*d*s14+40*s12*s34^2*d^2*s13^3-3*s23*s34^3*d^2*s24^2-21*s34^3*d*s14*s24^2+12*s34^2*s14^2*s24^2-4*s23*s12^3*s34*d^2*s14+3*s23*s12*d^2*s13^4-20*s23*s12^2*s14*s13^2+6*s12*d^2*s14*s24*s13^3+12*s12^2*s34^3*d^2*s24-43*s23*s12^2*s34*d*s13^2-s12^4*s34^2*d-5*s23*d*s24^2*s13^3-2*s23*s12*s34^3*d^2*s24-32*s23*s12*s14^3*s13-4*s23^3*s34*d^2*s14^2+36*s23^2*s14^3*s24+10*s24^4*s13^2+12*s23^2*s34*d^2*s14^2*s24+32*s34*s14^2*s24^2*s13-6*s12^3*s34^2*d*s24+14*s23*s12*s24^2*s13^2-48*s23*s12*s34*d^2*s14*s13^2-23*s23*s34*d*s13^4-10*s23*s34^2*d^2*s14*s24^2-16*s23^3*s12*d*s14^2-31*d*s14*s24^2*s13^3+56*s23*s12*d*s14^2*s24*s13+24*s34^3*d^2*s24^2*s13-83*s34*d*s14*s24^2*s13^2+20*s34^4*d^2*s24*s13+68*s23^2*s34^2*s14^2-2*s23*s12*d*s14^2*s24^2-96*s23*s34^2*s14^2*s24-6*s12^2*d*s14^2*s24*s13+12*s12*d^2*s24*s13^4+34*s23*s34*s13^4-2*s34*d*s14^2*s24^3-88*s23*s34*s14*s13^3-12*s23^2*s34*d*s24*s13^2-12*s23*d^2*s14^2*s24*s13^2+9*s12^2*s34*d^2*s14*s13^2-38*s12*s34^3*d*s14*s24-60*s23*s34^2*d^2*s14*s24*s13+108*s12^2*s34^2*s13^2-20*s23*s34*d^2*s14^2*s13^2+98*s12*s14*s24^2*s13^2-174*s12*s34*d*s24^2*s13^2+160*s34^3*s24*s13^2+144*s12*s34^2*s14*s13^2+30*s23*d*s14^2*s24^2*s13+20*s12*s34*d^2*s13^4+16*s23^2*s12*s34*s24*s13-56*s23*s14^3*s24*s13-32*s23^2*s12*s34*s14^2-62*s34^2*d*s14*s13^3+3*s23*s12^2*d^2*s13^3+32*s23^2*s34^2*s14*s13+42*s23*s12^2*d*s14*s13^2-4*s23^2*s14*s24^2*s13+48*s12*s34*d^2*s24*s13^3-4*s23^2*d^2*s14^3*s24+8*s23^3*s12*d*s14*s13-12*s23*s12^2*s14^3+100*s23*s34*d*s14*s13^3+s34^2*d^2*s24^4+24*s23^2*s34*d*s14*s13^2+48*s23*s34*s24*s13^3+s23*s12^2*s34^2*d^2*s24-20*s12^3*d*s13^3+36*s12^2*s34*d^2*s24*s13^2-8*s12^3*d*s14*s24*s13+10*s23*s12^3*d*s14*s13-64*s34*d*s24^3*s13^2+3*s12*d^2*s14*s13^4+4*s23^2*s12^2*s13^2-55*s34^4*d*s13^2+8*s34^3*s24^3-8*s23^3*s12*s34*s14+5*s34^4*d^2*s14*s13+40*s12*s34^4*s13-8*s12^3*s34*d*s14*s24+8*s23^2*s12*s34^2*s24-8*s23^2*s12*s34*d^2*s14*s13+2*s23*s12*s34*d^2*s24*s13^2-6*s23*s34^5+36*s12*s24^3*s13^2-84*s23*s12*s14^2*s13^2-31*s12*s34^2*d*s14*s24^2+8*s23^3*d*s14*s13^2+12*s23^2*s14^2*s24^2+8*s23*s12^2*d*s14^3+12*s12*s34*d^2*s14*s13^3+248*s12*s34*s14*s24*s13^2-25*d*s14*s24*s13^4-24*s23*s34*d*s24*s13^3-180*s34^2*d*s24*s13^3+16*s23^3*d*s14^3-13*s23*s12^2*d*s24*s13^2+6*s34^5*s14+24*s23^2*s34^2*s24*s13+288*s12*s34^2*s24*s13^2+76*s34^3*s14*s13^2+7*s23*s12*s34^2*d*s24^2-32*s23^2*s12*s34*s14*s13+36*s34^2*d^2*s24^2*s13^2-5*s23*s34*d^2*s24^2*s13^2-28*s23*s34^4*s14-12*s12^2*s34^2*d*s24^2+s23*s12^2*s34^3*d^2+40*s12*s34*s24^3*s13-18*s12*s34*d*s14^2*s13^2+36*s23*s34^2*s13^3-18*s23*s34^3*s24^2-2*s34*d*s14*s24^4-20*s23*s34^3*d^2*s14*s24+12*s12*d^2*s24^2*s13^3)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-1)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(-2+d)^(-1)*(4*s23*s24^3*s13^2+24*s23*s12*s14*s24^2*s13-6*s23^2*s34^4-6*s23*s12^3*d^2*s24^2+40*s23*s12*s34^2*s14*s13+12*s23*s34^4*s13+14*s23^2*s12*s34*d*s24^2-2*s23^3*s12^2*s34-16*s23^3*s12*d^2*s14^2+28*s23*s14*s24^2*s13^2-4*s23*s12*s34*d^2*s14*s24*s13-4*s23*s12^4*s34*d^2+60*s23*s34^2*s14*s13^2-3*s23^3*d*s13^3+4*s23*s34*d^2*s13^4-s23*d^2*s14*s24*s13^3+36*s23*s12*s13^4+12*s23^3*s12*s34*s13-6*s23^2*s12*d^2*s24^2*s13-20*s23^2*s12*s24^2*s13-10*s23*s12^2*d*s13^3-2*s23^2*d*s14^2*s24^2+2*s23*s12*s34^2*d^2*s14*s13+s23*s12^4*d^2*s14+30*s23^2*s34^2*d*s24*s13-s23^3*s34^2*d*s24+10*s23^2*s12^3*d*s24+8*s23*s12^2*d*s14^2*s24-32*s23^2*s12^2*s14^2-4*s23*s12^3*s24*s13-6*s23^2*s12^2*s34*d^2*s24+10*s23*s12^4*d*s13+108*s23*s34^2*s24*s13^2-4*s23*d^2*s24^2*s13^3+36*s23*s12^2*s13^3+4*s23^2*s34*d*s14^2*s24+4*s23*s12^4*s14+12*s23^2*s34^2*d*s24^2+4*s23*s34*s24^3*s13-4*s23*s12^3*s34^2*d^2-4*s23*s34^2*d^2*s24^2*s13-8*s23^4*d*s14*s24-31*s23^2*d*s14*s24^2*s13+76*s23*s12*s34^2*s24*s13+72*s23^2*s12*s34*s13^2+20*s23^2*s12^2*d^2*s14*s24-4*s23*s12^2*s34^2*d*s24+4*s23^2*d^2*s14*s24*s13^2+8*s23*s12^3*s14*s13+12*s23*s34*d*s24^3*s13+61*s23^2*s34^2*d*s14*s13-8*s23*s12^2*s34*d*s14*s24-4*s23*s12*s34^2*d^2*s24^2+4*s23*s12*s34*d*s24^3-8*s23*s12*s34^2*d^2*s24*s13-8*s23*s12^2*d*s14*s24*s13-32*s23^2*s12*s14^2*s13+36*s23^2*s34^2*s13^2+s23*d^2*s14*s13^4+6*s23^2*s12^3*s34*d+4*s23^2*s12*d^2*s14^2*s13-s23^3*s12*d*s13^2+8*s23*s12*s34^2*s24^2+20*s23^3*s12*s34*d*s14+4*s23*s12^2*s34^3-16*s23^2*s12^2*s24*s13-2*s23*s12^2*d^2*s14*s13^2-8*s23^2*d*s14^3*s24+3*s23^2*s12^4*d+8*s23^3*s12*d^2*s14*s13+6*s23*d*s24^4*s13+80*s23*s34*s14*s24*s13^2+3*s23*s34*d^2*s14*s13^3-14*s23^2*s34*s14*s24^2+16*s23^4*d*s14^2-8*s23*s34*d*s14^2*s13^2+6*s23^2*s12^3*s14+24*s23^3*s34^2*s14+58*s23^2*s34*d*s14*s24*s13-12*s23*s12^3*s34*d^2*s13+12*s23^4*s14*s24-8*s23^2*s34*s14^3-44*s23^3*d*s14*s24*s13+6*s23^2*s12*d*s24^3-16*s23*s12^3*d^2*s24*s13+8*s23*s12*s34*s14^2*s13-8*s23*s12*s14^2*s24*s13-10*s23^2*s34*d^2*s24*s13^2-4*s23*s12^2*s34^2*s14+68*s23*s12*s24*s13^3+s23*s34^4*d^2*s13-48*s23*s12*s34*d*s14*s13^2+32*s23^2*s12*s34*d*s24*s13-2*s23^2*s12*s34^2*d^2*s13+8*s23*s14*s24^3*s13+16*s23*s34*s14^2*s13^2+8*s23*s14^2*s24*s13^2-3*s23^2*s12^2*d^2*s24^2-16*s23^3*s34*d*s14*s24-4*s23*s12*d*s14*s24^3-27*s23^2*s12*d*s14*s24^2-4*s23^2*s34^3*d^2*s24-24*s23*s34*d*s14*s24*s13^2+12*s23^3*s14^2*s24-4*s23*s34*d*s24^2*s13^2-20*s23^4*s34*s14+18*s23^2*s13^4+12*s23*s12^2*s34*s24^2-2*s23^3*s12^2*s13-2*s23^2*s12^2*s14*s13+6*s23*s34^2*d^2*s13^3-20*s23*s12^2*d^2*s24*s13^2+9*s23^2*s12*s34^2*d*s14+4*s23*s12*s34^3*s24+36*s23^2*s12*s13^3-2*s23^3*s34*s24^2-8*s23*s12^2*s34*d^2*s13^2-8*s23*s12*s34^3*d*s24-48*s23^3*s34*d*s14^2-20*s23*s12*d*s13^4+22*s23^2*s12*s34*d*s14*s13-32*s23*s12*s34*d*s24*s13^2+64*s23*s34*s24^2*s13^2+s23^2*d*s24^4-8*s23^2*s34*d^2*s14*s13^2+2*s23^2*s14*s24^3-s23*s34*d^2*s14*s24^2*s13-s23^2*s12^2*s34^2*d^2-4*s23*s12^3*s34*d*s14+40*s23*s12*s14*s13^3+16*s23^2*d*s14^2*s24*s13+28*s23*s12*s34*s24^2*s13-16*s23*s12^2*s14^2*s24+44*s23*s12^2*s34*s24*s13-12*s23^2*s34^3*s24+14*s23^2*s12^2*s14*s24-6*s23^3*s12^2*s24+36*s23*s12*s34^3*s13+10*s23^2*d*s24^3*s13+26*s23^2*s12^2*d*s14^2+76*s23*s12^2*s34*s13^2+36*s23^2*s34*s24*s13^2-4*s23^3*s14^2*s13-2*s23^2*s24^4-12*s23*s34^3*d*s14*s13-5*s23^2*s34^3*d^2*s13+13*s23^2*s12*d*s14*s13^2-16*s23*s12*d^2*s24^2*s13^2-8*s23*s12^2*s14^2*s13+3*s23*s12^3*d^2*s14*s24-32*s23*s34^3*d*s13^2-34*s23^2*s14*s13^3+4*s23^2*s34*d^2*s14*s24^2-58*s23^2*s12*d*s14*s24*s13+4*s23*s12*s14*s24^3-32*s23^3*s34*s14*s13+10*s23^2*s12*s34*d*s14*s24+2*s23*s12*d*s24^4-11*s23^2*d*s13^4-48*s23*s34^2*d*s24*s13^2-32*s23*s12*s34^3*d*s13-12*s23*s12^2*s34*d^2*s24^2-8*s23^2*s12*s24^3-2*s23^3*s34*d*s24*s13+18*s23^3*s34*s13^2-2*s23^2*s12^2*s34^2*d-12*s23*s12*d*s24*s13^3-12*s23*s12^3*s34*d^2*s24+22*s23^2*s12*d*s24*s13^2+2*s23*s12*d^2*s14*s24^2*s13-20*s23^4*s14*s13-s23^2*s12^4*d^2-2*s23^3*s24^2*s13-90*s23^2*s34*s14*s13^2-16*s23*s34^3*d*s24*s13-30*s23^2*s12^2*s34*s14+8*s23^3*s12*d^2*s14*s24+8*s23^2*d*s14^3*s13+s23*s12*s34^3*d^2*s14+8*s23*s12^3*s34^2+20*s23*s12^2*s34*s14*s13+3*s23*s12^2*d^2*s14*s24^2-4*s23^3*s34*d*s14*s13-4*s23^2*s12^2*d^2*s13^2-20*s23*s12*d*s14*s13^3-3*s23^2*s12*s34^2*d^2*s24+12*s23^3*s34*s24*s13-4*s23*s12*s34*d*s14*s24^2-36*s23*s34^2*d*s14*s13^2+24*s23^2*s24*s13^3-8*s23*s12*d*s14*s24*s13^2-24*s23^3*s12^2*d*s14+21*s23^2*s34^3*d*s14-20*s23^3*s12*s14^2-8*s23*s12*s34*s14^2*s24-12*s23*s12^2*s24^2*s13-16*s23^2*s12*d*s13^3-2*s23*s12^3*s34^2*d-8*s23^2*s12*s34*s24^2+8*s23^3*s34^2*d^2*s14+18*s23^2*s12^2*d^2*s14*s13+8*s23*s14^2*s13^3+10*s23^2*s12^3*d^2*s14-8*s23*s12*d^2*s24^3*s13-26*s23*s12^2*s34^2*d*s13+7*s23^2*s12^2*s34*d*s14-8*s23^3*d*s14^2*s13-108*s23^2*s34*s14*s24*s13+s23^2*s34*d^2*s13^3+8*s23^4*d*s14*s13-20*s23*s12*s34*d^2*s24^2*s13+12*s23*s12^3*s13^2-4*s23*d^2*s24^3*s13^2+16*s23^3*s14*s24*s13-12*s23^2*s34^2*d*s13^2+56*s23^2*s34*d*s14^2*s13+8*s23*s12^4*d*s24-8*s23^2*s34^2*s24^2+3*s23^3*s12*d*s24^2-4*s23^2*s12*d^2*s14^2*s24+108*s23*s12*s34^2*s13^2+40*s23^3*s14^3-32*s23^2*s12*s14^2*s24+18*s23^2*d*s24^2*s13^2-64*s23*s12*s34*d*s13^3+27*s23^2*s34^2*d*s14*s24-3*s23^2*s12^3*s34*d^2+4*s23*s12^3*d*s14^2+36*s23*s24*s13^4+s23^3*s12^3*d-3*s23^2*d^2*s24*s13^3+6*s23*s12*s34^2*d^2*s13^2-16*s23*s12^2*s34*d*s14*s13+48*s23*s12^2*d*s24^2*s13+4*s23^2*s12*s34*d^2*s14^2+12*s23*s12^3*s14*s24-12*s23*s34^2*d*s14*s24*s13+s23^3*d*s24^3+30*s23^2*s34*d*s24^2*s13+3*s23^3*d*s24^2*s13+4*s23*s12^4*s34*d-30*s23^2*s12*s34*d*s13^2-4*s23*s12*s34^2*s14*s24+s23*d^2*s13^5-4*s23*s12*s34^2*d*s14^2-9*s23^2*s12^2*d^2*s24*s13+32*s23*s24^2*s13^3-8*s23*s12^3*d^2*s13^2-2*s23^2*s12^4-8*s23^4*s12*d*s14+4*s23*s12^2*d*s14^2*s13+8*s23^2*s34*d*s14^3-5*s23^2*s12^2*s34*d^2*s13+20*s23*s14*s13^4-s23*s12^2*s34^2*d^2*s14+28*s23*s12^2*s34*d*s24*s13+12*s23^2*s12^3*d*s13-9*s23^3*s34^2*d*s13-2*s23^2*d^2*s14*s13^3-70*s23^2*s14*s24*s13^2-s23*s12*s34^2*d^2*s14*s24+34*s23^2*d*s14^2*s13^2+8*s23*s12^2*d*s24^3-4*s23^3*s12*s34*s24-2*s23^2*s34^2*d^2*s14^2-10*s23^2*s12*s34^2*s14+24*s23*s12^2*s14*s24*s13-8*s23*s12*s14^2*s24^2-3*s23^3*s34^3*d+12*s23^2*s12*s34*d^2*s14*s24-4*s23^3*s12*s24*s13+31*s23^2*d*s14*s24*s13^2-4*s23*s12^4*d^2*s24-72*s23^2*s14^2*s13^2-12*s23^3*d*s14*s24^2+36*s23^2*s12*s34^2*s13-8*s23*s12*d^2*s24*s13^3-3*s23^2*s34^2*d^2*s13^2+8*s23^2*s12^2*s34*d^2*s14+34*s23*s12*d*s24^2*s13^2-26*s23^2*s34*d*s13^3+32*s23*s34^2*s24^2*s13-12*s23^2*s12^2*s24^2+s23*s12^2*d^2*s14*s24*s13-12*s23*s12^3*d*s14*s24+20*s23*s12^3*s34*s13+3*s23^2*s34*d*s14*s24^2-21*s23^2*s12^3*d*s14-28*s23^3*s34^2*d*s14-4*s23*s12^2*s34^2*d^2*s13+s23*s34^3*d^2*s14*s13+48*s23*s34^3*s13^2-42*s23^2*s12*s14*s13^2-4*s23*s24^4*s13+6*s23^2*s12*d^2*s14*s13^2-44*s23^2*s12*s34*s14*s24-72*s23*s12*s34^2*d*s13^2+4*s23*s12*s34*d^2*s13^3+14*s23^2*d^2*s14*s24^2*s13-8*s23*s12^2*s34^3*d-s23^2*d^2*s24^3*s13-8*s23*d*s13^5+6*s23^3*s12*s34^2+10*s23*s12^3*d*s13^2+8*s23*s34^2*s14^2*s13-4*s23*s12*d*s14^2*s13^2-s23^2*s12*s34*d^2*s13^2+6*s23^3*s13^3+8*s23^3*s34*d^2*s14*s13+52*s23*s12*s14*s24*s13^2-s23*s12*s34*d^2*s14*s24^2-16*s23^3*s12*s14*s13+3*s23*s34^2*d^2*s14*s13^2+22*s23^2*s34^2*d*s14^2-36*s23^3*s12*d*s14*s24-8*s23*s12^3*s14^2-4*s23*s12^2*d^2*s24^3-12*s23*s12^2*d*s14*s24^2-38*s23^2*s34^2*s14*s24-9*s23^2*s12*d^2*s24*s13^2-8*s23*s12^2*s34^2*d*s14+8*s23*s34*s14^2*s24*s13-4*s23^2*s12^3*d^2*s13-12*s23*d*s14*s24*s13^3-16*s23*s12*s34*d*s14*s24*s13+16*s23^2*s12*s24*s13^2+2*s23^2*s12^2*s34*d*s13+3*s23^3*s12^2*d*s13+16*s23*s12^2*s34^2*s24+10*s23^2*s34^3*d*s13-3*s23*s12^2*s34*d^2*s14*s13-2*s23^2*d*s24*s13^3-8*s23^2*s12*d*s14^3+108*s23*s12*s34*s13^3-18*s23*s12^2*d^2*s24^2*s13+6*s23^3*s12*s13^2-4*s23^2*s34*s24^3-2*s23^2*s12^2*d^2*s14^2+24*s23^2*s12*d*s14^2*s24+6*s23^3*s34^3-5*s23^2*d^2*s24^2*s13^2+4*s23^2*d^2*s14^2*s24*s13+16*s23^3*s14*s24^2+4*s23*s12*s34^3*d^2*s13+12*s23*d*s24^3*s13^2+12*s23*s12^2*s34*d*s24^2-4*s23^2*s34*d^2*s14^2*s13-2*s23*s34*d^2*s14*s24*s13^2+24*s23^2*s12^2*s34*s13-24*s23^2*s14^3*s13+140*s23*s12*s34*s24*s13^2+12*s23*s12^2*s14*s24^2-s23*s12*d^2*s24^4+s23^2*d^2*s13^4-s23^2*s12*s34^3*d^2+6*s23^3*s12*s34*d*s24-27*s23^2*s12^2*d*s14*s13+4*s23*s34^3*d^2*s13^2+28*s23*s12*d*s24^3*s13+8*s23^4*s34*d*s14+6*s23^3*s34^2*s24-8*s23^2*s12^3*s24+32*s23*s12*s34*d*s24^2*s13-2*s23^2*d^2*s14^2*s13^2+16*s23^3*d^2*s14*s24*s13-8*s23*s12*s34^2*d*s14*s24-16*s23^2*s34*s14^2*s24+3*s23^3*s34*d*s24^2+60*s23^3*s34*s14^2-8*s23*s12*s34^3*d*s14+28*s23*s34*s14*s24^2*s13+12*s23*s12^3*s34*d*s24+19*s23^2*d*s14*s13^3-28*s23*s12^2*s34*d^2*s24*s13-4*s23*s12*s34^4*d-8*s23*s12*s34*d*s14^2*s13+34*s23^2*s12^2*d*s24*s13-4*s23^2*s34^3*d^2*s14+8*s23^3*s12^2*d^2*s14+80*s23*s12*s34*s14*s13^2-2*s23^2*s34^4*d^2+10*s23^2*s12*s34^2*d*s24-8*s23^4*s14^2+48*s23*s12*s34*s14*s24*s13-8*s23*s12^2*s34*s14^2-s23*s12^5*d^2+4*s23^2*s12^2*d*s13^2+4*s23^2*s34*d^2*s14*s24*s13-8*s23^2*s24^3*s13-7*s23^2*s34*d^2*s24^2*s13-11*s23^2*s34^2*d^2*s24*s13+8*s23*s12^3*s34*d*s13-3*s23^2*d*s14*s24^3+8*s23^2*s12^2*s34^2-8*s23^4*d^2*s14^2+20*s23*s34^3*s14*s13+12*s23*s13^5-16*s23*d*s24*s13^4-3*s23*s12*d^2*s14*s24*s13^2+3*s23^3*s12^2*s34*d-64*s23^2*s14^2*s24*s13-9*s23^3*s34*d*s13^2+24*s23^2*s12*s14^3+32*s23^2*s12*d*s24^2*s13-36*s23*s12*s34^2*d*s14*s13-2*s23^2*d^2*s14^2*s24^2-96*s23^2*s34*s14^2*s13+6*s23^3*s24*s13^2-12*s23*s12*s24^3*s13+12*s23^2*s12^2*d*s24^2-4*s23*d*s14^2*s13^3-4*s23*s12*d*s14*s24^2*s13+40*s23*s34^2*s14*s24*s13-12*s23^2*s12*s34^2*d*s13-8*s23*s34^4*d*s13+28*s23*s12^2*s24*s13^2+16*s23^3*s12^2*s14-22*s23^2*s34^3*s14+s23*s12*s34^4*d^2-s23*d^2*s14*s24^2*s13^2+2*s23*s12^5*d-4*s23*s34^2*d*s14^2*s13+40*s23*s14*s24*s13^3-s23^2*s12*d^2*s24^3+7*s23^2*s34^4*d-28*s23*s12*s34^2*d*s24*s13-2*s23^3*s12^3-56*s23^3*s14*s13^2-48*s23*s34^2*d*s13^3-8*s23^2*s34*s24^2*s13+2*s23^2*s12*s34^2*d^2*s14-12*s23*d*s14*s13^4+32*s23^2*s12*d^2*s14*s24*s13+12*s23^2*s12*d*s14^2*s13+36*s23*s34^3*s24*s13+12*s23^2*s12*s14*s24*s13+4*s23*s12*s34*s24^3-6*s23^3*s12*s24^2+48*s23^2*s34*s13^3-4*s23*s34*d^2*s24^3*s13-10*s23^2*s34^2*d^2*s14*s13+16*s23^2*s34^3*d*s24+3*s23^3*s12^2*d*s24+44*s23*s12^2*s34^2*s13-2*s23*s12^2*s34*d^2*s14*s24+2*s23^2*s12*s34^3*d-8*s23^3*d^2*s14^2*s24-2*s23*s34^2*d*s24^2*s13-45*s23^2*s12^2*d*s14*s24-s23*s12^3*s34*d^2*s14+18*s23^3*s34^2*s13-4*s23^2*s12^3*s13+s23*s12*d^2*s13^4+24*s23*s12^2*s14*s13^2+4*s23*s12^4*s34-2*s23^3*s12*s34*d*s13-28*s23*s12^2*s34*d*s13^2-2*s23*d*s24^2*s13^3+12*s23^4*s12*s14+8*s23^3*s34*d^2*s14^2-4*s23^2*s12^2*s34*s24+8*s23^2*s14^3*s24+4*s23^2*s34*d^2*s14^2*s24+20*s23*s12*s24^2*s13^2+s23*s12*s34*d^2*s14*s13^2-12*s23^2*s12*s34*d^2*s24*s13-32*s23*s34*d*s13^4+32*s23^3*s12*s14*s24-s23^3*d*s24*s13^2+40*s23^3*s12*d*s14^2+8*s23^3*s34*d^2*s14*s24-2*s23^3*s24^3+8*s23*s12*d*s14^2*s24*s13+s23*s12*d^2*s14*s24^3-24*s23^2*s34^2*s14^2+s23*d^2*s14*s24^3*s13+4*s23*s12*d*s14^2*s24^2-3*s23^2*s12*s34*d^2*s24^2+48*s23*s34*s13^4+36*s23*s12^3*d*s24*s13+60*s23*s34*s14*s13^3+12*s23^2*s34*d*s24*s13^2+12*s23*s12^3*d*s24^2-s23*s34^2*d^2*s14*s24*s13+16*s23^2*s12^2*s34*d*s24+4*s23*d*s14^2*s24^2*s13+16*s23^2*s12*s34*s24*s13-3*s23^2*s12^3*d^2*s24+16*s23^2*s12*s34*s14^2-4*s23*s12^2*d^2*s13^3-4*s23*s12^4*d*s14-78*s23^2*s34^2*s14*s13-8*s23*s12^2*d*s14*s13^2-s23*d^2*s24^4*s13+14*s23^2*s14*s24^2*s13-s23^3*s12*s34^2*d-8*s23^3*s12*d*s14*s13-36*s23*s34*d*s14*s13^3+12*s23*s12^3*s34*s24+59*s23^2*s34*d*s14*s13^2+108*s23*s34*s24*s13^3-8*s23*s12^2*s34^2*d^2*s24+4*s23^2*s34*d*s24^3-4*s23*s12^3*d*s14*s13+16*s23^2*s12^2*s13^2-32*s23^3*s12*s34*s14-2*s23^2*s34^2*d^2*s24^2+8*s23^2*s12*s34*d^2*s14*s13-16*s23*s12*s34*d^2*s24*s13^2+8*s23*s12*s14^2*s13^2+24*s23^3*d*s14*s13^2-5*s23*s12^4*d^2*s13+6*s23^3*s12*d*s24*s13-48*s23*s34*d*s24*s13^3-4*s23*s12*s34*d^2*s24^3-24*s23^3*d*s14^3+32*s23*s12^2*d*s24*s13^2+10*s23^2*s12*d^2*s14*s24^2-2*s23*s12*s34^2*d*s24^2-52*s23^2*s12*s34*s14*s13-8*s23*s34*d^2*s24^2*s13^2+72*s23*s34^2*s13^3+10*s23^2*s12*s14*s24^2)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)),

INT["pentagon1x123",3,21,4,3,{1,-1,1,-2,2}] -> 
  INT["pentagon1x123",3,21,4,3,{1,-1,2,-2,1}] *
      (-1) +
  INT["pentagon1x123",3,21,4,3,{2,-1,1,-2,1}] *
      (-1) +
  INT["pentagon1x123",3,21,3,2,{1,0,1,-2,1}] *
      (1) +
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (1/2*(56*s23*s34*s14^2*s13^3+8*s23*d^2*s14^2*s24^2*s13^2-6*s12^2*s34*d^2*s14^2*s13^2+140*s23*s12*s34*d*s14*s13^3+6*s23^2*s34^3*d*s14*s24+4*s23*s34^2*d*s14*s24*s13^2+6*s12^5*d*s14*s13-34*s12^2*d*s14^2*s24^2*s13+88*s23*s14^2*s24*s13^3+4*s23^3*s34*d^2*s14^2*s24-8*s23*s12*s34*s14^3*s24-17*s12*s34*d^2*s14*s13^4-8*s23^4*s12*d*s14^2-32*s34*s14*s24^3*s13^2-96*s23*s12*d*s14^2*s24^2*s13-2*s23*s12*d^2*s14^2*s24^3+4*s23*s12*d^2*s14^3*s13^2+32*s23*s34^2*s14^2*s24*s13-24*s23^3*d*s14^4+152*s12^2*s34*d*s14*s13^3+34*s23*s12*s34*d^2*s14^2*s13^2+s12^2*d^2*s14^2*s24^3+16*s23^3*s12*s14^2*s24+44*s23^2*s12^2*s34*d*s14*s13-3*s12^2*s34^2*d^2*s14*s24^2-68*s23^3*s12*d*s14^2*s13+40*s23*s12^3*s34*s14^2+34*s23*s12*d^2*s14^2*s24*s13^2+8*s23*s12^2*s34^2*d^2*s14^2-56*s23*s34*d*s14^2*s13^3+24*s23^4*d*s14^3+2*s23*s12*d^2*s14*s24^3*s13+18*s34^2*d*s14^2*s13^3-80*s12^3*s14*s13^3+24*s23^2*s34^2*s14^2*s13-132*s23*s12^2*d*s14^2*s13^2+8*s12*s34^2*d*s14^2*s24*s13-2*s23*s12^3*s34*d^2*s14*s24-40*s12*s34^2*s14^2*s13^2-216*s23*s12^2*s14*s24*s13^2-12*s23*s12^2*d^2*s14*s13^3-96*s34^2*s14*s24*s13^3-s23^2*s12^3*d^2*s14*s13+24*s23^2*s12*s34^2*s14^2+8*s12*s14^2*s24^3*s13-s12^2*d^2*s14*s24^3*s13+12*s23*s12^2*s34*d*s14^3+6*s23*s34^2*d^2*s14*s24^2*s13-4*s23*d*s14*s24^3*s13^2-144*s23*s34*s14*s24*s13^3+6*s23*s12*s34^2*d^2*s14*s24^2+6*s12^2*d^2*s14^2*s24*s13^2+10*s23^2*s12^3*s34*d*s14-2*s23*d^2*s14*s13^5-8*s34^4*s14*s13^2-8*s23^3*s12*s14*s24*s13+6*s23^2*s12*s34*d^2*s14^2*s13+36*s34^2*d*s14*s13^4-40*s23^3*d*s14^2*s13^2-18*s23^2*s12^2*s34*d*s14^2-56*s23^2*s34*s14*s24*s13^2-20*s23^2*d^2*s14^3*s24*s13+6*s23*s12*s34^3*d^2*s14*s24-72*s23*s12^3*s14*s24*s13-32*s23*s12^2*s14^3*s13+8*s23^2*s12^2*s34*s14*s24+44*s23*s34*d*s14*s13^4+8*s23^3*s12*s34^2*s14-3*s23^2*s12^2*d^2*s14*s13^2-20*s12^3*s34*d*s14^2*s24+2*s23^3*s34^2*d^2*s14^2+5*s23^2*s12^3*d^2*s14^2+30*s12^3*d*s14*s24^2*s13-2*s23^2*s34^2*d*s14*s24*s13-36*s23^3*s34*d*s14^3-92*s23*s12^3*d*s14^2*s13-3*s12*d^2*s14^2*s13^4+16*s23*s12^4*d*s14*s13-8*s23^3*s14*s24*s13^2-3*s12^2*s34^3*d^2*s14*s24-66*s23^2*s34*d*s14^2*s13^2+4*s23^2*d^2*s14^4*s24-2*s23*s12^3*s34^2*d^2*s14-12*s12^3*d^2*s14*s24*s13^2-2*s12^3*s34^2*d*s14^2+240*s23^2*s12*s14^2*s24*s13+24*s23^2*s12*s14^2*s24^2+2*s23^2*s12*s34^2*d^2*s14*s24+54*s12^3*s34^2*d*s14*s13-5*s23^2*s12*d^2*s14^2*s24^2-72*s23*s34*s14*s13^4-8*s34^3*s14^2*s13^2+66*s34^2*d*s14*s24*s13^3+144*s23^2*s12*s34*s14^2*s13+28*s12*s34^3*d*s14*s24*s13+56*s23*s34*d*s14*s24*s13^3-8*s12*s34*d^2*s14^2*s13^3-192*s12*s34*s14*s24^2*s13^2+2*s23^2*s12*d^2*s14^2*s24*s13+156*s23*s12^2*s34*d*s14*s13^2+30*d*s14*s24^2*s13^4-72*s23^3*s14^3*s13+6*s23^2*s34^2*d*s14*s24^2-18*s12^4*d*s14^2*s24-d^2*s14*s24^3*s13^3-56*s23*s12*s34^2*d*s14^2*s13-12*s12*d^2*s14*s24*s13^4-96*s12^2*s34^2*s14*s24*s13+36*s12*s34^2*d*s14*s24^2*s13-11*s12*s34^3*d^2*s14*s13^2-s34*d^2*s14*s24^3*s13^2+4*s23*s12*d^2*s14*s24^2*s13^2+24*s23^2*s14^2*s24^2*s13+24*s23*s12^2*d*s14^3*s13-104*s23^2*s12^2*s14^3+8*s23*s34^3*s14^2*s13+10*s23*s34^2*d^2*s14^2*s24*s13-s12^2*s34^3*d^2*s14^2-9*s12^2*d^2*s14*s24^2*s13^2+8*s12*s14^2*s24^2*s13^2+8*s23^2*s12*s34^3*s14-216*s23*s12^2*s34*s14*s13^2+6*s23*s12*s34^3*d^2*s14^2-8*s23^3*s12*s34*s14*s13+84*s12^3*s34*d*s14*s24*s13-72*s23*s12*s34^2*s14*s24*s13+24*s23^2*s12^2*s34*s14^2+14*s12^2*s34^2*d*s14^2*s13+24*s23^2*d*s14^3*s13^2+2*s23^2*d*s14^2*s24^3-2*s23*d^2*s14^2*s24^3*s13-72*s23*s14*s24^2*s13^3-8*s23^3*s12*d^2*s14^3+8*s23*s34*s14^3*s24*s13-72*s23*s34^2*s14*s13^3-s12^5*s34*d^2*s14+8*s23*s12^2*s34^3*d*s14+4*s23^3*s34*d*s14*s13^2+8*s12^2*s14^2*s24^3+16*s23*s12*s34*s14^2*s24^2-24*s12*s34^2*d^2*s14*s24*s13^2+2*d*s14^2*s24^2*s13^3-28*s23^3*s12^2*d*s14^2+8*s23*s12*s34*d^2*s14^3*s13+6*s23^2*s34^3*d*s14^2+30*s12*d*s14*s13^5+2*s34*d*s14^2*s24^2*s13^2+16*s12^2*s34*s14^2*s24^2-7*s23^2*s34^2*d^2*s14^2*s13-4*s23^3*s34^3*d*s14+2*s12^3*d^2*s14^2*s13^2-5*s12^4*d^2*s14*s13^2+32*s12^3*s34*s14^2*s24-64*s23^2*s12*s14^3*s24-16*s23^2*s12*s34^2*s14*s13+8*s23*s12^2*s34*d^2*s14^2*s24-32*s23^2*s12*s14*s24^2*s13-8*s23^2*s12*d^2*s14^3*s24-10*s12^4*s34*d*s14^2-30*s12*s34*d^2*s14*s24*s13^3-72*s23*s14*s24*s13^4+6*s23*s34^3*d^2*s14*s24*s13+10*d*s14^2*s24*s13^4-20*s23*d*s14^2*s13^4+s23^2*s12*d^2*s14*s24^2*s13-32*s12*s34*s14^2*s24*s13^2+14*s23*s12*s34^2*d^2*s14*s24*s13+s23^2*d^2*s14*s24*s13^3-32*s12*s34*s14*s24^3*s13+4*s23*s34^3*d*s14*s13^2+24*s12^4*s14^2*s24+60*s12^3*d*s14*s13^3+88*s23^3*s14^2*s13^2-4*s23*s12^2*s34^2*d^2*s14*s13+6*s12^4*s34*d*s14*s24+28*s23^2*s12*d*s14*s24*s13^2-8*s12*s14*s24^4*s13+60*s23^3*d*s14^3*s13+16*s23^2*s12*s14^4-8*s23*s34*d*s14^3*s24*s13+168*s23*s12^2*s14^2*s13^2-9*s12*d^2*s14*s24^2*s13^3-72*s23*s12^3*s34*s14*s13-21*s12^2*s34^2*d^2*s14*s24*s13+32*s23*s14^3*s13^3-3*s12^3*s34^3*d^2*s14-38*s23^2*s12^2*d*s14^2*s24-22*s12^3*s34*d^2*s14*s13^2-2*s23*s12^4*s34*d^2*s14-44*s12^3*d*s14^2*s24*s13+40*s23^2*s34*d*s14^3*s13-8*s23^3*s34*s14*s13^2-32*s14*s24^3*s13^3+2*s23^2*s12*s34*d*s14*s24^2+22*s12^4*d*s14*s24*s13-24*s23^4*s34*s14^2-80*s12^2*s14*s13^4-11*s23^2*d^2*s14^2*s24^2*s13+24*s23*s12^3*d*s14^3+24*s12^4*s14^2*s13-14*s12*d*s14^2*s24^2*s13^2+2*s12^2*s34^4*d*s14-4*s23^2*s12*s34*d^2*s14^3+56*s12^3*s14^2*s24*s13-14*s23^2*s12*s34^2*d*s14^2-20*s23^2*s12*d^2*s14^3*s13-72*s23^2*s12^2*s14*s13^2-32*s34*s14*s13^5+2*s12*s34*d^2*s14^2*s24^2*s13+3*s12^3*d^2*s14^2*s24^2-9*s23^2*s34^2*d^2*s14^2*s24+16*s23^2*s12*s34^2*s14*s24+26*s23*s12^2*s34*d^2*s14^2*s13-32*s12^4*s34*s14*s13-104*s23^2*s12*s14^3*s13+24*s12^3*s34*s14^2*s13-3*s34^2*d^2*s14*s24^2*s13^2+12*s23^2*s34*d*s14^3*s24+20*s12*s34*d*s14*s24^3*s13+s23^2*s12^2*s34^2*d^2*s14-s23^2*s34^4*d^2*s14+26*s23*s12^2*d^2*s14^2*s24*s13+58*s23^2*s12*s34*d*s14*s13^2+8*s23^3*s34*s14*s24^2+6*s34^3*d*s14^2*s13^2+20*s12*s34*d*s14^2*s24*s13^2-134*s23^2*s12^2*d*s14^2*s13-3*s12^3*s34*d^2*s14*s24^2+6*s34^4*d*s14*s13^2+14*s23^2*d*s14*s13^4-2*s12*d^2*s14*s24^3*s13^2-8*s23*s12^3*d^2*s14*s13^2+48*s23*s12^2*s14^2*s24^2-86*s23^2*d*s14^2*s24*s13^2-48*s23^2*s12^2*s14*s24*s13-32*s34^3*s14*s24*s13^2-4*s34^3*d^2*s14*s13^3-9*s34*d^2*s14*s24*s13^4-24*s23*s12^3*s34*d*s14^2+4*s23*s12^2*s34^2*d^2*s14*s24+32*s12^4*s34*d*s14*s13-2*s23^2*d*s14*s24^3*s13+8*s23*s34*d^2*s14*s24^2*s13^2+4*s23^3*d*s14^3*s24+8*s23^3*s12*s34*s14*s24-16*s23^2*s14^4*s13-58*s23^2*d*s14^2*s13^3+4*s23^2*d*s14^3*s24^2-2*s12^2*s34^2*d*s14^2*s24-80*s23*d*s14^2*s24*s13^3+4*s23^3*s12*s34*d*s14^2-8*s23^2*s34^2*d^2*s14^3-152*s23*s12*s34*d*s14^2*s24*s13+16*s23^2*s12*s34*d*s14*s24*s13+24*s23*s12*d*s14^3*s24*s13-4*s34*d^2*s14*s13^5+24*s23^3*s34^2*s14^2+36*s23*s12^2*d*s14^3*s24+48*s23^2*s12^3*s14^2+6*s23^2*s34*d*s14*s24*s13^2-48*s23^2*s14*s24*s13^3-8*s23*s12*s34^2*d*s14^2*s24-6*s34*d^2*s14*s24^2*s13^3-2*d*s14^2*s24^3*s13^2+8*s23*s12^2*s34^2*s14^2-72*s23*s12*s34*s14*s24^2*s13-32*s12^2*s14*s24^3*s13-32*s34*s14^2*s24*s13^3+248*s23*s12*s14^2*s24*s13^2-24*s12^2*s34*s14^2*s13^2-2*s23^2*s34*d^2*s14*s24^2*s13+4*s23*s34^2*d^2*s14^3*s13+152*s23*s12*s34*s14^2*s13^2-16*s12^2*s14^2*s13^3+24*s12^2*s14^2*s24*s13^2-24*s23*s12*s14*s24^3*s13-4*s23*s12*s34^2*d*s14^3-8*s23^3*s12^2*s14*s13+4*s23*d*s14^3*s24^2*s13-64*s12*s34^3*s14*s13^2-20*s12^2*s34*d*s14^2*s24*s13-4*s23^3*s34*d*s14*s24^2-2*s23*s12^3*d^2*s14*s24*s13-20*s23^2*s12*d*s14^4+4*s23*d^2*s14^3*s13^3-24*s23*s14*s24^3*s13^2-96*s12^2*s34*s14*s24^2*s13+4*s12*d*s14*s24^4*s13+10*s23^2*s34*d*s14^2*s24^2+32*s23*s12^4*s14^2-10*s12^2*s34^3*d^2*s14*s13+126*s12*s34*d*s14*s24^2*s13^2-192*s12*s34^2*s14*s24*s13^2-21*s12*s34^2*d^2*s14*s13^3-4*s23^2*d^2*s14^4*s13+36*s23*d*s14*s24*s13^4-96*s12^3*s34*s14*s24*s13-s34^2*d^2*s14^2*s24*s13^2-48*s23*s12^3*d*s14^2*s24-2*s23*s12^2*s34*d^2*s14*s24*s13-4*s23^2*s34*d^2*s14^4+2*s23*s12^2*d^2*s14*s24^2*s13-48*s23^2*s12^2*s34*s14*s13-40*s23*s12^2*s14^3*s24+24*s23*s34*d^2*s14^2*s24*s13^2-12*s12^3*s34*d*s14^2*s13+8*s12^5*s14^2+34*s12*s34^2*d*s14^2*s13^2-6*s23^2*s12*s34*d^2*s14^2*s24+6*s23*s12*s34^3*d^2*s14*s13+s23^2*s12*s34^3*d^2*s14-s23^2*s34*d^2*s14*s24^3+4*s23^3*d*s14^2*s24^2+2*s23*s34*d^2*s14*s24^3*s13-2*s23^2*d*s14*s24^2*s13^2+8*s23*s12^2*s34*d*s14*s24^2+6*d*s14^2*s13^5-96*s34*s14*s24*s13^4-18*s12^4*d*s14^2*s13-40*s23*s34*d*s14^2*s24^2*s13-8*s23*s12*d^2*s14*s13^4+8*s23^2*s34^2*d*s14*s13^2-24*s23^3*s14^3*s24-10*s12^2*d^2*s14*s13^4-96*s23*s12^3*s14*s13^2-24*s12*s14^2*s13^4-8*s12*d*s14^2*s24^3*s13-24*s23*s14*s13^5-3*s12^4*s34^2*d^2*s14+42*s23^2*s12*d*s14*s13^3+12*s12^3*s34^2*d*s14*s24+19*s23^2*s12*d^2*s14^2*s13^2-48*s12^3*s34^2*s14*s13+4*d*s14*s24^4*s13^2+48*s23^2*s12*s34*s14^2*s24-32*s12^4*s14*s24*s13-48*s12^3*s14*s24^2*s13+68*s23^2*s12^2*d*s14^3+6*s23*s34^3*d^2*s14^2*s13-32*s14*s24*s13^5+3*s23^2*s12*s34^2*d^2*s14*s13+2*s23*s34^4*d^2*s14*s13+108*s23*s12^2*d*s14*s24*s13^2+18*s34*d*s14^2*s13^4+240*s23^2*s12*s14^2*s13^2-2*s12^2*d^2*s14^2*s13^3+2*s23*s12*s34*d^2*s14^2*s24^2-144*s23*s12*s34^2*s14*s13^2-144*s12^2*s14*s24^2*s13^2-3*d^2*s14*s24*s13^5+108*s23*s12*d*s14*s24*s13^3-d^2*s14*s13^6+2*s12^2*s34*d*s14*s24^3+120*s23^3*s12*s14^2*s13+16*s23*s34^2*d^2*s14^2*s13^2-96*s34*s14*s24^2*s13^3+s12^5*d^2*s14^2-88*s23^2*s14^3*s24*s13+176*s23*s12*s34*s14^2*s24*s13+24*s23*s12*s34*s14^3*s13-4*s23^3*s34*d^2*s14^2*s13-120*s23^3*s12*s14^3-18*s23^2*s34*d^2*s14^2*s24*s13-4*s23*s12*d^2*s14^3*s24^2+16*s23*s12*d^2*s14^2*s13^3-144*s23*s12*s14*s24^2*s13^2-144*s12^2*s34^2*s14*s13^2+2*s23*s12*s34*d^2*s14*s24*s13^2+32*s12^2*s34*s14^2*s24*s13-3*s34^3*d^2*s14*s24*s13^2+72*s12^2*s34*d*s14*s24^2*s13+40*s23*s34*s14^3*s13^2+36*s23*s34^2*d*s14*s13^3+132*s12^2*d*s14*s24*s13^3+4*s23^3*s12^2*d*s14*s13+s12^2*s34*d^2*s14^2*s24^2+8*s12*s34^4*d*s14*s13+8*s12*s34^3*d*s14^2*s13+20*s23*d*s14*s24^2*s13^3+4*s23*s12*s34*d*s14*s24^2*s13+14*s23^2*s12^2*d*s14*s24*s13-2*s23*s12*s34^2*d^2*s14*s13^2+4*s23*s12^4*d^2*s14^2-36*s12^2*s34*d^2*s14*s24*s13^2+40*s23*s34*s14^2*s24^2*s13-10*s23*s12^3*s34*d^2*s14*s13-4*s23^3*d^2*s14^2*s24*s13+8*s23^3*s34^3*s14-24*s23*s12^2*d*s14^2*s24^2-2*s34*d^2*s14^2*s24*s13^3-27*s12^2*s34^2*d^2*s14*s13^2+10*s23^2*s12^2*s34*d*s14*s24-36*s23*s34*d*s14^3*s13^2-8*s14*s13^6-48*s23^2*s34*s14*s13^3-32*s12*s34^3*s14*s24*s13+64*s23*s12^3*d*s14*s13^2+8*s23^3*s34^2*s14*s13-24*s23^2*s12^3*s14*s13+88*s12^3*d*s14*s24*s13^2+2*s23^2*s12*s34^3*d*s14-24*s34^2*s14^2*s13^3+24*s34^3*d*s14*s13^3-8*s12^4*s34*d^2*s14*s13+16*s23*s12^2*s34^2*d*s14*s24+8*s23^3*d^2*s14^3*s24-9*s34^2*d^2*s14*s24*s13^3+2*s23*s34*d^2*s14*s24*s13^3-8*s23^4*d*s14^2*s13-4*s23^2*s34*d^2*s14^3*s24-4*s23*d*s14*s24^4*s13-16*s23^2*s34*s14*s24^2*s13-s23^2*s12*s34*d^2*s14*s13^2-6*s12*s34^3*d^2*s14*s24*s13+4*s23^2*s34*d*s14^4-24*s23^3*s12*s34*s14^2-s34^4*d^2*s14*s13^2-s34^3*d^2*s14^2*s13^2+6*s12^3*s34*d*s14*s24^2+17*s23^2*s12^2*d^2*s14^2*s13-s23^2*d^2*s14*s13^4-124*s23^2*s12*d*s14^2*s24*s13-3*d^2*s14*s24^2*s13^4+92*s23^2*s12*d*s14^3*s13-12*s23^2*s12^2*d^2*s14^3+100*s23^2*d*s14^3*s24*s13+72*s23*s12^3*s14^2*s24+12*s12*d*s14^2*s24*s13^3-18*s12^3*d*s14^2*s24^2+14*s23^2*s34^2*d*s14^2*s24-104*s23*s12^2*s34*d*s14^2*s13-144*s23*s12^2*s34*s14*s24*s13-3*s12^3*d^2*s14*s24^2*s13+8*s23^3*s12*s34*d*s14*s13+6*s12^4*s34^2*d*s14-s23^2*s34^2*d^2*s14*s24*s13-96*s23^2*s12*s34*s14*s13^2-48*s23^4*s14^3+8*s12^2*s34^2*s14^2*s24-216*s23*s12*s34*s14*s13^3-8*s23^3*s34*d*s14*s24*s13-208*s23*s12*d*s14^2*s24*s13^2-2*s12*s34^2*d^2*s14^2*s24*s13-192*s12^2*s34*s14*s13^3-8*s34*s14^2*s24^2*s13^2-4*s23*s12*d*s14*s24^3*s13-24*s23*d*s14^3*s13^3-16*s23*s12^2*s34*s14^3+8*s23*s12*s34^2*s14^2*s24-6*s12^5*d*s14^2+18*s12^2*d*s14*s24^3*s13+8*s23*s12*s34*d*s14^3*s24-12*s23*s34^2*d*s14^3*s13+16*s23^3*s14^4-24*s12^2*d*s14^2*s24*s13^2+2*s23*d^2*s14*s24^3*s13^2-24*s23*s34^2*d*s14*s24^2*s13+24*s34*d*s14*s13^5+16*s23*s14^3*s24*s13^2-48*s14*s24^2*s13^4-8*s23*s12^2*d^2*s14^3*s24-72*s23*d*s14^2*s24^2*s13^2-72*s23*s12^2*s14*s24^2*s13+7*s12^2*d^2*s14^2*s24^2*s13+10*s23*s12*s34^2*d^2*s14^2*s24-72*s23*s12^2*s34^2*s14*s13-48*s34^2*s14*s13^4+10*s23*s34^2*d^2*s14*s24*s13^2+24*s23*s14^2*s13^4-24*s23*s12*s14^3*s24*s13-16*s23^2*s34*s14^3*s13-40*s12*s14*s13^5+8*s23*s12*d^2*s14^2*s24^2*s13+4*s23^2*d^2*s14^3*s24^2+7*s23^2*d^2*s14^2*s13^3-32*s23^2*s14*s24^2*s13^2+8*s23^3*s12*d*s14*s13^2-s12^2*s34^2*d^2*s14^2*s24-24*s23^2*s34^2*s14*s13^2+24*s23^3*s34*s14^3-24*s23*s12^4*d*s14^2-154*s23^2*s12*d*s14^2*s13^2-6*s12^3*s34^2*d^2*s14*s24+8*s12*s34*s14^2*s24^2*s13+2*s23^2*s12*d^2*s14*s24*s13^2-s23^2*s12*s34^2*d^2*s14^2+90*s12^2*s34^2*d*s14*s24*s13-4*s23*s34^4*d*s14*s13-3*s34*d^2*s14^2*s13^4-16*s23*s34^3*d*s14^2*s13+90*s12*d*s14*s24^2*s13^3+8*s12^3*s34^2*s14^2+18*s23^2*s12*s34^2*d*s14*s13-72*s23^2*s12*s14*s13^3+2*s23*s12^2*s34*d^2*s14*s24^2-d^2*s14^2*s13^5-s12^2*s34^4*d^2*s14+2*s23^2*s34^2*d^2*s14*s13^2-12*s23^2*s12*s34*d*s14^3+3*s12^4*d^2*s14^2*s13+64*s23*s12*d*s14*s13^4+60*s12^2*d*s14*s13^4+2*s23*s12*s34^4*d^2*s14-3*s12^4*d^2*s14*s24*s13+72*s23^2*s12^2*s14^2*s24-4*s23*s12^3*d^2*s14^3-3*s23^2*s12*d^2*s14*s13^3-96*s23^2*s12*s14*s24*s13^2+8*s12^3*d^2*s14^2*s24*s13+6*s23*s12^3*s34*d^2*s14^2-8*s14^2*s24^2*s13^3+72*s23^3*s14^2*s24*s13-12*s23^2*s12*s34*d*s14^2*s24+32*s23^3*s34*s14^2*s13-16*s23*s34^3*d*s14*s24*s13-7*s12*s34^2*d^2*s14^2*s13^2+204*s12*s34*d*s14*s24*s13^3+2*s23^3*d^2*s14^2*s24^2-8*s14^2*s13^5+12*s23*s12*s34^3*d*s14*s13+2*s23^2*s34*d*s14*s24^3+96*s23^2*s14^2*s13^3+14*s23^2*d*s14*s24*s13^3-8*s23^2*s14^3*s24^2+36*s12^2*s34^3*d*s14*s13-3*s23^2*s34*d^2*s14^2*s24^2-d^2*s14^2*s24*s13^4+20*s23^2*d*s14^4*s13+8*s23^4*s12*s14^2+114*s12*s34^2*d*s14*s13^3+20*s23*s12*s34^2*d*s14*s24*s13-2*s23^2*s12*d*s14*s24^2*s13+32*s23*s12*s14^3*s13^2+8*s23*s12*s14^2*s24^3+48*s23^2*s34*s14^2*s24*s13+2*s23^2*s34^4*d*s14+10*s23^2*s12^2*s34^2*d*s14+6*s23*s12^3*d^2*s14^2*s24+136*s23*s12^2*s34*s14^2*s13-24*s34*s14^2*s13^4-12*s23*d*s14^2*s24^3*s13-24*s23*s34^3*s14*s13^2-16*s14^2*s24*s13^4-64*s12*s14*s24^3*s13^2+s23^2*s12^2*s34*d^2*s14*s24+8*s23^2*s12^2*s34^2*s14-4*s23^3*s12*d^2*s14^2*s24+126*s12^2*s34^2*d*s14*s13^2+232*s23*s12^2*s14^2*s24*s13+8*s23*s34*d^2*s14^3*s13^2-32*s23*s12^3*s14^3-2*s12*s34^3*d^2*s14^2*s13+144*s12*s34^2*d*s14*s24*s13^2-2*s12*s34^4*d^2*s14*s13+120*s23^2*s34*s14^2*s13^2+88*s23*s12*s34^2*d*s14*s13^2+8*s23^2*s34^2*d*s14^3-4*s23^3*s12*s34*d^2*s14^2-24*s23*s12*s34^3*s14*s13-8*s23^2*s14*s24^3*s13+s34*d^2*s14^2*s24^2*s13^2-32*s12^2*s34^3*s14*s13+68*s23*s12^3*s34*d*s14*s13-24*s23^2*s14*s13^4+16*s12^4*s34*s14^2+24*s23^4*s14^2*s13+168*s23^2*s14^2*s24*s13^2+24*s12^3*s14^2*s24^2-8*s23^3*s34^2*d*s14*s24+d^2*s14^2*s24^2*s13^3-216*s23*s12*s14*s24*s13^3-6*s12*s34^2*d^2*s14*s24^2*s13+18*s34*d*s14*s24^3*s13^2+32*s23^3*s12^2*s14^2+4*s23^2*s12*d^2*s14^4+8*s23^3*s34*s14*s24*s13+88*s12*d*s14*s24*s13^4+18*d*s14*s24^3*s13^3+4*s23^3*s12^2*s34*d*s14-72*s23*s34^2*s14*s24*s13^2-10*s12^2*s34*d*s14^2*s24^2+40*s23*s12*d*s14*s24^2*s13^2-192*s12^2*s14*s24*s13^3+2*s23*s12*s34*d^2*s14*s24^3-s12^2*s34*d^2*s14*s24^3+6*d*s14*s13^6-4*s23*s12*s34*d*s14^2*s24^2+12*s12^2*d*s14^2*s13^3+90*s12^2*d*s14*s24^2*s13^2-52*s23*s34^2*d*s14^2*s13^2+4*s23*s12*s34^2*d^2*s14^3-44*s23*s34^2*d*s14^2*s24*s13-18*s12^3*s34*d^2*s14*s24*s13-8*s23^3*s34*d*s14^2*s13-84*s23*s12*d*s14^2*s13^3+12*s23*s12*d*s14^3*s24^2-4*s23^2*s34*d*s14*s24^2*s13+96*s23*s12^2*d*s14*s13^3-4*s23*s12*s34^3*d*s14^2+16*s23*s12^3*s34*d*s14*s24+d^2*s14^2*s24^3*s13^2-4*s23^3*s34^2*d*s14*s13+16*s12^3*s14^2*s13^2-96*s23*s12*s14*s13^4+14*s23^2*s12^3*d*s14*s13-8*s23^4*s14^2*s24+2*s12^2*s34^3*d*s14^2+16*s23*d*s14*s13^5+4*s23^3*s12*d^2*s14^2*s13+6*s12^2*s34^2*d*s14*s24^2-144*s12*s14*s24^2*s13^3-2*s23^2*s12^2*s34*d^2*s14*s13-72*s23*s34*s14*s24^2*s13^2-4*s23*d^2*s14^3*s24^2*s13+14*s23*s34*d^2*s14^2*s13^3+2*s12^2*s34*d^2*s14^2*s24*s13+8*s23^2*s12*s34*s14^3+56*s23*s12^2*s34*s14^2*s24-48*s34^2*s14*s24^2*s13^2-3*s34^2*d^2*s14^2*s13^3+24*s23*s12^2*d^2*s14^2*s13^2-144*s12*s34^2*s14*s13^3+36*s23*s12^3*d*s14*s24*s13+98*s12*s34*d*s14*s13^4+80*s23*s14^2*s24^2*s13^2-20*s23^3*s34*d*s14^2*s24-5*s23^2*s34^3*d^2*s14^2+2*s23^3*s12^2*d^2*s14^2+8*s23*s34^2*s14^3*s13-8*s12*s34^3*s14^2*s13-12*s23*d*s14^3*s24*s13^2-24*s23*s12*d*s14^3*s13^2-6*s12^2*d*s14^2*s24^3-136*s23*s12*s34*d*s14^2*s13^2-28*s12^2*s34*d^2*s14*s13^3+32*s23*s12*s34*d^2*s14^2*s24*s13-288*s12^2*s34*s14*s24*s13^2+14*s23*d^2*s14^2*s24*s13^3+3*s23^2*s34*d^2*s14*s24*s13^2+128*s23*s12*s14^2*s24^2*s13+2*s23*s12^2*s34^3*d^2*s14+2*s12^5*s34*d*s14-288*s23*s12*s34*s14*s24*s13^2-14*s23*s12*s34*d^2*s14*s13^3+4*s23^2*s12*s34*d^2*s14*s24*s13-8*s23*s12*d^2*s14^3*s24*s13-3*s23^2*s34^3*d^2*s14*s24+24*s12^2*s34*d*s14^2*s13^2-s12^5*d^2*s14*s13+60*s34*d*s14*s24^2*s13^3-4*s23^3*d*s14*s24^2*s13+68*s23^3*s12*d*s14^3+40*s12^2*s14^2*s24^2*s13+192*s23^2*s12^2*s14^2*s13-176*s23*s12^2*d*s14^2*s24*s13-32*s34^3*s14*s13^3+30*s34^2*d*s14*s24^2*s13^2-2*s12*s34*d^2*s14*s24^3*s13-18*s23*s12^2*s34*d^2*s14*s13^2-128*s12^3*s34*s14*s13^2+44*s12*s34*d*s14^2*s13^3-2*s12*s34*d^2*s14^2*s24*s13^2+3*s12^4*d^2*s14^2*s24-3*s23^2*s34^2*d^2*s14*s24^2+s12^4*s34*d^2*s14^2+3*s23^2*d^2*s14^2*s24*s13^2-40*s12^4*s14*s13^2+66*s34*d*s14*s24*s13^4+4*s23^2*s12*s34^2*d*s14*s24+36*s12*d*s14*s24^3*s13^2-288*s12*s34*s14*s24*s13^3-4*s23*s34*d*s14*s24^2*s13^2+2*s23^2*s12*d*s14^2*s24^2-s23^2*d^2*s14*s24^3*s13-15*s12^3*s34^2*d^2*s14*s13+14*s23^2*d*s14^2*s24^2*s13+18*s12*d*s14^2*s13^4-2*s23*s12^4*d^2*s14*s13+16*s23*s12^3*d^2*s14^2*s13+5*s23^2*s34*d^2*s14^2*s13^2+4*s23^3*d*s14*s13^3+6*s12^2*s34^3*d*s14*s24+104*s23*s12*s14^2*s13^3-8*s23*s12*s14^3*s24^2-4*s23^2*d*s14^4*s24-48*s23^2*s12*s34*s14*s24*s13+8*s23*s12^4*s34*d*s14+5*s12*d^2*s14^2*s24^2*s13^2-8*s12*s34^4*s14*s13-6*s34^2*d^2*s14*s13^4+24*s23^3*s34*s14^2*s24-84*s23^2*s12*s34*d*s14^2*s13+24*s23^2*s34*d*s14*s13^3+6*s12^3*s34^3*d*s14+2*s23^3*d^2*s14^2*s13^2-128*s12*s14*s24*s13^4-8*s12*s34^2*s14^2*s24*s13+2*s12^3*s34*d^2*s14^2*s24+42*s23^2*s12^2*d*s14*s13^2-8*s12*s34*d*s14^2*s24^2*s13+8*s23^4*s34*d*s14^2-4*s23*s34*d^2*s14*s13^4+16*s23*s14^2*s24^3*s13+s23^2*s12^2*d^2*s14*s24*s13+10*s23*s12*s34*d^2*s14*s24^2*s13+8*s23^3*d^2*s14^4+40*s23*s34^2*s14^2*s13^2-8*s12^5*s14*s13+2*s23*d^2*s14*s24^2*s13^3-24*s23*s12*s34*d*s14^3*s13-5*s12*d^2*s14*s13^5+216*s12^2*s34*d*s14*s24*s13^2-16*s23^3*s12*s14*s13^2+20*s34*d*s14^2*s24*s13^3+48*s23*s12*s34^2*s14^2*s13-12*s23^3*d*s14^2*s24*s13-8*s12^2*s34^2*s14^2*s13+22*d*s14*s24*s13^5-s23^2*s12^3*s34*d^2*s14-6*s23*s12*d^2*s14*s24*s13^3-8*s23^2*s34*s14^3*s24-24*s23*s12^4*s14*s13+12*s23^2*s34*d*s14^2*s24*s13-5*s12^2*s34^2*d^2*s14^2*s13+s23^2*d^2*s14^2*s24^3-8*s23^2*d^2*s14^3*s13^2-8*s14*s24^4*s13^2-16*s34^2*s14^2*s24*s13^2+128*s23*s12*s34*d*s14*s24*s13^2+24*s23*s12*s34^2*d^2*s14^2*s13+22*s34^3*d*s14*s24*s13^2-56*s12*s34*s14^2*s13^3+54*s12*s34^3*d*s14*s13^2-24*s12*s14^2*s24*s13^3-18*s12^2*d^2*s14*s24*s13^3-12*s12^2*s34*d^2*s14*s24^2*s13-4*s23*s12^2*s34^2*d*s14^2-4*s23*s12^2*d^2*s14^3*s13+120*s23*s34*s14^2*s24*s13^2+108*s12^3*s34*d*s14*s13^2-s23^2*s12^2*d^2*s14^2*s24+2*s23*s34*d^2*s14^2*s24^2*s13-144*s23*s12^2*s14*s13^3+16*s23*s12^3*s34^2*d*s14-16*s23^2*s34*d^2*s14^3*s13+8*s23^4*d*s14^2*s24+8*s23^3*s34*d^2*s14^3+2*s12*d^2*s14^2*s24^3*s13+s23^2*s12*s34*d^2*s14*s24^2-48*s12*s34^2*s14*s24^2*s13-3*s12^4*s34*d^2*s14*s24+68*s23*s12^2*s34^2*d*s14*s13-38*s23^2*s12^3*d*s14^2-8*s23^3*d^2*s14^3*s13-24*s23^3*s34^2*d*s14^2+16*s23^3*s34^2*s14*s24-6*s23*s12^2*d^2*s14*s24*s13^2+s23^2*s12^2*s34*d^2*s14^2-128*s12*s34*s14*s13^4+4*s23*d^2*s14^2*s13^4+8*s23^2*s12*s34*s14*s24^2-15*s12*s34*d^2*s14*s24^2*s13^2+4*s23*s34^3*d^2*s14*s13^2+20*s23*s12^2*d*s14*s24^2*s13+88*s23*s12^2*s34*d*s14*s24*s13-2*s23*d^2*s14*s24*s13^4-10*s12^3*d^2*s14*s13^3-128*s12^3*s14*s24*s13^2-8*s23^2*s34^2*s14*s24*s13+10*s34^2*d*s14^2*s24*s13^2-124*s23*s34*d*s14^2*s24*s13^2+30*s12^4*d*s14*s13^2-2*s23^2*s34^2*d*s14^2*s13-8*s23^3*s14*s13^3-12*s12^3*d*s14^2*s13^2-28*s23*s12^2*s34*d*s14^2*s24-s12^3*s34^2*d^2*s14^2+s23^2*d^2*s14*s24^2*s13^2+48*s23^2*s12*d*s14^3*s24-16*s23*s34*d*s14*s24^3*s13+120*s23*s12^3*s14^2*s13)*(s23+s12+s34+s14+s24+s13)^(-1)*(-2+d)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (1/2*(8*s23*s24^3*s13^2-84*s23*s12*s14*s24^2*s13-12*s12^2*s34^2*s14*s13+8*s23*s12*d^2*s14^3*s24-s23*d^2*s24^5+12*s12^2*s14^2*s24^2+4*s23^2*s34^4-s23*s12^3*d^2*s24^2+9*s23*s34^2*d^2*s14^2*s13-44*s23*s12*s34^2*s14*s13-8*s23*s34^4*s13+24*s12^2*s14*s24^2*s13+50*s23*s12*s34*d^2*s14^2*s24-4*d*s14^2*s24^2*s13^2-18*s23^2*s12*s34*d*s24^2+24*s12*s34^2*d*s24^2*s13-9*s12*d^2*s24^4*s13-d^2*s24^3*s13^3+4*s23^3*s12*d^2*s14^2-9*s12^2*s34*d^2*s14^2*s24-68*s23*s14*s24^2*s13^2+8*s23*d^2*s14^3*s24^2+7*s23*d^2*s14^2*s13^3-3*s12^3*s34^3*d^2+8*s23*s34*s14^3*s13-10*s12^3*s34^2*d^2*s24-6*s34^3*d^2*s14*s24*s13-48*s23*s34^2*s14*s13^2-2*s23*d^2*s14*s24*s13^3-8*s12*s34^4*s14-8*s12*s34^2*s14^2*s24-46*s12^2*s34*d^2*s14*s24*s13+20*s12*s34^2*s13^3-8*s12*s34^3*s24^2+16*s23^2*s12*s24^2*s13+10*s23^2*d*s14^2*s24^2+16*s23^2*s12*s34^3-92*s12*s34*s14*s13^3+12*s24^3*s13^3-18*s23^2*s34^2*d*s24*s13-12*s12^3*d*s24*s13^2-20*s23*s34*d*s14^3*s13-2*s12*s34*d*s13^4+4*s23*s14*s24^4+8*s23^2*d^2*s14*s24^3-4*s12*s34^5-30*s12*s34*d^2*s24^3*s13-26*s12^2*s34^2*d^2*s14*s13-6*d^2*s14*s24^3*s13^2-2*s23^2*s12^3*d*s24-42*s23*s12^2*d*s14^2*s24+28*s23^2*s12^2*s14^2+2*d*s14^2*s24^4+20*s23*s12^3*s24*s13+6*s12*d*s24^5-3*s34^2*d^2*s14^2*s24*s13+8*s23*s34^2*s24*s13^2-s23*d^2*s24^2*s13^3-12*s12*s34^2*s14*s24*s13+28*s23*s12^3*s24^2+12*s14*s24^3*s13^2+8*s12*s34*s13^4-32*s23^2*s34*d*s14^2*s24+4*s23*s12^4*s14-12*s23^2*s34^2*d*s24^2+28*s23*s34*s24^3*s13-s23*s12^3*s34^2*d^2+62*s12*s34*d*s14*s24^2*s13-d^2*s24^6-18*s23*s34^2*d^2*s24^2*s13+28*s23^3*d*s14^2*s24+16*s23^2*d*s14*s24^2*s13-4*s12^2*s34^2*s14^2+26*s12*s34^2*d*s14^2*s13+100*s23*s12*s34^2*s24*s13+18*s23*s34*d^2*s14^2*s24*s13+108*s12^2*s34^2*s24*s13+20*s34^2*d*s24^4-8*s34^3*d^2*s14*s24^2+16*s23^2*s12*s34*s13^2+40*s23*s14^3*s13^2+4*s12^5*s14-4*s23*s12^2*s34^2*d*s24-16*s12*d^2*s14*s24^2*s13^2-27*s12^2*s34^2*d^2*s24^2+4*s23^2*d^2*s14*s24*s13^2-20*s23*s12^3*s14*s13+24*s12^3*s24^3+28*s12^3*d*s14*s13^2-2*s23*s34*d*s24^3*s13-28*s23^2*s34^2*d*s14*s13-6*s23*s12^2*s34*d*s14*s24-18*s23*s12*s34^2*d^2*s24^2-21*s12^2*s34^2*d^2*s24*s13-2*s23*s12*s34*d*s24^3-18*s23*s12*s34^2*d^2*s24*s13-16*s23^3*d^2*s14^3-12*d*s24^4*s13^2+36*s23*s12^2*d*s14*s24*s13+128*s23^2*s12*s14^2*s13+24*s12*s34*s24*s13^3+12*s23^2*s34^2*s13^2+2*d*s14*s24^4*s13-4*s23*d^2*s14*s13^4-2*s23^2*s12^3*s34*d+24*s23^2*s12*d^2*s14^2*s13+60*s23*s12*s34^2*s24^2+28*s12^2*s34*d*s24^3-38*s12*s34*d^2*s14*s24*s13^2-12*s23*s12^2*s34*s14*s24+4*s23*s34^5*d-12*s34^2*s14*s24*s13^2-6*s34^2*d^2*s14*s13^3+24*s23^3*s12*s34*d*s14+28*s23*s12^2*s34^3+8*s23^2*s12^2*s24*s13-12*s23*s12^2*d^2*s14*s13^2+36*s23^2*d*s14^3*s24-24*s12*s34*d*s24*s13^3-92*s12*s14*s24*s13^3-4*s23*d*s24^4*s13-116*s23*s34*s14*s24*s13^2+32*s12^2*s34*s13^3-6*s23*s34*d^2*s14*s13^3-32*s23*s12^2*s34*d*s14^2-8*s23^2*s34*s14*s24^2-16*s23^4*d*s14^2-44*s23*s34*d*s14^2*s13^2-14*s12*s34^3*d^2*s14*s24-15*s12*s34*d^2*s24^2*s13^2+22*s12*d*s14^2*s13^3-4*s23^2*s12^3*s14-20*s23^3*s34^2*s14-12*s23^2*s34*d*s14*s24*s13-24*s12^3*s14*s13^2+16*s12*s34^4*d*s13+10*s34^2*d*s14^2*s13^2+24*s23^2*s34*s14^3+38*s34*d*s14*s24*s13^3+25*s23*s12*d^2*s14^2*s24^2+8*s23^3*d*s14*s24*s13-6*s23^2*s12*d*s24^3-3*s34*d^2*s14^2*s24^3-12*s12^3*s34*d*s13^2-2*s12*d*s24*s13^4+36*s12^2*s14^2*s24*s13+72*s23*s12*s14^2*s24*s13-6*s12^2*d^2*s24^4+4*s23*s12^2*s34^2*s14-4*s12^2*d^2*s14^2*s24^2+2*d*s14^2*s24^3*s13+102*s12^2*s34*d*s14*s13^2-4*s23*s12*s24*s13^3-3*s23*s34^4*d^2*s13+120*s23*s12*s34*d*s14*s13^2-2*s12^4*s34*d^2*s24+16*s12^2*d*s14*s24^3-24*s23^2*s12*s34*d*s24*s13-48*s23*s14*s24^3*s13-2*s23*s34^2*d*s14^3+60*s34*s24^3*s13^2-5*s34*d^2*s24^5+60*s12^3*s34^2*s13-18*s23*s34^2*d*s14*s24^2+28*s23*s34*s14^2*s13^2+64*s23*s14^2*s24*s13^2+24*s23^3*s34*d*s14*s24-20*s12*s34^3*s14*s13-14*s23*s12*d*s14*s24^3+22*s23^2*s12*d*s14*s24^2+70*s23*s34*d*s14*s24*s13^2+8*s12^3*s24*s13^2-36*s34^2*d*s24^2*s13^2-2*s12*d*s14^2*s24^2*s13-3*s12^3*s34*d^2*s14^2-8*s23^3*s14^2*s24-14*s23*s34*d*s24^2*s13^2-24*s12*d*s24^2*s13^3+6*s23*s34^3*d*s14*s24-11*s12*s34*d^2*s14^2*s13^2-8*s34*d^2*s14*s24^4-2*d^2*s14*s24^5+s12^4*d^2*s14^2+94*s12*s34*d*s14*s13^3-2*s12^4*d^2*s14*s24+100*s23*s12^2*s34*s24^2-2*s23*s34*d^2*s24*s13^3+12*s23^2*s34^3*s13-40*s23^2*s12^2*s14*s13-s34^2*d^2*s24*s13^3-22*s12*s34^3*d^2*s24^2-s23*s34^2*d^2*s13^3+14*s34^2*d*s14*s24*s13^2-22*s23^2*s12*s34^2*d*s14+20*s23*s12*s34^3*s24+6*s23*s34^4*d*s14+32*s12^4*s34*s13+26*s23*s12*s34^3*d*s24+24*s12*s34*d*s14^2*s24*s13+16*s12^2*s34^4*d+44*s23^3*s34*d*s14^2-18*s12^3*s34*d^2*s14*s24+24*s12*s34^3*s24*s13-30*s12*s34^2*d^2*s14*s24^2+68*s23^2*s12*s34*d*s14*s13-48*s23^3*s34*s14*s24-38*s23*s12*s34*d*s24*s13^2+52*s12^2*s34^3*d*s24+16*s23*s34*s24^2*s13^2-18*s34^2*d^2*s14*s24^2*s13-2*s23^2*d*s24^4+2*s23^2*s34*d^2*s14*s13^2-2*s12*s34^4*d^2*s14-20*s23^2*s14*s24^3+24*s23*s34^3*d*s24^2+144*s12^2*s34*s24^2*s13+2*s23*s34*d^2*s14*s24^2*s13-36*s12^2*s34*d*s24*s13^2+20*s23*s12^3*s34*d*s14-8*s12^2*s34^3*s14-92*s23*s12*s14*s13^3-2*s12*d^2*s14^2*s24*s13^2-64*s23^2*d*s14^2*s24*s13+12*s34^3*s14*s24*s13+116*s23*s12*s34*s24^2*s13-18*s12*d^2*s14*s24^3*s13+38*s12*d*s14*s13^4-9*s34*d^2*s24^3*s13^2-4*s23*s12^3*d^2*s14*s13+8*s23*s12^2*s14^2*s24+140*s23*s12^2*s34*s24*s13+16*s23^2*s34^3*s24-52*s23^2*s12^2*s14*s24+4*s12^4*s34*d*s14+28*s23*s12*s34^3*s13-4*s34*s24*s13^4-10*s23*s34^2*d^2*s24^3-3*s12*s34^3*d^2*s13^2-6*s23^2*d*s24^3*s13+54*s12*s34*d*s14*s24^3-2*d^2*s14*s13^5-38*s23^2*s12^2*d*s14^2+s12^3*d^2*s14^2*s13+60*s23*s12^2*s34*s13^2-2*s12^4*d^2*s14*s13-16*s23^2*s12*d^2*s14^3+16*s23^2*s34*s24*s13^2+88*s23^3*s14^2*s13-18*s12*s34^3*d^2*s24*s13-6*s34*d^2*s14*s13^4+4*s23^2*s24^4-9*s12*s34*d^2*s14^2*s24^2+12*s12^3*s34*s14^2-36*s12*d*s24^3*s13^2+62*s12*d*s14*s24*s13^3+10*s23*s34^3*d*s14*s13+46*s23^2*s12*d*s14*s13^2+12*s12^4*s14^2-3*s23*s12*d^2*s24^2*s13^2+60*s23*s12^2*s14^2*s13-2*s34*d^2*s24^2*s13^3-2*s23*s12^3*d^2*s14*s24+14*s12*d*s14*s24^4+4*s12*s24^5+60*s12^2*s24^3*s13+60*s12*s34^2*d*s24^3-3*s12^2*s34^4*d^2+6*s23*s34^3*d*s13^2-32*s23^2*s14*s13^3+22*s23^2*s34*d^2*s14*s24^2-3*s12^2*d^2*s24^2*s13^2+32*s23^2*s12*d*s14*s24*s13-4*s23*s12*s14*s24^3-8*s12^2*d*s24*s13^3-32*s23^3*s34*s14*s13-22*s12*s34^2*d^2*s14*s13^2-4*s23*s12*d*s24^4-24*s34*s14^2*s13^3-12*s14*s13^5+24*s12^2*s34^3*d*s13+2*s23*s34^2*d*s24*s13^2+10*s23*s12*s34^3*d*s13-9*s23*s12^2*s34*d^2*s24^2+36*s12^4*s34*s24+12*s23^2*s12*s24^3-12*s14^2*s24*s13^3+4*s34^4*d*s14*s24-18*s12^3*s34*d^2*s14*s13-6*s23^2*s12^2*s34^2*d+2*s34^3*d*s14^2*s24-10*s23*s12*d*s24*s13^3-3*s34*d^2*s14^2*s24*s13^2-2*s23*s12^3*s34*d^2*s24-6*s23^2*s12*d*s24*s13^2+30*s12*s34^4*d*s24+24*s12^3*s14*s24^2+6*s34^2*d*s14^2*s24^2-s34^5*d^2*s24-d^2*s14^2*s24*s13^3-s23*s34^3*d^2*s14^2-10*s12*s34^3*d^2*s14*s13-56*s23^2*s34*s14*s13^2-52*s23*s34*d*s14^2*s24^2-18*s34*d^2*s14*s24^3*s13+8*s12*d*s14^2*s24^3-s23*s34^5*d^2+26*s23*s34^3*d*s24*s13-96*s23^2*s12^2*s34*s14+4*s23^2*d*s14^3*s13+42*s23*d*s14*s24^2*s13^2-3*s12^3*d^2*s24^2*s13+44*s12^2*s34*s24^3+16*s23*s34*d^2*s14*s24^3+6*s23*s12*s34^3*d^2*s14-8*s12^2*s34^3*d^2*s14-12*s34^2*d^2*s14*s24^3+40*s23*s12^3*s34^2-20*s12^2*d^2*s14*s24^2*s13-8*s23^2*d^2*s14^4+16*s12*s14^2*s24^2*s13-116*s23*s12^2*s34*s14*s13+2*s23*s12^2*d^2*s14*s24^2-36*s34*s14*s13^4+16*s23^3*s34*d*s14*s13+74*s23*s12*d*s14*s13^3-6*s12^3*s34*d^2*s24*s13-20*s12*s34^3*s14*s24-6*s12^4*d*s24^2+6*s12*s34^3*d*s14^2-12*s12*s34^2*d^2*s24*s13^2+54*s12^2*d*s14*s24*s13^2-5*s23*s34^4*d^2*s24+52*s12^2*d*s14*s13^3-56*s23*s12*s34*d*s14*s24^2+28*s23*s34^2*d*s14*s13^2-4*s23*s34*s14^2*s24^2+48*s12^3*s34^2*s24+24*s34*s24^2*s13^3-4*s24*s13^5+20*s34^3*d*s24^3+4*s34*d*s14^2*s24^2*s13+8*s12^2*s34*s14^2*s24+66*s23*s12*d*s14*s24*s13^2+64*s12^2*s34*d*s14*s24^2+12*s12^3*s34^3-3*s12^2*d^2*s14^2*s13^2-32*s23^2*s34^3*d*s14-38*s12*s34^2*d^2*s14*s24*s13+21*s23*s12*d^2*s14^2*s13^2+56*s23^3*s12*s14^2+24*s23*s12*s34*s14^3+40*s23*s12*s34*s14^2*s24-4*s34*d^2*s14^2*s13^3+4*s12^3*s34*d*s24^2+12*s34*s14*s24^2*s13^2+52*s23*s12^2*s24^2*s13-6*s23*s12^3*s34^2*d+40*s23^2*s12*s34*s24^2-2*s23^2*s12^2*d^2*s14*s13+28*s23*s14^2*s13^3-2*s34^3*d^2*s14*s13^2-6*s23*s12*d^2*s24^3*s13-4*s12^3*d^2*s24^3-14*s23*s12^2*s34^2*d*s13+36*s12^2*s24^2*s13^2-4*d^2*s14*s24*s13^4+40*s23^2*s12^2*s34*d*s14-52*s23^3*d*s14^2*s13-24*s23^2*s34*s14*s24*s13-18*s23*s12*s34*d^2*s24^2*s13-9*s12^2*d^2*s24^3*s13+20*s12*s34^2*d*s14^2*s24+36*s23*s12^2*s24^3-24*s14*s24^2*s13^3-24*s12^2*s34*d^2*s24^2*s13-5*s34^4*d^2*s24^2-3*s23*d^2*s24^3*s13^2-8*s23^3*s14*s24*s13-6*s23^2*s34^2*d*s13^2-52*s23^2*s34*d*s14^2*s13+12*s12*s34*s24^4-4*s23*s12^4*d*s24-36*s34^2*s14*s13^3+24*s23^2*s34^2*s24^2+6*s23*d^2*s14*s24^4-8*s12^2*s34*d*s13^3+96*s12*s34^2*s24^2*s13+4*s23^2*s12*d^2*s14^2*s24+56*s23*s12*s34^2*s13^2-32*s23^3*s14^3-24*s23^2*s12*s14^2*s24+8*s34^4*s24*s13-6*s23^2*d*s24^2*s13^2-10*s23*s12*s34*d*s13^3+26*s12^3*s34^2*d*s14-10*s12^3*d^2*s14*s24*s13-66*s23^2*s34^2*d*s14*s24+4*s12^3*d*s14*s24^2-2*s12^5*d*s24-26*s23*s12^3*d*s14^2-4*s23*s24*s13^4+36*s12*s34*s14*s24^2*s13-3*s23*s12*s34^2*d^2*s13^2+90*s23*s12^2*s34*d*s14*s13-32*s23*s12^2*d*s24^2*s13+8*s23^2*s12*s34*d^2*s14^2-3*s12^2*s34^2*d^2*s13^2-6*d*s24^2*s13^4-4*s23*s12^3*s14*s24-3*s12^3*s34^2*d^2*s13+44*s23*s34^2*d*s14*s24*s13+16*s23*s12*s34*d^2*s14^3+12*s34^2*s24*s13^3-5*s23*s34*d^2*s24^4-12*s23*s34^2*s14*s24^2+15*s23*d^2*s14^2*s24^3+8*s23*d^2*s14^3*s13^2-10*s12^2*s34*d^2*s14^2*s13-18*s23^2*s34*d*s24^2*s13+9*s23*d^2*s14^2*s24^2*s13+13*s23*s34^2*d^2*s14^2*s24-4*s23*s34^3*s14^2-8*s34*s14^2*s24*s13^2-4*s23*s12^4*s34*d-6*s23^2*s12*s34*d*s13^2+16*s12^2*s34^2*d*s14^2-12*s23*s34^4*s24+44*s23*s12*s34^2*s14*s24+34*s23*s12*s34*d^2*s14^2*s13-3*s34^3*d^2*s24*s13^2+8*s23*s12*d^2*s14^3*s13-86*s23*s12*s34^2*d*s14^2-4*s23*s24^2*s13^3+12*s12^3*s34^3*d+36*s34*s14*s24^3*s13-76*s23*s12^2*d*s14^2*s13+4*s23^2*s34*d*s14^3+10*d*s14^2*s13^4-32*s23*s14*s13^4+30*s12*s34*d*s24^4+2*s23*s12^2*s34^2*d^2*s14-14*s34*d^2*s14*s24^2*s13^2-16*s23*s34*d*s14^3*s24-46*s23*s12^2*s34*d*s24*s13-4*d^2*s14*s24^2*s13^3-28*s12^2*s34^2*d^2*s14*s24-2*s23^2*d^2*s14*s13^3+34*s23*s12*d^2*s14^2*s24*s13-24*s23*s12^3*s34*s14-12*s23^2*s14*s24*s13^2+22*s23*s12*s34^2*d^2*s14*s24-s12^2*d^2*s14^2*s24*s13-74*s23^2*d*s14^2*s13^2-12*s23*s12^2*d*s24^3+36*s12*s24^4*s13+4*s12*s34*s14*s24^3+24*s23*d*s14*s24^3*s13+6*s23^2*s34^2*d^2*s14^2-28*s23^2*s12*s34^2*s14+20*s23*s12*s24^4-36*s14*s24*s13^4-2*s12^5*s34*d+32*s34^3*s24^2*s13+12*s12*s34^3*s13^2+8*s12*s34^2*s24^3-54*s23*d*s14^2*s24*s13^2-16*s12*s34^2*s14^2*s13-56*s23*s12^2*s14*s24*s13+86*s12*s34^2*d*s14*s13^2-8*s23*s12*s14^2*s24^2-3*d^2*s24^5*s13+4*s12*s24^2*s13^3+20*s23^2*s12*s34*d^2*s14*s24-9*s23*s34^2*d^2*s24*s13^2+10*s23^2*d*s14*s24*s13^2+100*s23^2*s14^2*s13^2+16*s23^3*d*s14*s24^2+10*s34^4*d*s24^2-4*s12*s34^3*s14^2-12*s12*s34^4*s24+32*s23^2*s12*s34^2*s13+42*s12^3*s34*d*s14*s13-s34^3*d^2*s14^2*s24-2*s34^4*d^2*s14*s24-2*s23^2*s12^2*s34*d^2*s14-28*s23*s12*d*s24^2*s13^2-2*s23^2*s34*d*s13^3+12*s23*s34^2*s24^2*s13+4*s14^2*s24^2*s13^2+12*s23^2*s12^2*s24^2-8*s12*d^2*s14*s24^4-6*s23*s12^2*d^2*s14*s24*s13+2*s23*s12^3*d*s14*s24-32*s34*d*s24^2*s13^3+52*s23*s12^3*s34*s13-36*s23^2*s34*d*s14*s24^2-2*s23^2*s12^3*d*s14+106*s12*s34*d*s14*s24*s13^2+8*s23^3*s34^2*d*s14-6*d^2*s14*s24^4*s13-4*s12^3*d*s24^3-3*s23*s12^2*s34^2*d^2*s13-36*s12^2*d*s24^2*s13^2+40*s12*s34^3*d*s24*s13+16*s23^2*s12*s34*d*s14^2+12*s12^3*s14*s24*s13+2*s34^2*d*s14^2*s24*s13-2*s23*s34^3*d^2*s14*s13+20*s12^4*s34^2-6*s12*d^2*s24^3*s13^2+8*s23*s34^2*s24^3-68*s23^2*s12*s14*s13^2+30*s34*d*s14*s13^4+22*s12*s34*d*s14^2*s24^2+12*s23*s24^4*s13-46*s12*s34*d^2*s14*s24^2*s13+7*s23*s12^3*d^2*s14^2-4*s23^2*s12*d^2*s14*s13^2-96*s23^2*s12*s34*s14*s24-10*s23*s12*s34^2*d*s13^2-44*s12*s14*s13^4-10*s12^3*s34^2*d^2*s14+6*s23^2*d^2*s14*s24^2*s13+4*s23*s12^2*s34^3*d+20*s12*d*s14*s24^2*s13^2+10*d*s14*s13^5-26*s12*s34*d^2*s14*s24^3+2*s12^4*d*s14*s13+4*s23*s34*d*s14^2*s24*s13+8*s24^5*s13-14*s12^3*d*s14^2*s13+25*s23*s12*s34^2*d^2*s14^2+98*s12^2*s34*d*s14*s24*s13+4*s23*s34*s14*s24^3+6*s12^2*d*s14^2*s13^2-32*s12^2*s34*d^2*s14*s24^2-4*s23*s34^2*s14^2*s13+48*s34^2*s24^3*s13-74*s23*s12*d*s14^2*s13^2+12*s23*s34*s24^4+20*s34*d*s14^2*s13^3-5*s12^2*s34^2*d^2*s14^2-60*s34*s14*s24*s13^3+48*s23*s12*s34^2*s14^2-6*d*s14*s24^3*s13^2-12*s23*s12*d^2*s14*s13^3-100*s23*s12*s14*s24*s13^2-24*s12^3*s34*d*s24*s13+26*s23*s12*s34*d^2*s14*s24^2-12*s12^2*d^2*s14*s13^3-60*s12^2*s14*s24*s13^2-24*s12*s14^2*s13^3-12*s12*s34^2*d*s24*s13^2-16*s23^3*s12*s14*s13+4*s23^2*s24^2*s13^2-48*s23*s12*s34*d*s14^3-2*s23*s34^2*d^2*s14*s13^2+4*s23*s34*d*s24^4-42*s23^2*s34^2*d*s14^2+16*s23^3*s12*d*s14*s24+8*s23*s12^4*s24+12*s14*s24^4*s13-8*s23^2*d^2*s14^3*s13-30*s23*s34*d*s14*s24^3-24*s12^3*d*s24^2*s13-8*s12^4*d*s24*s13+16*s23*s12^3*s14^2-12*s12*s24*s13^4-d^2*s14^2*s24^2*s13^2-3*s23*s12^2*d^2*s24^3+24*s34^2*d*s14*s24^3+4*s23*s12^2*d*s14*s24^2+44*s23^2*s34^2*s14*s24-10*s23*s12^2*s34^2*d*s14-17*s12*s34*d^2*s24^4-12*s12*s34^2*s14*s24^2-64*s23*s34*s14^2*s24*s13-3*s34^2*d^2*s14^2*s24^2+4*s12^5*s24+36*s12^2*s34^2*s24^2+29*s23*s34*d^2*s14^2*s24^2+32*s23*d*s14*s24*s13^3+42*s12*s34^3*d*s14*s13+4*s34^2*s14^2*s24*s13+64*s23*s12*s34*d*s14*s24*s13-6*s34*d*s24*s13^4-8*s23^2*s34*d^2*s14^3+4*s23^2*s12*s24*s13^2-12*s23*s34^3*d^2*s24*s13-4*s12*d^2*s14^2*s24^3+2*s34^3*d*s14*s24*s13-6*s23^2*s12^2*s34*d*s13+92*s23*s12^2*s34^2*s24-6*s23^2*s34^3*d*s13-12*s12*s34*d^2*s14^2*s24*s13+20*s23^2*s34^2*d^2*s14*s24-8*s12^3*d^2*s14*s24^2-18*s23*s12^2*s34*d^2*s14*s13+12*s12^3*s34*s14*s13-2*s23^2*d*s24*s13^3+6*s34^2*d*s14*s24^2*s13+68*s23^2*s12*d*s14^3+28*s23*s12*s34*s13^3-3*s23*s12^2*d^2*s24^2*s13+16*s23^2*s34*s24^3-12*s23*d*s14*s24^4+44*s12^3*s24^2*s13+10*s23^2*s12^2*d^2*s14^2+58*s23*s34*d*s14*s24^2*s13-s12*s34^5*d^2+4*s23^2*s12*d*s14^2*s24+10*s12*d*s14*s24^3*s13+8*s23^2*d^2*s14^2*s24*s13-4*s12^4*s34*d^2*s14+32*s34*s24^4*s13+12*s12*s34^3*d*s13^2+4*s12^4*s14*s13+16*s23*s34^2*d*s24^3-28*s23^3*s14*s24^2-8*s23*s12*s14^3*s24-24*s12^2*s34*d*s24^2*s13-6*s23*s12*s34^3*d^2*s13-10*s23*d*s24^3*s13^2-20*s23*s12^2*s34*d*s24^2-5*s12*d^2*s14^2*s24^2*s13+12*s23^2*s34*d^2*s14^2*s13+96*s12^2*s34*s24*s13^2-4*s23*s34*d^2*s14*s24*s13^2+20*s23^2*s12^2*s34*s13+24*s23^2*s14^3*s13-8*s12^2*s24*s13^3+76*s23*s12*s34*s24*s13^2-16*s23*s12^2*s14*s24^2-3*s23*s12*d^2*s24^4-6*s12^2*s34^3*d^2*s13+20*s23^2*s12^2*d*s14*s13-12*s34^2*s14^2*s13^2-4*s24^2*s13^4-3*s23*s34^3*d^2*s13^2-28*s12*s34^2*d^2*s24^3-22*s23*s12*d*s24^3*s13+10*s34^3*d*s14*s13^2-s12^4*s34^2*d^2+4*s14^2*s24^3*s13+4*s23^2*s12^3*s24-10*s34^2*d^2*s14*s24*s13^2+4*s23^3*d^2*s14^2*s13-6*s12*s34^2*d^2*s14^2*s24-34*s23*s12*s34*d*s24^2*s13-24*s12^2*d*s24^3*s13+14*s23^2*d^2*s14^2*s13^2+32*s12^2*s34^3*d*s14-70*s23*s12*s34^2*d*s14*s24+16*s23^2*d*s14^4+12*s12^4*s24*s13-10*s34*d^2*s14*s24*s13^3+32*s23^2*s34*s14^2*s24-3*d^2*s14^2*s24^3*s13+24*s12^3*s14^2*s13+4*s23*s24^5-40*s23^3*s34*s14^2-28*s23*s12*s34^3*d*s14-20*s23*s34^3*s14*s24+21*s23*s12^2*d^2*s14^2*s13-12*s34*d^2*s24^4*s13-2*d^2*s14^2*s13^4+36*s34^2*s14*s24^2*s13+8*s23*s34*d^2*s14^3*s24+4*s12^2*s34^3*s24-116*s23*s34*s14*s24^2*s13-18*s23*s12^3*s34*d*s24-4*s12*s34*s14^2*s24^2+80*s12^2*s34^2*d*s14*s24+2*s34^5*d*s24-8*s12*s34^4*d^2*s24+24*s23^2*d*s14*s13^3+104*s12^3*s34*s24*s13-6*s23*s12^2*s34*d^2*s24*s13+48*s12^3*s34*s13^2-26*s23*s34^2*d*s14^2*s24+10*s23*s12*s34^4*d-76*s23*s12*s34*d*s14^2*s13+12*s12^2*s34*s14*s24*s13-11*s12^3*s34*d^2*s24^2+16*s23*d*s14^3*s24*s13-10*s34^3*d^2*s24^3-16*s23*s12*d*s14^3*s13-12*s34^3*d*s24*s13^2-12*s14^2*s13^4-6*s23^2*s12^2*d*s24*s13+60*s34^2*s24^2*s13^2-60*s23*s14^2*s24^2*s13+6*s23^2*s34^3*d^2*s14-s12*s34^3*d^2*s14^2+24*s23*s12*s34^3*s14-160*s23*s12*s34*s14*s13^2+16*s23*s34^4*d*s24-56*s12^2*s14*s13^3-8*s12^4*s34*d*s13-18*s23^2*s12*s34^2*d*s24+32*s23^4*s14^2-128*s23*s12*s34*s14*s24*s13-28*s23*s12^2*s34*s14^2+16*s12^2*s24^4-34*s23*d*s14^3*s13^2-26*s23*d*s14^2*s24^3+24*s12^2*s34*d*s14^2*s13+16*s23^2*s34*d^2*s14*s24*s13+8*s23^2*s24^3*s13-60*s12^2*s34*s14*s13^2-s12^4*d^2*s24^2-36*s12*s34*s14^2*s13^2+8*s23*s34*d^2*s14^3*s13+24*s12^2*s34^3*s13-14*s23*s12^3*s34*d*s13+28*s12*s14*s24^3*s13-3*s12*s34^4*d^2*s13-8*s12*s34*d*s24^3*s13-2*s23^2*d*s14*s24^3+20*s23^2*s12^2*s34^2+82*s12^2*s34^2*d*s14*s13-20*s23*s34^3*s14*s13+17*s23*s12^2*d^2*s14^2*s24-d^2*s14^2*s24^4-18*s12^2*d^2*s14*s24*s13^2-2*s23*d*s24*s13^4-6*s23*s12*d^2*s14*s24*s13^2+24*s12^3*s14^2*s24+112*s23^2*s14^2*s24*s13-6*s34*d^2*s14^2*s24^2*s13-72*s23^2*s12*s14^3+16*s12^4*s34*s14-12*s23^2*s12*d*s24^2*s13+17*s23*s12^2*s34*d^2*s14^2+18*s23*s12*s34^2*d*s14*s13+2*s23^2*d^2*s14^2*s24^2+94*s12*s34^2*d*s14*s24*s13+56*s23^2*s34*s14^2*s13+44*s23*s12*s24^3*s13+18*s12^2*s34*d*s14^2*s24-6*s23^2*s12^2*d*s24^2-24*s23*d*s14^2*s13^3+46*s23*s12*d*s14*s24^2*s13-14*s23*d*s14^3*s24^2-16*d*s24^3*s13^3+6*d*s14^2*s24*s13^3-88*s23*s34^2*s14*s24*s13+6*s34*d*s14^2*s24*s13^2+24*s12^2*s34*s14*s24^2-12*s23^2*s12*s34^2*d*s13+10*s23*s34^4*d*s13+16*s12^2*s14*s24^3+16*s23*s12*s34*s14*s24^2-6*s12^4*s34*d*s24+12*s23*s12^2*s24*s13^2+10*s34*d*s24^5-4*s23^3*s12^2*s14+6*s34*d*s14*s24^3*s13+32*s23^2*s34^3*s14-3*s23*s12*s34^4*d^2-12*s23*s12*d*s14^3*s24-2*s23*d^2*s14*s24^2*s13^2+4*s12^2*d*s24^4+16*s12^4*s24^2-20*s23*s34^2*d*s14^2*s13+60*s12^3*s34*s24^2-48*s23*s14*s24*s13^3-36*s12*s34^2*d^2*s24^2*s13-8*s12*d*s24^4*s13-128*s23*s12*s34*d*s14^2*s24+16*s12^2*d*s14*s24^2*s13-2*s23^2*s34^4*d-3*d^2*s24^4*s13^2-2*s23*s12*s34^2*d*s24*s13+12*s12^3*s34^2*s14-12*s23^3*s14*s13^2+16*s12^4*s14*s24-2*s23*s34^2*d*s13^3+60*s12*s34^3*d*s24^2+28*s23^2*s34*s24^2*s13-2*s23*s34^4*d^2*s14+12*s23^2*s12*s34^2*d^2*s14+26*s23*d*s14*s13^4+4*s23^2*s12*d^2*s14*s24*s13-8*s12^4*d*s14^2-112*s23^2*s12*d*s14^2*s13-12*s23*s34^3*s24*s13-64*s23^2*s12*s14*s24*s13+60*s23*s12*s34*s24^3+2*s12^3*s34*d*s14^2+4*s23^2*s34*s13^3-18*s34^2*d^2*s24^3*s13-12*s23*s34*d^2*s24^3*s13-8*s12^3*d^2*s14*s13^2+10*s23^2*s34^2*d^2*s14*s13-8*s23^2*s34^3*d*s24+108*s12*s34*s24^2*s13^2+6*s12*s34^5*d+88*s23*s12^2*s34^2*s13+24*s12^2*s34^2*d*s24*s13+36*s12^3*s34*s14*s24+4*s23*s12^2*s34*d^2*s14*s24-6*s23^2*s12*s34^3*d-12*s23^3*d^2*s14^2*s24+18*s23*s34^2*d*s24^2*s13+8*s12^5*s34-7*s12*s34^2*d^2*s14^2*s13+12*s12*s34^4*d*s14-s12*s34^2*d^2*s13^3-10*s23*s34^3*d^2*s24^2+16*s34^3*d*s14*s24^2+22*s23^2*s12^2*d*s14*s24-6*s23*s12^3*s34*d^2*s14-84*s23*s12^2*s14*s13^2-14*s12*d^2*s14*s24*s13^3+16*s23*s12^4*s34-15*s12^2*s34^3*d^2*s24-18*s23*s12^2*s34*d*s13^2-8*s23*d*s24^2*s13^3-12*s23*s12*s34^3*d^2*s24-12*s23^3*s34*d^2*s14^2+32*s23^2*s12^2*s34*s24-8*s23^2*s14^3*s24+20*s24^4*s13^2+8*s23^2*s34*d^2*s14^2*s24+8*s34*s14^2*s24^2*s13+20*s12^3*s34^2*d*s24+20*s23*s12*s24^2*s13^2-12*s12^2*d^2*s14*s24^3-18*s23*s12*s34*d^2*s14*s13^2-2*s23*s34*d*s13^4+12*s23*s34^2*d^2*s14*s24^2-32*s23^3*s12*s14*s24-36*s23^3*s12*d*s14^2+8*d*s14*s24^2*s13^3-96*s23*s12*d*s14^2*s24*s13+10*s23*s12*d^2*s14*s24^3-12*s34^3*d^2*s24^2*s13-2*s34*d*s14*s24^2*s13^2-3*s34^4*d^2*s24*s13+52*s23^2*s34^2*s14^2+2*s23*d^2*s14*s24^3*s13-42*s23*s12*d*s14^2*s24^2-8*s23*s34^2*s14^2*s24-18*s12^2*d*s14^2*s24*s13+4*s23*s34*s13^4-14*s23*s12^3*d*s24*s13+6*s34*d*s14^2*s24^3-68*s23*s34*s14*s13^3-12*s23^2*s34*d*s24*s13^2+17*s23*d^2*s14^2*s24*s13^2-2*s12^5*d*s14-30*s12^2*s34*d^2*s14*s13^2-12*s23*s12^3*d*s24^2+2*s12^2*d*s14^2*s24^2+50*s12*s34^3*d*s14*s24-2*s23*s34^2*d^2*s14*s24*s13+60*s12^2*s34^2*s13^2+17*s23*s34*d^2*s14^2*s13^2-12*s23^2*s12^2*s34*d*s24-24*s12*s14*s24^2*s13^2-5*s12*d^2*s14^2*s13^3-60*s12*s34*d*s24^2*s13^2+8*s23^2*s12^3*s34+20*s34^3*s24*s13^2-60*s12*s34^2*s14*s13^2+24*s23*d*s14^2*s24^2*s13-2*s34^2*d^2*s14^2*s13^2+48*s23^2*s12*s34*s24*s13-24*s23*s14^3*s24*s13-80*s23^2*s12*s34*s14^2+30*s34^2*d*s14*s13^3-4*s23*s12^4*d*s14+8*s23^2*s34^2*s14*s13+66*s23*s12^2*d*s14*s13^2-3*s23*d^2*s24^4*s13-32*s23^2*s14*s24^2*s13-2*s12*s34*d^2*s24*s13^3-16*s23^2*d^2*s14^3*s24+8*s23^3*s12*d*s14*s13-40*s23*s12^2*s14^3+50*s23*s34*d*s14*s13^3-10*s34^2*d^2*s24^4+68*s23*s12^3*s34*s24+28*s23^2*s34*d*s14*s13^2+4*s23*s34*s24*s13^3-9*s23*s12^2*s34^2*d^2*s24-6*s12^2*s34*d^2*s24*s13^2+10*s12^3*d*s14*s24*s13-8*s23^2*s34*d*s24^3+2*d*s24^6+14*s23*s12^3*d*s14*s13-36*s34*d*s24^3*s13^2-8*s12*d^2*s14*s13^4-56*s23^3*s12*s34*s14-4*s12*s34^4*s13+30*s12^3*s34*d*s14*s24+44*s23^2*s12*s34^2*s24-4*s12*d^2*s24^5-6*s23*s12*s34*d^2*s24*s13^2-4*s23*s34^5+48*s12*s24^3*s13^2+72*s23*s12*s14^2*s13^2+78*s12*s34^2*d*s14*s24^2+8*s23^3*d*s14*s13^2-20*s23^2*s14^2*s24^2+18*s23*s12^2*d*s14^3-22*s12*s34*d^2*s14*s13^3-84*s12*s34*s14*s24*s13^2+22*d*s14*s24*s13^4+4*d*s14*s24^5-10*s23*s34*d*s24*s13^3-12*s12^3*d*s14^2*s24-4*s12^4*d*s14*s24-21*s12^2*s34*d^2*s24^3+4*s12*s14*s24^4-12*s23*s12*s34*d^2*s24^3-4*s12^2*s34^4-16*s34^2*d*s24*s13^3+48*s23^3*d*s14^3-18*s23*s12^2*d*s24*s13^2+32*s23^2*s34^2*s24*s13+8*s23^2*s12*d^2*s14*s24^2+72*s12*s34^2*s24*s13^2-12*s34^3*s14*s13^2+18*s23*s12*s34^2*d*s24^2-152*s23^2*s12*s34*s14*s13-9*s34^2*d^2*s24^2*s13^2-9*s23*s34*d^2*s24^2*s13^2-8*s23*s34^4*s14+60*s12^2*s34^2*d*s24^2-3*s23*s12^2*s34^3*d^2+104*s12*s34*s24^3*s13+42*s12*s34*d*s14^2*s13^2+8*s23*s34^2*s13^3-8*s23*s34^3*s24^2+16*s34*d*s14*s24^4-68*s23^2*s12*s14*s24^2-s12*d^2*s24^2*s13^3)*(s23+s12+s34+s14+s24+s13)^(-1)*(-2+d)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (1/2*(28*s23*s12*s14*s24^2*s13+44*s12^2*s34^2*s14*s13+8*s23*s12*d^2*s14^3*s24-12*s12^2*s14^2*s24^2+18*s23*s34^2*d^2*s14^2*s13+20*s23*s12*s34^2*s14*s13+32*s12^2*s14*s24^2*s13+12*s23*s12*s34*d^2*s14^2*s24+16*d*s14^2*s24^2*s13^2-3*s12^2*s34*d^2*s14^2*s24+28*s23*s14*s24^2*s13^2-2*s23*d^2*s14^2*s13^3-8*s23*s34*s14^3*s13-4*s23*s12*s34*d^2*s14*s24*s13-16*s34^3*d^2*s14*s24*s13+24*s23*s34^2*s14*s13^2-s23*d^2*s14*s24*s13^3+4*s12*s34^4*s14+8*s12*s34^2*s14^2*s24-8*s12^2*s34*d^2*s14*s24*s13+2*s34^4*d*s14^2-3*s23*s12*s34^2*d^2*s14*s13+108*s12*s34*s14*s13^3-12*s23*s34*d*s14^3*s13-4*s12^2*s34^2*d^2*s14*s13-4*d^2*s14*s24^3*s13^2+26*s23*s12^2*d*s14^2*s24-28*s23^2*s12^2*s14^2-9*s34^2*d^2*s14^2*s24*s13+8*s23*s12^2*d^2*s14^3+44*s12*s34^2*s14*s24*s13+4*s14*s24^3*s13^2+28*s23^2*s34*d*s14^2*s24+32*s12*s34*d*s14*s24^2*s13-8*s23^3*d*s14^2*s24+4*s23^2*d*s14*s24^2*s13+4*s12^2*s34^2*s14^2-2*s12*s34^2*d*s14^2*s13+32*s23*s34*d^2*s14^2*s24*s13-6*s34^3*d^2*s14*s24^2-40*s23*s14^3*s13^2-8*s12*d^2*s14*s24^2*s13^2+20*s23*s12^3*s14*s13-32*s12^3*d*s14*s13^2+4*s23^2*s34^2*d*s14*s13-8*s23*s12^2*s34*d*s14*s24-12*s23*s12^2*d*s14*s24*s13-104*s23^2*s12*s14^2*s13+6*d*s14*s24^4*s13+s23*d^2*s14*s13^4-4*s23^2*s12*d^2*s14^2*s13-16*s12*s34*d^2*s14*s24*s13^2-4*s23*s12^2*s34*s14*s24+28*s34^2*s14*s24*s13^2-4*s34^2*d^2*s14*s13^3+3*s23*s12^2*d^2*s14*s13^2+8*s23^2*d*s14^3*s24+108*s12*s14*s24*s13^3+52*s23*s34*s14*s24*s13^2+16*s23*d^2*s14^3*s24*s13+8*s23*s12^2*s34*d*s14^2-8*s23^2*s34*s14*s24^2+12*s23*s34*d*s14^2*s13^2-12*s12*s34^3*d^2*s14*s24-14*s12*d*s14^2*s13^3+8*s23^2*s34*d*s14*s24*s13+48*s12^3*s14*s13^2+2*s34^2*d*s14^2*s13^2-24*s23^2*s34*s14^3-12*s34*d*s14*s24*s13^3+4*s23*s12*d^2*s14^2*s24^2-s34*d^2*s14^2*s24^3-72*s23*s12*s34*s14^2*s13-36*s12^2*s14^2*s24*s13-128*s23*s12*s14^2*s24*s13-4*s23*s12^2*s34^2*s14-2*s12^2*d^2*s14^2*s24^2+6*d*s14^2*s24^3*s13-72*s12^2*s34*d*s14*s13^2-48*s23*s12*s34*d*s14*s13^2+8*s23*s14*s24^3*s13-14*s23*s34^2*d*s14^3-12*s23*s34^2*d*s14*s24^2-52*s23*s34*s14^2*s13^2-80*s23*s14^2*s24*s13^2+20*s12*s34^3*s14*s13-8*s23*s34*d*s14*s24*s13^2+26*s12*d*s14^2*s24^2*s13-s12^3*s34*d^2*s14^2+8*s23^3*s14^2*s24-12*s23*s34^3*d*s14*s24-s12*s34*d^2*s14^2*s13^2-s34*d^2*s14*s24^4-2*s12^4*d^2*s14^2-64*s12*s34*d*s14*s13^3-4*s12^3*d^2*s14^2*s24+8*s23^2*s12^2*s14*s13+32*s34^2*d*s14*s24*s13^2-4*s23*s34^4*d*s14+24*s12*s34*d*s14^2*s24*s13+8*s34^3*d*s14^2*s13-8*s23^3*s34*d*s14^2+10*s34^4*d*s14*s13-12*s12*s34^2*d^2*s14*s24^2-8*s23^2*s12*s34*d*s14*s13-18*s34^2*d^2*s14*s24^2*s13-4*s12*s34^4*d^2*s14+2*s34^5*d*s14+2*s23*s34*d^2*s14*s24^2*s13-8*s23*s12^3*s34*d*s14+8*s12^2*s34^3*s14+60*s23*s12*s14*s13^3-10*s12*d^2*s14^2*s24*s13^2+12*s23^2*d*s14^2*s24*s13-4*s34^3*s14*s24*s13-4*s12*d^2*s14*s24^3*s13-32*s12*d*s14*s13^4+s23*s12^3*d^2*s14*s13-48*s23*s12^2*s14^2*s24-4*s12^4*s34*d*s14+4*s12*s34*d*s14*s24^3+d^2*s14*s13^5+24*s23^2*s12^2*d*s14^2-5*s12^3*d^2*s14^2*s13+s12^4*d^2*s14*s13+8*s23^2*s12*d^2*s14^3-24*s23^3*s14^2*s13+s34*d^2*s14*s13^4-3*s12*s34*d^2*s14^2*s24^2-12*s12^3*s34*s14^2-48*s12*d*s14*s24*s13^3-4*s23*s34^3*d*s14*s13-8*s23^2*s12*d*s14*s13^2-12*s12^4*s14^2-108*s23*s12^2*s14^2*s13+8*s23^2*s14*s13^3-8*s12*s34^2*d^2*s14*s13^2+24*s34*s14^2*s13^3+12*s14*s13^5+12*s14^2*s24*s13^3+8*s34^4*d*s14*s24+4*s12^3*s34*d^2*s14*s13+6*s34^3*d*s14^2*s24-9*s34*d^2*s14^2*s24*s13^2-s23*s12*d^2*s14*s24^2*s13+6*s34^2*d*s14^2*s24^2-3*d^2*s14^2*s24*s13^3+10*s23*s34^3*d^2*s14^2-12*s12*s34^3*d^2*s14*s13+8*s23^2*s34*s14*s13^2-24*s23*s34*d*s14^2*s24^2-8*s34*d^2*s14*s24^3*s13-16*s23^2*d*s14^3*s13+s23*s34*d^2*s14*s24^3-s23*s12*s34^3*d^2*s14-4*s12^2*s34^3*d^2*s14-4*s34^2*d^2*s14*s24^3-4*s12^2*d^2*s14*s24^2*s13-8*s23^2*d^2*s14^4-16*s12*s14^2*s24^2*s13+40*s23*s12^2*s34*s14*s13+36*s34*s14*s13^4-36*s23*s12*d*s14*s13^3+12*s12*s34^3*s14*s24+2*s12*s34^3*d*s14^2-48*s12^2*d*s14*s24*s13^2-48*s12^2*d*s14*s13^3-4*s23*s12*s34*d*s14*s24^2-8*s23*s34^2*d*s14*s13^2+4*s23*s34*s14^2*s24^2+20*s34*d*s14^2*s24^2*s13-8*s12^2*s34*s14^2*s24-24*s23*s12*d*s14*s24*s13^2-2*s12^2*s34*d*s14*s24^2-3*s12^2*d^2*s14^2*s13^2+4*s23^2*s34^3*d*s14-28*s12*s34^2*d^2*s14*s24*s13-8*s23*s12*d^2*s14^2*s13^2-8*s23^3*s12*s14^2-24*s23*s12*s34*s14^3-48*s23*s12*s34*s14^2*s24+20*s34*s14*s24^2*s13^2-44*s23*s14^2*s13^3-8*s34^3*d^2*s14*s13^2-4*s23^2*s12^2*s34*d*s14+8*s23^3*d*s14^2*s13-8*s23^2*s34*s14*s24*s13+4*s12*s34^2*d*s14^2*s24+32*s14*s24^2*s13^3+8*s23^2*s34*d*s14^2*s13+36*s34^2*s14*s13^3+4*s23^2*s12*d^2*s14^2*s24+48*s23^3*s14^3-16*s23^2*s12*s14^2*s24-8*s12^3*s34^2*d*s14+8*s23^2*s34^2*d*s14*s24+26*s23*s12^3*d*s14^2+28*s12*s34*s14*s24^2*s13-36*s23*s12^2*s34*d*s14*s13+4*s23^2*s12*s34*d^2*s14^2-8*s23*s34^2*d*s14*s24*s13+12*s23*s34^2*s14*s24^2-2*s12^2*s34*d^2*s14^2*s13+14*s23*d^2*s14^2*s24^2*s13+20*s23*s34^2*d^2*s14^2*s24+4*s23*s34^3*s14^2+8*s34*s14^2*s24*s13^2-4*s12^2*s34^2*d*s14^2+8*s23*s12*s34*d^2*s14^2*s13+16*s12^2*s34^2*s14*s24+8*s23*s12*d^2*s14^3*s13+2*s23*s12*s34^2*d*s14^2-12*s34*s14*s24^3*s13+76*s23*s12^2*d*s14^2*s13+48*s23^2*s34*d*s14^3-8*d*s14^2*s13^4+20*s23*s14*s13^4-s23*s12^2*s34^2*d^2*s14-16*s34*d^2*s14*s24^2*s13^2-16*s23*s34*d*s14^3*s24-4*d^2*s14*s24^2*s13^3-8*s12^2*s34^2*d^2*s14*s24+4*s23*s12*d^2*s14^2*s24*s13+8*s23^2*s14*s24*s13^2-2*s23*s12*s34^2*d^2*s14*s24-11*s12^2*d^2*s14^2*s24*s13+36*s23^2*d*s14^2*s13^2+4*s12*s34*s14*s24^3-2*s23^2*s34^2*d^2*s14^2-8*s23^2*s12*s34^2*s14+36*s14*s24*s13^4+30*s23*d*s14^2*s24*s13^2+16*s12*s34^2*s14^2*s13+40*s23*s12^2*s14*s24*s13-28*s12*s34^2*d*s14*s13^2-16*s23*s12*s14^2*s24^2-76*s23^2*s14^2*s13^2+4*s12*s34^3*s14^2-32*s12^3*s34*d*s14*s13-3*s34^3*d^2*s14^2*s24-4*s34^4*d^2*s14*s24-4*s14^2*s24^2*s13^2-s23*s12^2*d^2*s14*s24*s13+4*s23^2*s34*d*s14*s24^2-32*s12*s34*d*s14*s24*s13^2-d^2*s14*s24^4*s13-4*s23^2*s12*s34*d*s14^2+36*s12^3*s14*s24*s13+22*s34^2*d*s14^2*s24*s13+16*s23^2*s12*s14*s13^2-20*s34*d*s14*s13^4+2*s12*s34*d*s14^2*s24^2-20*s12*s34*d^2*s14*s24^2*s13-4*s23*s12^3*d^2*s14^2-8*s23^2*s12*s34*s14*s24+48*s12*s14*s13^4-4*s12*d*s14*s24^2*s13^2-8*d*s14*s13^5-4*s12*s34*d^2*s14*s24^3-8*s12^4*d*s14*s13-68*s23*s34*d*s14^2*s24*s13+22*s12^3*d*s14^2*s13+8*s23*s12*s34^2*d^2*s14^2-28*s12^2*s34*d*s14*s24*s13+4*s23*s34*s14*s24^3+6*s12^2*d*s14^2*s13^2-4*s12^2*s34*d^2*s14*s24^2-4*s23*s34^2*s14^2*s13+74*s23*s12*d*s14^2*s13^2-12*s34*d*s14^2*s13^3-s12^2*s34^2*d^2*s14^2+68*s34*s14*s24*s13^3-32*s23*s12*s34^2*s14^2+12*d*s14*s24^3*s13^2+3*s23*s12*d^2*s14*s13^3+80*s23*s12*s14*s24*s13^2-s23*s12*s34*d^2*s14*s24^2+6*s12^2*d^2*s14*s13^3+108*s12^2*s14*s24*s13^2+24*s12*s14^2*s13^3+16*s23*s12*s34*d*s14^3-2*s23*s34^2*d^2*s14*s13^2+28*s23^2*s34^2*d*s14^2-4*s14*s24^4*s13-4*s23*s34*d*s14*s24^3-32*s23*s12^3*s14^2-5*d^2*s14^2*s24^2*s13^2+8*s34^2*d*s14*s24^3-16*s23^2*s34^2*s14*s24-8*s23*s12^2*s34^2*d*s14+12*s12*s34^2*s14*s24^2+8*s23*s34*s14^2*s24*s13-3*s34^2*d^2*s14^2*s24^2+10*s23*s34*d^2*s14^2*s24^2-12*s23*d*s14*s24*s13^3+8*s12*s34^3*d*s14*s13-4*s34^2*s14^2*s24*s13-16*s23*s12*s34*d*s14*s24*s13-16*s23^2*s34*d^2*s14^3+36*s34^3*d*s14*s24*s13-12*s12*s34*d^2*s14^2*s24*s13+2*s23*s12^2*s34*d^2*s14*s13+36*s12^3*s34*s14*s13+48*s34^2*d*s14*s24^2*s13-56*s23^2*s12*d*s14^3+24*s12*d*s14^2*s24*s13^2-2*s23^2*s12^2*d^2*s14^2-4*s23*s34*d*s14*s24^2*s13+12*s12*d*s14*s24^3*s13+4*s23^2*d^2*s14^2*s24*s13+s12^4*s34*d^2*s14+12*s12^4*s14*s13+8*s23*s12*s14^3*s24-7*s12*d^2*s14^2*s24^2*s13+4*s23^2*s34*d^2*s14^2*s13-3*s23*s34*d^2*s14*s24*s13^2+24*s23^2*s14^3*s13-4*s23^2*s12^2*d*s14*s13+12*s34^2*s14^2*s13^2+10*s34^3*d*s14*s13^2-4*s14^2*s24^3*s13-20*s34^2*d^2*s14*s24*s13^2-6*s12*s34^2*d^2*s14^2*s24-2*s23^2*d^2*s14^2*s13^2-2*s12^2*s34^3*d*s14-8*s23*s12*s34^2*d*s14*s24+16*s23^2*d*s14^4-8*s34*d^2*s14*s24*s13^3-40*s23^2*s34*s14^2*s24-d^2*s14^2*s24^3*s13-24*s12^3*s14^2*s13+24*s23^3*s34*s14^2-4*s23*s12*s34^3*d*s14+12*s23*s34^3*s14*s24-10*s23*s12^2*d^2*s14^2*s13+d^2*s14^2*s13^4-12*s34^2*s14*s24^2*s13+8*s23*s34*d^2*s14^3*s24+24*s23*s34*s14*s24^2*s13+4*s12*s34*s14^2*s24^2-4*s12^2*s34^2*d*s14*s24-4*s23^2*d*s14*s13^3-20*s23*s34^3*d*s14^2-42*s23*s34^2*d*s14^2*s24+20*s23*s12*s34*d*s14^2*s13+76*s12^2*s34*s14*s24*s13-48*s23*d*s14^3*s24*s13-16*s23*s12*d*s14^3*s13+12*s14^2*s13^4+12*s23*s14^2*s24^2*s13-3*s12*s34^3*d^2*s14^2+80*s23*s12*s34*s14*s13^2+72*s12^2*s14*s13^3+48*s23*s12*s34*s14*s24*s13-20*s23*s12^2*s34*s14^2+18*s23*d*s14^3*s13^2-2*s23*d*s14^2*s24^3+108*s12^2*s34*s14*s13^2+36*s12*s34*s14^2*s13^2+8*s23*s34*d^2*s14^3*s13+4*s12*s14*s24^3*s13-26*s12^2*s34^2*d*s14*s13+8*s23*s34^3*s14*s13-2*s23*s12*d^2*s14*s24*s13^2-24*s12^3*s14^2*s24-64*s23^2*s14^2*s24*s13-6*s34*d^2*s14^2*s24^2*s13+88*s23^2*s12*s14^3+2*s23*s12^2*s34*d^2*s14^2-16*s23*s12*s34^2*d*s14*s13-2*s23^2*d^2*s14^2*s24^2+28*s12*s34^2*d*s14*s24*s13-32*s23^2*s34*s14^2*s13+6*s12^2*s34*d*s14^2*s24+24*s23*d*s14^2*s13^3-2*s23*d*s14^3*s24^2+2*d*s14^2*s24*s13^3+24*s23*s34^2*s14*s24*s13+18*s34*d*s14^2*s24*s13^2+8*s12^2*s34*s14*s24^2+8*s23*s34^2*d^2*s14^3+28*s34*d*s14*s24^3*s13-8*s23^2*s34^3*s14-20*s23*s12*d*s14^3*s24-s23*d^2*s14*s24^2*s13^2-32*s23*s34^2*d*s14^2*s13+40*s23*s14*s24*s13^3-2*s12^2*d*s14*s24^2*s13+4*s12^3*s34^2*s14+s23*s34^4*d^2*s14-12*s23*d*s14*s13^4+10*s12^4*d*s14^2+60*s23^2*s12*d*s14^2*s13+8*s23^2*s12*s14*s24*s13+6*s12^3*s34*d*s14^2+4*s12^3*d^2*s14*s13^2+4*s12^3*s34*s14*s24-s23*s12^2*s34*d^2*s14*s24-5*s12*s34^2*d^2*s14^2*s13-s34^5*d^2*s14+4*s12*s34^4*d*s14+12*s34^3*d*s14*s24^2+s23*s12^3*s34*d^2*s14+60*s23*s12^2*s14*s13^2+8*s23^2*s14^3*s24-4*s23^2*s34*d^2*s14^2*s24-8*s34*s14^2*s24^2*s13+s23*s12*s34*d^2*s14*s13^2+3*s23*s34^2*d^2*s14*s24^2+8*s23^3*s12*d*s14^2-2*d*s14*s24^2*s13^3+56*s23*s12*d*s14^2*s24*s13+34*s34*d*s14*s24^2*s13^2-36*s23^2*s34^2*s14^2+s23*d^2*s14*s24^3*s13-2*s23*s12*d*s14^2*s24^2+8*s23*s34^2*s14^2*s24+42*s12^2*d*s14^2*s24*s13+2*s34*d*s14^2*s24^3+40*s23*s34*s14*s13^3+4*s23*d^2*s14^2*s24*s13^2+6*s12^2*s34*d^2*s14*s13^2+10*s12^2*d*s14^2*s24^2+12*s12*s34^3*d*s14*s24+s23*s34^2*d^2*s14*s24*s13+6*s23*s34*d^2*s14^2*s13^2+64*s12*s14*s24^2*s13^2+s12*d^2*s14^2*s13^3+76*s12*s34^2*s14*s13^2-36*s23*d*s14^2*s24^2*s13-4*s34^2*d^2*s14^2*s13^2+24*s23*s14^3*s24*s13+16*s23^2*s12*s34*s14^2-10*s34^2*d*s14*s13^3-8*s23^2*s34^2*s14*s13-36*s23*s12^2*d*s14*s13^2-8*s23^2*d^2*s14^3*s24+40*s23*s12^2*s14^3-s34^4*d^2*s14^2-20*s23*s34*d*s14*s13^3-4*s23^2*s34*d*s14*s13^2-16*s12^3*d*s14*s24*s13-12*s23*s12^3*d*s14*s13+4*s12*d^2*s14*s13^4-5*s34^4*d^2*s14*s13-4*s34^3*d^2*s14^2*s13-8*s12^3*s34*d*s14*s24-120*s23*s12*s14^2*s13^2+12*s12*s34^2*d*s14*s24^2-4*s23^2*s14^2*s24^2-34*s23*s12^2*d*s14^3+4*s12*s34*d^2*s14*s13^3+140*s12*s34*s14*s24*s13^2-16*d*s14*s24*s13^4+20*s12^3*d*s14^2*s24-24*s23^3*d*s14^3+12*s34^3*s14*s13^2+8*s23^2*s12*s34*s14*s13+4*s23*s34^4*s14-18*s12*s34*d*s14^2*s13^2+2*s34*d*s14*s24^4+3*s23*s34^3*d^2*s14*s24)*(s23+s12+s34+s14+s24+s13)^(-1)*(-2+d)^(-1)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)) +
  INT["pentagon1x123",2,5,2,0,{1,0,1,0,0}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(-2+d)^(-1)*(40*s23*s24^3*s13^2-176*s23*s12*s14*s24^2*s13+8*s12^2*s34^2*s14*s13-s12^5*d^2*s14+3*s23*s12^3*d^2*s24^2-4*s23*s34^2*d^2*s14^2*s13-64*s23*s12*s34^2*s14*s13+4*s23*s34^4*s13-40*s12^2*s14*s24^2*s13-6*s23^2*s12*s34*d*s24^2-60*s12*s34^2*d*s24^2*s13+2*s12*d^2*s24^4*s13+4*d^2*s24^3*s13^3+12*s23^3*s12*d^2*s14^2-104*s23*s14*s24^2*s13^2-4*s23*d^2*s14^2*s13^3+4*s12^3*s34^3*d^2-48*s23*s12*s34*d^2*s14*s24*s13+3*s23*s12^4*s34*d^2+12*s12^3*s34^2*d^2*s24-48*s23*s34^2*s14*s13^2+3*s23*s34*d^2*s13^4-20*s23*d^2*s14*s24*s13^3+56*s23*s12*s13^4+3*s23*d^2*s24*s13^4-2*s12^2*s34*d^2*s14*s24*s13+156*s12*s34^2*s13^3+32*s23^2*s12*s24^2*s13-72*s23*s12^2*d*s13^3-6*s23^2*d*s14^2*s24^2-24*s23*s12*s34^2*d^2*s14*s13-10*s23*s12^4*d^2*s14+56*s12*s34*s14*s13^3+44*s24^3*s13^3-6*s23^2*s34^2*d*s24*s13-200*s12^3*d*s24*s13^2-110*s12*s34*d*s13^4+8*s12*s34*d^2*s24^3*s13+5*s12^2*s34^2*d^2*s14*s13-d^2*s14*s24^3*s13^2-6*s23^2*s12^3*d*s24+4*s12^5*s34*d^2-36*s23*s12^2*d*s14^2*s24+112*s23^2*s12^2*s14^2+132*s23*s12^3*s24*s13-32*s23*s12^4*d*s13+88*s23*s34^2*s24*s13^2+3*s23*d^2*s24^2*s13^3+8*s12*s34^2*s14*s24*s13+s34^4*d^2*s13^2+36*s23*s12^3*s24^2+104*s23*s12^2*s13^3+140*s12*s34*s13^4-12*s23^2*s34*d*s14^2*s24-48*s23*s12^4*s14+28*s23*s34*s24^3*s13+3*s23*s12^3*s34^2*d^2+8*s12*s34*d*s14*s24^2*s13-12*s23^3*d*s14^2*s24+30*s23^2*d*s14*s24^2*s13+116*s23*s12*s34^2*s24*s13+156*s12^2*s34^2*s24*s13+32*s23^2*s12*s34*s13^2-8*s23^2*s12^2*d^2*s14*s24-8*s12^5*s14-32*s23*s12^2*s34^2*d*s24-5*s12*d^2*s14*s24^2*s13^2+20*s12^3*d^2*s13^3+6*s12^2*s34^2*d^2*s24^2-12*s23^2*d^2*s14*s24*s13^2-184*s23*s12^3*s14*s13+16*s12^3*s24^3+12*s12^3*d*s14*s13^2-26*s12^5*d*s13-8*s23*s34*d*s24^3*s13+26*s23^2*s34^2*d*s14*s13+72*s23*s12^2*s34*d*s14*s24+36*s12^2*s34^2*d^2*s24*s13-8*s23*s12*s34*d*s24^3+6*s23*s12*s34^2*d^2*s24*s13-8*s23^3*d^2*s14^3-8*d*s24^4*s13^2+298*s23*s12^2*d*s14*s24*s13+168*s23^2*s12*s14^2*s13+360*s12*s34*s24*s13^3+12*s23^2*s34^2*s13^2-6*s23*d^2*s14*s13^4-6*s23^2*s12^3*s34*d+36*s23^2*s12*d^2*s14^2*s13+12*s23*s12*s34^2*s24^2-14*s12^2*s34*d*s24^3+2*s12*s34*d^2*s14*s24*s13^2-88*s23*s12^2*s34*s14*s24+16*s34^2*s14*s24*s13^2+3*s34^2*d^2*s14*s13^3+8*s23^3*s12*s34*d*s14+4*s23*s12^2*s34^3+40*s23^2*s12^2*s24*s13-48*s23*s12^2*d^2*s14*s13^2+4*s23^2*d*s14^3*s24-276*s12*s34*d*s24*s13^3-2*s23^2*s12^4*d+24*s12*s14*s24*s13^3-2*s23*d*s24^4*s13-152*s23*s34*s14*s24*s13^2+240*s12^2*s34*s13^3-16*s23*s34*d^2*s14*s13^3-12*s23*s12^2*s34*d*s14^2-8*s23^2*s34*s14*s24^2-16*s23^4*d*s14^2+36*s23*s34*d*s14^2*s13^2+48*s34^2*s13^4+36*s12*s34*d^2*s24^2*s13^2-68*s23^2*s12^3*s14-12*s23^3*s34^2*s14+56*s23^2*s34*d*s14*s24*s13+12*s23*s12^3*s34*d^2*s13-16*s12^3*s14*s13^2-8*s12*s34^4*d*s13-20*s34*d*s14*s24*s13^3+4*s23*s12*d^2*s14^2*s24^2+24*s23^3*d*s14*s24*s13-2*s23^2*s12*d*s24^3+12*s23*s12^3*d^2*s24*s13-180*s12^3*s34*d*s13^2-120*s12*d*s24*s13^4-24*s23*s12*s34*s14^2*s13+24*s23*s12*s14^2*s24*s13-24*s34^3*d*s13^3+s12^2*d^2*s24^4-16*s23*s12^2*s34^2*s14-24*s12^2*s34*d*s14*s13^2+172*s23*s12*s24*s13^3+206*s23*s12*s34*d*s14*s13^2+12*s12^4*s34*d^2*s24+6*s12^2*d*s14*s24^3-24*s23^2*s12*s34*d*s24*s13-16*s23*s14*s24^3*s13+44*s34*s24^3*s13^2+84*s12^3*s34^2*s13-40*s23*s34*s14^2*s13^2-16*s23*s14^2*s24*s13^2+8*s23^3*s34*d*s14*s24-70*s12^4*d*s13^2+8*s12*s34^3*s14*s13+6*s23*s12*d*s14*s24^3+24*s23^2*s12*d*s14*s24^2+144*s23*s34*d*s14*s24*s13^2+240*s12^3*s24*s13^2-42*s34^2*d*s24^2*s13^2+32*s23^3*s14^2*s24-46*s23*s34*d*s24^2*s13^2-150*s12*d*s24^2*s13^3+4*s23^2*s13^4-44*s12*s34*d*s14*s13^3-3*s12^4*d^2*s14*s24+44*s23*s12^2*s34*s24^2+6*s23*s34*d^2*s24*s13^3+4*s23^2*s34^3*s13-200*s23^2*s12^2*s14*s13+12*s34^2*d^2*s24*s13^3+3*s23*s34^2*d^2*s13^3-10*s34^2*d*s14*s24*s13^2+18*s23*s12^2*d^2*s24*s13^2+20*s23^2*s12*s34^2*d*s14+4*s23*s12*s34^3*s24+16*s23^2*s12*s13^3+18*s23*s12^2*s34*d^2*s13^2+80*s12^4*s34*s13-8*s23*s12*s34^3*d*s24-2*s12^2*s34^4*d+20*s23^3*s34*d*s14^2-2*s12^3*s34*d^2*s14*s24+40*s12*s34^3*s24*s13-38*s23*s12*d*s13^4+112*s23^2*s12*s34*d*s14*s13-16*s23^3*s34*s14*s24-172*s23*s12*s34*d*s24*s13^2-10*s12^2*s34^3*d*s24+104*s23*s34*s24^2*s13^2-10*s23^2*s34*d^2*s14*s13^2-4*s23^2*s14*s24^3-126*s12*s34^2*d*s13^3+192*s12^2*s34*s24^2*s13-4*s23*s34*d^2*s14*s24^2*s13-360*s12^2*s34*d*s24*s13^2+58*s23*s12^3*s34*d*s14-168*s23*s12*s14*s13^3-92*s23^2*d*s14^2*s24*s13+148*s23*s12*s34*s24^2*s13-2*s12*d^2*s14*s24^3*s13-18*s12*d*s14*s13^4+44*s12*s13^5+4*s34*d^2*s24^3*s13^2-36*s23*s12^3*d^2*s14*s13+40*s23*s12^2*s14^2*s24+220*s23*s12^2*s34*s24*s13-116*s23^2*s12^2*s14*s24+10*s12^4*s34*d*s14+28*s23*s12*s34^3*s13+108*s34*s24*s13^4+12*s12*s34^3*d^2*s13^2-2*s23^2*d*s24^3*s13+d^2*s14*s13^5-94*s23^2*s12^2*d*s14^2+180*s23*s12^2*s34*s13^2-3*s12^4*d^2*s14*s13-4*s23^2*s12*d^2*s14^3+32*s23^2*s34*s24*s13^2+96*s23^3*s14^2*s13+8*s12*s34^3*d^2*s24*s13+3*s34*d^2*s14*s13^4-76*s12*d*s24^3*s13^2-12*s12*d*s14*s24*s13^3+10*s23*s34^3*d*s14*s13+136*s23^2*s12*d*s14*s13^2+9*s23*s12*d^2*s24^2*s13^2+32*s23*s12^2*s14^2*s13+12*s34*d^2*s24^2*s13^3-20*s23*s12^3*d^2*s14*s24+76*s12^2*s24^3*s13+s12^2*s34^4*d^2-14*s23*s34^3*d*s13^2-64*s23^2*s14*s13^3+2*s23^2*s34*d^2*s14*s24^2+36*s12^2*d^2*s24^2*s13^2+180*s23^2*s12*d*s14*s24*s13-12*s23*s12*s14*s24^3-220*s12^2*d*s24*s13^3-32*s23^3*s34*s14*s13+44*s23^2*s12*s34*d*s14*s24+7*s12*s34^2*d^2*s14*s13^2-2*s23*s12*d*s24^4+8*s14*s13^5-2*s23^2*d*s13^4-44*s12^2*s34^3*d*s13-44*s23*s34^2*d*s24*s13^2-24*s23*s12*s34^3*d*s13+3*s23*s12^2*s34*d^2*s24^2+36*s12^4*s34*s24+4*s23^2*s12*s24^3-6*s23^2*s12^2*s34^2*d-104*s23*s12*d*s24*s13^3+6*s23*s12^3*s34*d^2*s24-18*s23^2*s12*d*s24*s13^2-24*s12^3*s14*s24^2-24*s23*s12*d^2*s14*s24^2*s13+2*s12*s34^3*d^2*s14*s13-104*s23^2*s34*s14*s13^2-8*s23*s34^3*d*s24*s13+12*s34*d^2*s24*s13^4+4*d^2*s24*s13^5-56*s23^2*s12^2*s34*s14-20*s23^2*d*s14^3*s13+20*s12^4*d^2*s24*s13+92*s23*d*s14*s24^2*s13^2+24*s12^3*d^2*s24^2*s13+12*s12^2*s34*s24^3-4*s23*s12*s34^3*d^2*s14+s12^2*s34^3*d^2*s14+16*s23*s12^3*s34^2-7*s12^2*d^2*s14*s24^2*s13+8*s34^4*s13^2-212*s23*s12^2*s34*s14*s13-10*s23*s12^2*d^2*s14*s24^2+24*s34*s14*s13^4+16*s23^3*s34*d*s14*s13+140*s23*s12*d*s14*s13^3+48*s12^3*s34*d^2*s24*s13-24*s12^4*d*s24^2+36*s12*s34^2*d^2*s24*s13^2+24*s12^2*d*s14*s24*s13^2+20*s12^4*s34*d^2*s13-12*s12^2*d*s14*s13^3+14*s23*s12*s34*d*s14*s24^2+52*s23*s34^2*d*s14*s13^2+4*s34*d^2*s13^5+24*s12^3*s34^2*s24+120*s34*s24^2*s13^3+36*s24*s13^5+16*s23^2*s24*s13^3+314*s23*s12*d*s14*s24*s13^2+10*s12^2*s34*d*s14*s24^2+4*s12^3*s34^3+16*s23^3*s12^2*d*s14+15*s12^2*d^2*s13^4-2*s23^2*s34^3*d*s14+2*s12*s34^2*d^2*s14*s24*s13-4*s23*s12*d^2*s14^2*s13^2+112*s23^3*s12*s14^2+8*s23*s12*s34*s14^2*s24-42*s12^3*s34*d*s24^2+8*s34*s14*s24^2*s13^2+140*s23*s12^2*s24^2*s13-8*s23^2*s12*d*s13^3-20*s23*s12^3*s34^2*d+8*s23^2*s12*s34*s24^2-22*s23^2*s12^2*d^2*s14*s13-32*s23*s14^2*s13^3-8*s23^2*s12^3*d^2*s14+s34^3*d^2*s14*s13^2-36*s34^2*d*s13^4+2*s23*s12*d^2*s24^3*s13+4*s12^3*d^2*s24^3-70*s23*s12^2*s34^2*d*s13+252*s12^2*s24^2*s13^2+d^2*s14*s24*s13^4+42*s23^2*s12^2*s34*d*s14-76*s23^3*d*s14^2*s13-112*s23^2*s34*s14*s24*s13+d^2*s13^6+6*s23*s12*s34*d^2*s24^2*s13+12*s12^2*d^2*s24^3*s13+20*s23*s12^2*s24^3+8*s14*s24^2*s13^3+96*s23*s12^3*s13^2+36*s12^2*s34*d^2*s24^2*s13+s23*d^2*s24^3*s13^2-56*s23^3*s14*s24*s13-6*s23^2*s34^2*d*s13^2-28*s23^2*s34*d*s14^2*s13-34*s12*d*s13^5-20*s23*s12^4*d*s24+24*s34^2*s14*s13^3-200*s12^2*s34*d*s13^3+72*s12*s34^2*s24^2*s13+12*s23^2*s12*d^2*s14^2*s24+112*s23*s12*s34^2*s13^2-16*s23^3*s14^3+72*s23^2*s12*s14^2*s24-6*s23^2*d*s24^2*s13^2-96*s23*s12*s34*d*s13^3+2*s12^3*s34^2*d*s14-8*s12^3*d^2*s14*s24*s13-4*s23^2*s34^2*d*s14*s24+18*s12^3*d*s14*s24^2-16*s12^5*d*s24-24*s23*s12^3*d*s14^2+48*s23*s24*s13^4-8*s12*s34*s14*s24^2*s13+9*s23*s12*s34^2*d^2*s13^2+190*s23*s12^2*s34*d*s14*s13-82*s23*s12^2*d*s24^2*s13+4*s23^2*s12*s34*d^2*s14^2+36*s12^2*s34^2*d^2*s13^2-42*d*s24^2*s13^4+120*s12^3*s13^3-108*s23*s12^3*s14*s24+24*s12^3*s34^2*d^2*s13+34*s23*s34^2*d*s14*s24*s13+108*s34^2*s24*s13^3-6*s23^2*s34*d*s24^2*s13+4*s23*d^2*s14^2*s24^2*s13-18*s23*s12^4*s34*d-18*s23^2*s12*s34*d*s13^2-12*s23*s12*s34^2*s14*s24-8*s23*s12*s34*d^2*s14^2*s13-8*s12^2*s34^2*s14*s24+4*s34^3*d^2*s24*s13^2+s23*d^2*s13^5+4*s23*s12*s34^2*d*s14^2+68*s23*s24^2*s13^3-10*s12^3*s34^3*d+10*s23*s12^3*d^2*s13^2+4*s23^2*s12^4-24*s23*s12^2*d*s14^2*s13-4*s23^2*s34*d*s14^3-40*s23*s14*s13^4-10*s23*s12^2*s34^2*d^2*s14-s34*d^2*s14*s24^2*s13^2-152*s23*s12^2*s34*d*s24*s13-8*s23^2*s12^3*d*s13-d^2*s14*s24^2*s13^3+s12^2*s34^2*d^2*s14*s24-6*s23^2*d^2*s14*s13^3+8*s23*s12*d^2*s14^2*s24*s13-64*s23*s12^3*s34*s14-164*s23^2*s14*s24*s13^2-8*s23*s12*s34^2*d^2*s14*s24-62*s23^2*d*s14^2*s13^2-12*s23*s12^2*d*s24^3+16*s12*s24^4*s13+14*s23*d*s14*s24^3*s13+6*s23^2*s34^2*d^2*s14^2-20*s23^2*s12*s34^2*s14+4*s23*s12*s24^4+16*s14*s24*s13^4-14*s12^5*s34*d+68*s12*s34^3*s13^2+12*s23*d*s14^2*s24*s13^2-344*s23*s12^2*s14*s24*s13-34*s12*s34^2*d*s14*s13^2+8*s23*s12*s14^2*s24^2+40*s12^2*d^2*s24*s13^3+8*s23*s12^5+204*s12*s24^2*s13^3-4*s23^2*s12*s34*d^2*s14*s24+6*s12*d^2*s13^5+3*s23*s34^2*d^2*s24*s13^2+104*s23^2*d*s14*s24*s13^2+3*s23*s12^4*d^2*s24+56*s23^2*s14^2*s13^2+32*s34^3*s13^3+16*s23^2*s12*s34^2*s13+12*s12^3*s34*d*s14*s13+12*s23*s12*d^2*s24*s13^3-6*s23^2*s12^2*s34*d^2*s14-92*s23*s12*d*s24^2*s13^2-6*d*s13^6-6*s23^2*s34*d*s13^3+36*s23*s34^2*s24^2*s13+12*s23^2*s12^2*s24^2-60*s23*s12^2*d^2*s14*s24*s13+94*s23*s12^3*d*s14*s24-84*s34*d*s24^2*s13^3+100*s23*s12^3*s34*s13-2*s23^2*s34*d*s14*s24^2+6*s34^2*d^2*s13^4+52*s23^2*s12^3*d*s14-20*s12*s34*d*s14*s24*s13^2+8*s23^3*s34^2*d*s14-16*s12^3*d*s24^3+9*s23*s12^2*s34^2*d^2*s13-198*s12^2*d*s24^2*s13^2-36*s12*s34^3*d*s24*s13-162*s12^2*s34^2*d*s13^2+4*s23^2*s12*s34*d*s14^2-56*s12^3*s14*s24*s13-4*s23*s34^3*d^2*s14*s13+12*s12^4*s34^2+12*s12*d^2*s24^3*s13^2+24*s23*s34^3*s13^2-196*s23^2*s12*s14*s13^2-18*s34*d*s14*s13^4+4*s12^5*d^2*s24+8*s23*s24^4*s13-2*s12*s34*d^2*s14*s24^2*s13+4*s23*s12^3*d^2*s14^2-20*s23^2*s12*d^2*s14*s13^2-72*s23^2*s12*s34*s14*s24-80*s23*s12*s34^2*d*s13^2+12*s23*s12*s34*d^2*s13^3+24*s12*s14*s13^4+s12^3*s34^2*d^2*s14+2*s23^2*d^2*s14*s24^2*s13-10*s23*s12^2*s34^3*d+14*s12*d*s14*s24^2*s13^2-6*d*s14*s13^5+18*s12^4*d*s14*s13+40*s12^2*s34*d^2*s13^3+8*s23*s34*d*s14^2*s24*s13-4*s12^6*d-4*s23*s12*s34^2*d^2*s14^2+20*s12^2*s34*d*s14*s24*s13-8*s23*d*s13^5-68*s23*s12^3*d*s13^2-s12^2*s34*d^2*s14*s24^2-8*s23*s34^2*s14^2*s13+24*s23*s12*d*s14^2*s13^2+32*s34*s14*s24*s13^3+2*d*s14*s24^3*s13^2-28*s23*s12*d^2*s14*s13^3-364*s23*s12*s14*s24*s13^2-204*s12^3*s34*d*s24*s13-4*s23*s12*s34*d^2*s14*s24^2+2*s12^2*d^2*s14*s13^3-24*s12^2*s14*s24*s13^2-90*s12^3*s34^2*d*s13-192*s12*s34^2*d*s24*s13^2-48*s23^3*s12*s14*s13+20*s23^2*s24^2*s13^2-14*s23*s34^2*d^2*s14*s13^2-6*s23^2*s34^2*d*s14^2+16*s23^3*s12*d*s14*s24+28*s23*s12^4*s24+4*s23^2*d^2*s14^3*s13-26*d*s24*s13^5-114*s12^3*d*s24^2*s13-90*s12^4*d*s24*s13+32*s23*s12^3*s14^2+160*s12*s24*s13^4+s23*s12^2*d^2*s24^3+56*s23*s12^2*d*s14*s24^2-4*s23^2*s34^2*s14*s24+16*s23*s12^2*s34^2*d*s14-8*s23*s34*s14^2*s24*s13+16*s12^5*s24+12*s12^2*s34^2*s24^2+110*s23*d*s14*s24*s13^3-8*s12*s34^3*d*s14*s13+216*s23*s12*s34*d*s14*s24*s13-78*s34*d*s24*s13^4+4*s23^2*s34*d^2*s14^3+44*s23^2*s12*s24*s13^2-18*s23^2*s12^2*s34*d*s13+28*s23*s12^2*s34^2*s24-2*s23^2*s34^3*d*s13+4*s23^2*s34^2*d^2*s14*s24-3*s12^3*d^2*s14*s24^2-48*s23*s12^2*s34*d^2*s14*s13-24*s12^3*s34*s14*s13-6*s23^2*d*s24*s13^3+20*s23^2*s12*d*s14^3+140*s23*s12*s34*s13^3+9*s23*s12^2*d^2*s24^2*s13+6*d^2*s24^2*s13^4+132*s12^3*s24^2*s13+22*s23^2*s12^2*d^2*s14^2+38*s23*s34*d*s14*s24^2*s13-60*s23^2*s12*d*s14^2*s24+8*s12*d*s14*s24^3*s13+20*s23^2*d^2*s14^2*s24*s13-s12^4*s34*d^2*s14-58*s12*s34^3*d*s13^2-24*s12^4*s14*s13-4*s23^3*s14*s24^2-168*s12^2*s34*d*s24^2*s13+2*s23*s12*s34^3*d^2*s13-16*s23*d*s24^3*s13^2-34*s23*s12^2*s34*d*s24^2+12*s23^2*s34*d^2*s14^2*s13+432*s12^2*s34*s24*s13^2-28*s23*s34*d^2*s14*s24*s13^2+28*s23^2*s12^2*s34*s13+16*s23^2*s14^3*s13+280*s12^2*s24*s13^3+284*s23*s12*s34*s24*s13^2-72*s23*s12^2*s14*s24^2+12*s12^2*s34^3*d^2*s13+146*s23^2*s12^2*d*s14*s13+60*s24^2*s13^4+s23*s34^3*d^2*s13^2-28*s23*s12*d*s24^3*s13-6*s34^3*d*s14*s13^2+6*s12^4*s34^2*d^2+12*s23^2*s12^3*s24+s34^2*d^2*s14*s24*s13^2+12*s23^3*d^2*s14^2*s13-80*s23*s12*s34*d*s24^2*s13-62*s12^2*d*s24^3*s13+14*s23^2*d^2*s14^2*s13^2-2*s12^2*s34^3*d*s14+10*s23*s12*s34^2*d*s14*s24+100*s12^4*s24*s13+2*s34*d^2*s14*s24*s13^3+8*s23^2*s34*s14^2*s24-16*s23^3*s34*s14^2+2*s23*s12*s34^3*d*s14+4*s23*s12^2*d^2*s14^2*s13+4*s12^2*s34^3*s24-36*s23*s34*s14*s24^2*s13-44*s23*s12^3*s34*d*s24+2*s12^2*s34^2*d*s14*s24+42*s23^2*d*s14*s13^3+216*s12^3*s34*s24*s13+18*s23*s12^2*s34*d^2*s24*s13+200*s12^3*s34*s13^2-2*s23*s12*s34^4*d+24*s23*s12*s34*d*s14^2*s13-32*s12^2*s34*s14*s24*s13+12*s12^3*s34*d^2*s24^2-26*s34^3*d*s24*s13^2-18*s23^2*s12^2*d*s24*s13+60*s34^2*s24^2*s13^2+80*s12^4*s13^2+2*s23^2*s34^3*d^2*s14-80*s12^2*d*s13^4-232*s23*s12*s34*s14*s13^2+16*s12^2*s14*s13^3-80*s12^4*s34*d*s13+8*s13^6-6*s23^2*s12*s34^2*d*s24-24*s34*d*s13^5+32*s23^4*s14^2-240*s23*s12*s34*s14*s24*s13+16*s23*s12^2*s34*s14^2+4*s12^2*s24^4+s23*s12^5*d^2-12*s23^2*s12^2*d*s13^2+8*s23^2*s24^3*s13+24*s12^2*s34*s14*s13^2+6*s12^4*d^2*s24^2+40*s12^2*s34^3*s13-80*s23*s12^3*s34*d*s13+40*s12^3*d^2*s24*s13^2-8*s12*s14*s24^3*s13+2*s12*s34^4*d^2*s13-44*s12*s34*d*s24^3*s13+4*s23^2*s12^2*s34^2-14*s12^2*s34^2*d*s14*s13-4*s23*s34^3*s14*s13+8*s23*s12^2*d^2*s14^2*s24-6*s12^2*d^2*s14*s24*s13^2+12*s23*s13^5-28*s23*d*s24*s13^4-60*s23*s12*d^2*s14*s24*s13^2+80*s23^2*s14^2*s24*s13-16*s23^2*s12*s14^3-16*s12^4*s34*s14-12*s23^2*s12*d*s24^2*s13+68*s23*s12*s34^2*d*s14*s13-2*s23^2*d^2*s14^2*s24^2-8*s12*s34^2*d*s14*s24*s13+8*s23^2*s34*s14^2*s13+60*s23*s12*s24^3*s13-6*s23^2*s12^2*d*s24^2+24*s23*d*s14^2*s13^3+148*s23*s12*d*s14*s24^2*s13+100*s12^2*s13^4-30*d*s24^3*s13^3-24*s23*s34^2*s14*s24*s13+15*s12^4*d^2*s13^2-16*s12^2*s34*s14*s24^2-12*s23^2*s12*s34^2*d*s13-2*s23*s34^4*d*s13-8*s12^2*s14*s24^3-24*s23*s12*s34*s14*s24^2-42*s12^4*s34*d*s24+228*s23*s12^2*s24*s13^2-28*s23^3*s12^2*s14-14*s23*d^2*s14*s24^2*s13^2+4*s34^3*d^2*s13^3-4*s12^2*d*s24^4-6*s23*s12^5*d+24*s12^4*s24^2+12*s23*s34^2*d*s14^2*s13+36*s12^3*s34*s24^2+40*s12^3*s34*d^2*s13^2-128*s23*s14*s24*s13^3+12*s12*s34^2*d^2*s24^2*s13-12*s12*d*s24^4*s13-8*s23*s12*s34*d*s14^2*s24+34*s12^2*d*s14*s24^2*s13+d^2*s24^4*s13^2-76*s23*s12*s34^2*d*s24*s13-8*s12^3*s34^2*s14-20*s23^3*s14*s13^2-24*s12^4*s14*s24-30*s23*s34^2*d*s13^3+20*s23^2*s34*s24^2*s13-4*s23^2*s12*s34^2*d^2*s14+32*s23*d*s14*s13^4+32*s34*s13^5-20*s23^2*s12*d^2*s14*s24*s13-156*s23^2*s12*d*s14^2*s13+20*s23*s34^3*s24*s13-280*s23^2*s12*s14*s24*s13+12*s23*s12*s34*s24^3+12*s23^2*s34*s13^3-2*s12^3*d^2*s14*s13^2-2*s23^2*s34^2*d^2*s14*s13+276*s12*s34*s24^2*s13^2+80*s23*s12^2*s34^2*s13-150*s12^2*s34^2*d*s24*s13-32*s12^3*s34*s14*s24-20*s23*s12^2*s34*d^2*s14*s24-2*s23^2*s12*s34^3*d-4*s23^3*d^2*s14^2*s24-12*s23*s34^2*d*s24^2*s13+12*s12^5*s34+24*s12*s34^2*d^2*s13^3+76*s23^2*s12^2*d*s14*s24-16*s23*s12^3*s34*d^2*s14+16*s23^2*s12^3*s13+5*s23*s12*d^2*s13^4-264*s23*s12^2*s14*s13^2+20*s23*s12^4*s34+4*s12^2*s34^3*d^2*s24-132*s23*s12^2*s34*d*s13^2-18*s12^4*s34^2*d-34*s23*d*s24^2*s13^3-4*s23^3*s34*d^2*s14^2+16*s23^2*s12^2*s34*s24+12*s24^4*s13^2+4*s23^2*s34*d^2*s14^2*s24-36*s12^3*s34^2*d*s24+172*s23*s12*s24^2*s13^2-s12^2*d^2*s14*s24^3-48*s23*s12*s34*d^2*s14*s13^2-26*s23*s34*d*s13^4-32*s23^3*s12*s14*s24-76*s23^3*s12*d*s14^2-2*d*s14*s24^2*s13^3-24*s23*s12*d*s14^2*s24*s13-2*s34*d*s14*s24^2*s13^2-12*s23*s12*d*s14^2*s24^2+20*s12*d^2*s24*s13^4+40*s23*s34*s13^4-88*s23*s12^3*d*s24*s13-84*s23*s34*s14*s13^3-12*s23^2*s34*d*s24*s13^2+6*s12^5*d*s14+6*s12^2*s34*d^2*s14*s13^2-24*s23*s12^3*d*s24^2-8*s23*s34^2*d^2*s14*s24*s13+180*s12^2*s34^2*s13^2-8*s23*s34*d^2*s14^2*s13^2-12*s23^2*s12^2*s34*d*s24-8*s12*s14*s24^2*s13^2-210*s12*s34*d*s24^2*s13^2+8*s23^2*s12^3*s34+36*s34^3*s24*s13^2+40*s12*s34^2*s14*s13^2-4*s23*d*s14^2*s24^2*s13+20*s12*s34*d^2*s13^4+28*s12^5*s13+48*s23^2*s12*s34*s24*s13-18*s34^2*d*s14*s13^3+10*s23*s12^2*d^2*s13^3+44*s23*s12^4*d*s14-40*s23^2*s34^2*s14*s13+228*s23*s12^2*d*s14*s13^2-72*s23^2*s14*s24^2*s13+48*s12*s34*d^2*s24*s13^3-4*s23^2*d^2*s14^3*s24+44*s23*s12^4*s13+24*s23^3*s12*d*s14*s13+74*s23*s34*d*s14*s13^3+52*s23*s12^3*s34*s24+70*s23^2*s34*d*s14*s13^2+116*s23*s34*s24*s13^3+3*s23*s12^2*s34^2*d^2*s24-100*s12^3*d*s13^3+72*s12^2*s34*d^2*s24*s13^2+44*s12^3*d*s14*s24*s13+164*s23*s12^3*d*s14*s13-30*s34*d*s24^3*s13^2+3*s12*d^2*s14*s13^4+24*s23^2*s12^2*s13^2-6*s34^4*d*s13^2-8*s23^3*s12*s34*s14+8*s12*s34^4*s13+20*s12^3*s34*d*s14*s24+4*s23^2*s12*s34^2*s24-16*s23^2*s12*s34*d^2*s14*s13+18*s23*s12*s34*d^2*s24*s13^2+104*s12*s24^3*s13^2-32*s23*s12*s14^2*s13^2+8*s23^3*d*s14*s13^2+5*s23*s12^4*d^2*s13+8*s23^2*s14^2*s24^2+4*s12^6+8*s12*s34*d^2*s14*s13^3+32*s12*s34*s14*s24*s13^2-10*d*s14*s24*s13^4-64*s23*s34*d*s24*s13^3+18*s12^4*d*s14*s24+4*s12^2*s34*d^2*s24^3-78*s34^2*d*s24*s13^3+24*s23^3*d*s14^3-144*s23*s12^2*d*s24*s13^2+16*s23^2*s34^2*s24*s13+240*s12*s34^2*s24*s13^2+s12^6*d^2+8*s34^3*s14*s13^2+6*s12^5*d^2*s13-12*s23*s12*s34^2*d*s24^2-160*s23^2*s12*s34*s14*s13+6*s34^2*d^2*s24^2*s13^2+3*s23*s34*d^2*s24^2*s13^2-18*s12^2*s34^2*d*s24^2+s23*s12^2*s34^3*d^2+56*s12*s34*s24^3*s13+48*s23*s34^2*s13^3-52*s23^2*s12*s14*s24^2+24*s12*d^2*s24^2*s13^3)*(s12^2+2*s34*s24+s24^2+s13^2+2*s34*s13+s34^2-4*s23*s14+2*s12*s13+2*s12*s34+2*s24*s13+2*s12*s24)^(-2)),

INT["pentagon1x123",3,21,4,3,{1,0,1,-3,2}] -> 
  INT["pentagon1x123",3,21,4,3,{1,0,2,-3,1}] *
      (-1) +
  INT["pentagon1x123",3,21,4,3,{2,0,1,-3,1}] *
      (-1) +
  INT["pentagon1x123",3,21,4,2,{1,0,2,-2,1}] *
      (-s14) +
  INT["pentagon1x123",3,21,4,2,{2,0,1,-2,1}] *
      (-s34-s14-s24) +
  INT["pentagon1x123",3,21,3,2,{1,0,1,-2,1}] *
      (3) +
  INT["pentagon1x123",2,5,3,2,{1,0,2,-2,0}] *
      (1) +
  INT["pentagon1x123",2,5,3,2,{2,0,1,-2,0}] *
      (1) +
  INT["pentagon1x123",2,5,2,1,{1,0,1,-1,0}] *
      (-2),

INT["pentagon1x123",3,21,4,3,{1,0,1,-3,2}] -> 
  INT["pentagon1x123",3,21,4,3,{1,0,2,-3,1}] *
      (-1) +
  INT["pentagon1x123",3,21,4,3,{2,0,1,-3,1}] *
      (-1) +
  INT["pentagon1x123",3,21,4,2,{1,0,1,-2,2}] *
      (-s14) +
  INT["pentagon1x123",3,21,4,2,{2,0,1,-2,1}] *
      (s12+s13) +
  INT["pentagon1x123",3,21,3,2,{1,0,1,-2,1}] *
      (3) +
  INT["pentagon1",2,17,3,2,{1,0,0,-2,2}] *
      (1) +
  INT["pentagon1",2,17,3,2,{2,0,0,-2,1}] *
      (1) +
  INT["pentagon1",2,17,3,1,{1,0,0,-1,2}] *
      (2*s34+2*s14+2*s24) +
  INT["pentagon1",2,17,3,1,{2,0,0,-1,1}] *
      (2*s34+2*s14+2*s24) +
  INT["pentagon1",2,17,3,0,{1,0,0,0,2}] *
      (2*s34*s24+s24^2+s34^2+2*s14*s24+2*s34*s14+s14^2) +
  INT["pentagon1",2,17,3,0,{2,0,0,0,1}] *
      (2*s34*s24+s24^2+s34^2+2*s14*s24+2*s34*s14+s14^2) +
  INT["pentagon1",2,17,2,1,{1,0,0,-1,1}] *
      (-2) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (-2*s34-2*s14-2*s24),

INT["pentagon1x123",3,21,5,0,{2,0,1,0,2}] -> 
  INT["pentagon1x123",3,21,5,0,{2,0,2,0,1}] *
      (-s23*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,0,{1,0,1,0,2}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,0,{1,0,2,0,1}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,0,{2,0,1,0,1}] *
      (-(-6+d)*(s23+s12+s34+s14+s24+s13)^(-1)),

INT["pentagon1x123",3,21,5,0,{1,0,2,0,2}] -> 
  INT["pentagon1x123",3,21,5,0,{1,0,3,0,1}] *
      (-2*s23*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,0,{1,0,2,0,1}] *
      (-(-5+d)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,0,{3,0,1,0,0}] *
      (2*(s23+s12+s34+s14+s24+s13)^(-1)),

INT["pentagon1x123",3,21,5,0,{1,0,1,0,3}] -> 
  INT["pentagon1x123",3,21,5,0,{1,0,2,0,2}] *
      (-1/2*s23*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,0,{1,0,1,0,2}] *
      (-1/2*(-5+d)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,0,{1,0,3,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)),

INT["pentagon1x123",3,21,5,1,{2,-1,1,0,2}] -> 
  INT["pentagon1x123",3,21,5,1,{2,-1,2,0,1}] *
      (-s23*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,1,{1,-1,1,0,2}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,1,{1,-1,2,0,1}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,1,{2,-1,1,0,1}] *
      (-(-5+d)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)),

INT["pentagon1x123",3,21,5,1,{2,-1,1,0,2}] -> 
  INT["pentagon1x123",3,21,5,1,{2,-1,2,0,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,1,{3,-1,1,0,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,0,{2,0,1,0,2}] *
      (s34+s13) +
  INT["pentagon1x123",3,21,5,0,{3,0,1,0,1}] *
      (-2*s23) +
  INT["pentagon1x123",3,21,4,0,{2,0,1,0,1}] *
      (1) +
  INT["pentagon1",2,17,4,0,{1,0,0,0,3}] *
      (2) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (1),

INT["pentagon1x123",3,21,5,1,{2,-1,1,0,2}] -> 
  INT["pentagon1x123",3,21,5,1,{2,-1,2,0,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,1,{3,-1,1,0,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,0,{2,0,1,0,2}] *
      (-s23-s12-s24) +
  INT["pentagon1x123",3,21,5,0,{2,0,2,0,1}] *
      (-s23) +
  INT["pentagon1x123",3,21,4,0,{1,0,1,0,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,0,{1,0,2,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,0,{2,0,1,0,1}] *
      (2),

INT["pentagon1x123",3,21,5,1,{2,0,1,-1,2}] -> 
  INT["pentagon1x123",3,21,5,1,{2,0,2,-1,1}] *
      (-s23*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,1,{1,0,1,-1,2}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,1,{1,0,2,-1,1}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,1,{2,0,1,-1,1}] *
      (-(-5+d)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,0,{2,0,1,0,1}] *
      ((s23+s12+s13)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)),

INT["pentagon1x123",3,21,5,1,{2,0,1,-1,2}] -> 
  INT["pentagon1x123",3,21,5,1,{2,0,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,1,{3,0,1,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,0,{2,0,2,0,1}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,0,{3,0,1,0,1}] *
      (-2*s34-2*s14-2*s24) +
  INT["pentagon1x123",3,21,4,0,{2,0,1,0,1}] *
      (1) +
  INT["pentagon1x123",2,5,4,0,{2,0,2,0,0}] *
      (1) +
  INT["pentagon1x123",2,5,4,0,{3,0,1,0,0}] *
      (2),

INT["pentagon1x123",3,21,5,1,{2,0,1,-1,2}] -> 
  INT["pentagon1x123",3,21,5,1,{2,0,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,1,{3,0,1,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,0,{2,0,1,0,2}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,0,{3,0,1,0,1}] *
      (2*s12+2*s13) +
  INT["pentagon1x123",3,21,4,0,{2,0,1,0,1}] *
      (1) +
  INT["pentagon1",2,17,4,0,{1,0,0,0,3}] *
      (2) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (1),

INT["pentagon1x123",3,21,5,1,{1,-1,2,0,2}] -> 
  INT["pentagon1x123",3,21,5,1,{1,-1,3,0,1}] *
      (-2*s23*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,1,{1,-1,2,0,1}] *
      (-(-4+d)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,1,{2,0,2,-1,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,1,{3,0,1,-1,0}] *
      (-2*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)-s23*(s23+s12+s34+s14+s24+s13)^(-1)-(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,4,0,{3,0,1,0,0}] *
      (2*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)-2*s23*(s23+s12+s34+s14+s24+s13)^(-1)-2*(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      (2*(s23+s12+s34+s14+s24+s13)^(-1)),

INT["pentagon1x123",3,21,5,1,{1,-1,2,0,2}] -> 
  INT["pentagon1x123",3,21,5,1,{1,-1,3,0,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,1,{2,-1,2,0,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,0,{1,0,2,0,2}] *
      (s34+s13) +
  INT["pentagon1x123",3,21,5,0,{2,0,2,0,1}] *
      (-s23) +
  INT["pentagon1x123",3,21,4,0,{1,0,1,0,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,0,{1,0,2,0,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,0,{2,0,1,0,1}] *
      (1),

INT["pentagon1x123",3,21,5,1,{1,-1,2,0,2}] -> 
  INT["pentagon1x123",3,21,5,1,{1,-1,3,0,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,1,{2,-1,2,0,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,0,{1,0,2,0,2}] *
      (-s23-s12-s24) +
  INT["pentagon1x123",3,21,5,0,{1,0,3,0,1}] *
      (-2*s23) +
  INT["pentagon1x123",3,21,4,0,{1,0,2,0,1}] *
      (1) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (1) +
  INT["pentagon1x142",2,5,4,0,{3,0,1,0,0}] *
      (2),

INT["pentagon1x123",3,21,5,1,{1,-1,1,0,3}] -> 
  INT["pentagon1x123",3,21,5,1,{1,-1,2,0,2}] *
      (-1/2*s23*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,1,{1,-1,1,0,2}] *
      (-1/2*(-4+d)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,1,{1,0,3,-1,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,1,{2,0,2,-1,0}] *
      (-1/2*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,0,{1,0,3,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)-s23*(s23+s12+s34+s14+s24+s13)^(-1)-(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)-1/2*s23*(s23+s12+s34+s14+s24+s13)^(-1)-1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)),

INT["pentagon1x123",3,21,5,1,{1,-1,1,0,3}] -> 
  INT["pentagon1x123",3,21,5,1,{1,-1,2,0,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,1,{2,-1,1,0,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,0,{1,0,1,0,3}] *
      (s34+s13) +
  INT["pentagon1x123",3,21,5,0,{2,0,1,0,2}] *
      (-1/2*s23) +
  INT["pentagon1x123",3,21,4,0,{1,0,1,0,2}] *
      (1/2) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (1/2) +
  INT["pentagon1",2,17,4,0,{3,0,0,0,1}] *
      (1),

INT["pentagon1x123",3,21,5,1,{1,-1,1,0,3}] -> 
  INT["pentagon1x123",3,21,5,1,{1,-1,2,0,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,1,{2,-1,1,0,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,0,{1,0,1,0,3}] *
      (-s23-s12-s24) +
  INT["pentagon1x123",3,21,5,0,{1,0,2,0,2}] *
      (-1/2*s23) +
  INT["pentagon1x123",3,21,4,0,{1,0,1,0,2}] *
      (1/2) +
  INT["pentagon1x142",2,5,4,0,{1,0,3,0,0}] *
      (1) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (1/2),

INT["pentagon1x123",3,21,5,1,{1,0,2,-1,2}] -> 
  INT["pentagon1x123",3,21,5,1,{1,0,3,-1,1}] *
      (-2*s23*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,1,{1,0,2,-1,1}] *
      (-(-4+d)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,0,{1,0,2,0,1}] *
      ((s23+s12+s13)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,1,{2,-1,2,0,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,1,{3,-1,1,0,0}] *
      (-2*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)*s14) +
  INT["pentagon1x142",2,5,4,0,{3,0,1,0,0}] *
      (-2*(s23+s12+s34+s14+s24+s13)^(-1)*s14) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      (2*(s23+s12+s34+s14+s24+s13)^(-1)),

INT["pentagon1x123",3,21,5,1,{1,0,2,-1,2}] -> 
  INT["pentagon1x123",3,21,5,1,{1,0,3,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,1,{2,0,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,0,{1,0,3,0,1}] *
      (-2*s14) +
  INT["pentagon1x123",3,21,5,0,{2,0,2,0,1}] *
      (-s34-s14-s24) +
  INT["pentagon1x123",3,21,4,0,{1,0,2,0,1}] *
      (1) +
  INT["pentagon1x123",2,5,4,0,{1,0,3,0,0}] *
      (2) +
  INT["pentagon1x123",2,5,4,0,{2,0,2,0,0}] *
      (1),

INT["pentagon1x123",3,21,5,1,{1,0,2,-1,2}] -> 
  INT["pentagon1x123",3,21,5,1,{1,0,3,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,1,{2,0,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,0,{1,0,2,0,2}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,0,{2,0,2,0,1}] *
      (s12+s13) +
  INT["pentagon1x123",3,21,4,0,{1,0,1,0,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,0,{1,0,2,0,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,0,{2,0,1,0,1}] *
      (1),

INT["pentagon1x123",3,21,5,1,{1,0,1,-1,3}] -> 
  INT["pentagon1x123",3,21,5,1,{1,0,2,-1,2}] *
      (-1/2*s23*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,1,{1,0,1,-1,2}] *
      (-1/2*(-4+d)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,0,{1,0,1,0,2}] *
      (1/2*(s23+s12+s13)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,1,{1,-1,3,0,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,1,{2,-1,2,0,0}] *
      (-1/2*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,0,{1,0,3,0,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)*s14) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (-1/2*(s23+s12+s34+s14+s24+s13)^(-1)*s14) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)),

INT["pentagon1x123",3,21,5,1,{1,0,1,-1,3}] -> 
  INT["pentagon1x123",3,21,5,1,{1,0,2,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,1,{2,0,1,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,0,{1,0,2,0,2}] *
      (-1/2*s14) +
  INT["pentagon1x123",3,21,5,0,{2,0,1,0,2}] *
      (-1/2*s34-1/2*s14-1/2*s24) +
  INT["pentagon1x123",3,21,4,0,{1,0,1,0,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,0,{1,0,2,0,1}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,0,{2,0,1,0,1}] *
      (1/2),

INT["pentagon1x123",3,21,5,1,{1,0,1,-1,3}] -> 
  INT["pentagon1x123",3,21,5,1,{1,0,2,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,1,{2,0,1,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,0,{1,0,1,0,3}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,0,{2,0,1,0,2}] *
      (1/2*s12+1/2*s13) +
  INT["pentagon1x123",3,21,4,0,{1,0,1,0,2}] *
      (1/2) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (1/2) +
  INT["pentagon1",2,17,4,0,{3,0,0,0,1}] *
      (1),

INT["pentagon1x123",3,21,5,2,{2,-2,1,0,2}] -> 
  INT["pentagon1x123",3,21,5,2,{2,-2,2,0,1}] *
      (-s23*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,2,{1,-2,1,0,2}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,2,{1,-2,2,0,1}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,2,{2,-2,1,0,1}] *
      (-(-4+d)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,3,1,{1,-1,1,0,1}] *
      (-2*(s23+s12+s34+s14+s24+s13)^(-1)),

INT["pentagon1x123",3,21,5,2,{2,-2,1,0,2}] -> 
  INT["pentagon1x123",3,21,5,2,{2,-2,2,0,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{3,-2,1,0,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,1,{2,-1,1,0,2}] *
      (s34+s13) +
  INT["pentagon1x123",3,21,5,1,{3,-1,1,0,1}] *
      (-2*s23) +
  INT["pentagon1x123",3,21,4,1,{2,-1,1,0,1}] *
      (2) +
  INT["pentagon1",2,17,4,1,{1,0,-1,0,3}] *
      (-2) +
  INT["pentagon1",2,17,4,1,{1,-1,0,0,3}] *
      (2) +
  INT["pentagon1",2,17,4,1,{2,0,-1,0,2}] *
      (-1) +
  INT["pentagon1",2,17,4,1,{2,-1,0,0,2}] *
      (1) +
  INT["pentagon1",2,17,4,0,{1,0,0,0,3}] *
      (-2*s23-2*s24) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (-s23-s24) +
  INT["pentagon1",2,17,3,0,{1,0,0,0,2}] *
      (1) +
  INT["pentagon1",2,17,3,0,{2,0,0,0,1}] *
      (1),

INT["pentagon1x123",3,21,5,2,{2,-2,1,0,2}] -> 
  INT["pentagon1x123",3,21,5,2,{2,-2,2,0,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{3,-2,1,0,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,1,{2,-1,1,0,2}] *
      (-s23-s12-s24) +
  INT["pentagon1x123",3,21,5,1,{2,-1,2,0,1}] *
      (-s23) +
  INT["pentagon1x123",3,21,4,1,{1,-1,1,0,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{1,-1,2,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{2,-1,1,0,1}] *
      (3) +
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-1),

INT["pentagon1x123",3,21,5,2,{2,-1,1,-1,2}] -> 
  INT["pentagon1x123",3,21,5,2,{2,-1,2,-1,1}] *
      (-s23*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,2,{1,-1,1,-1,2}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,2,{1,-1,2,-1,1}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,2,{2,-1,1,-1,1}] *
      (-(-4+d)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,1,{2,-1,1,0,1}] *
      ((s23+s12+s13)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,3,1,{1,0,1,-1,1}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,3,1,{1,-1,1,0,1}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)),

INT["pentagon1x123",3,21,5,2,{2,-1,1,-1,2}] -> 
  INT["pentagon1x123",3,21,5,2,{2,-1,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{3,-1,1,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,1,{2,-1,2,0,1}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,1,{3,-1,1,0,1}] *
      (-2*s34-2*s14-2*s24) +
  INT["pentagon1x123",3,21,4,1,{2,0,1,-1,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{2,-1,1,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,0,{2,0,1,0,1}] *
      (s34+s14) +
  INT["pentagon1x123",2,5,4,1,{2,-1,2,0,0}] *
      (1) +
  INT["pentagon1x123",2,5,4,1,{3,-1,1,0,0}] *
      (2) +
  INT["pentagon1x123",2,5,3,0,{2,0,1,0,0}] *
      (-1),

INT["pentagon1x123",3,21,5,2,{2,-1,1,-1,2}] -> 
  INT["pentagon1x123",3,21,5,2,{2,-1,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{3,-1,1,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,1,{2,-1,1,0,2}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,1,{3,-1,1,0,1}] *
      (2*s12+2*s13) +
  INT["pentagon1x123",3,21,4,1,{2,0,1,-1,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{2,-1,1,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,0,{2,0,1,0,1}] *
      (-s13) +
  INT["pentagon1",2,17,4,1,{1,0,-1,0,3}] *
      (-2) +
  INT["pentagon1",2,17,4,1,{1,-1,0,0,3}] *
      (2) +
  INT["pentagon1",2,17,4,1,{2,0,-1,0,2}] *
      (-1) +
  INT["pentagon1",2,17,4,1,{2,-1,0,0,2}] *
      (1) +
  INT["pentagon1",2,17,4,0,{1,0,0,0,3}] *
      (-2*s23-2*s24) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (-s23-s24) +
  INT["pentagon1",2,17,3,0,{1,0,0,0,2}] *
      (1) +
  INT["pentagon1",2,17,3,0,{2,0,0,0,1}] *
      (1),

INT["pentagon1x123",3,21,5,2,{2,-1,1,-1,2}] -> 
  INT["pentagon1x123",3,21,5,2,{2,-1,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{3,-1,1,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,1,{2,0,1,-1,2}] *
      (s34+s13) +
  INT["pentagon1x123",3,21,5,1,{3,0,1,-1,1}] *
      (-2*s23) +
  INT["pentagon1x123",3,21,4,1,{2,0,1,-1,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{2,-1,1,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,0,{2,0,1,0,1}] *
      (-s13) +
  INT["pentagon1",2,17,4,1,{1,0,0,-1,3}] *
      (-2) +
  INT["pentagon1",2,17,4,1,{2,0,0,-1,2}] *
      (-1) +
  INT["pentagon1",2,17,4,0,{1,0,0,0,3}] *
      (-2*s34-2*s14-2*s24) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (-s34-s14-s24) +
  INT["pentagon1",2,17,3,0,{1,0,0,0,2}] *
      (2) +
  INT["pentagon1",2,17,3,0,{2,0,0,0,1}] *
      (1),

INT["pentagon1x123",3,21,5,2,{2,-1,1,-1,2}] -> 
  INT["pentagon1x123",3,21,5,2,{2,-1,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{3,-1,1,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,1,{2,0,1,-1,2}] *
      (-s23-s12-s24) +
  INT["pentagon1x123",3,21,5,1,{2,0,2,-1,1}] *
      (-s23) +
  INT["pentagon1x123",3,21,4,1,{1,0,1,-1,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{1,0,2,-1,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{2,0,1,-1,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,1,{2,-1,1,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,0,{2,0,1,0,1}] *
      (s23+s12) +
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-1),

INT["pentagon1x123",3,21,5,2,{2,0,1,-2,2}] -> 
  INT["pentagon1x123",3,21,5,2,{2,0,2,-2,1}] *
      (-s23*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,2,{1,0,1,-2,2}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,2,{1,0,2,-2,1}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,2,{2,0,1,-2,1}] *
      (-(-4+d)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,1,{2,0,1,-1,1}] *
      (2*(s23+s12+s13)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,3,1,{1,0,1,-1,1}] *
      (-2*(s23+s12+s34+s14+s24+s13)^(-1)),

INT["pentagon1x123",3,21,5,2,{2,0,1,-2,2}] -> 
  INT["pentagon1x123",3,21,5,2,{2,0,2,-2,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{3,0,1,-2,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,1,{2,0,2,-1,1}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,1,{3,0,1,-1,1}] *
      (-2*s34-2*s14-2*s24) +
  INT["pentagon1x123",3,21,4,1,{2,0,1,-1,1}] *
      (2) +
  INT["pentagon1x123",2,5,4,1,{2,0,2,-1,0}] *
      (1) +
  INT["pentagon1x123",2,5,4,1,{3,0,1,-1,0}] *
      (2) +
  INT["pentagon1x123",2,5,3,0,{2,0,1,0,0}] *
      (-1),

INT["pentagon1x123",3,21,5,2,{2,0,1,-2,2}] -> 
  INT["pentagon1x123",3,21,5,2,{2,0,2,-2,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{3,0,1,-2,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,1,{2,0,1,-1,2}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,1,{3,0,1,-1,1}] *
      (2*s12+2*s13) +
  INT["pentagon1x123",3,21,4,1,{2,0,1,-1,1}] *
      (2) +
  INT["pentagon1",2,17,4,1,{1,0,0,-1,3}] *
      (-2) +
  INT["pentagon1",2,17,4,1,{2,0,0,-1,2}] *
      (-1) +
  INT["pentagon1",2,17,4,0,{1,0,0,0,3}] *
      (-2*s34-2*s14-2*s24) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (-s34-s14-s24) +
  INT["pentagon1",2,17,3,0,{1,0,0,0,2}] *
      (2) +
  INT["pentagon1",2,17,3,0,{2,0,0,0,1}] *
      (1),

INT["pentagon1x123",3,21,5,2,{1,-2,2,0,2}] -> 
  INT["pentagon1x123",3,21,5,2,{1,-2,3,0,1}] *
      (-2*s23*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,2,{1,-2,2,0,1}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)*(-3+d)) +
  INT["pentagon1x142",2,5,4,2,{2,0,2,-2,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,2,{3,0,1,-2,0}] *
      (2*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,1,{2,0,2,0,-1}] *
      (-2*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)+2*(3*s23+2*s12+s34+2*s24+s13)*(s23+s12+s34+s14+s24+s13)^(-1)-2*(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,4,1,{2,0,2,-1,0}] *
      (-2*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)+2*s23*(s23+s12+s34+s14+s24+s13)^(-1)+2*(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,4,1,{3,0,1,0,-1}] *
      (-4*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)+4*(3*s23+2*s12+s34+2*s24+s13)*(s23+s12+s34+s14+s24+s13)^(-1)-4*(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,4,1,{3,0,1,-1,0}] *
      (-4*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)+4*s23*(s23+s12+s34+s14+s24+s13)^(-1)+4*(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (-2*s23*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)-2*(s23+s12+s34+s14+s24+s13)^(-1)*(3*s23*s24+s12^2+s34*s24+3*s23*s12+s24^2+s23*s34+s23*s13+s12*s13+s12*s34+s24*s13+2*s23^2+2*s12*s24)+(2*s23*s24+s12^2+2*s23*s12+s24^2+s23^2+2*s12*s24)*(s23+s12+s34+s14+s24+s13)^(-1)+(s23+s12+s34+s14+s24+s13)^(-1)*(4*s23*s24+s12^2+2*s34*s24+4*s23*s12+s24^2+4*s23*s34+s13^2+2*s34*s13+4*s23*s13+s34^2+2*s12*s13+2*s12*s34+2*s24*s13+4*s23^2+2*s12*s24)+s23^2*(s23+s12+s34+s14+s24+s13)^(-1)+2*s23*(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,4,0,{3,0,1,0,0}] *
      (-4*s23*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)-4*(s23+s12+s34+s14+s24+s13)^(-1)*(3*s23*s24+s12^2+s34*s24+3*s23*s12+s24^2+s23*s34+s23*s13+s12*s13+s12*s34+s24*s13+2*s23^2+2*s12*s24)+2*(2*s23*s24+s12^2+2*s23*s12+s24^2+s23^2+2*s12*s24)*(s23+s12+s34+s14+s24+s13)^(-1)+2*(s23+s12+s34+s14+s24+s13)^(-1)*(4*s23*s24+s12^2+2*s34*s24+4*s23*s12+s24^2+4*s23*s34+s13^2+2*s34*s13+4*s23*s13+s34^2+2*s12*s13+2*s12*s34+2*s24*s13+4*s23^2+2*s12*s24)+2*s23^2*(s23+s12+s34+s14+s24+s13)^(-1)+4*s23*(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,3,1,{1,0,2,-1,0}] *
      (-2*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,1,{2,0,1,-1,0}] *
      (-4*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      (4*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)-2*s23*(s23+s12+s34+s14+s24+s13)^(-1)-2*(3*s23+2*s12+s34+2*s24+s13)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      (8*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)-4*s23*(s23+s12+s34+s14+s24+s13)^(-1)-4*(3*s23+2*s12+s34+2*s24+s13)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (2*(s23+s12+s34+s14+s24+s13)^(-1)),

INT["pentagon1x123",3,21,5,2,{1,-2,2,0,2}] -> 
  INT["pentagon1x123",3,21,5,2,{1,-2,3,0,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,-2,2,0,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,1,{1,-1,2,0,2}] *
      (s34+s13) +
  INT["pentagon1x123",3,21,5,1,{2,-1,2,0,1}] *
      (-s23) +
  INT["pentagon1x123",3,21,4,1,{1,-1,1,0,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{1,-1,2,0,1}] *
      (3) +
  INT["pentagon1x123",3,21,4,1,{2,-1,1,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-1),

INT["pentagon1x123",3,21,5,2,{1,-2,2,0,2}] -> 
  INT["pentagon1x123",3,21,5,2,{1,-2,3,0,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,-2,2,0,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,1,{1,-1,2,0,2}] *
      (-s23-s12-s24) +
  INT["pentagon1x123",3,21,5,1,{1,-1,3,0,1}] *
      (-2*s23) +
  INT["pentagon1x123",3,21,4,1,{1,-1,2,0,1}] *
      (2) +
  INT["pentagon1x142",2,5,4,1,{2,0,2,-1,0}] *
      (-1) +
  INT["pentagon1x142",2,5,4,1,{3,0,1,-1,0}] *
      (-2) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (s34+s13) +
  INT["pentagon1x142",2,5,4,0,{3,0,1,0,0}] *
      (2*s34+2*s13) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      (1) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      (2),

INT["pentagon1x123",3,21,5,2,{1,-2,1,0,3}] -> 
  INT["pentagon1x123",3,21,5,2,{1,-2,2,0,2}] *
      (-1/2*s23*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,2,{1,-2,1,0,2}] *
      (-1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(-3+d)) +
  INT["pentagon1x142",2,5,4,2,{1,0,3,-2,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,2,{2,0,2,-2,0}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,1,{1,0,3,0,-1}] *
      (-2*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)+2*(3*s23+2*s12+s34+2*s24+s13)*(s23+s12+s34+s14+s24+s13)^(-1)-2*(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,4,1,{1,0,3,-1,0}] *
      (-2*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)+2*s23*(s23+s12+s34+s14+s24+s13)^(-1)+2*(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,4,1,{2,0,2,0,-1}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)+(3*s23+2*s12+s34+2*s24+s13)*(s23+s12+s34+s14+s24+s13)^(-1)-(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,4,1,{2,0,2,-1,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)+s23*(s23+s12+s34+s14+s24+s13)^(-1)+(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,4,0,{1,0,3,0,0}] *
      (-2*s23*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)-2*(s23+s12+s34+s14+s24+s13)^(-1)*(3*s23*s24+s12^2+s34*s24+3*s23*s12+s24^2+s23*s34+s23*s13+s12*s13+s12*s34+s24*s13+2*s23^2+2*s12*s24)+(2*s23*s24+s12^2+2*s23*s12+s24^2+s23^2+2*s12*s24)*(s23+s12+s34+s14+s24+s13)^(-1)+(s23+s12+s34+s14+s24+s13)^(-1)*(4*s23*s24+s12^2+2*s34*s24+4*s23*s12+s24^2+4*s23*s34+s13^2+2*s34*s13+4*s23*s13+s34^2+2*s12*s13+2*s12*s34+2*s24*s13+4*s23^2+2*s12*s24)+s23^2*(s23+s12+s34+s14+s24+s13)^(-1)+2*s23*(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (-s23*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)-(s23+s12+s34+s14+s24+s13)^(-1)*(3*s23*s24+s12^2+s34*s24+3*s23*s12+s24^2+s23*s34+s23*s13+s12*s13+s12*s34+s24*s13+2*s23^2+2*s12*s24)+1/2*(2*s23*s24+s12^2+2*s23*s12+s24^2+s23^2+2*s12*s24)*(s23+s12+s34+s14+s24+s13)^(-1)+1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(4*s23*s24+s12^2+2*s34*s24+4*s23*s12+s24^2+4*s23*s34+s13^2+2*s34*s13+4*s23*s13+s34^2+2*s12*s13+2*s12*s34+2*s24*s13+4*s23^2+2*s12*s24)+1/2*s23^2*(s23+s12+s34+s14+s24+s13)^(-1)+s23*(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,3,1,{1,0,2,-1,0}] *
      (-2*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,1,{2,0,1,-1,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      (3*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)-2*s23*(s23+s12+s34+s14+s24+s13)^(-1)-(3*s23+2*s12+s34+2*s24+s13)*(s23+s12+s34+s14+s24+s13)^(-1)-(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)-s23*(s23+s12+s34+s14+s24+s13)^(-1)-(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)),

INT["pentagon1x123",3,21,5,2,{1,-2,1,0,3}] -> 
  INT["pentagon1x123",3,21,5,2,{1,-2,2,0,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{2,-2,1,0,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,1,{1,-1,1,0,3}] *
      (s34+s13) +
  INT["pentagon1x123",3,21,5,1,{2,-1,1,0,2}] *
      (-1/2*s23) +
  INT["pentagon1x123",3,21,4,1,{1,-1,1,0,2}] *
      (1) +
  INT["pentagon1",2,17,4,1,{2,0,-1,0,2}] *
      (-1/2) +
  INT["pentagon1",2,17,4,1,{2,-1,0,0,2}] *
      (1/2) +
  INT["pentagon1",2,17,4,1,{3,0,-1,0,1}] *
      (-1) +
  INT["pentagon1",2,17,4,1,{3,-1,0,0,1}] *
      (1) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (-1/2*s23-1/2*s24) +
  INT["pentagon1",2,17,4,0,{3,0,0,0,1}] *
      (-s23-s24),

INT["pentagon1x123",3,21,5,2,{1,-2,1,0,3}] -> 
  INT["pentagon1x123",3,21,5,2,{1,-2,2,0,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{2,-2,1,0,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,1,{1,-1,1,0,3}] *
      (-s23-s12-s24) +
  INT["pentagon1x123",3,21,5,1,{1,-1,2,0,2}] *
      (-1/2*s23) +
  INT["pentagon1x123",3,21,4,1,{1,-1,1,0,2}] *
      (1) +
  INT["pentagon1x142",2,5,4,1,{1,0,3,-1,0}] *
      (-1) +
  INT["pentagon1x142",2,5,4,1,{2,0,2,-1,0}] *
      (-1/2) +
  INT["pentagon1x142",2,5,4,0,{1,0,3,0,0}] *
      (s34+s13) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (1/2*s34+1/2*s13) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      (1) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      (1/2),

INT["pentagon1x123",3,21,5,2,{1,-1,2,-1,2}] -> 
  INT["pentagon1x123",3,21,5,2,{1,-1,3,-1,1}] *
      (-2*s23*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,2,{1,-1,2,-1,1}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)*(-3+d)) +
  INT["pentagon1x123",3,21,4,1,{1,-1,2,0,1}] *
      ((s23+s12+s13)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,2,{2,-1,2,-1,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,2,{3,-1,1,-1,0}] *
      (2*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,1,{2,0,2,-1,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)*s14) +
  INT["pentagon1x142",2,5,4,1,{2,-1,2,0,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)+s23*(s23+s12+s34+s14+s24+s13)^(-1)+(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,4,1,{3,0,1,-1,0}] *
      (2*(s23+s12+s34+s14+s24+s13)^(-1)*s14) +
  INT["pentagon1x142",2,5,4,1,{3,-1,1,0,0}] *
      (-2*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)+2*s23*(s23+s12+s34+s14+s24+s13)^(-1)+2*(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (s23*(s23+s12+s34+s14+s24+s13)^(-1)*s14+(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)*s14-(s23+s12+s34+s14+s24+s13)^(-1)*s14*(2*s23+s12+s34+s24+s13)) +
  INT["pentagon1x142",2,5,4,0,{3,0,1,0,0}] *
      (2*s23*(s23+s12+s34+s14+s24+s13)^(-1)*s14+2*(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)*s14-2*(s23+s12+s34+s14+s24+s13)^(-1)*s14*(2*s23+s12+s34+s24+s13)) +
  INT["pentagon1x142",2,5,3,1,{1,0,2,-1,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,1,{1,-1,2,0,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,1,{2,0,1,-1,0}] *
      (-2*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,1,{2,-1,1,0,0}] *
      (-2*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)-(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s14)-(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      (2*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)-(s23+s12+s34+s14+s24+s13)^(-1)*s14-(2*s23+s14)*(s23+s12+s34+s14+s24+s13)^(-1)-2*(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (2*(s23+s12+s34+s14+s24+s13)^(-1)),

INT["pentagon1x123",3,21,5,2,{1,-1,2,-1,2}] -> 
  INT["pentagon1x123",3,21,5,2,{1,-1,3,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,-1,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,1,{1,-1,3,0,1}] *
      (-2*s14) +
  INT["pentagon1x123",3,21,5,1,{2,-1,2,0,1}] *
      (-s34-s14-s24) +
  INT["pentagon1x123",3,21,4,1,{1,0,2,-1,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{1,-1,2,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,0,{1,0,2,0,1}] *
      (s34+s14) +
  INT["pentagon1x123",2,5,4,1,{1,-1,3,0,0}] *
      (2) +
  INT["pentagon1x123",2,5,4,1,{2,-1,2,0,0}] *
      (1) +
  INT["pentagon1x123",2,5,3,0,{1,0,2,0,0}] *
      (-1),

INT["pentagon1x123",3,21,5,2,{1,-1,2,-1,2}] -> 
  INT["pentagon1x123",3,21,5,2,{1,-1,3,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,-1,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,1,{1,-1,2,0,2}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,1,{2,-1,2,0,1}] *
      (s12+s13) +
  INT["pentagon1x123",3,21,4,1,{1,0,2,-1,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{1,-1,1,0,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{1,-1,2,0,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,1,{2,-1,1,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,0,{1,0,2,0,1}] *
      (-s13) +
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-1),

INT["pentagon1x123",3,21,5,2,{1,-1,2,-1,2}] -> 
  INT["pentagon1x123",3,21,5,2,{1,-1,3,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,-1,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,1,{1,0,2,-1,2}] *
      (s34+s13) +
  INT["pentagon1x123",3,21,5,1,{2,0,2,-1,1}] *
      (-s23) +
  INT["pentagon1x123",3,21,4,1,{1,0,1,-1,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{1,0,2,-1,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,1,{1,-1,2,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{2,0,1,-1,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,0,{1,0,2,0,1}] *
      (-s13) +
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-1),

INT["pentagon1x123",3,21,5,2,{1,-1,2,-1,2}] -> 
  INT["pentagon1x123",3,21,5,2,{1,-1,3,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,-1,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,1,{1,0,2,-1,2}] *
      (-s23-s12-s24) +
  INT["pentagon1x123",3,21,5,1,{1,0,3,-1,1}] *
      (-2*s23) +
  INT["pentagon1x123",3,21,4,1,{1,0,2,-1,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{1,-1,2,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,0,{1,0,2,0,1}] *
      (s23+s12) +
  INT["pentagon1x142",2,5,4,1,{2,-1,2,0,0}] *
      (-1) +
  INT["pentagon1x142",2,5,4,1,{3,-1,1,0,0}] *
      (-2) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (-s14) +
  INT["pentagon1x142",2,5,4,0,{3,0,1,0,0}] *
      (-2*s14) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      (1) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      (2),

INT["pentagon1x123",3,21,5,2,{1,-1,1,-1,3}] -> 
  INT["pentagon1x123",3,21,5,2,{1,-1,2,-1,2}] *
      (-1/2*s23*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,2,{1,-1,1,-1,2}] *
      (-1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(-3+d)) +
  INT["pentagon1x123",3,21,4,1,{1,-1,1,0,2}] *
      (1/2*(s23+s12+s13)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,2,{1,-1,3,-1,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,2,{2,-1,2,-1,0}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,1,{1,0,3,-1,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)*s14) +
  INT["pentagon1x142",2,5,4,1,{1,-1,3,0,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)+s23*(s23+s12+s34+s14+s24+s13)^(-1)+(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,4,1,{2,0,2,-1,0}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)*s14) +
  INT["pentagon1x142",2,5,4,1,{2,-1,2,0,0}] *
      (-1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)+1/2*s23*(s23+s12+s34+s14+s24+s13)^(-1)+1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,4,0,{1,0,3,0,0}] *
      (s23*(s23+s12+s34+s14+s24+s13)^(-1)*s14+(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)*s14-(s23+s12+s34+s14+s24+s13)^(-1)*s14*(2*s23+s12+s34+s24+s13)) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (1/2*s23*(s23+s12+s34+s14+s24+s13)^(-1)*s14+1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)*s14-1/2*(s23+s12+s34+s14+s24+s13)^(-1)*s14*(2*s23+s12+s34+s24+s13)) +
  INT["pentagon1x142",2,5,3,1,{1,0,2,-1,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,1,{1,-1,2,0,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,1,{2,0,1,-1,0}] *
      (-1/2*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,1,{2,-1,1,0,0}] *
      (-1/2*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)-s23*(s23+s12+s34+s14+s24+s13)^(-1)-(s23+s12+s34+s14+s24+s13)^(-1)*s14-(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(2*s23+s12+s34+s24+s13)-1/2*s23*(s23+s12+s34+s14+s24+s13)^(-1)-1/2*(s23+s12+s34+s14+s24+s13)^(-1)*s14-1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(s23+s12+s24)) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)),

INT["pentagon1x123",3,21,5,2,{1,-1,1,-1,3}] -> 
  INT["pentagon1x123",3,21,5,2,{1,-1,2,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{2,-1,1,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,1,{1,-1,2,0,2}] *
      (-1/2*s14) +
  INT["pentagon1x123",3,21,5,1,{2,-1,1,0,2}] *
      (-1/2*s34-1/2*s14-1/2*s24) +
  INT["pentagon1x123",3,21,4,1,{1,0,1,-1,2}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,1,{1,-1,1,0,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{1,-1,2,0,1}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,1,{2,-1,1,0,1}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,0,{1,0,1,0,2}] *
      (1/2*s34+1/2*s14) +
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-1/2),

INT["pentagon1x123",3,21,5,2,{1,-1,1,-1,3}] -> 
  INT["pentagon1x123",3,21,5,2,{1,-1,2,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{2,-1,1,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,1,{1,-1,1,0,3}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,1,{2,-1,1,0,2}] *
      (1/2*s12+1/2*s13) +
  INT["pentagon1x123",3,21,4,1,{1,0,1,-1,2}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,1,{1,-1,1,0,2}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,0,{1,0,1,0,2}] *
      (-1/2*s13) +
  INT["pentagon1",2,17,4,1,{2,0,-1,0,2}] *
      (-1/2) +
  INT["pentagon1",2,17,4,1,{2,-1,0,0,2}] *
      (1/2) +
  INT["pentagon1",2,17,4,1,{3,0,-1,0,1}] *
      (-1) +
  INT["pentagon1",2,17,4,1,{3,-1,0,0,1}] *
      (1) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (-1/2*s23-1/2*s24) +
  INT["pentagon1",2,17,4,0,{3,0,0,0,1}] *
      (-s23-s24),

INT["pentagon1x123",3,21,5,2,{1,-1,1,-1,3}] -> 
  INT["pentagon1x123",3,21,5,2,{1,-1,2,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{2,-1,1,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,1,{1,0,1,-1,3}] *
      (s34+s13) +
  INT["pentagon1x123",3,21,5,1,{2,0,1,-1,2}] *
      (-1/2*s23) +
  INT["pentagon1x123",3,21,4,1,{1,0,1,-1,2}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,1,{1,-1,1,0,2}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,0,{1,0,1,0,2}] *
      (-1/2*s13) +
  INT["pentagon1",2,17,4,1,{2,0,0,-1,2}] *
      (-1/2) +
  INT["pentagon1",2,17,4,1,{3,0,0,-1,1}] *
      (-1) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (-1/2*s34-1/2*s14-1/2*s24) +
  INT["pentagon1",2,17,4,0,{3,0,0,0,1}] *
      (-s34-s14-s24) +
  INT["pentagon1",2,17,3,0,{1,0,0,0,2}] *
      (1/2) +
  INT["pentagon1",2,17,3,0,{2,0,0,0,1}] *
      (1),

INT["pentagon1x123",3,21,5,2,{1,-1,1,-1,3}] -> 
  INT["pentagon1x123",3,21,5,2,{1,-1,2,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{2,-1,1,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,1,{1,0,1,-1,3}] *
      (-s23-s12-s24) +
  INT["pentagon1x123",3,21,5,1,{1,0,2,-1,2}] *
      (-1/2*s23) +
  INT["pentagon1x123",3,21,4,1,{1,0,1,-1,2}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,1,{1,-1,1,0,2}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,0,{1,0,1,0,2}] *
      (1/2*s23+1/2*s12) +
  INT["pentagon1x142",2,5,4,1,{1,-1,3,0,0}] *
      (-1) +
  INT["pentagon1x142",2,5,4,1,{2,-1,2,0,0}] *
      (-1/2) +
  INT["pentagon1x142",2,5,4,0,{1,0,3,0,0}] *
      (-s14) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (-1/2*s14) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      (1) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      (1/2),

INT["pentagon1x123",3,21,5,2,{1,0,2,-2,2}] -> 
  INT["pentagon1x123",3,21,5,2,{1,0,3,-2,1}] *
      (-2*s23*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,2,{1,0,2,-2,1}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)*(-3+d)) +
  INT["pentagon1x123",3,21,4,1,{1,0,2,-1,1}] *
      (2*(s23+s12+s13)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,2,{2,-2,2,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,2,{3,-2,1,0,0}] *
      (2*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,1,{2,-1,2,0,0}] *
      (2*(s23+s12+s34+s14+s24+s13)^(-1)*s14) +
  INT["pentagon1x142",2,5,4,1,{3,-1,1,0,0}] *
      (4*(s23+s12+s34+s14+s24+s13)^(-1)*s14) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)*s14^2) +
  INT["pentagon1x142",2,5,4,0,{3,0,1,0,0}] *
      (2*(s23+s12+s34+s14+s24+s13)^(-1)*s14^2) +
  INT["pentagon1x142",2,5,3,1,{1,-1,2,0,0}] *
      (-2*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,1,{2,-1,1,0,0}] *
      (-4*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      (-2*(s23+s12+s34+s14+s24+s13)^(-1)*s14) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      (-4*(s23+s12+s34+s14+s24+s13)^(-1)*s14) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (2*(s23+s12+s34+s14+s24+s13)^(-1)),

INT["pentagon1x123",3,21,5,2,{1,0,2,-2,2}] -> 
  INT["pentagon1x123",3,21,5,2,{1,0,3,-2,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,0,2,-2,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,1,{1,0,3,-1,1}] *
      (-2*s14) +
  INT["pentagon1x123",3,21,5,1,{2,0,2,-1,1}] *
      (-s34-s14-s24) +
  INT["pentagon1x123",3,21,4,1,{1,0,2,-1,1}] *
      (2) +
  INT["pentagon1x123",2,5,4,1,{1,0,3,-1,0}] *
      (2) +
  INT["pentagon1x123",2,5,4,1,{2,0,2,-1,0}] *
      (1) +
  INT["pentagon1x123",2,5,3,0,{1,0,2,0,0}] *
      (-1),

INT["pentagon1x123",3,21,5,2,{1,0,2,-2,2}] -> 
  INT["pentagon1x123",3,21,5,2,{1,0,3,-2,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,0,2,-2,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,1,{1,0,2,-1,2}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,1,{2,0,2,-1,1}] *
      (s12+s13) +
  INT["pentagon1x123",3,21,4,1,{1,0,1,-1,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{1,0,2,-1,1}] *
      (3) +
  INT["pentagon1x123",3,21,4,1,{2,0,1,-1,1}] *
      (1) +
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-1),

INT["pentagon1x123",3,21,5,2,{1,0,1,-2,3}] -> 
  INT["pentagon1x123",3,21,5,2,{1,0,2,-2,2}] *
      (-1/2*s23*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x123",3,21,4,2,{1,0,1,-2,2}] *
      (-1/2*(s23+s12+s34+s14+s24+s13)^(-1)*(-3+d)) +
  INT["pentagon1x123",3,21,4,1,{1,0,1,-1,2}] *
      ((s23+s12+s13)*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,2,{1,-2,3,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,2,{2,-2,2,0,0}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,4,1,{1,-1,3,0,0}] *
      (2*(s23+s12+s34+s14+s24+s13)^(-1)*s14) +
  INT["pentagon1x142",2,5,4,1,{2,-1,2,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)*s14) +
  INT["pentagon1x142",2,5,4,0,{1,0,3,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)*s14^2) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (1/2*(s23+s12+s34+s14+s24+s13)^(-1)*s14^2) +
  INT["pentagon1x142",2,5,3,1,{1,-1,2,0,0}] *
      (-2*(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,1,{2,-1,1,0,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      (-2*(s23+s12+s34+s14+s24+s13)^(-1)*s14) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      (-(s23+s12+s34+s14+s24+s13)^(-1)*s14) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      ((s23+s12+s34+s14+s24+s13)^(-1)),

INT["pentagon1x123",3,21,5,2,{1,0,1,-2,3}] -> 
  INT["pentagon1x123",3,21,5,2,{1,0,2,-2,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{2,0,1,-2,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,1,{1,0,2,-1,2}] *
      (-1/2*s14) +
  INT["pentagon1x123",3,21,5,1,{2,0,1,-1,2}] *
      (-1/2*s34-1/2*s14-1/2*s24) +
  INT["pentagon1x123",3,21,4,1,{1,0,1,-1,2}] *
      (3/2) +
  INT["pentagon1x123",3,21,4,1,{1,0,2,-1,1}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,1,{2,0,1,-1,1}] *
      (1/2) +
  INT["pentagon1x123",3,21,3,0,{1,0,1,0,1}] *
      (-1/2),

INT["pentagon1x123",3,21,5,2,{1,0,1,-2,3}] -> 
  INT["pentagon1x123",3,21,5,2,{1,0,2,-2,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{2,0,1,-2,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,1,{1,0,1,-1,3}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,1,{2,0,1,-1,2}] *
      (1/2*s12+1/2*s13) +
  INT["pentagon1x123",3,21,4,1,{1,0,1,-1,2}] *
      (1) +
  INT["pentagon1",2,17,4,1,{2,0,0,-1,2}] *
      (-1/2) +
  INT["pentagon1",2,17,4,1,{3,0,0,-1,1}] *
      (-1) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (-1/2*s34-1/2*s14-1/2*s24) +
  INT["pentagon1",2,17,4,0,{3,0,0,0,1}] *
      (-s34-s14-s24) +
  INT["pentagon1",2,17,3,0,{1,0,0,0,2}] *
      (1/2) +
  INT["pentagon1",2,17,3,0,{2,0,0,0,1}] *
      (1),

INT["pentagon1x123",3,21,5,3,{2,-3,1,0,2}] -> 
  INT["pentagon1x123",3,21,5,3,{2,-3,2,0,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,3,{3,-3,1,0,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,-2,1,0,2}] *
      (s34+s13) +
  INT["pentagon1x123",3,21,5,2,{3,-2,1,0,1}] *
      (-2*s23) +
  INT["pentagon1x123",3,21,4,2,{2,-2,1,0,1}] *
      (3) +
  INT["pentagon1",2,17,4,2,{1,0,-2,0,3}] *
      (2) +
  INT["pentagon1",2,17,4,2,{1,-1,-1,0,3}] *
      (-4) +
  INT["pentagon1",2,17,4,2,{1,-2,0,0,3}] *
      (2) +
  INT["pentagon1",2,17,4,2,{2,0,-2,0,2}] *
      (1) +
  INT["pentagon1",2,17,4,2,{2,-1,-1,0,2}] *
      (-2) +
  INT["pentagon1",2,17,4,2,{2,-2,0,0,2}] *
      (1) +
  INT["pentagon1",2,17,4,1,{1,0,-1,0,3}] *
      (4*s23+4*s24) +
  INT["pentagon1",2,17,4,1,{1,-1,0,0,3}] *
      (-4*s23-4*s24) +
  INT["pentagon1",2,17,4,1,{2,0,-1,0,2}] *
      (2*s23+2*s24) +
  INT["pentagon1",2,17,4,1,{2,-1,0,0,2}] *
      (-2*s23-2*s24) +
  INT["pentagon1",2,17,4,0,{1,0,0,0,3}] *
      (4*s23*s24+2*s24^2+2*s23^2) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (2*s23*s24+s24^2+s23^2) +
  INT["pentagon1",2,17,3,1,{1,0,-1,0,2}] *
      (-2) +
  INT["pentagon1",2,17,3,1,{1,-1,0,0,2}] *
      (2) +
  INT["pentagon1",2,17,3,1,{2,0,-1,0,1}] *
      (-2) +
  INT["pentagon1",2,17,3,1,{2,-1,0,0,1}] *
      (2) +
  INT["pentagon1",2,17,3,0,{1,0,0,0,2}] *
      (-2*s23-2*s24) +
  INT["pentagon1",2,17,3,0,{2,0,0,0,1}] *
      (-2*s23-2*s24),

INT["pentagon1x123",3,21,5,3,{2,-3,1,0,2}] -> 
  INT["pentagon1x123",3,21,5,3,{2,-3,2,0,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,3,{3,-3,1,0,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,-2,1,0,2}] *
      (-s23-s12-s24) +
  INT["pentagon1x123",3,21,5,2,{2,-2,2,0,1}] *
      (-s23) +
  INT["pentagon1x123",3,21,4,2,{1,-2,1,0,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{1,-2,2,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{2,-2,1,0,1}] *
      (4) +
  INT["pentagon1x123",3,21,3,1,{1,-1,1,0,1}] *
      (-2),

INT["pentagon1x123",3,21,5,3,{2,-2,1,-1,2}] -> 
  INT["pentagon1x123",3,21,5,3,{2,-2,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,3,{3,-2,1,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,-2,2,0,1}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,2,{3,-2,1,0,1}] *
      (-2*s34-2*s14-2*s24) +
  INT["pentagon1x123",3,21,4,2,{2,-1,1,-1,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,2,{2,-2,1,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{2,-1,1,0,1}] *
      (2*s34+2*s14) +
  INT["pentagon1x123",2,5,4,2,{2,-2,2,0,0}] *
      (1) +
  INT["pentagon1x123",2,5,4,2,{3,-2,1,0,0}] *
      (2) +
  INT["pentagon1x123",2,5,3,1,{2,-1,1,0,0}] *
      (-2),

INT["pentagon1x123",3,21,5,3,{2,-2,1,-1,2}] -> 
  INT["pentagon1x123",3,21,5,3,{2,-2,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,3,{3,-2,1,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,-2,1,0,2}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,2,{3,-2,1,0,1}] *
      (2*s12+2*s13) +
  INT["pentagon1x123",3,21,4,2,{2,-1,1,-1,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,2,{2,-2,1,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{2,-1,1,0,1}] *
      (-2*s13) +
  INT["pentagon1",2,17,4,2,{1,0,-2,0,3}] *
      (2) +
  INT["pentagon1",2,17,4,2,{1,-1,-1,0,3}] *
      (-4) +
  INT["pentagon1",2,17,4,2,{1,-2,0,0,3}] *
      (2) +
  INT["pentagon1",2,17,4,2,{2,0,-2,0,2}] *
      (1) +
  INT["pentagon1",2,17,4,2,{2,-1,-1,0,2}] *
      (-2) +
  INT["pentagon1",2,17,4,2,{2,-2,0,0,2}] *
      (1) +
  INT["pentagon1",2,17,4,1,{1,0,-1,0,3}] *
      (4*s23+4*s24) +
  INT["pentagon1",2,17,4,1,{1,-1,0,0,3}] *
      (-4*s23-4*s24) +
  INT["pentagon1",2,17,4,1,{2,0,-1,0,2}] *
      (2*s23+2*s24) +
  INT["pentagon1",2,17,4,1,{2,-1,0,0,2}] *
      (-2*s23-2*s24) +
  INT["pentagon1",2,17,4,0,{1,0,0,0,3}] *
      (4*s23*s24+2*s24^2+2*s23^2) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (2*s23*s24+s24^2+s23^2) +
  INT["pentagon1",2,17,3,1,{1,0,-1,0,2}] *
      (-2) +
  INT["pentagon1",2,17,3,1,{1,-1,0,0,2}] *
      (2) +
  INT["pentagon1",2,17,3,1,{2,0,-1,0,1}] *
      (-2) +
  INT["pentagon1",2,17,3,1,{2,-1,0,0,1}] *
      (2) +
  INT["pentagon1",2,17,3,0,{1,0,0,0,2}] *
      (-2*s23-2*s24) +
  INT["pentagon1",2,17,3,0,{2,0,0,0,1}] *
      (-2*s23-2*s24),

INT["pentagon1x123",3,21,5,3,{2,-2,1,-1,2}] -> 
  INT["pentagon1x123",3,21,5,3,{2,-2,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,3,{3,-2,1,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,-1,1,-1,2}] *
      (s34+s13) +
  INT["pentagon1x123",3,21,5,2,{3,-1,1,-1,1}] *
      (-2*s23) +
  INT["pentagon1x123",3,21,4,2,{2,-1,1,-1,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,2,{2,-2,1,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{2,-1,1,0,1}] *
      (-s13) +
  INT["pentagon1",2,17,4,2,{1,0,-1,-1,3}] *
      (2) +
  INT["pentagon1",2,17,4,2,{1,-1,0,-1,3}] *
      (-2) +
  INT["pentagon1",2,17,4,2,{2,0,-1,-1,2}] *
      (1) +
  INT["pentagon1",2,17,4,2,{2,-1,0,-1,2}] *
      (-1) +
  INT["pentagon1",2,17,4,1,{1,0,0,-1,3}] *
      (2*s23+2*s24) +
  INT["pentagon1",2,17,4,1,{1,0,-1,0,3}] *
      (2*s34+2*s14+2*s24) +
  INT["pentagon1",2,17,4,1,{1,-1,0,0,3}] *
      (-2*s34-2*s14-2*s24) +
  INT["pentagon1",2,17,4,1,{2,0,0,-1,2}] *
      (s23+s24) +
  INT["pentagon1",2,17,4,1,{2,0,-1,0,2}] *
      (s34+s14+s24) +
  INT["pentagon1",2,17,4,1,{2,-1,0,0,2}] *
      (-s34-s14-s24) +
  INT["pentagon1",2,17,4,0,{1,0,0,0,3}] *
      (2*s23*s24+2*s34*s24+2*s24^2+2*s23*s34+2*s14*s24+2*s23*s14) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (s23*s24+s34*s24+s24^2+s23*s34+s14*s24+s23*s14) +
  INT["pentagon1",2,17,3,1,{1,0,0,-1,2}] *
      (-1) +
  INT["pentagon1",2,17,3,1,{1,0,-1,0,2}] *
      (-2) +
  INT["pentagon1",2,17,3,1,{1,-1,0,0,2}] *
      (2) +
  INT["pentagon1",2,17,3,1,{2,0,0,-1,1}] *
      (-1) +
  INT["pentagon1",2,17,3,1,{2,0,-1,0,1}] *
      (-1) +
  INT["pentagon1",2,17,3,1,{2,-1,0,0,1}] *
      (1) +
  INT["pentagon1",2,17,3,0,{1,0,0,0,2}] *
      (-2*s23-s34-s14-3*s24) +
  INT["pentagon1",2,17,3,0,{2,0,0,0,1}] *
      (-s23-s34-s14-2*s24) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (1),

INT["pentagon1x123",3,21,5,3,{2,-2,1,-1,2}] -> 
  INT["pentagon1x123",3,21,5,3,{2,-2,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,3,{3,-2,1,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,-1,1,-1,2}] *
      (-s23-s12-s24) +
  INT["pentagon1x123",3,21,5,2,{2,-1,2,-1,1}] *
      (-s23) +
  INT["pentagon1x123",3,21,4,2,{1,-1,1,-1,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{1,-1,2,-1,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{2,-1,1,-1,1}] *
      (3) +
  INT["pentagon1x123",3,21,4,2,{2,-2,1,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{2,-1,1,0,1}] *
      (s23+s12) +
  INT["pentagon1x123",3,21,3,1,{1,0,1,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,3,1,{1,-1,1,0,1}] *
      (-1),

INT["pentagon1x123",3,21,5,3,{2,-1,1,-2,2}] -> 
  INT["pentagon1x123",3,21,5,3,{2,-1,2,-2,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,3,{3,-1,1,-2,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,-1,2,-1,1}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,2,{3,-1,1,-1,1}] *
      (-2*s34-2*s14-2*s24) +
  INT["pentagon1x123",3,21,4,2,{2,0,1,-2,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{2,-1,1,-1,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,1,{2,0,1,-1,1}] *
      (s34+s14) +
  INT["pentagon1x123",2,5,4,2,{2,-1,2,-1,0}] *
      (1) +
  INT["pentagon1x123",2,5,4,2,{3,-1,1,-1,0}] *
      (2) +
  INT["pentagon1x123",2,5,3,1,{2,0,1,-1,0}] *
      (-1) +
  INT["pentagon1x123",2,5,3,1,{2,-1,1,0,0}] *
      (-1),

INT["pentagon1x123",3,21,5,3,{2,-1,1,-2,2}] -> 
  INT["pentagon1x123",3,21,5,3,{2,-1,2,-2,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,3,{3,-1,1,-2,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,-1,1,-1,2}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,2,{3,-1,1,-1,1}] *
      (2*s12+2*s13) +
  INT["pentagon1x123",3,21,4,2,{2,0,1,-2,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{2,-1,1,-1,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,1,{2,0,1,-1,1}] *
      (-s13) +
  INT["pentagon1",2,17,4,2,{1,0,-1,-1,3}] *
      (2) +
  INT["pentagon1",2,17,4,2,{1,-1,0,-1,3}] *
      (-2) +
  INT["pentagon1",2,17,4,2,{2,0,-1,-1,2}] *
      (1) +
  INT["pentagon1",2,17,4,2,{2,-1,0,-1,2}] *
      (-1) +
  INT["pentagon1",2,17,4,1,{1,0,0,-1,3}] *
      (2*s23+2*s24) +
  INT["pentagon1",2,17,4,1,{1,0,-1,0,3}] *
      (2*s34+2*s14+2*s24) +
  INT["pentagon1",2,17,4,1,{1,-1,0,0,3}] *
      (-2*s34-2*s14-2*s24) +
  INT["pentagon1",2,17,4,1,{2,0,0,-1,2}] *
      (s23+s24) +
  INT["pentagon1",2,17,4,1,{2,0,-1,0,2}] *
      (s34+s14+s24) +
  INT["pentagon1",2,17,4,1,{2,-1,0,0,2}] *
      (-s34-s14-s24) +
  INT["pentagon1",2,17,4,0,{1,0,0,0,3}] *
      (2*s23*s24+2*s34*s24+2*s24^2+2*s23*s34+2*s14*s24+2*s23*s14) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (s23*s24+s34*s24+s24^2+s23*s34+s14*s24+s23*s14) +
  INT["pentagon1",2,17,3,1,{1,0,0,-1,2}] *
      (-1) +
  INT["pentagon1",2,17,3,1,{1,0,-1,0,2}] *
      (-2) +
  INT["pentagon1",2,17,3,1,{1,-1,0,0,2}] *
      (2) +
  INT["pentagon1",2,17,3,1,{2,0,0,-1,1}] *
      (-1) +
  INT["pentagon1",2,17,3,1,{2,0,-1,0,1}] *
      (-1) +
  INT["pentagon1",2,17,3,1,{2,-1,0,0,1}] *
      (1) +
  INT["pentagon1",2,17,3,0,{1,0,0,0,2}] *
      (-2*s23-s34-s14-3*s24) +
  INT["pentagon1",2,17,3,0,{2,0,0,0,1}] *
      (-s23-s34-s14-2*s24) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (1),

INT["pentagon1x123",3,21,5,3,{2,-1,1,-2,2}] -> 
  INT["pentagon1x123",3,21,5,3,{2,-1,2,-2,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,3,{3,-1,1,-2,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,0,1,-2,2}] *
      (s34+s13) +
  INT["pentagon1x123",3,21,5,2,{3,0,1,-2,1}] *
      (-2*s23) +
  INT["pentagon1x123",3,21,4,2,{2,0,1,-2,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{2,-1,1,-1,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,1,{2,0,1,-1,1}] *
      (-2*s13) +
  INT["pentagon1",2,17,4,2,{1,0,0,-2,3}] *
      (2) +
  INT["pentagon1",2,17,4,2,{2,0,0,-2,2}] *
      (1) +
  INT["pentagon1",2,17,4,1,{1,0,0,-1,3}] *
      (4*s34+4*s14+4*s24) +
  INT["pentagon1",2,17,4,1,{2,0,0,-1,2}] *
      (2*s34+2*s14+2*s24) +
  INT["pentagon1",2,17,4,0,{1,0,0,0,3}] *
      (4*s34*s24+2*s24^2+2*s34^2+4*s14*s24+4*s34*s14+2*s14^2) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (2*s34*s24+s24^2+s34^2+2*s14*s24+2*s34*s14+s14^2) +
  INT["pentagon1",2,17,3,1,{1,0,0,-1,2}] *
      (-4) +
  INT["pentagon1",2,17,3,1,{2,0,0,-1,1}] *
      (-2) +
  INT["pentagon1",2,17,3,0,{1,0,0,0,2}] *
      (-4*s34-4*s14-4*s24) +
  INT["pentagon1",2,17,3,0,{2,0,0,0,1}] *
      (-2*s34-2*s14-2*s24) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (2),

INT["pentagon1x123",3,21,5,3,{2,-1,1,-2,2}] -> 
  INT["pentagon1x123",3,21,5,3,{2,-1,2,-2,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,3,{3,-1,1,-2,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,0,1,-2,2}] *
      (-s23-s12-s24) +
  INT["pentagon1x123",3,21,5,2,{2,0,2,-2,1}] *
      (-s23) +
  INT["pentagon1x123",3,21,4,2,{1,0,1,-2,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{1,0,2,-2,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{2,0,1,-2,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,2,{2,-1,1,-1,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,1,{2,0,1,-1,1}] *
      (2*s23+2*s12) +
  INT["pentagon1x123",3,21,3,1,{1,0,1,-1,1}] *
      (-2),

INT["pentagon1x123",3,21,5,3,{2,0,1,-3,2}] -> 
  INT["pentagon1x123",3,21,5,3,{2,0,2,-3,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,3,{3,0,1,-3,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,0,2,-2,1}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,2,{3,0,1,-2,1}] *
      (-2*s34-2*s14-2*s24) +
  INT["pentagon1x123",3,21,4,2,{2,0,1,-2,1}] *
      (3) +
  INT["pentagon1x123",2,5,4,2,{2,0,2,-2,0}] *
      (1) +
  INT["pentagon1x123",2,5,4,2,{3,0,1,-2,0}] *
      (2) +
  INT["pentagon1x123",2,5,3,1,{2,0,1,-1,0}] *
      (-2),

INT["pentagon1x123",3,21,5,3,{2,0,1,-3,2}] -> 
  INT["pentagon1x123",3,21,5,3,{2,0,2,-3,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,3,{3,0,1,-3,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,2,{2,0,1,-2,2}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,2,{3,0,1,-2,1}] *
      (2*s12+2*s13) +
  INT["pentagon1x123",3,21,4,2,{2,0,1,-2,1}] *
      (3) +
  INT["pentagon1",2,17,4,2,{1,0,0,-2,3}] *
      (2) +
  INT["pentagon1",2,17,4,2,{2,0,0,-2,2}] *
      (1) +
  INT["pentagon1",2,17,4,1,{1,0,0,-1,3}] *
      (4*s34+4*s14+4*s24) +
  INT["pentagon1",2,17,4,1,{2,0,0,-1,2}] *
      (2*s34+2*s14+2*s24) +
  INT["pentagon1",2,17,4,0,{1,0,0,0,3}] *
      (4*s34*s24+2*s24^2+2*s34^2+4*s14*s24+4*s34*s14+2*s14^2) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (2*s34*s24+s24^2+s34^2+2*s14*s24+2*s34*s14+s14^2) +
  INT["pentagon1",2,17,3,1,{1,0,0,-1,2}] *
      (-4) +
  INT["pentagon1",2,17,3,1,{2,0,0,-1,1}] *
      (-2) +
  INT["pentagon1",2,17,3,0,{1,0,0,0,2}] *
      (-4*s34-4*s14-4*s24) +
  INT["pentagon1",2,17,3,0,{2,0,0,0,1}] *
      (-2*s34-2*s14-2*s24) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (2),

INT["pentagon1x123",3,21,5,3,{1,-3,2,0,2}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-3,3,0,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,3,{2,-3,2,0,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{1,-2,2,0,2}] *
      (s34+s13) +
  INT["pentagon1x123",3,21,5,2,{2,-2,2,0,1}] *
      (-s23) +
  INT["pentagon1x123",3,21,4,2,{1,-2,1,0,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{1,-2,2,0,1}] *
      (4) +
  INT["pentagon1x123",3,21,4,2,{2,-2,1,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,3,1,{1,-1,1,0,1}] *
      (-2),

INT["pentagon1x123",3,21,5,3,{1,-3,2,0,2}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-3,3,0,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,3,{2,-3,2,0,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{1,-2,2,0,2}] *
      (-s23-s12-s24) +
  INT["pentagon1x123",3,21,5,2,{1,-2,3,0,1}] *
      (-2*s23) +
  INT["pentagon1x123",3,21,4,2,{1,-2,2,0,1}] *
      (3) +
  INT["pentagon1x142",2,5,4,2,{2,0,2,-2,0}] *
      (1) +
  INT["pentagon1x142",2,5,4,2,{3,0,1,-2,0}] *
      (2) +
  INT["pentagon1x142",2,5,4,1,{2,0,2,-1,0}] *
      (-2*s34-2*s13) +
  INT["pentagon1x142",2,5,4,1,{3,0,1,-1,0}] *
      (-4*s34-4*s13) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (2*s23*(s23+s12+s24)+2*s23*s34+s13^2+2*s34*s13+2*s23*s13+s34^2+2*s23^2-2*s23*(2*s23+s12+s34+s24+s13)) +
  INT["pentagon1x142",2,5,4,0,{3,0,1,0,0}] *
      (4*s23*(s23+s12+s24)+4*s23*s34+2*s13^2+4*s34*s13+4*s23*s13+2*s34^2+4*s23^2-4*s23*(2*s23+s12+s34+s24+s13)) +
  INT["pentagon1x142",2,5,3,1,{1,0,2,-1,0}] *
      (-2) +
  INT["pentagon1x142",2,5,3,1,{2,0,1,-1,0}] *
      (-4) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      (2*s34+2*s13) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      (4*s34+4*s13) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (2),

INT["pentagon1x123",3,21,5,3,{1,-3,1,0,3}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-3,2,0,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,3,{2,-3,1,0,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{1,-2,1,0,3}] *
      (s34+s13) +
  INT["pentagon1x123",3,21,5,2,{2,-2,1,0,2}] *
      (-1/2*s23) +
  INT["pentagon1x123",3,21,4,2,{1,-2,1,0,2}] *
      (3/2) +
  INT["pentagon1",2,17,4,2,{2,0,-2,0,2}] *
      (1/2) +
  INT["pentagon1",2,17,4,2,{2,-1,-1,0,2}] *
      (-1) +
  INT["pentagon1",2,17,4,2,{2,-2,0,0,2}] *
      (1/2) +
  INT["pentagon1",2,17,4,2,{3,0,-2,0,1}] *
      (1) +
  INT["pentagon1",2,17,4,2,{3,-1,-1,0,1}] *
      (-2) +
  INT["pentagon1",2,17,4,2,{3,-2,0,0,1}] *
      (1) +
  INT["pentagon1",2,17,4,1,{2,0,-1,0,2}] *
      (s23+s24) +
  INT["pentagon1",2,17,4,1,{2,-1,0,0,2}] *
      (-s23-s24) +
  INT["pentagon1",2,17,4,1,{3,0,-1,0,1}] *
      (2*s23+2*s24) +
  INT["pentagon1",2,17,4,1,{3,-1,0,0,1}] *
      (-2*s23-2*s24) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (s23*s24+1/2*s24^2+1/2*s23^2) +
  INT["pentagon1",2,17,4,0,{3,0,0,0,1}] *
      (2*s23*s24+s24^2+s23^2),

INT["pentagon1x123",3,21,5,3,{1,-3,1,0,3}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-3,2,0,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,3,{2,-3,1,0,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{1,-2,1,0,3}] *
      (-s23-s12-s24) +
  INT["pentagon1x123",3,21,5,2,{1,-2,2,0,2}] *
      (-1/2*s23) +
  INT["pentagon1x123",3,21,4,2,{1,-2,1,0,2}] *
      (3/2) +
  INT["pentagon1x142",2,5,4,2,{1,0,3,-2,0}] *
      (1) +
  INT["pentagon1x142",2,5,4,2,{2,0,2,-2,0}] *
      (1/2) +
  INT["pentagon1x142",2,5,4,1,{1,0,3,-1,0}] *
      (-2*s34-2*s13) +
  INT["pentagon1x142",2,5,4,1,{2,0,2,-1,0}] *
      (-s34-s13) +
  INT["pentagon1x142",2,5,4,0,{1,0,3,0,0}] *
      (2*s23*(s23+s12+s24)+2*s23*s34+s13^2+2*s34*s13+2*s23*s13+s34^2+2*s23^2-2*s23*(2*s23+s12+s34+s24+s13)) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (s23*(s23+s12+s24)+s23*s34+1/2*s13^2+s34*s13+s23*s13+1/2*s34^2+s23^2-s23*(2*s23+s12+s34+s24+s13)) +
  INT["pentagon1x142",2,5,3,1,{1,0,2,-1,0}] *
      (-2) +
  INT["pentagon1x142",2,5,3,1,{2,0,1,-1,0}] *
      (-1) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      (2*s34+2*s13) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      (s34+s13) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (1),

INT["pentagon1x123",3,21,5,3,{1,-2,2,-1,2}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-2,3,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,3,{2,-2,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{1,-2,3,0,1}] *
      (-2*s14) +
  INT["pentagon1x123",3,21,5,2,{2,-2,2,0,1}] *
      (-s34-s14-s24) +
  INT["pentagon1x123",3,21,4,2,{1,-1,2,-1,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,2,{1,-2,2,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{1,-1,2,0,1}] *
      (2*s34+2*s14) +
  INT["pentagon1x123",2,5,4,2,{1,-2,3,0,0}] *
      (2) +
  INT["pentagon1x123",2,5,4,2,{2,-2,2,0,0}] *
      (1) +
  INT["pentagon1x123",2,5,3,1,{1,-1,2,0,0}] *
      (-2),

INT["pentagon1x123",3,21,5,3,{1,-2,2,-1,2}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-2,3,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,3,{2,-2,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{1,-2,2,0,2}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,2,{2,-2,2,0,1}] *
      (s12+s13) +
  INT["pentagon1x123",3,21,4,2,{1,-1,2,-1,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,2,{1,-2,1,0,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{1,-2,2,0,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,2,{2,-2,1,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{1,-1,2,0,1}] *
      (-2*s13) +
  INT["pentagon1x123",3,21,3,1,{1,-1,1,0,1}] *
      (-2),

INT["pentagon1x123",3,21,5,3,{1,-2,2,-1,2}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-2,3,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,3,{2,-2,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{1,-1,2,-1,2}] *
      (s34+s13) +
  INT["pentagon1x123",3,21,5,2,{2,-1,2,-1,1}] *
      (-s23) +
  INT["pentagon1x123",3,21,4,2,{1,-1,1,-1,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{1,-1,2,-1,1}] *
      (3) +
  INT["pentagon1x123",3,21,4,2,{1,-2,2,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{2,-1,1,-1,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{1,-1,2,0,1}] *
      (-s13) +
  INT["pentagon1x123",3,21,3,1,{1,0,1,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,3,1,{1,-1,1,0,1}] *
      (-1),

INT["pentagon1x123",3,21,5,3,{1,-2,2,-1,2}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-2,3,-1,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,3,{2,-2,2,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{1,-1,2,-1,2}] *
      (-s23-s12-s24) +
  INT["pentagon1x123",3,21,5,2,{1,-1,3,-1,1}] *
      (-2*s23) +
  INT["pentagon1x123",3,21,4,2,{1,-1,2,-1,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,2,{1,-2,2,0,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{1,-1,2,0,1}] *
      (s23+s12) +
  INT["pentagon1x142",2,5,4,2,{2,-1,2,-1,0}] *
      (1) +
  INT["pentagon1x142",2,5,4,2,{3,-1,1,-1,0}] *
      (2) +
  INT["pentagon1x142",2,5,4,1,{2,0,2,-1,0}] *
      (s14) +
  INT["pentagon1x142",2,5,4,1,{2,-1,2,0,0}] *
      (-s34-s13) +
  INT["pentagon1x142",2,5,4,1,{3,0,1,-1,0}] *
      (2*s14) +
  INT["pentagon1x142",2,5,4,1,{3,-1,1,0,0}] *
      (-2*s34-2*s13) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      ((s23+s12+s24)*s14-s14*(2*s23+s12+s34+s24+s13)+s23*s14) +
  INT["pentagon1x142",2,5,4,0,{3,0,1,0,0}] *
      (2*(s23+s12+s24)*s14-2*s14*(2*s23+s12+s34+s24+s13)+2*s23*s14) +
  INT["pentagon1x142",2,5,3,1,{1,0,2,-1,0}] *
      (-1) +
  INT["pentagon1x142",2,5,3,1,{1,-1,2,0,0}] *
      (-1) +
  INT["pentagon1x142",2,5,3,1,{2,0,1,-1,0}] *
      (-2) +
  INT["pentagon1x142",2,5,3,1,{2,-1,1,0,0}] *
      (-2) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      (s34-s14+s13) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      (2*s34-2*s14+2*s13) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (2),

INT["pentagon1x123",3,21,5,3,{1,-2,1,-1,3}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-2,2,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,3,{2,-2,1,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{1,-2,2,0,2}] *
      (-1/2*s14) +
  INT["pentagon1x123",3,21,5,2,{2,-2,1,0,2}] *
      (-1/2*s34-1/2*s14-1/2*s24) +
  INT["pentagon1x123",3,21,4,2,{1,-1,1,-1,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{1,-2,1,0,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{1,-2,2,0,1}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,2,{2,-2,1,0,1}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,1,{1,-1,1,0,2}] *
      (s34+s14) +
  INT["pentagon1x123",3,21,3,1,{1,-1,1,0,1}] *
      (-1),

INT["pentagon1x123",3,21,5,3,{1,-2,1,-1,3}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-2,2,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,3,{2,-2,1,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{1,-2,1,0,3}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,2,{2,-2,1,0,2}] *
      (1/2*s12+1/2*s13) +
  INT["pentagon1x123",3,21,4,2,{1,-1,1,-1,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{1,-2,1,0,2}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,1,{1,-1,1,0,2}] *
      (-s13) +
  INT["pentagon1",2,17,4,2,{2,0,-2,0,2}] *
      (1/2) +
  INT["pentagon1",2,17,4,2,{2,-1,-1,0,2}] *
      (-1) +
  INT["pentagon1",2,17,4,2,{2,-2,0,0,2}] *
      (1/2) +
  INT["pentagon1",2,17,4,2,{3,0,-2,0,1}] *
      (1) +
  INT["pentagon1",2,17,4,2,{3,-1,-1,0,1}] *
      (-2) +
  INT["pentagon1",2,17,4,2,{3,-2,0,0,1}] *
      (1) +
  INT["pentagon1",2,17,4,1,{2,0,-1,0,2}] *
      (s23+s24) +
  INT["pentagon1",2,17,4,1,{2,-1,0,0,2}] *
      (-s23-s24) +
  INT["pentagon1",2,17,4,1,{3,0,-1,0,1}] *
      (2*s23+2*s24) +
  INT["pentagon1",2,17,4,1,{3,-1,0,0,1}] *
      (-2*s23-2*s24) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (s23*s24+1/2*s24^2+1/2*s23^2) +
  INT["pentagon1",2,17,4,0,{3,0,0,0,1}] *
      (2*s23*s24+s24^2+s23^2),

INT["pentagon1x123",3,21,5,3,{1,-2,1,-1,3}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-2,2,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,3,{2,-2,1,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{1,-1,1,-1,3}] *
      (s34+s13) +
  INT["pentagon1x123",3,21,5,2,{2,-1,1,-1,2}] *
      (-1/2*s23) +
  INT["pentagon1x123",3,21,4,2,{1,-1,1,-1,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{1,-2,1,0,2}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,1,{1,-1,1,0,2}] *
      (-1/2*s13) +
  INT["pentagon1",2,17,4,2,{2,0,-1,-1,2}] *
      (1/2) +
  INT["pentagon1",2,17,4,2,{2,-1,0,-1,2}] *
      (-1/2) +
  INT["pentagon1",2,17,4,2,{3,0,-1,-1,1}] *
      (1) +
  INT["pentagon1",2,17,4,2,{3,-1,0,-1,1}] *
      (-1) +
  INT["pentagon1",2,17,4,1,{2,0,0,-1,2}] *
      (1/2*s23+1/2*s24) +
  INT["pentagon1",2,17,4,1,{2,0,-1,0,2}] *
      (1/2*s34+1/2*s14+1/2*s24) +
  INT["pentagon1",2,17,4,1,{2,-1,0,0,2}] *
      (-1/2*s34-1/2*s14-1/2*s24) +
  INT["pentagon1",2,17,4,1,{3,0,0,-1,1}] *
      (s23+s24) +
  INT["pentagon1",2,17,4,1,{3,0,-1,0,1}] *
      (s34+s14+s24) +
  INT["pentagon1",2,17,4,1,{3,-1,0,0,1}] *
      (-s34-s14-s24) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (1/2*s23*s24+1/2*s34*s24+1/2*s24^2+1/2*s23*s34+1/2*s14*s24+1/2*s23*s14) +
  INT["pentagon1",2,17,4,0,{3,0,0,0,1}] *
      (s23*s24+s34*s24+s24^2+s23*s34+s14*s24+s23*s14) +
  INT["pentagon1",2,17,3,1,{1,0,-1,0,2}] *
      (-1/2) +
  INT["pentagon1",2,17,3,1,{1,-1,0,0,2}] *
      (1/2) +
  INT["pentagon1",2,17,3,1,{2,0,-1,0,1}] *
      (-1) +
  INT["pentagon1",2,17,3,1,{2,-1,0,0,1}] *
      (1) +
  INT["pentagon1",2,17,3,0,{1,0,0,0,2}] *
      (-1/2*s23-1/2*s24) +
  INT["pentagon1",2,17,3,0,{2,0,0,0,1}] *
      (-s23-s24),

INT["pentagon1x123",3,21,5,3,{1,-2,1,-1,3}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-2,2,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,3,{2,-2,1,-1,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{1,-1,1,-1,3}] *
      (-s23-s12-s24) +
  INT["pentagon1x123",3,21,5,2,{1,-1,2,-1,2}] *
      (-1/2*s23) +
  INT["pentagon1x123",3,21,4,2,{1,-1,1,-1,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{1,-2,1,0,2}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,1,{1,-1,1,0,2}] *
      (1/2*s23+1/2*s12) +
  INT["pentagon1x142",2,5,4,2,{1,-1,3,-1,0}] *
      (1) +
  INT["pentagon1x142",2,5,4,2,{2,-1,2,-1,0}] *
      (1/2) +
  INT["pentagon1x142",2,5,4,1,{1,0,3,-1,0}] *
      (s14) +
  INT["pentagon1x142",2,5,4,1,{1,-1,3,0,0}] *
      (-s34-s13) +
  INT["pentagon1x142",2,5,4,1,{2,0,2,-1,0}] *
      (1/2*s14) +
  INT["pentagon1x142",2,5,4,1,{2,-1,2,0,0}] *
      (-1/2*s34-1/2*s13) +
  INT["pentagon1x142",2,5,4,0,{1,0,3,0,0}] *
      ((s23+s12+s24)*s14-s14*(2*s23+s12+s34+s24+s13)+s23*s14) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (1/2*(s23+s12+s24)*s14-1/2*s14*(2*s23+s12+s34+s24+s13)+1/2*s23*s14) +
  INT["pentagon1x142",2,5,3,1,{1,0,2,-1,0}] *
      (-1) +
  INT["pentagon1x142",2,5,3,1,{1,-1,2,0,0}] *
      (-1) +
  INT["pentagon1x142",2,5,3,1,{2,0,1,-1,0}] *
      (-1/2) +
  INT["pentagon1x142",2,5,3,1,{2,-1,1,0,0}] *
      (-1/2) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      (s34-s14+s13) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      (1/2*s34-1/2*s14+1/2*s13) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (1),

INT["pentagon1x123",3,21,5,3,{1,-1,2,-2,2}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-1,3,-2,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,3,{2,-1,2,-2,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{1,-1,3,-1,1}] *
      (-2*s14) +
  INT["pentagon1x123",3,21,5,2,{2,-1,2,-1,1}] *
      (-s34-s14-s24) +
  INT["pentagon1x123",3,21,4,2,{1,0,2,-2,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{1,-1,2,-1,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,1,{1,0,2,-1,1}] *
      (s34+s14) +
  INT["pentagon1x123",2,5,4,2,{1,-1,3,-1,0}] *
      (2) +
  INT["pentagon1x123",2,5,4,2,{2,-1,2,-1,0}] *
      (1) +
  INT["pentagon1x123",2,5,3,1,{1,0,2,-1,0}] *
      (-1) +
  INT["pentagon1x123",2,5,3,1,{1,-1,2,0,0}] *
      (-1),

INT["pentagon1x123",3,21,5,3,{1,-1,2,-2,2}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-1,3,-2,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,3,{2,-1,2,-2,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{1,-1,2,-1,2}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,2,{2,-1,2,-1,1}] *
      (s12+s13) +
  INT["pentagon1x123",3,21,4,2,{1,0,2,-2,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{1,-1,1,-1,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{1,-1,2,-1,1}] *
      (3) +
  INT["pentagon1x123",3,21,4,2,{2,-1,1,-1,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{1,0,2,-1,1}] *
      (-s13) +
  INT["pentagon1x123",3,21,3,1,{1,0,1,-1,1}] *
      (-1) +
  INT["pentagon1x123",3,21,3,1,{1,-1,1,0,1}] *
      (-1),

INT["pentagon1x123",3,21,5,3,{1,-1,2,-2,2}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-1,3,-2,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,3,{2,-1,2,-2,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{1,0,2,-2,2}] *
      (s34+s13) +
  INT["pentagon1x123",3,21,5,2,{2,0,2,-2,1}] *
      (-s23) +
  INT["pentagon1x123",3,21,4,2,{1,0,1,-2,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{1,0,2,-2,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,2,{1,-1,2,-1,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,2,{2,0,1,-2,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{1,0,2,-1,1}] *
      (-2*s13) +
  INT["pentagon1x123",3,21,3,1,{1,0,1,-1,1}] *
      (-2),

INT["pentagon1x123",3,21,5,3,{1,-1,2,-2,2}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-1,3,-2,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,3,{2,-1,2,-2,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{1,0,2,-2,2}] *
      (-s23-s12-s24) +
  INT["pentagon1x123",3,21,5,2,{1,0,3,-2,1}] *
      (-2*s23) +
  INT["pentagon1x123",3,21,4,2,{1,0,2,-2,1}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{1,-1,2,-1,1}] *
      (2) +
  INT["pentagon1x123",3,21,4,1,{1,0,2,-1,1}] *
      (2*s23+2*s12) +
  INT["pentagon1x142",2,5,4,2,{2,-2,2,0,0}] *
      (1) +
  INT["pentagon1x142",2,5,4,2,{3,-2,1,0,0}] *
      (2) +
  INT["pentagon1x142",2,5,4,1,{2,-1,2,0,0}] *
      (2*s14) +
  INT["pentagon1x142",2,5,4,1,{3,-1,1,0,0}] *
      (4*s14) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (s14^2) +
  INT["pentagon1x142",2,5,4,0,{3,0,1,0,0}] *
      (2*s14^2) +
  INT["pentagon1x142",2,5,3,1,{1,-1,2,0,0}] *
      (-2) +
  INT["pentagon1x142",2,5,3,1,{2,-1,1,0,0}] *
      (-4) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      (-2*s14) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      (-4*s14) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (2),

INT["pentagon1x123",3,21,5,3,{1,-1,1,-2,3}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-1,2,-2,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,3,{2,-1,1,-2,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{1,-1,2,-1,2}] *
      (-1/2*s14) +
  INT["pentagon1x123",3,21,5,2,{2,-1,1,-1,2}] *
      (-1/2*s34-1/2*s14-1/2*s24) +
  INT["pentagon1x123",3,21,4,2,{1,0,1,-2,2}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,2,{1,-1,1,-1,2}] *
      (3/2) +
  INT["pentagon1x123",3,21,4,2,{1,-1,2,-1,1}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,2,{2,-1,1,-1,1}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,1,{1,0,1,-1,2}] *
      (1/2*s34+1/2*s14) +
  INT["pentagon1x123",3,21,3,1,{1,0,1,-1,1}] *
      (-1/2) +
  INT["pentagon1x123",3,21,3,1,{1,-1,1,0,1}] *
      (-1/2),

INT["pentagon1x123",3,21,5,3,{1,-1,1,-2,3}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-1,2,-2,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,3,{2,-1,1,-2,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{1,-1,1,-1,3}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,2,{2,-1,1,-1,2}] *
      (1/2*s12+1/2*s13) +
  INT["pentagon1x123",3,21,4,2,{1,0,1,-2,2}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,2,{1,-1,1,-1,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{1,0,1,-1,2}] *
      (-1/2*s13) +
  INT["pentagon1",2,17,4,2,{2,0,-1,-1,2}] *
      (1/2) +
  INT["pentagon1",2,17,4,2,{2,-1,0,-1,2}] *
      (-1/2) +
  INT["pentagon1",2,17,4,2,{3,0,-1,-1,1}] *
      (1) +
  INT["pentagon1",2,17,4,2,{3,-1,0,-1,1}] *
      (-1) +
  INT["pentagon1",2,17,4,1,{2,0,0,-1,2}] *
      (1/2*s23+1/2*s24) +
  INT["pentagon1",2,17,4,1,{2,0,-1,0,2}] *
      (1/2*s34+1/2*s14+1/2*s24) +
  INT["pentagon1",2,17,4,1,{2,-1,0,0,2}] *
      (-1/2*s34-1/2*s14-1/2*s24) +
  INT["pentagon1",2,17,4,1,{3,0,0,-1,1}] *
      (s23+s24) +
  INT["pentagon1",2,17,4,1,{3,0,-1,0,1}] *
      (s34+s14+s24) +
  INT["pentagon1",2,17,4,1,{3,-1,0,0,1}] *
      (-s34-s14-s24) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (1/2*s23*s24+1/2*s34*s24+1/2*s24^2+1/2*s23*s34+1/2*s14*s24+1/2*s23*s14) +
  INT["pentagon1",2,17,4,0,{3,0,0,0,1}] *
      (s23*s24+s34*s24+s24^2+s23*s34+s14*s24+s23*s14) +
  INT["pentagon1",2,17,3,1,{1,0,-1,0,2}] *
      (-1/2) +
  INT["pentagon1",2,17,3,1,{1,-1,0,0,2}] *
      (1/2) +
  INT["pentagon1",2,17,3,1,{2,0,-1,0,1}] *
      (-1) +
  INT["pentagon1",2,17,3,1,{2,-1,0,0,1}] *
      (1) +
  INT["pentagon1",2,17,3,0,{1,0,0,0,2}] *
      (-1/2*s23-1/2*s24) +
  INT["pentagon1",2,17,3,0,{2,0,0,0,1}] *
      (-s23-s24),

INT["pentagon1x123",3,21,5,3,{1,-1,1,-2,3}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-1,2,-2,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,3,{2,-1,1,-2,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{1,0,1,-2,3}] *
      (s34+s13) +
  INT["pentagon1x123",3,21,5,2,{2,0,1,-2,2}] *
      (-1/2*s23) +
  INT["pentagon1x123",3,21,4,2,{1,0,1,-2,2}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,2,{1,-1,1,-1,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{1,0,1,-1,2}] *
      (-s13) +
  INT["pentagon1",2,17,4,2,{2,0,0,-2,2}] *
      (1/2) +
  INT["pentagon1",2,17,4,2,{3,0,0,-2,1}] *
      (1) +
  INT["pentagon1",2,17,4,1,{2,0,0,-1,2}] *
      (s34+s14+s24) +
  INT["pentagon1",2,17,4,1,{3,0,0,-1,1}] *
      (2*s34+2*s14+2*s24) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (s34*s24+1/2*s24^2+1/2*s34^2+s14*s24+s34*s14+1/2*s14^2) +
  INT["pentagon1",2,17,4,0,{3,0,0,0,1}] *
      (2*s34*s24+s24^2+s34^2+2*s14*s24+2*s34*s14+s14^2) +
  INT["pentagon1",2,17,3,1,{1,0,0,-1,2}] *
      (-1) +
  INT["pentagon1",2,17,3,1,{2,0,0,-1,1}] *
      (-2) +
  INT["pentagon1",2,17,3,0,{1,0,0,0,2}] *
      (-s34-s14-s24) +
  INT["pentagon1",2,17,3,0,{2,0,0,0,1}] *
      (-2*s34-2*s14-2*s24) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (1),

INT["pentagon1x123",3,21,5,3,{1,-1,1,-2,3}] -> 
  INT["pentagon1x123",3,21,5,3,{1,-1,2,-2,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,3,{2,-1,1,-2,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{1,0,1,-2,3}] *
      (-s23-s12-s24) +
  INT["pentagon1x123",3,21,5,2,{1,0,2,-2,2}] *
      (-1/2*s23) +
  INT["pentagon1x123",3,21,4,2,{1,0,1,-2,2}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,2,{1,-1,1,-1,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,1,{1,0,1,-1,2}] *
      (s23+s12) +
  INT["pentagon1x142",2,5,4,2,{1,-2,3,0,0}] *
      (1) +
  INT["pentagon1x142",2,5,4,2,{2,-2,2,0,0}] *
      (1/2) +
  INT["pentagon1x142",2,5,4,1,{1,-1,3,0,0}] *
      (2*s14) +
  INT["pentagon1x142",2,5,4,1,{2,-1,2,0,0}] *
      (s14) +
  INT["pentagon1x142",2,5,4,0,{1,0,3,0,0}] *
      (s14^2) +
  INT["pentagon1x142",2,5,4,0,{2,0,2,0,0}] *
      (1/2*s14^2) +
  INT["pentagon1x142",2,5,3,1,{1,-1,2,0,0}] *
      (-2) +
  INT["pentagon1x142",2,5,3,1,{2,-1,1,0,0}] *
      (-1) +
  INT["pentagon1x142",2,5,3,0,{1,0,2,0,0}] *
      (-2*s14) +
  INT["pentagon1x142",2,5,3,0,{2,0,1,0,0}] *
      (-s14) +
  INT["pentagon1x142",2,5,2,0,{1,0,1,0,0}] *
      (1),

INT["pentagon1x123",3,21,5,3,{1,0,2,-3,2}] -> 
  INT["pentagon1x123",3,21,5,3,{1,0,3,-3,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,3,{2,0,2,-3,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{1,0,3,-2,1}] *
      (-2*s14) +
  INT["pentagon1x123",3,21,5,2,{2,0,2,-2,1}] *
      (-s34-s14-s24) +
  INT["pentagon1x123",3,21,4,2,{1,0,2,-2,1}] *
      (3) +
  INT["pentagon1x123",2,5,4,2,{1,0,3,-2,0}] *
      (2) +
  INT["pentagon1x123",2,5,4,2,{2,0,2,-2,0}] *
      (1) +
  INT["pentagon1x123",2,5,3,1,{1,0,2,-1,0}] *
      (-2),

INT["pentagon1x123",3,21,5,3,{1,0,2,-3,2}] -> 
  INT["pentagon1x123",3,21,5,3,{1,0,3,-3,1}] *
      (-2) +
  INT["pentagon1x123",3,21,5,3,{2,0,2,-3,1}] *
      (-1) +
  INT["pentagon1x123",3,21,5,2,{1,0,2,-2,2}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,2,{2,0,2,-2,1}] *
      (s12+s13) +
  INT["pentagon1x123",3,21,4,2,{1,0,1,-2,2}] *
      (1) +
  INT["pentagon1x123",3,21,4,2,{1,0,2,-2,1}] *
      (4) +
  INT["pentagon1x123",3,21,4,2,{2,0,1,-2,1}] *
      (1) +
  INT["pentagon1x123",3,21,3,1,{1,0,1,-1,1}] *
      (-2),

INT["pentagon1x123",3,21,5,3,{1,0,1,-3,3}] -> 
  INT["pentagon1x123",3,21,5,3,{1,0,2,-3,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,3,{2,0,1,-3,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{1,0,2,-2,2}] *
      (-1/2*s14) +
  INT["pentagon1x123",3,21,5,2,{2,0,1,-2,2}] *
      (-1/2*s34-1/2*s14-1/2*s24) +
  INT["pentagon1x123",3,21,4,2,{1,0,1,-2,2}] *
      (2) +
  INT["pentagon1x123",3,21,4,2,{1,0,2,-2,1}] *
      (1/2) +
  INT["pentagon1x123",3,21,4,2,{2,0,1,-2,1}] *
      (1/2) +
  INT["pentagon1x123",3,21,3,1,{1,0,1,-1,1}] *
      (-1),

INT["pentagon1x123",3,21,5,3,{1,0,1,-3,3}] -> 
  INT["pentagon1x123",3,21,5,3,{1,0,2,-3,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,3,{2,0,1,-3,2}] *
      (-1/2) +
  INT["pentagon1x123",3,21,5,2,{1,0,1,-2,3}] *
      (-s14) +
  INT["pentagon1x123",3,21,5,2,{2,0,1,-2,2}] *
      (1/2*s12+1/2*s13) +
  INT["pentagon1x123",3,21,4,2,{1,0,1,-2,2}] *
      (3/2) +
  INT["pentagon1",2,17,4,2,{2,0,0,-2,2}] *
      (1/2) +
  INT["pentagon1",2,17,4,2,{3,0,0,-2,1}] *
      (1) +
  INT["pentagon1",2,17,4,1,{2,0,0,-1,2}] *
      (s34+s14+s24) +
  INT["pentagon1",2,17,4,1,{3,0,0,-1,1}] *
      (2*s34+2*s14+2*s24) +
  INT["pentagon1",2,17,4,0,{2,0,0,0,2}] *
      (s34*s24+1/2*s24^2+1/2*s34^2+s14*s24+s34*s14+1/2*s14^2) +
  INT["pentagon1",2,17,4,0,{3,0,0,0,1}] *
      (2*s34*s24+s24^2+s34^2+2*s14*s24+2*s34*s14+s14^2) +
  INT["pentagon1",2,17,3,1,{1,0,0,-1,2}] *
      (-1) +
  INT["pentagon1",2,17,3,1,{2,0,0,-1,1}] *
      (-2) +
  INT["pentagon1",2,17,3,0,{1,0,0,0,2}] *
      (-s34-s14-s24) +
  INT["pentagon1",2,17,3,0,{2,0,0,0,1}] *
      (-2*s34-2*s14-2*s24) +
  INT["pentagon1",2,17,2,0,{1,0,0,0,1}] *
      (1)
}
