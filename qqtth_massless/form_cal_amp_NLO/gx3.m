{-((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*(2*(-s12 - s23 + s45)*(s23 - s45 - s51)*
       (-s23 - s34 + s51)*(s12^2*(-s34 + s51) + (2*s23 + s34 - s51)*
         (s23*(s23 - s45 - s51) - (-s12 - s23 + s45)*(-s23 - s34 + s51)) + 
        s12*(s23^2 + (s23 - s45 - s51)*(-s34 + s51) + (-s12 - s23 + s45)*
           (-2*s23 - s34 + s51) + (-s23 - s34 + s51)^2)) + 
      eps*s12*(2*s23^2*(s23 - s45 - s51)^2*(-s23 - s34 + s51) + 
        (-s12 - s23 + s45)^2*(-s23 - s34 + s51)*(3*s23*(s23 - s45 - s51) + 
          s23*(-s23 - s34 + s51) + 2*(s23 - s45 - s51)*(-s23 - s34 + s51)) + 
        s23*(-s12 - s23 + s45)*(s23 - s45 - s51)*(s23*(s23 - s45 - s51) + 
          3*s23*(-s23 - s34 + s51) + 2*(s23 - s45 - s51)*(-s23 - s34 + s51) + 
          2*(-s23 - s34 + s51)^2) + s12^2*(2*s23*(s23 - s45 - s51)*
           (-s23 - s34 + s51) + (-s12 - s23 + s45)*(s23*(s23 - s45 - s51) + 
            s23*(-s23 - s34 + s51) + 2*(s23 - s45 - s51)*(-s23 - s34 + 
              s51))) + s12*(2*s23*(s23 - s34 - s45)*(s23 - s45 - s51)*
           (-s23 - s34 + s51) + (-s34 - s45)*(-s12 - s23 + s45)*
           (s23*(-s34 + s51) + (s23 - s45 - s51)*(s23 + 2*(-s23 - s34 + 
                s51))) + (-s12 - s23 + s45)^2*(s23*(-s23 - s34 + s51) + 
            (s23 - s45 - s51)*(s23 + 2*(-s23 - s34 + s51))))))*
     C0[0, 0, s12, 0, 0, 0])/(2*s12*s23*(s12 - s34 - s45)*(-s12 - s23 + s45)*
    (s23 - s45 - s51)*(-s23 - s34 + s51)) + 
  ((-2 + CA^2)*CF*eps*gs^2*mt^2*Pi^2*
    (s12^3 + s12^2*(-s12 - s23 + 2*(s23 - s34 - s45) + s45) + 
     s23*(s23 - s34 - s45)*(s23 - s45 - s51) + (-s12 - s23 + s45)*
      ((-s34 + s51)*(-s23 - s34 + s51) + (s23 - s45 - s51)*
        (s23 - s34 + s51)) + s12*((s23 - s45 - s51)^2 + (-s34 + s51)^2 + 
       (s23 - s45 - s51)*(3*s23 + 2*(-s23 - s34 + s51)) + 
       (-s12 - s23 + s45)*(2*s23 - s45 - s51 + 2*(-s23 - s34 + s51))))*
    C0[0, 0, s12 - s34 - s45, 0, 0, 0])/(s12*s34*(-s12 - s23 + s45)) + 
  ((-2 + CA^2)*CF*eps*gs^2*mt^2*Pi^2*s45*
    (s12^3 + 2*s12^2*(-s12 + 2*s23 + s34 - 2*s51) - 
     (-s12 - s23 + s45)^2*(-s23 - s34 + s51) + (s23 - s45 - s51)*
      (s23^2 - s23*(-s23 - s34 + s51) - 4*(-s23 - s34 + s51)^2 + 
       (s23 - s45 - s51)*(s23 - 4*(-s23 - s34 + s51))) + 
     s12*(s23^2 + (-s12 - s23 + s45)^2 + 3*s23*(s23 - s45 - s51) + 
       (s23 - s45 - s51)^2 - 2*s23*(-s23 - s34 + s51) - 
       6*(s23 - s45 - s51)*(-s23 - s34 + s51) - 3*(-s23 - s34 + s51)^2 + 
       (-s12 - s23 + s45)*(2*s23 + 2*(s23 - s45 - s51) - 
         3*(-s23 - s34 + s51))) + (-s12 - s23 + s45)*
      ((s23 - s45 - s51)*(s23 - 5*(-s23 - s34 + s51)) - 
       (-s23 - s34 + s51)*(s23 + 3*(-s23 - s34 + s51))))*
    C0[0, 0, s45, 0, 0, 0])/(2*s12*s34*(s12 - s34 - s45)*
    (-s23 - s34 + s51)) - ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*(-s12 - s23 + s45)*
    ((-s23 - s34 + s51)*(s12^2 + s12*(-s12 - 2*s23 - s34) - 
       s23*(s23 - s45 - s51) + (-s12 - s23 + s45)*(-s23 - s34 + s51)) + 
     eps*s12*(s12^2 + s12*(-s12 - s23 - s34) + (-s12 - s23 + s45)*
        (-2*s23 - s34 + s51) + s23*(-s45 - s51 + 2*(-s23 - s34 + s51))))*
    C0[0, 0, -s12 - s23 + s45, 0, 0, 0])/(s12^2*s23*(s12 - s34 - s45)) - 
  ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*(-s23 - s34 + s51)*
    (2*(s23 - s45 - s51)*(s12^2 + s12*(s12 + 2*s23 - s34 - 2*s45) + 
       s23*(s23 - s45 - s51) - (-s12 - s23 + s45)*(-s23 - s34 + s51)) + 
     eps*s12*(s12^2 + s12*(-s12 - s23 - s34 + s45 - 3*(s23 - s45 - s51) + 
         s51) + (-s12 - s23 + s45)*(-s23 - s34 + 2*(s23 - s45 - s51) + s51) + 
       (s23 - s45 - s51)*(s23 - 4*(s23 - s45 - s51) - 4*(-s23 - s34 + s51))))*
    C0[0, 0, -s23 - s34 + s51, 0, 0, 0])/(2*s12^2*(s12 - s34 - s45)*
    (s23 - s45 - s51)) - ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*(-s34 - s45)*
    (2*(s23 - s45 - s51)*(-s23 - s34 + s51)*
      (s12^3 + 2*s12^2*(s23 - s34 - s45) + s23*(s23 - s34 - s45)*
        (s23 - s45 - s51) - (-s12 - s23 + s45)^2*(-s23 - s34 + s51) + 
       (-s12 - s23 + s45)*((2*s23 + s34 - s51)*(s23 - s45 - s51) - 
         (-s34 + s51)*(-s23 - s34 + s51)) + s12*(-(-s12 - s23 + s45)^2 + 
         (s23 - s45 - s51)^2 + (-s34 + s51)^2 - (-s12 - s23 + s45)*
          (-s23 - s34 + s51) + (s23 - s45 - s51)*(3*s23 + 
           2*(-s23 - s34 + s51)))) + 
     eps*s12*(-2*s12^2*(-s12 - s34)*(2*s23 + s34 - s45 - 2*s51) + 
       (-s12 - s23 + s45)^2*(-s23 - s34 + s51)*(-s23 - s34 + 
         3*(s23 - s45 - s51) + s51) + s12^3*(-2*s23 - s34 + s45 + 2*s51) + 
       (-s12 - s23 + s45)*((-s34 + s51)*(-s23 - s34 + s51)^2 + 
         2*(s23 - s45 - s51)*(-s23 - s34 + s51)*(s23 - s34 + s51) - 
         (s23 - s45 - s51)^2*(s23 - 3*(-s23 - s34 + s51))) + 
       s12*(-(s23 - s45 - s51)^3 + (-s34 + s51)^2*(-s23 - s34 + s51) - 
         (s23 - s45 - s51)^2*(2*s23 - s34 + s51) + (-s12 - s23 + s45)^2*
          (-2*s23 - s34 + s45 + 2*s51) - (s23 - s45 - s51)*
          (s23^2 - s23*(-s23 - s34 + s51) + 3*(-s23 - s34 + s51)^2) + 
         (-s12 - s23 + s45)*(-2*s23*(s23 - s45 - s51) - 
           2*(s23 - s45 - s51)^2 + 2*s23*(-s23 - s34 + s51) + 
           3*(s23 - s45 - s51)*(-s23 - s34 + s51) + 
           3*(-s23 - s34 + s51)^2)) - (s23 - s45 - s51)*
        (s23*(s23 - s45 - s51)^2 + (s23 - s45 - s51)*
          (s23^2 + 2*s23*(-s23 - s34 + s51) + 4*(-s23 - s34 + s51)^2) + 
         (-s23 - s34 + s51)*(-s23^2 + 3*s23*(-s23 - s34 + s51) + 
           4*(-s23 - s34 + s51)^2))))*C0[0, s12, s12 - s34 - s45, 0, 0, 0])/
   (2*s12^2*s34*(s12 - s34 - s45)*(s23 - s45 - s51)*(-s23 - s34 + s51)) - 
  ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*(-s12 + s45)*
    ((-s12 - s23 + s45)*(-s23 - s34 + s51)*
      (s12^3 + 2*s12^2*(-s12 - s23 - s34) - s23*(s23 - s34 - s45)*
        (s23 - s45 - s51) + (-s12 - s23 + s45)^2*(-s23 - s34 + s51) + 
       (-s12 - s23 + s45)*((s23 - s45 - s51)*(-2*s23 - s34 + s51) + 
         (-s34 + s51)*(-s23 - s34 + s51)) + 
       s12*(-s23^2 + (-s12 - s23 + s45)^2 - s23*(s23 - s45 - s51) + 
         2*(-s12 - s23 + s45)*(s23 - s45 - s51) + (s23 - s45 - s51)^2 + 
         3*(-s12 - s23 + s45)*(-s23 - s34 + s51) + 2*(s23 - s45 - s51)*
          (-s23 - s34 + s51) + (-s23 - s34 + s51)^2)) + 
     eps*s12*(s12^3*(-s12 - 2*s23 + s45) + 2*s12^2*(-s12 - s34)*
        (-s12 - 2*s23 + s45) - s23^2*(s23 - s34 - s45)*(s23 - s45 - s51) + 
       (-s12 - s23 + s45)^3*(-2*s23 - s34 + s51) + (-s12 - s23 + s45)^2*
        (-2*s23^2 + 2*s23*(-s23 - s34 + s51) + (-s34 - s45)*
          (-s23 - s34 + s51)) + s23*(-s12 - s23 + s45)*
        (-s23^2 - 2*s23*(s23 - s45 - s51) + (s23 - s45 - s51)^2 + 
         2*(s23 - s45 - s51)*(-s23 - s34 + s51) + (-s23 - s34 + s51)^2) + 
       s12*((-s12 - s23 + s45)^3 + (-s12 - s23 + s45)^2*
          (2*(s23 - s45 - s51) + 3*(-s23 - s34 + s51)) + 
         (-s12 - s23 + s45)*(-2*s23^2 + (s23 - s45 - s51)^2 + 
           s23*(-s23 - s34 + s51) + (-s23 - s34 + s51)^2 + 
           (s23 - s45 - s51)*(s23 + 2*(-s23 - s34 + s51))) - 
         s23*((s23 - s45 - s51)^2 + (-s34 + s51)^2 + (s23 - s45 - s51)*
            (3*s23 + 2*(-s23 - s34 + s51))))))*C0[0, s12, s45, 0, 0, 0])/
   (s12^2*s23*s34*(s12 - s34 - s45)*(-s12 - s23 + s45)) + 
  ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*(2*(s12 - s23)*(-s12 - s23 + s45)*
      (-s23 - s34 + s51)^2*(s12^2 + s12*(-s12 - 2*s23 - s34) - 
       s23*(s23 - s45 - s51) + (-s12 - s23 + s45)*(-s23 - s34 + s51)) + 
     eps*s12*(s12^3*(2*s23*(-s23 - s34 + s51) + (-s12 - s23 + s45)*
          (s23 + 2*(-s23 - s34 + s51))) + 
       s12^2*(2*s23*(2*s23 - s34 - s45)*(-s23 - s34 + s51) + 
         (-s12 - s23 + s45)^2*(s23 + 2*(-s23 - s34 + s51)) + 
         (-s12 - s23 + s45)*(2*s23^2 + s23*(s23 - s45 - s51) + 
           3*s23*(-s23 - s34 + s51) + 2*(s23 - s45 - s51)*(-s23 - s34 + 
             s51) + 2*(-s23 - s34 + s51)^2)) + 
       s12*(2*s23^2*(-s23 - s34 + s51)*(-s34 + 2*(s23 - s45 - s51) + s51) + 
         (-s12 - s23 + s45)^2*(s23^2 - s23*(-s23 - s34 + s51) + 
           2*(-s23 - s34 + s51)^2) + s23*(-s12 - s23 + s45)*
          (s23^2 + 2*s23*(s23 - s45 - s51) + 3*s23*(-s23 - s34 + s51) + 
           4*(s23 - s45 - s51)*(-s23 - s34 + s51) + 
           4*(-s23 - s34 + s51)^2)) + 
       s23*(2*s23^2*(s23 - s45 - s51)*(-s23 - s34 + s51) + 
         (-s12 - s23 + s45)^2*(-s23 - s34 + s51)*
          (s23 - 2*(-s23 - s34 + s51)) + s23*(-s12 - s23 + s45)*
          (2*(2*s23 + s34 - s51)*(-s23 - s34 + s51) + (s23 - s45 - s51)*
            (s23 + 2*(-s23 - s34 + s51))))))*C0[0, -s12 - s23 + s45, s45, 0, 
     0, 0])/(2*s12^2*s23*(s12 - s34 - s45)*(-s12 - s23 + s45)*
    (-s23 - s34 + s51)) + ((-2 + CA^2)*CF*eps*gs^2*mt^2*Pi^2*
    (-s12 + s34 + s45 - s51)*(-((-s12 - s23 + s45)^2*(-s23 - s34 + s51)) - 
     2*s23*(s23 - s45 - s51)*(-s23 - s34 + s51) + 
     s12^2*(-s12 - s23 + s45 - 2*(-s23 - s34 + s51)) + 
     (-s12 - s23 + s45)*(s23*(s23 - s45 - s51) - 4*(s23 - s45 - s51)*
        (-s23 - s34 + s51) - 2*(-s23 - s34 + s51)^2) + 
     s12*((-s12 - s23 + s45)^2 - 2*(s23 - s34 - s45)*(-s23 - s34 + s51) + 
       (-s12 - s23 + s45)*(2*s23 - s45 - s51 - 3*(-s23 - s34 + s51))))*
    C0[0, -s12 - s23 + s45, -s23 - s34 + s51, 0, 0, 0])/
   (2*s12*(s12 - s34 - s45)*(-s12 - s23 + s45)*(-s23 - s34 + s51)) + 
  ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*(2*(-s12 - s23 + s45)*(s23 - s45 - s51)*
      (-s23 - s34 + s51)*(s12 - s23 + s45 + s51)*
      (s12^2 + s12*(s12 + 2*s23 - s34 - 2*s45) + s23*(s23 - s45 - s51) - 
       (-s12 - s23 + s45)*(-s23 - s34 + s51)) + 
     eps*s12*(s12^3*((-s34 - s45)*(-s12 - s23 + s45) + 2*(s23 - s45 - s51)*
          (-s23 - s34 + s51)) + s12^2*((-s34 - s45)*(-s12 - s23 + s45)^2 + 
         2*(s23 - s45 - s51)*(-s23 - s34 + s51)*(-s34 + 2*(s23 - s45 - s51) + 
           s51) + (-s12 - s23 + s45)*((2*s23 + s34 - s51)*(s23 - s45 - s51) + 
           2*(s23 - s45 - s51)^2 + (-s34 + s51)*(-s23 - s34 + s51))) + 
       s12*((-s34 - s45)^2*(-s12 - s23 + s45)^2 + 2*(2*s23 - s34 - s45)*
          (s23 - s45 - s51)^2*(-s23 - s34 + s51) + (-s12 - s23 + s45)*
          (s23 - s45 - s51)*(2*s23*(s23 - s45 - s51) + (s23 - s45 - s51)^2 + 
           2*s23*(-s23 - s34 + s51) - 2*(s23 - s45 - s51)*(-s23 - s34 + 
             s51) - 5*(-s23 - s34 + s51)^2)) + (s23 - s45 - s51)*
        (-3*(-s34 - s45)*(-s12 - s23 + s45)^2*(-s23 - s34 + s51) + 
         2*s23*(s23 - s45 - s51)^2*(-s23 - s34 + s51) + (-s12 - s23 + s45)*
          (s23 - s45 - s51)*(s23*(s23 - s45 - s51) + (-s23 - s34 + s51)*
            (s23 - 2*(-s23 - s34 + s51))))))*C0[0, -s23 - s34 + s51, 
     s12 - s34 - s45, 0, 0, 0])/(2*s12^2*(s12 - s34 - s45)*(-s12 - s23 + s45)*
    (s23 - s45 - s51)*(-s23 - s34 + s51)) + 
  ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*((-2 + 5*eps)*s12^3 + 
     s12^2*(-6*s23 + 11*eps*s23 + (-4 + 11*eps)*(-s12 - s23 + s45) + 
       (-2 + 7*eps)*(s23 - s45 - s51) - 4*(-s23 - s34 + s51) + 
       5*eps*(-s23 - s34 + s51)) + eps*(-s12 + s45)*((-s12 - s23 + s45)^2 + 
       2*(s23 - s45 - s51)^2 + s23*(-s34 + s51) + 2*(s23 - s45 - s51)*
        (-s34 + s51) + (-s12 - s23 + s45)*(3*(s23 - s45 - s51) + 
         2*(-s34 + s51))) - 2*(s23*(-s12 - s23 + s45)^2 + 
       s23*(s23 - s45 - s51)*(-s34 + s51) + (-s34 + s51)^3 - 
       (s23 - s45 - s51)^2*(-s23 - s34 + s51) + (-s12 - s23 + s45)*
        (2*s23^2 + (2*s23 + s34 - s51)*(s23 - s45 - s51) + 
         3*s23*(-s23 - s34 + s51) + (-s23 - s34 + s51)^2)) + 
     s12*((-2 + 7*eps)*(-s12 - s23 + s45)^2 + 
       eps*(7*s23^2 + 9*s23*(s23 - s45 - s51) + 2*(s23 - s45 - s51)^2 + 
         6*s23*(-s23 - s34 + s51) + 2*(s23 - s45 - s51)*(-s23 - s34 + s51)) - 
       2*(3*s23^2 + 2*s23*(s23 - s45 - s51) + 5*s23*(-s23 - s34 + s51) + 
         2*(-s23 - s34 + s51)^2) + (-s12 - s23 + s45)*
        (2*(-1 + 5*eps)*(s23 - s45 - s51) + (-4 + 7*eps)*(s23 - s34 + s51))))*
    D0[0, 0, 0, s12, s45, s12 - s34 - s45, 0, 0, 0, 0])/(s12*s34) - 
  ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*(2*(s23 - s45 - s51)*(-s23 - s34 + s51)*
      (s12^2 + s12*(-s23 + 3*(-s12 - s23 + s45) + 5*(s23 - s45 - s51) + 
         3*(-s23 - s34 + s51)) + (-s12 - s23 + s45)*(2*(s23 - s45 - s51) + 
         5*(-s23 - s34 + s51)) + (s23 - s45 - s51)*
        (s23 + 2*(s23 - s45 - s51) + 6*(-s23 - s34 + s51))) + 
     eps*s12*(s12^2*(2*s23 + s34 - s45 - 2*s51) + 
       (-s34 - s45)*(s23*(s23 - s45 - s51) + 2*(-s12 - s23 + s45)*
          (s23 - s45 - s51) - (-s12 - s23 + s45)*(-s23 - s34 + s51)) + 
       s12*((-s12 - s23 + s45)*(2*s23 + s34 - s45 - 2*s51) + 
         (s23 - s45 - s51)^2 - (-s34 + s51)*(-s23 - s34 + s51) + 
         (s23 - s45 - s51)*(s23 + 2*(-s23 - s34 + s51)))))*
    D0[0, 0, 0, s12 - s34 - s45, s12, -s23 - s34 + s51, 0, 0, 0, 0])/
   (2*s12*(s12 - s34 - s45)*(s23 - s45 - s51)) + 
  ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*
    ((-s12 - s23 + s45)*(s12^2*(s23 - s34 + s51) + s23*(s23 - s45 - s51)*
        (4*s23 + 5*(-s23 - s34 + s51)) + (-s23 - s34 + s51)*
        (2*s23*(-s34 + s51) + (-s12 - s23 + s45)*(s23 - s34 + s51)) + 
       s12*(2*s23^2 + 5*s23*(-s23 - s34 + s51) + (s23 - s45 - s51)*
          (3*s23 - s34 + s51) + (-s23 - s34 + s51)*(-s12 - 2*s23 - s34 + 
           s45 + s51))) + eps*s12*(s12^2*(-s12 - 2*s23 + s45) + 
       s12*(-(s23*(s23 - s34 - s45)) + (-s23 - s34 - s45)*
          (-s12 - s23 + s45) + (-s12 - s23 + s45)^2) + 
       (-s12 + s45)*((-s12 - s23 + s45)*(-s34 + s51) - 
         s23*(s23 - s45 - s51 + 2*(-s23 - s34 + s51)))))*
    D0[0, 0, 0, s45, s12, -s12 - s23 + s45, 0, 0, 0, 0])/
   (s12*s23*(s12 - s34 - s45)) + ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*
    (-4*(-s23 - s34 + s51)*(s12^2 + s23^2 + (-s12 - s23 + s45)^2 + 
       (-s12 - s23 + s45)*(2*s23 + s34 - s45 - 2*s51) + 
       2*s23*(-s23 - s34 + s51) - (s23 - s45 - s51)*(-s23 - s34 + s51) + 
       (-s23 - s34 + s51)^2 + s12*(-s12 - s34 + s45 + s51)) + 
     eps*s45*(s12^2 + s23*(s23 - s45 - s51) + (-s12 + s23 + s45)*
        (-s23 - s34 + s51) + s12*(s12 + 3*s23 - 2*s45 - s51 + 
         3*(-s23 - s34 + s51))))*D0[0, 0, 0, -s12 - s23 + s45, s45, 
     -s23 - s34 + s51, 0, 0, 0, 0])/(2*s12*(s12 - s34 - s45)) + 
  ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*(-2*(-s12 - s23 + s45)*(s12 - s34 + s51) + 
     eps*(s12^2 + (-s12 - s23 + s45)^2 + s12*(3*s23 + s34 - s45 + 
         4*(-s12 - s23 + s45) - 2*s51) + s23*(s23 - s45 - s51) + 
       (-s12 - s23 + s45)*(-s34 + 2*(s23 - s45 - s51) + s51)))*
    D0[0, 0, 0, -s23 - s34 + s51, -s12 - s23 + s45, s12 - s34 - s45, 0, 0, 0, 
     0])/s12 + ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*
    (2*(-s12 - s23 + s45)*(-s12 + s34 - 2*s51)*(-s23 - s34 + s51) + 
     eps*s12*s45*(-s12 - s23 + s45 + 2*(-s23 - s34 + s51)))*
    PaVe[0, {0, s12, s45, 0, -s23 - s34 + s51, 0, 0, 0, -s12 - s23 + s45, 
      s12 - s34 - s45}, {0, 0, 0, 0, 0}, PaVeAutoOrder -> True, 
     PaVeAutoReduce -> True])/s12, 
 -((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*(2*s23*(-s12 - s23 + s45)*(-s23 - s34 + s51)*
       (s12^2*(-s12 - s51) + s12*((-s12 - s23 + s45)^2 + 
          (3*s23 + s34 - s45 - 2*s51)*(s23 - s45 - s51) + 
          (-s12 - s23 + s45)*(-s34 + s51)) + (-s12 - 2*s23 + 2*s45 + s51)*
         (-(s23*(s23 - s45 - s51)) + (-s12 - s23 + s45)*(-s23 - s34 + 
            s51))) + eps*s12*(s23^2*(s23 - s45 - s51)^2*(-s23 - s34 + s51) + 
        s23*(-s34 - s45)*(-s12 - s23 + s45)*(s23 - s45 - s51)*
         (2*s23 + 3*(-s23 - s34 + s51)) + (-s12 - s23 + s45)^2*
         (-s23 - s34 + s51)*(2*s23*(s23 - s45 - s51) + 
          2*s23*(-s23 - s34 + s51) + (s23 - s45 - s51)*(-s23 - s34 + s51)) + 
        s12^2*(s23*(s23 - s45 - s51)*(-s23 - s34 + s51) + 
          (-s12 - s23 + s45)*(2*s23*(s23 - s45 - s51) + 
            2*s23*(-s23 - s34 + s51) + (s23 - s45 - s51)*(-s23 - s34 + 
              s51))) + s12*(s23*(s23 - s34 - s45)*(s23 - s45 - s51)*
           (-s23 - s34 + s51) + (-s12 - s23 + s45)^2*
           (2*s23*(-s23 - s34 + s51) + (s23 - s45 - s51)*(s23 - s34 + s51)) + 
          (-s12 - s23 + s45)*(2*s23*(-s34 + s51)*(-s23 - s34 + s51) + 
            (s23 - s45 - s51)^2*(s23 - s34 + s51) + (s23 - s45 - s51)*
             (2*s23^2 + 2*s23*(-s23 - s34 + s51) + (-s23 - s34 + s51)^2)))))*
     C0[0, 0, s12, 0, 0, 0])/(2*s12*s23*s45*(-s12 - s23 + s45)*
    (s23 - s45 - s51)*(-s23 - s34 + s51)) + 
  ((-2 + CA^2)*CF*eps*gs^2*mt^2*Pi^2*(s12 - s34 - s45)*
    (s12^3 + 2*s12^2*(s12 + 2*s23 - s34 - 2*s45) + s23*(s23 - s34 - s45)*
      (s23 - s45 - s51) - (4*s23 - s34 - s45)*(-s12 - s23 + s45)*
      (-s34 + s51) - (-s12 - s23 + s45)^2*(4*s23 + 3*(-s23 - s34 + s51)) + 
     s12*(-3*(-s12 - s23 + s45)^2 + (s23 - s45 - s51)^2 + (-s34 + s51)^2 + 
       (s23 - s45 - s51)*(3*s23 + 2*(-s23 - s34 + s51)) - 
       (-s12 - s23 + s45)*(6*s23 + 2*(s23 - s45 - s51) + 
         3*(-s23 - s34 + s51))))*C0[0, 0, s12 - s34 - s45, 0, 0, 0])/
   (2*s12*s34*s45*(-s12 - s23 + s45)) + 
  ((-2 + CA^2)*CF*eps*gs^2*mt^2*Pi^2*(s12^3 + (-s12 - s23 + s45)^2*
      (-s23 - s34 + s51) + s12^2*(s23 - s34 + 2*(-s12 - s23 + s45) + 
       2*(s23 - s45 - s51) + s51) + s23*(s23 - s45 - s51)*
      (2*s23 - s45 - s51 + 2*(-s23 - s34 + s51)) + 
     (-s12 - s23 + s45)*((s23 - s45 - s51)*(-s34 + s51) + 
       s23*(-s23 - s34 + s51)) + 
     s12*(2*(s23 - s34 - s45)*(-s12 - s23 + s45) + (-s12 - s23 + s45)^2 + 
       (s23 - s45 - s51)^2 + s23*(-s34 + s51) + (s23 - s45 - s51)*
        (2*s23 - s34 + s51)))*C0[0, 0, s45, 0, 0, 0])/
   (s12*s34*(-s23 - s34 + s51)) - ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*
    (-s12 - s23 + s45)*(2*s23*(s12^2 + s12*(-s12 + 2*s23 + s34 - 2*s51) + 
       s23*(s23 - s45 - s51) - (-s12 - s23 + s45)*(-s23 - s34 + s51)) + 
     eps*s12*(s12^2 + s12*(-s12 - 4*s23 - s34) + (-s12 - s23 + s45)*
        (-5*s23 - s34 + s51) + s23*(-3*s23 - s45 - s51 + 
         2*(-s23 - s34 + s51))))*C0[0, 0, -s12 - s23 + s45, 0, 0, 0])/
   (2*s12^2*s23*s45) - ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*(-s23 - s34 + s51)*
    (eps*s12*(s12^2 - (-s23 - s34 - s45)*(s23 - s45 - s51) + 
       s12*(-s12 - s23 - s34 + s45 + s51) + (-s12 - s23 + s45)*
        (-s23 - s34 + 2*(s23 - s45 - s51) + s51)) + 
     (-s12 - s23 + s45)*(s12^2 - s23*(s23 - s45 - s51) + 
       (-s12 - s23 + s45)*(-s23 - s34 + s51) + 
       s12*(-s12 - 2*s23 - s34 + 2*s45 + 2*s51)))*C0[0, 0, -s23 - s34 + s51, 
     0, 0, 0])/(s12^2*s45*(s23 - s45 - s51)) + 
  ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*(-s34 - s45)*
    (-((-s12 - s23 + s45)*(-s23 - s34 + s51)*(s12^3 - s23*(s23 - s34 - s45)*
         (s23 - s45 - s51) + (-s12 - s23 + s45)^2*(-s23 - s34 + s51) + 
        2*s12^2*(-s12 - s23 - s34 + s45 + s51) + (-s12 - s23 + s45)*
         ((s23 - s45 - s51)*(-2*s23 - s34 + s51) + (-s34 + s51)*
           (-s23 - s34 + s51)) + s12*((-s12 - s23 + s45)^2 - 
          s23*(s23 - s45 - s51) - (s23 - s45 - s51)^2 + (-s34 + s51)^2 + 
          (-s12 - s23 + s45)*(2*s23 + 3*(-s23 - s34 + s51))))) + 
     eps*s12*(s12^3*(2*s23 + s34 - s45 - 2*s51) + 2*s12^2*(-s12 - s34)*
        (2*s23 + s34 - s45 - 2*s51) - (-s34 - s45)*(-s12 - s23 + s45)^2*
        (-s23 - s34 + s51) + (-s12 - s23 + s45)*(s23*(s23 - s45 - s51)^2 - 
         2*(s23 - s45 - s51)*(-s34 + s51)*(-s23 - s34 + s51) - 
         (-s34 + s51)*(-s23 - s34 + s51)^2) + 
       s12*((-s12 - s23 + s45)^2*(2*s23 + s34 - s45 - 2*s51) + 
         s23*(2*s23 + s34 - s51)*(s23 - s45 - s51) + (s23 - s45 - s51)^3 - 
         (-s34 + s51)^2*(-s23 - s34 + s51) + (s23 - s45 - s51)^2*
          (3*s23 + 2*(-s23 - s34 + s51)) + (-s12 - s23 + s45)*
          (2*s23*(s23 - s45 - s51) + 2*(s23 - s45 - s51)^2 - 
           2*s23*(-s23 - s34 + s51) - (s23 - s45 - s51)*(-s23 - s34 + s51) - 
           3*(-s23 - s34 + s51)^2)) + (s23 - s45 - s51)*
        ((s23 - s45 - s51)^2*(-s34 + s51) - s23^2*(-s23 - s34 + s51) + 
         (-s23 - s34 + s51)^3 + (s23 - s45 - s51)*
          (s23^2 + 2*s23*(-s23 - s34 + s51) + 2*(-s23 - s34 + s51)^2))))*
    C0[0, s12, s12 - s34 - s45, 0, 0, 0])/(s12^2*s34*s45*(s23 - s45 - s51)*
    (-s23 - s34 + s51)) - ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*(-s12 + s45)*
    (2*s23*(-s12 - s23 + s45)*(s12^3 + 2*s12^2*(-s12 + s23 - s51) + 
       s23*(s23 - s34 - s45)*(s23 - s45 - s51) - (-s12 - s23 + s45)^2*
        (-s23 - s34 + s51) + (-s12 - s23 + s45)*
        ((2*s23 + s34 - s51)*(s23 - s45 - s51) - (-s34 + s51)*
          (-s23 - s34 + s51)) + s12*(s23^2 + (-s12 - s23 + s45)^2 + 
         3*s23*(s23 - s45 - s51) + (s23 - s45 - s51)^2 + 
         (-s12 - s23 + s45)*(3*s23 + s34 + 2*(s23 - s45 - s51) - s51) - 
         (-s23 - s34 + s51)^2)) + eps*s12*(s12^3*(-s12 - 2*s23 + s45) + 
       2*s12^2*(-s12 - s34)*(-s12 - 2*s23 + s45) - s23^2*(s23 - s34 - s45)*
        (s23 - s45 - s51) + (-s12 - s23 + s45)^3*(-5*s23 - s34 + s51) + 
       (-s12 - s23 + s45)^2*(-4*s23^2 + (s23 - s45 - s51)*
          (-4*s23 - s34 + s51) + 2*s23*(-s23 - s34 + s51) + 
         (-s23 - s34 + s51)^2) + s23*(-s12 - s23 + s45)*
        ((s23 - s45 - s51)^2 + 3*(-s34 + s51)*(-s23 - s34 + s51) - 
         2*(s23 - s45 - s51)*(s23 - 2*(-s23 - s34 + s51))) + 
       s12*((-s12 - s23 + s45)^3 + (-s12 - s23 + s45)^2*
          (-3*s23 + 2*(s23 - s45 - s51) + 3*(-s23 - s34 + s51)) + 
         (-s12 - s23 + s45)*(-s23^2 + (s23 - s45 - s51)^2 + 
           3*s23*(-s23 - s34 + s51) + (-s23 - s34 + s51)^2 + 
           (s23 - s45 - s51)*(s23 + 2*(-s23 - s34 + s51))) - 
         s23*((s23 - s45 - s51)^2 + (-s34 + s51)^2 + (s23 - s45 - s51)*
            (3*s23 + 2*(-s23 - s34 + s51))))))*C0[0, s12, s45, 0, 0, 0])/
   (2*s12^2*s23*s34*s45*(-s12 - s23 + s45)) + 
  ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*(2*(s12 - s23)*s23*(-s12 - s23 + s45)*
      (-s23 - s34 + s51)*(s12^2 + s12*(-s12 + 2*s23 + s34 - 2*s51) + 
       s23*(s23 - s45 - s51) - (-s12 - s23 + s45)*(-s23 - s34 + s51)) + 
     eps*s12*(s12^3*(s23*(-s23 - s34 + s51) + (-s12 - s23 + s45)*
          (s23 - s34 + s51)) + s23*(s23^2*(s23 - s45 - s51)*
          (-s23 - s34 + s51) - (-s12 - s23 + s45)^2*(-s23 - s34 + s51)*
          (2*s23 + 3*(-s23 - s34 + s51)) + s23*(-s12 - s23 + s45)*
          (2*s23*(s23 - s45 - s51) + (s23 - s45 - s51)*(-s23 - s34 + s51) - 
           3*(-s23 - s34 + s51)^2)) + 
       s12*(s23^2*(-s23 - s34 + s51)*(-s34 + 2*(s23 - s45 - s51) + s51) + 
         (-s12 - s23 + s45)^2*(2*s23^2 - 5*s23*(-s23 - s34 + s51) + 
           (-s23 - s34 + s51)^2) + 2*s23*(-s12 - s23 + s45)*
          (s23^2 + 2*s23*(s23 - s45 - s51) - s23*(-s23 - s34 + s51) + 
           (s23 - s45 - s51)*(-s23 - s34 + s51) + (-s23 - s34 + s51)^2)) + 
       s12^2*(s23*(2*s23 - s34 - s45)*(-s23 - s34 + s51) + 
         (-s12 - s23 + s45)^2*(s23 - s34 + s51) + (-s12 - s23 + s45)*
          (4*s23^2 + 2*s23*(s23 - s45 - s51) - s23*(-s23 - s34 + s51) + 
           (s23 - s45 - s51)*(-s23 - s34 + s51) + (-s23 - s34 + s51)^2))))*
    C0[0, -s12 - s23 + s45, s45, 0, 0, 0])/(2*s12^2*s23*s45*
    (-s12 - s23 + s45)*(-s23 - s34 + s51)) + 
  ((-2 + CA^2)*CF*eps*gs^2*mt^2*Pi^2*(-s12 + s34 + s45 - s51)*
    (s12^2*(s23 + s34 + 2*(-s12 - s23 + s45) - s51) + 
     2*(-s12 - s23 + s45)^2*(-s23 - s34 + s51) - s23*(s23 - s45 - s51)*
      (-s23 - s34 + s51) + (-s12 - s23 + s45)*(2*s23*(s23 - s45 - s51) + 
       4*s23*(-s23 - s34 + s51) + (-s23 - s34 + s51)^2) + 
     s12*(2*(-s12 - s23 + s45)^2 - (s23 - s34 - s45)*(-s23 - s34 + s51) + 
       (-s12 - s23 + s45)*(2*s23 + 2*(s23 - s45 - s51) + 
         3*(-s23 - s34 + s51))))*C0[0, -s12 - s23 + s45, -s23 - s34 + s51, 0, 
     0, 0])/(2*s12*s45*(-s12 - s23 + s45)*(-s23 - s34 + s51)) + 
  ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*(2*(-s12 - s23 + s45)^2*(-s23 - s34 + s51)*
      (s12 - s23 + s45 + s51)*(s12^2 - s23*(s23 - s45 - s51) + 
       (-s12 - s23 + s45)*(-s23 - s34 + s51) + 
       s12*(-s12 - 2*s23 - s34 + 2*s45 + 2*s51)) + 
     eps*s12*(s12^3*(2*(-s34 - s45)*(-s12 - s23 + s45) + 
         (s23 - s45 - s51)*(-s23 - s34 + s51)) + 
       s12*(2*(-s34 - s45)^2*(-s12 - s23 + s45)^2 + (2*s23 - s34 - s45)*
          (s23 - s45 - s51)^2*(-s23 - s34 + s51) + (-s12 - s23 + s45)*
          (s23 - s45 - s51)*(4*s23*(s23 - s45 - s51) + 
           2*(s23 - s45 - s51)^2 + 4*s23*(-s23 - s34 + s51) + 
           3*(s23 - s45 - s51)*(-s23 - s34 + s51) - (-s23 - s34 + s51)^2)) + 
       (s23 - s45 - s51)*(-2*(-s34 - s45)*(-s12 - s23 + s45)^2*
          (-s23 - s34 + s51) + s23*(s23 - s45 - s51)^2*(-s23 - s34 + s51) + 
         (-s12 - s23 + s45)*(s23 - s45 - s51)*(2*(s23 - s45 - s51)*
            (-s34 + s51) + (-s23 - s34 + s51)*(s23 - s34 + s51))) + 
       s12^2*(2*(-s34 - s45)*(-s12 - s23 + s45)^2 + (s23 - s45 - s51)*
          (-s23 - s34 + s51)*(-s34 + 2*(s23 - s45 - s51) + s51) + 
         (-s12 - s23 + s45)*(4*(s23 - s45 - s51)^2 + 2*(-s34 + s51)*
            (-s23 - s34 + s51) + (s23 - s45 - s51)*(2*s23 + 
             3*(-s23 - s34 + s51))))))*C0[0, -s23 - s34 + s51, 
     s12 - s34 - s45, 0, 0, 0])/(2*s12^2*s45*(-s12 - s23 + s45)*
    (s23 - s45 - s51)*(-s23 - s34 + s51)) + 
  ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*((-2 + 5*eps)*s12^3 - 
     2*(-s12 - s23 + s45)^3 - 2*(-s12 - s23 + s45)^2*
      (-s23 - s34 + 3*(s23 - s45 - s51) + s51) + 
     s12^2*(-2*s23 + 7*eps*s23 + (-4 + 5*eps)*(-s12 - s23 + s45) + 
       (-6 + 11*eps)*(s23 - s45 - s51) - 4*(-s23 - s34 + s51) + 
       11*eps*(-s23 - s34 + s51)) + (-s12 - s23 + s45)*
      ((-6 + eps)*(s23 - s45 - s51)^2 + (s23 - s45 - s51)*
        (2*(-1 + eps)*s23 + 3*(-2 + eps)*(-s23 - s34 + s51)) + 
       2*(-s34 + s51)*(s23 + eps*(-s23 - s34 + s51))) + 
     s12*(2*eps*s23^2 - 4*(-s12 - s23 + s45)^2 + (-6 + 7*eps)*
        (s23 - s45 - s51)^2 - 2*s23*(-s23 - s34 + s51) + 
       10*eps*s23*(-s23 - s34 + s51) - 2*(-s23 - s34 + s51)^2 + 
       7*eps*(-s23 - s34 + s51)^2 + (-s12 - s23 + s45)*
        (2*eps*s23 + 2*(-5 + 3*eps)*(s23 - s45 - s51) - 
         4*(-s23 - s34 + s51) + 7*eps*(-s23 - s34 + s51)) + 
       (s23 - s45 - s51)*(-4*s23 + 9*eps*s23 - 8*(-s23 - s34 + s51) + 
         14*eps*(-s23 - s34 + s51))) + (-s34 - s45)*
      ((-2 + eps)*(s23 - s45 - s51)^2 + 2*(-1 + eps)*(s23 - s45 - s51)*
        (-s34 + s51) + eps*(2*s23^2 + 3*s23*(-s23 - s34 + s51) + 
         (-s23 - s34 + s51)^2)))*D0[0, 0, 0, s12, s45, s12 - s34 - s45, 0, 0, 
     0, 0])/(s12*s34) - ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*
    (eps*s12*(s12^2*(2*s23 + s34 - s45 - 2*s51) + 
       (-s34 - s45)*(s23*(s23 - s45 - s51) + 2*(-s12 - s23 + s45)*
          (s23 - s45 - s51) - (-s12 - s23 + s45)*(-s23 - s34 + s51) - 
         (s23 - s45 - s51)*(-s23 - s34 + s51)) + 
       s12*((-s12 - s23 + s45)*(2*s23 + s34 - s45 - 2*s51) + 
         (s23 - s45 - s51)^2 + (s23 - s45 - s51)*(-s34 + s51) - 
         (-s34 + s51)*(-s23 - s34 + s51))) - (-s23 - s34 + s51)*
      (s12^2*(-s12 - s23 + s45 + 2*(s23 - s45 - s51)) + 
       4*s23*(s23 - s45 - s51)^2 + (-s12 - s23 + s45)^2*
        (-s23 - s34 + 2*(s23 - s45 - s51) + s51) + (-s12 - s23 + s45)*
        (s23 - s45 - s51)*(5*s23 + 2*(s23 - s45 - s51) + 
         2*(-s23 - s34 + s51)) + s12*((-s12 - s23 + s45)^2 + 
         2*(s23 - s45 - s51)*(3*s23 - s45 - s51) + (-s12 - s23 + s45)*
          (-s34 + 5*(s23 - s45 - s51) + s51))))*D0[0, 0, 0, s12 - s34 - s45, 
     s12, -s23 - s34 + s51, 0, 0, 0, 0])/(s12*s45*(s23 - s45 - s51)) - 
  ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*(2*s23*(-s12 - s23 + s45)*
      (s12^2 + s23*(s23 - s45 - s51 + 2*(-s34 + s51)) + 
       s12*(4*s23 + s45 + 3*(-s12 - s23 + s45) + s51 + 
         3*(-s23 - s34 + s51)) + (-s12 - s23 + s45)*
        (6*s23 + 5*(-s23 - s34 + s51))) + 
     eps*s12*(s12^2*(s12 + 2*s23 - s45) + s12*(s23*(s23 - s34 - s45) - 
         (-2*s23 - s34 - s45)*(-s12 - s23 + s45) - (-s12 - s23 + s45)^2) - 
       (-s12 + s45)*(-(s23*(s23 - s45 - s51)) + (-s12 - 3*s23 + s45)*
          (-s23 - s34 + s51))))*D0[0, 0, 0, s45, s12, -s12 - s23 + s45, 0, 0, 
     0, 0])/(2*s12*s23*s45) + ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*
    (2*s51*(-s23 - s34 + s51) + eps*(s12^2 + (s23 - s45 - s51)*(-s34 + s51) + 
       (-s23 - s34 + s51)*(-s12 - s34 + s45 + s51) + 
       s12*(s12 + 3*s23 - 2*s45 - s51 + 4*(-s23 - s34 + s51))))*
    D0[0, 0, 0, -s12 - s23 + s45, s45, -s23 - s34 + s51, 0, 0, 0, 0])/s12 + 
  ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*(eps*(s12 - s34 - s45)*
      (s12^2 + s12*(3*s23 + s34 - s45 + 3*(-s12 - s23 + s45) - 2*s51) + 
       s23*(s23 - s45 - s51) + (-s12 - s23 + s45)*(-s23 - s34 + 
         2*(s23 - s45 - s51) + s51)) - 4*(-s12 - s23 + s45)*
      (s12^2 + (-s12 - s23 + s45)^2 + (s23 - s45 - s51)^2 + 
       (-s12 - s23 + s45)*(s34 + 2*(s23 - s45 - s51) - s51) + 
       s23*(-s23 - s34 + s51) + (-s23 - s34 + s51)^2 + 
       s12*(-s12 - 2*s23 - s34 + s45 + 2*(s23 - s45 - s51) + s51)))*
    D0[0, 0, 0, -s23 - s34 + s51, -s12 - s23 + s45, s12 - s34 - s45, 0, 0, 0, 
     0])/(2*s12*s45) + ((-2 + CA^2)*CF*gs^2*mt^2*Pi^2*
    (eps*s12*(s12 - s34 - s45)*(-s23 - s34 + 2*(-s12 - s23 + s45) + s51) + 
     2*(-s12 - s23 + s45)*(-s23 - s34 + s51)*(s12 - s34 + 2*s51))*
    PaVe[0, {0, s12, s45, 0, -s23 - s34 + s51, 0, 0, 0, -s12 - s23 + s45, 
      s12 - s34 - s45}, {0, 0, 0, 0, 0}, PaVeAutoOrder -> True, 
     PaVeAutoReduce -> True])/s12}
