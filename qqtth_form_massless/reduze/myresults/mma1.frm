id INT(pentagon1x123,3,21,3,1,[],1,-1,1,0,1) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*(s34^2+s13^2-s14*s24-s14*s12+s24*s13+s24*s34+s14*s34+s12*s34+s14*s13+s13*s12+2*s13*s34-2*s14*s23)*s23)
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*(2*s24*s12+s24*s13+s24^2+s24*s34+s12^2-s13*s23+s12*s34+s13*s12+s23*s12+s24*s23-s23*s34-2*s14*s23))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*(s34^2+s13^2+s24*s13+s24*s34+s12*s34+s13*s12+2*s13*s34-2*s14*s23))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (-Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*s23*(s24-s13+s12-s34));

id INT(pentagon1x123,3,21,3,1,[],1,0,1,-1,1) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*(s14*s24*s23-s14*s13^2+2*s14^2*s23+s14*s23*s34-s14*s13*s34-s14*s12^2-2*s14*s13*s12-s14*s23*s12-s14*s24*s13-s14*s13*s23-s14*s12*s34-s14*s24*s12))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*(s24*s12+s34^2+s14*s24-s14*s12+s24*s13+s24^2+2*s24*s34+s14*s34+s12*s34-s14*s13+s13*s34-2*s14*s23))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (-Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*(s14*s24-s14*s12+s14*s34-s14*s13))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*(s24*s12+s13^2+s24*s13+s12^2+s12*s34+2*s13*s12+s13*s34-2*s14*s23));

id INT(pentagon1x123,3,21,3,2,[],1,-2,1,0,1) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(4*s24*s12+2*s34^2+2*s13^2-d*s24^2-d*s12^2-2*d*s24*s12-2*d*s12*s34+4*s24*s13+2*s24^2+4*s14*d*s23+4*s24*s34+2*s12^2-2*d*s24*s34-d*s34^2-d*s13^2-2*d*s24*s13+4*s12*s34-2*d*s13*s12+4*s13*s12-2*d*s13*s34+4*s13*s34-8*s14*s23)*(2*s14^2*d*s24*s23*s34+4*s14^2*s24*s23*s12-2*s14*d*s23*s34^3-s14^2*d*s24^2*s23+4*s14*s13^2*s23*s12+2*s14^2*d*s13*s23*s12+4*s14^2*s13*s23*s34+4*s14*d*s24*s23*s12*s34-2*d*s24*s13^3*s23-12*s14^2*s23^2*s34+4*s14*d*s23^2*s12*s34-12*s14^2*s13*s23^2+4*s24*s23*s34^3-d*s13^4*s23+4*s14*s13^3*s23-4*d*s13^3*s23*s34-6*s14*d*s13*s23*s34^2-4*s14*s13*s23^2*s12+4*s14^2*d*s23^2*s34-4*d*s24*s13*s23*s12*s34-4*s14*s24*s23^2*s34+2*s13^4*s23+2*s14^2*s24^2*s23+2*s23*s12^2*s34^2-4*s14*s24*s13*s23^2-6*d*s13^2*s23*s12*s34+12*s13*s23*s12*s34^2+12*s24*s13*s23*s34^2+2*s14*d*s23*s12^2*s34-2*d*s24^2*s13*s23*s34+4*s13^3*s23*s12-2*d*s24*s13^2*s23*s12+4*s14^2*d*s13*s23^2-4*d*s13*s23*s34^3-4*s14^3*s23^2-8*s14*s13^2*s23^2+4*s14*d*s13^2*s23^2+8*s14*s24*s13*s23*s34-d*s23*s12^2*s34^2+2*s23*s34^4+4*s14^2*s23^3+2*s14*d*s13*s23*s12^2+8*s13*s23*s34^3-2*d*s13*s23*s12^2*s34-2*d*s13^3*s23*s12+8*s14*s13*s23*s12*s34+4*s14*s23*s12*s34^2-2*s14^2*d*s24*s23*s12+4*s14^2*s23^2*s12-2*s14^2*d*s13*s23*s34+12*s14*s13^2*s23*s34-2*d*s24*s23*s34^3-2*d*s24*s23*s12*s34^2-2*s14*d*s13^3*s23-6*d*s24*s13^2*s23*s34+8*s13^3*s23*s34+2*s14*d*s24^2*s13*s23-4*s14^2*d*s23^2*s12-16*s14*s13*s23^2*s34+4*s14*s23*s34^3+4*s24*s13^3*s23-d*s23*s34^4+2*s14^2*s13^2*s23-d*s24^2*s23*s34^2+12*s24*s13^2*s23*s34+4*s24*s23*s12*s34^2-d*s13^2*s23*s12^2+8*s14*d*s13*s23^2*s34+2*s14^2*d*s24*s13*s23-2*d*s23*s12*s34^3-4*s14^2*d*s24*s23^2-d*s24^2*s13^2*s23+2*s14^2*s23*s34^2-6*s14*d*s13^2*s23*s34+4*s13*s23*s12^2*s34+4*s14*s24*s13^2*s23+12*s13^2*s23*s34^2-s14^2*d*s13^2*s23-s14^2*d*s23*s34^2-8*s14*s23^2*s34^2+4*s14^2*s24*s23^2+4*s14*s24*s23*s34^2+2*s14^2*s23*s12^2+4*s14*d*s24*s13*s23^2+4*s14*d*s23^2*s34^2+4*s24*s13^2*s23*s12+4*s24^2*s13*s23*s34-6*d*s24*s13*s23*s34^2+4*s14*d*s24*s23^2*s34-6*d*s13*s23*s12*s34^2+12*s13^2*s23*s12*s34-4*s14^2*d*s23^3-6*d*s13^2*s23*s34^2+4*s14*d*s13*s23^2*s12+12*s14*s13*s23*s34^2-s14^2*d*s23*s12^2+4*s14*d*s24*s13*s23*s12+2*s14^2*d*s23*s12*s34+2*s24^2*s13^2*s23-4*s14*s23^2*s12*s34+2*s24^2*s23*s34^2+4*s23*s12*s34^3+2*s13^2*s23*s12^2+8*s24*s13*s23*s12*s34+2*s14*d*s24^2*s23*s34)*s23)
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (1/2*(3*d*s24^2*s13^2*s34+20*s14*s24^2*s23*s34-6*s13*s12^4+12*d*s24^3*s13*s12+3*d*s12^4*s34-6*s24^4*s13+4*s14*s13^2*s23*s12-2*s23^2*s12^3-2*s24^3*s23^2+3*d*s24^2*s13*s23^2-16*s14*d*s24*s23*s12*s34+2*d*s24*s13^3*s23+4*s14^2*s23^2*s34+8*d*s24^3*s23*s12+6*d*s24*s13*s23^2*s12+40*s14*s24*s13*s23*s12-8*s14*d*s23^2*s12*s34-4*s23*s12^4+4*s14^2*s13*s23^2+3*d*s24^2*s23^2*s34-24*s14*d*s24*s23*s12^2-12*s24*s13^2*s12*s34-8*s23*s12^3*s34-6*s24^4*s34+6*s23^2*s12*s34^2-d*s13^2*s23^2*s12-24*s24*s23*s12^2*s34+9*d*s24^2*s12*s34^2-8*s13*s23*s12^3-6*s13*s12^2*s34^2+12*d*s24*s12^3*s34-6*s13^2*s12^3+3*d*s24^4*s34+8*s14*s13*s23^2*s12+12*d*s24*s13*s12^3-18*s24^2*s13^2*s12-8*s14*d*s24*s23^3+3*d*s13^2*s12^3-12*s24^3*s13*s34-4*s14^2*d*s23^2*s34-d*s24*s13^2*s23^2+24*d*s24*s13*s23*s12*s34+8*s14*s24*s23^2*s34+2*d*s23*s12^4+16*s14*s23*s12^3-4*s23*s12^2*s34^2+3*d*s24^4*s13+8*s14*s24*s13*s23^2-8*s24^3*s23*s34+6*d*s13^2*s23*s12*s34+d*s24^3*s23^2+d*s23^2*s12^3-36*s24*s13*s12^2*s34-6*s24^2*s23^2*s12+8*d*s24*s23*s12^3+9*d*s24*s12^2*s34^2-12*s13*s12^3*s34-4*s24*s23^2*s12*s34-8*s14*d*s23*s12^2*s34+12*d*s24^2*s13*s23*s34+12*d*s24*s13^2*s23*s12-6*s12^4*s34-4*s14^2*d*s13*s23^2+3*d*s13*s12^4+18*s13^2*s23^2*s34+12*s14*s13^2*s23^2-16*s24*s23*s12^3-8*s14*d*s13^2*s23^2+3*d*s24^2*s23^2*s12+6*d*s13*s12^3*s34-18*s24*s12^2*s34^2+8*s14*s24*s13*s23*s34+6*d*s23*s12^2*s34^2-2*d*s24*s13*s23^2*s34+6*d*s24^3*s23*s34-32*s14^2*s23^3-9*d*s13^2*s23^2*s34-8*s14*d*s13*s23*s12^2+6*d*s24*s13*s12*s34^2+12*d*s13*s23*s12^2*s34-10*s24^4*s12-36*s24^2*s13*s12*s34+2*d*s13^3*s23*s12+8*s14*s13*s23*s12*s34+6*d*s24^3*s13*s34+4*s14*s23*s12*s34^2-8*s14*d*s23*s12^3+d*s13^3*s12^2+6*s24*s13^2*s23^2+48*s14*s24^2*s23*s12+9*d*s24^2*s13^2*s12-24*s24*s13*s12^3-28*s14^2*s23^2*s12+12*s14*s24*s23^3+6*s23^2*s34^3-2*s24^2*s23^2*s34+2*d*s24*s23*s34^3-24*s24^2*s23*s12*s34+12*d*s24*s23*s12*s34^2-16*s24^3*s23*s12-3*d*s23^2*s34^3-2*d*s13*s23^2*s12*s34-2*s13^3*s12^2+6*d*s13*s23*s12^3+6*s13^2*s23^2*s12-18*s24^2*s12*s34^2-24*s24*s12^3*s34+3*d*s13*s12^2*s34^2+6*d*s23*s12^3*s34+6*d*s24*s13^2*s23*s34-d*s23^2*s12*s34^2-24*s24*s13*s23*s12^2+18*d*s24^2*s13*s23*s12-8*s14*d*s24^2*s13*s23-24*s24^3*s13*s12+12*s14^2*d*s23^2*s12+24*s14*s13*s23^2*s34-6*s24^2*s13^2*s34+5*d*s24^4*s12-2*s24^2*s13*s23^2+56*s14*s24*s23^2*s12+18*s13*s23^2*s34^2+6*d*s24^2*s23*s34^2-6*s24^3*s13^2-32*s14*d*s24*s23^2*s12-4*s24^4*s23-24*s24^2*s13*s23*s12+18*d*s24*s13*s23*s12^2-4*s24*s12*s34^3-8*s24*s23*s12*s34^2+6*d*s13^2*s23*s12^2+18*d*s24^2*s12^2*s34+18*d*s24^2*s23*s12*s34-16*s14*d*s13*s23^2*s34+10*d*s24^2*s12^3+8*s14*d*s13*s23^3-6*s24*s23^2*s12^2-2*s24^5+12*s13*s23^2*s12*s34+20*s14*s24^2*s13*s23+3*d*s12^3*s34^2-2*s23^2*s12^2*s34+2*d*s23*s12*s34^3+5*d*s24*s12^4+12*s14^2*d*s24*s23^2-6*s24^3*s34^2+28*s14*s24^2*s23^2+3*d*s24^2*s13*s34^2-20*s14*s23^3*s34+6*d*s24^2*s13^2*s23-16*s14*d*s23^2*s12^2-18*s24*s13^2*s12^2-3*d*s13^3*s23^2-2*s12^5-24*s24^2*s23*s12^2-6*s13^2*s12^2*s34+3*d*s13*s23^2*s12^2+18*d*s24^2*s13*s12*s34-12*s24*s13*s12*s34^2-8*s13*s23*s12^2*s34+6*s13^3*s23^2+4*s14*s24*s13^2*s23-24*s14*d*s24^2*s23*s12-d*s24*s23^2*s34^2+3*d*s24^3*s34^2-10*s24*s12^4-24*s24^3*s12*s34+12*s24*s13*s23^2*s34-20*s24^2*s12^3+12*s14*s23^2*s34^2-8*s14*d*s23^3*s12-4*s24*s13^3*s12-36*s24^2*s13*s12^2+20*s14*s13*s23*s12^2-6*s12^3*s34^2+3*d*s24^3*s13^2+16*s14*s24^3*s23+2*d*s24^4*s23-28*s14^2*s24*s23^2-8*s24^3*s13*s23+4*s14*s24*s23*s34^2+2*d*s24*s13^3*s12-2*s12^2*s34^3+18*d*s24^2*s13*s12^2+20*s14*s23*s12^2*s34-20*s24^3*s12^2-8*s14*d*s24^3*s23+6*d*s24^3*s13*s23+d*s24^2*s13^3-8*s14*d*s24*s13*s23^2+12*s14*s23^3*s12-8*s14*d*s23^2*s34^2-8*s24*s13^2*s23*s12-8*s24^2*s13*s23*s34+6*d*s24*s13*s23*s34^2+12*d*s24^2*s23*s12^2-8*s14*d*s24*s23^2*s34+3*d*s13^2*s12^2*s34-2*s13*s23^2*s12^2+12*d*s24^3*s12*s34+6*d*s13*s23*s12*s34^2+18*d*s24*s13*s12^2*s34+6*d*s24*s23^2*s12*s34+d*s24^2*s34^3+16*s14^2*d*s23^3+6*s24*s23^2*s34^2-8*s14*d*s13*s23^2*s12-6*s24^2*s13*s34^2+d*s24^5-2*s24^2*s34^3+28*s14*s23^2*s12^2+8*s14*d*s23^3*s34+9*d*s24*s13^2*s12^2-16*s14*d*s24*s13*s23*s12+48*s14*s24*s23*s12^2-4*s24^2*s13^2*s23-16*s14*d*s24^2*s23^2+8*s14*s23^2*s12*s34+d*s12^5+6*d*s24*s13^2*s12*s34-20*s14*s13*s23^3-2*s24^2*s13^3+40*s14*s24*s23*s12*s34-9*d*s13*s23^2*s34^2+18*d*s24*s23*s12^2*s34-4*s24^2*s23*s34^2+d*s12^2*s34^3-4*s24*s13*s23^2*s12+3*d*s23^2*s12^2*s34+10*d*s24^3*s12^2-4*s13^2*s23*s12^2-36*s24^2*s12^2*s34-16*s24*s13*s23*s12*s34+2*d*s24*s12*s34^3-8*s14*d*s24^2*s23*s34+3*d*s24*s23^2*s12^2)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(4*s24*s12+2*s34^2+2*s13^2-d*s24^2-d*s12^2-2*d*s24*s12-2*d*s12*s34+4*s24*s13+2*s24^2+4*s14*d*s23+4*s24*s34+2*s12^2-2*d*s24*s34-d*s34^2-d*s13^2-2*d*s24*s13+4*s12*s34-2*d*s13*s12+4*s13*s12-2*d*s13*s34+4*s13*s34-8*s14*s23))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (-1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(4*s24*s12+2*s34^2+2*s13^2-d*s24^2-d*s12^2-2*d*s24*s12-2*d*s12*s34+4*s24*s13+2*s24^2+4*s14*d*s23+4*s24*s34+2*s12^2-2*d*s24*s34-d*s34^2-d*s13^2-2*d*s24*s13+4*s12*s34-2*d*s13*s12+4*s13*s12-2*d*s13*s34+4*s13*s34-8*s14*s23)*(9*d*s24^2*s13^2*s34-24*s24*s13*s34^3+4*s14*s24^2*s23*s34-8*s14*d*s23*s34^3+10*d*s13^3*s34^2+20*s14*s13^2*s23*s12-4*d*s24*s13^3*s23-28*s14^2*s23^2*s34+8*s14*s24*s13*s23*s12+8*s14*d*s23^2*s12*s34-28*s14^2*s13*s23^2+8*s24*s23*s34^3-2*d*s13^4*s23+16*s14*s13^3*s23-36*s24*s13^2*s12*s34-8*d*s13^3*s23*s34-24*s14*d*s13*s23*s34^2+3*d*s24^2*s12*s34^2-18*s13*s12^2*s34^2-2*s13^2*s12^3-8*s14*s13*s23^2*s12-6*s24^2*s13^2*s12+d*s13^2*s12^3-4*s24^3*s13*s34+12*s14^2*d*s23^2*s34-8*d*s24*s13*s23*s12*s34-8*s14*s24*s23^2*s34+4*s13^4*s23+4*s23*s12^2*s34^2-8*s14*s24*s13*s23^2-12*d*s13^2*s23*s12*s34+24*s13*s23*s12*s34^2-12*s24*s13*s12^2*s34-36*s13^2*s12*s34^2+3*d*s24*s12^2*s34^2-4*s13*s12^3*s34+24*s24*s13*s23*s34^2-4*d*s24^2*s13*s23*s34+8*s13^3*s23*s12-4*d*s24*s13^2*s23*s12+12*s14^2*d*s13*s23^2-8*d*s13*s23*s34^3-20*s13^3*s34^2-16*s14*s13^2*s23^2+8*s14*d*s13^2*s23^2+18*d*s13^2*s12*s34^2-8*s14*d*s24*s23*s34^2+2*d*s13*s12^3*s34-6*s24*s12^2*s34^2+40*s14*s24*s13*s23*s34-2*d*s23*s12^2*s34^2+4*s23*s34^4-20*s13^2*s34^3+8*s14^2*s23^3+16*s13*s23*s34^3+18*d*s24*s13*s12*s34^2-4*d*s13*s23*s12^2*s34-12*s24^2*s13*s12*s34-4*d*s13^3*s23*s12+40*s14*s13*s23*s12*s34+2*d*s24^3*s13*s34+20*s14*s23*s12*s34^2-10*s13*s34^4+3*d*s13^3*s12^2+3*d*s24^2*s13^2*s12+4*s14^2*s23^2*s12-8*s14*d*s24*s13^2*s23+48*s14*s13^2*s23*s34-4*d*s24*s23*s34^3-4*d*s24*s23*s12*s34^2-6*s13^3*s12^2+5*d*s13*s34^4-8*s14*d*s13^3*s23-6*s24^2*s12*s34^2+9*d*s13*s12^2*s34^2-12*d*s24*s13^2*s23*s34+16*s13^3*s23*s34+10*d*s13^2*s34^3-4*s14^2*d*s23^2*s12-32*s14*s13*s23^2*s34+12*d*s24*s13*s34^3-18*s24^2*s13^2*s34+16*s14*s23*s34^3+8*s24*s13^3*s23-2*d*s23*s34^4-2*d*s24^2*s23*s34^2-2*s24^3*s13^2+12*d*s13^3*s12*s34+24*s24*s13^2*s23*s34-12*s24*s12*s34^3+8*s24*s23*s12*s34^2-2*d*s13^2*s23*s12^2+16*s14*d*s13*s23^2*s34+4*s14*s24^2*s13*s23+d*s12^3*s34^2+5*d*s13^4*s34-4*d*s23*s12*s34^3-4*s14^2*d*s24*s23^2-2*s24^3*s34^2+9*d*s24^2*s13*s34^2+12*d*s24*s13^3*s34-2*d*s24^2*s13^2*s23-6*s24*s13^2*s12^2+12*d*s13*s12*s34^3-18*s13^2*s12^2*s34-24*s14*d*s13^2*s23*s34+6*d*s24^2*s13*s12*s34-36*s24*s13*s12*s34^2+8*s13*s23*s12^2*s34+d*s34^5+20*s14*s24*s13^2*s23+24*s13^2*s23*s34^2+d*s24^3*s34^2-8*s14*d*s23*s12*s34^2-16*s14*s23^2*s34^2-12*s24*s13^3*s12-16*s14*d*s13*s23*s12*s34-10*s13^4*s34+d*s13^5+4*s14*s13*s23*s12^2-2*s12^3*s34^2+d*s24^3*s13^2+4*s14^2*s24*s23^2+20*s14*s24*s23*s34^2+18*d*s24*s13^2*s34^2-16*s14*d*s24*s13*s23*s34+6*d*s24*s13^3*s12-6*s12^2*s34^3+4*s14*s23*s12^2*s34+3*d*s24*s34^4-2*s34^5-36*s24*s13^2*s34^2+3*d*s24^2*s13^3+8*s14*d*s24*s13*s23^2+8*s14*d*s23^2*s34^2+8*s24*s13^2*s23*s12+8*s24^2*s13*s23*s34-12*d*s24*s13*s23*s34^2+8*s14*d*s24*s23^2*s34+3*d*s24*s13^4+9*d*s13^2*s12^2*s34-24*s13*s12*s34^3+3*d*s13^4*s12-12*d*s13*s23*s12*s34^2+6*d*s24*s13*s12^2*s34+24*s13^2*s23*s12*s34-6*s12*s34^4-2*s13^5+3*d*s24^2*s34^3-8*s14^2*d*s23^3-12*d*s13^2*s23*s34^2+8*s14*d*s13*s23^2*s12-18*s24^2*s13*s34^2+48*s14*s13*s23*s34^2+3*d*s12*s34^4-24*s24*s13^3*s34-6*s13^4*s12-6*s24^2*s34^3+3*d*s24*s13^2*s12^2+4*s24^2*s13^2*s23-6*s24*s13^4-8*s14*s23^2*s12*s34-24*s13^3*s12*s34+18*d*s24*s13^2*s12*s34-6*s24^2*s13^3-8*s14*d*s13^2*s23*s12+8*s14*s24*s23*s12*s34+4*s24^2*s23*s34^2+8*s23*s12*s34^3+3*d*s12^2*s34^3+4*s13^2*s23*s12^2-6*s24*s34^4+16*s24*s13*s23*s12*s34+6*d*s24*s12*s34^3))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (-1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(4*s24*s12+2*s34^2+2*s13^2-d*s24^2-d*s12^2-2*d*s24*s12-2*d*s12*s34+4*s24*s13+2*s24^2+4*s14*d*s23+4*s24*s34+2*s12^2-2*d*s24*s34-d*s34^2-d*s13^2-2*d*s24*s13+4*s12*s34-2*d*s13*s12+4*s13*s12-2*d*s13*s34+4*s13*s34-8*s14*s23)*s23*(4*s14*s23*s12^2-8*s14*d*s24*s23^2-2*s24^2*s13*s23+6*d*s24*s23*s12*s34-9*d*s13*s23*s34^2+3*d*s24*s23*s12^2-4*s24*s13*s23*s12+6*s24*s13^2*s23-2*s14*d*s23*s34^2-2*s13*s23*s12^2-2*s14*d*s13^2*s23+4*s14*d*s24*s23*s34+3*d*s23*s12^2*s34+4*s14*d*s13*s23*s12+6*s24*s23*s34^2+d*s24^3*s23+12*s13*s23*s12*s34-2*s23*s12^2*s34+3*d*s13*s23*s12^2+12*s24*s13*s23*s34+4*s14*s13^2*s23-d*s24*s23*s34^2-d*s24*s13^2*s23+4*s14*s23*s34^2-4*s14*d*s24*s23*s12-8*s14^2*s23^2+18*s13*s23*s34^2-6*s24*s23*s12^2-4*s14*d*s13*s23*s34+12*s14*s24*s23^2-2*s24^3*s23-2*s14*d*s23*s12^2+3*d*s24^2*s13*s23-3*d*s23*s34^3-2*s24^2*s23*s34+6*s13^2*s23*s12+8*s14*s13*s23*s34+12*s14*s23^2*s12+8*s14*s24*s23*s12-2*s14*d*s24^2*s23-2*d*s24*s13*s23*s34-d*s23*s12*s34^2+3*d*s24^2*s23*s12+8*s14*d*s13*s23^2-2*d*s13*s23*s12*s34-9*d*s13^2*s23*s34+6*s23*s34^3+4*s14*d*s24*s13*s23+8*s14*d*s23^2*s34-20*s14*s23^2*s34-6*s24^2*s23*s12+6*s13^3*s23+d*s23*s12^3+6*s23*s12*s34^2+18*s13^2*s23*s34-20*s14*s13*s23^2+4*s14*d*s23*s12*s34+4*s14*s24^2*s23-8*s14*d*s23^2*s12-3*d*s13^3*s23-2*s23*s12^3+3*d*s24^2*s23*s34+6*d*s24*s13*s23*s12-4*s24*s23*s12*s34-d*s13^2*s23*s12));

id INT(pentagon1x123,3,21,3,2,[],1,-1,1,-1,1) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-Den(-2+d)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*(2*s14^2*d*s24*s23*s34-4*s14^2*s24*s23*s12-2*s14*d*s24*s13*s12^2-2*s14*s24^2*s23*s34+s14*d*s23*s34^3-s14^2*d*s24^2*s23+6*s14^3*s23*s12+4*s14*s13^2*s23*s12+6*s14^2*d*s13*s23*s12-12*s14^2*s13*s23*s34+6*s14^2*s23^2*s34+2*s14*s24*s13*s23*s12+s14^2*d*s12^3-s14*d*s13*s34^3+6*s14*s24^2*s13*s34-6*s14^2*s13*s23^2-5*s14*d*s13*s12^2*s34+2*s14*s13^3*s23-2*s14^2*s24*s13*s12+4*s14^2*s13^2*s34+6*s14*s24^2*s13^2+s14*d*s13*s23*s34^2+2*s14^3*d*s13*s23-6*s14*d*s24*s13*s12*s34-2*s14^2*d*s23^2*s34-s14^2*d*s12*s34^2+2*s14^2*s24*s13^2-2*s14^2*d*s13^2*s34+2*s14*s24^3*s13-s14*d*s23*s12^2*s34+2*s14*s13*s12^3-7*s14*d*s13^2*s12*s34+2*s14^2*d*s13*s23^2+12*s14*s24*s13^2*s34+8*s14^3*s23^2+2*s14^2*d*s24*s13*s12+2*s14*d*s24*s23*s34^2+2*s14^2*s24*s13*s34+6*s14*s24^2*s13*s12-2*s14*s24*s13*s23*s34-s14*d*s13*s12^3-4*s14^3*d*s23^2-2*s14*d*s24*s12^2*s34-s14*d*s13*s23*s12^2+2*s14^2*s13^2*s12+2*s14*s13*s23*s12*s34-2*s14*s23*s12*s34^2-2*s14*d*s12^2*s34^2-2*s14*d*s24*s13*s34^2-4*s14^2*s24*s23*s34+2*s14^2*d*s24*s23*s12-s14^2*d*s13^3-2*s14^2*s23^2*s12-12*s14^2*s13*s23*s12+6*s14^2*d*s13*s23*s34-2*s14^3*s23*s34+2*s14*s13^2*s23*s34+2*s14^2*d*s24*s12^2-s14*d*s24^2*s12*s34-s14^2*d*s13^2*s12-s14*d*s24^2*s13^2-s14*d*s13^4+12*s14*s24*s13^2*s12-s14*d*s13^3*s23+2*s14*s13*s34^3+s14*d*s24^2*s13*s23+2*s14^2*d*s23^2*s12-4*s14^2*s24*s12^2-s14*d*s12^3*s34-2*s14*s23*s34^3+2*s14^3*s24*s23+6*s14*s13*s12*s34^2-8*s14^2*s13^2*s23-5*s14*d*s13*s12*s34^2-2*s14^2*s12^3+2*s14^2*s13*s34^2+s14^2*d*s24^2*s13-2*s14^3*d*s24*s23-3*s14*d*s13^2*s12^2+6*s14*s13^3*s34+6*s14^2*d*s24*s13*s23-2*s14^2*s12^2*s34-2*s14^2*d*s24*s23^2-4*s14*d*s24*s13^2*s12+2*s14^2*s13*s12*s34-s14*d*s12*s34^3-4*s14^2*s23*s34^2-s14*d*s13^2*s23*s34-3*s14*d*s13^3*s12+6*s14*s13^2*s34^2-s14^2*d*s13*s34^2+2*s14*s24*s13^2*s23+3*s14^2*d*s13^2*s23+6*s14*s24*s13*s34^2+2*s14^3*d*s23*s34-2*s14*d*s24*s13^3+3*s14^2*d*s23*s34^2-2*s14*d*s13*s23*s12*s34+2*s14*s13*s23*s12^2+2*s14^2*s24*s23^2-4*s14*s24*s23*s34^2+2*s14*d*s24*s13*s23*s34-s14*d*s24^2*s13*s12+12*s14*s13^2*s12*s34+2*s14^2*s13^3-4*s14*d*s24*s13^2*s34-2*s14^2*d*s13*s12*s34-2*s14^2*s24*s12*s34+s14^2*d*s24^2*s12-4*s14^2*s23*s12^2-6*s14^3*s13*s23+6*s14*s24*s13^3-3*s14*d*s13^2*s34^2+2*s14*s13^4-16*s14^2*s24*s13*s23+6*s14*s13^3*s12-2*s14^2*s13*s12^2+12*s14*s24*s13*s12*s34-2*s14*d*s24*s12*s34^2-2*s14*s13*s23*s34^2-2*s14^2*s24^2*s12+3*s14^2*d*s23*s12^2-s14*d*s24^2*s13*s34+6*s14*s13*s12^2*s34+2*s14^2*d*s23*s12*s34-3*s14*d*s13^3*s34+6*s14*s13^2*s12^2+s14^2*d*s13*s12^2-2*s14*d*s13^2*s23*s12-2*s14*s24*s23*s12*s34-2*s14^3*d*s23*s12+6*s14*s24*s13*s12^2+s14*d*s24^2*s23*s34)*s23)
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (1/2*Den(-2+d)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*(8*s14^2*d*s24*s23*s34-24*s14^2*s24*s23*s12-9*s14*d*s24*s13*s12^2-6*d*s24^2*s13^2*s34+4*s24*s13*s34^3-24*s14*s24^2*s23*s34-s14*d*s23*s34^3+8*s14^2*d*s24^2*s23-9*d*s24^3*s13*s12-d*s12^4*s34+8*s14*s12^3*s34+6*s14*s24^2*s34^2-4*s14*d*s24^3*s12+4*s24^4*s13-8*s14*s13^2*s23*s12+8*s14^2*d*s13*s23*s12-8*s14^2*s13*s23*s34+22*s14*d*s24*s23*s12*s34-d*s24*s13^3*s23+8*s14^2*s23^2*s34-3*d*s24^3*s23*s12-8*s14*s24*s13*s23*s12+12*s14*d*s23^2*s12*s34+8*s14*s24^2*s13*s34+8*s14^2*s13*s23^2+8*s24*s23*s34^3-6*s14*d*s13*s12^2*s34-4*s14*s13^3*s23+5*s14*d*s24*s23*s12^2+12*s24*s13^2*s12*s34+4*s23*s12^3*s34+8*s24^4*s34-d*s13^3*s23*s34+2*s14*s24^2*s13^2+16*s24*s23*s12^2*s34+s14*d*s13*s23*s34^2-15*d*s24^2*s12*s34^2+24*s13*s12^2*s34^2-7*d*s24*s12^3*s34+6*s14*s24^3*s34-6*s14*d*s24^2*s12^2-4*d*s24^4*s34-12*s14*d*s24*s13*s12*s34-8*s14*s13*s23^2*s12+16*s14*s24*s12*s34^2-3*d*s24*s13*s12^3-s14*d*s12^4+12*s24^3*s13*s34-4*s14^2*d*s23^2*s34-12*d*s24*s13*s23*s12*s34-24*s14*s24*s23^2*s34-14*s14^2*s24^2*s23+10*s14*s12^2*s34^2-s14*d*s24^4+10*s23*s12^2*s34^2-3*d*s24^4*s13-4*s14*s24*s13*s23^2+8*s24^3*s23*s34+4*s14*s24^3*s13-3*d*s13^2*s23*s12*s34+16*s13*s23*s12*s34^2+36*s24*s13*s12^2*s34+12*s13^2*s12*s34^2-d*s24*s23*s12^3-12*d*s24*s12^2*s34^2+12*s13*s12^3*s34+16*s24*s13*s23*s34^2+9*s14*d*s23*s12^2*s34-9*d*s24^2*s13*s23*s34-3*d*s24*s13^2*s23*s12+6*s14*s13*s12^3-3*s14*d*s13^2*s12*s34+4*s12^4*s34-4*s14^2*d*s13*s23^2-3*d*s13*s23*s34^3+2*s14*s24*s13^2*s34+16*s14^3*s23^2-6*s14*s13^2*s23^2+2*s24*s23*s12^3+4*s14*d*s13^2*s23^2-3*d*s13^2*s12*s34^2+5*s14*d*s24*s23*s34^2+14*s14*s24^2*s13*s12-3*d*s13*s12^3*s34+36*s24*s12^2*s34^2-8*s14*s24*s13*s23*s34-3*d*s23*s12^2*s34^2-3*s14*d*s13*s12^3+2*s23*s34^4-8*s14^3*d*s23^2-4*d*s24^3*s23*s34+16*s14^2*s23^3-9*s14*d*s24*s12^2*s34+s14*d*s13*s23*s12^2+6*s13*s23*s34^3-15*d*s24*s13*s12*s34^2-3*s14*d*s24^3*s13-3*d*s13*s23*s12^2*s34+8*s24^4*s12+36*s24^2*s13*s12*s34-32*s14*s13*s23*s12*s34-9*d*s24^3*s13*s34-24*s14*s23*s12*s34^2-3*s14*d*s12^2*s34^2-s14*d*s23*s12^3-24*s14*s24^2*s23*s12-3*s14*d*s24*s13*s34^2-16*s14^2*s24*s23*s34+12*s14^2*d*s24*s23*s12-6*d*s24^2*s13^2*s12+4*s24*s13*s12^3+8*s14^2*s23^2*s12+s14*d*s24*s13^2*s23-16*s14^2*s13*s23*s12+4*s14^2*d*s13*s23*s34+12*s14*s24^2*s12^2-8*s14*s13^2*s23*s34-3*s14*d*s24^3*s34-9*s14*d*s24^2*s12*s34-4*d*s24*s23*s34^3+20*s24^2*s23*s12*s34-9*d*s24*s23*s12*s34^2-3*s14*d*s24^2*s13^2+6*s24^3*s23*s12+8*s14*s24*s13^2*s12+3*s14*d*s13^3*s23+36*s24^2*s12*s34^2+20*s24*s12^3*s34-6*d*s13*s12^2*s34^2-d*s23*s12^3*s34-6*d*s24*s13^2*s23*s34+4*s24*s13*s23*s12^2-6*d*s24^2*s13*s23*s12+2*s13^3*s23*s34+5*s14*d*s24^2*s13*s23+12*s24^3*s13*s12-4*s14^2*d*s23^2*s12-16*s14*s13*s23^2*s34-3*d*s24*s13*s34^3+8*s14*s24^3*s12-4*d*s24^4*s12-3*s14*d*s24^2*s34^2-3*s14*d*s12^3*s34-16*s14*s24*s23^2*s12-d*s23*s34^4+10*s14*s13*s12*s34^2-6*s14^2*s13^2*s23-6*d*s24^2*s23*s34^2-3*s14*d*s13*s12*s34^2+8*s14*d*s24*s23^2*s12+2*s24^4*s23-d*s13^3*s12*s34+8*s24^2*s13*s23*s12-3*d*s24*s13*s23*s12^2+8*s24*s13^2*s23*s34+20*s24*s12*s34^3+22*s24*s23*s12*s34^2-15*d*s24^2*s12^2*s34-9*d*s24^2*s23*s12*s34+8*s14*d*s13*s23^2*s34-4*d*s24^2*s12^3+2*s24^5-4*s14*s24^2*s13*s23-3*d*s12^3*s34^2-3*s14*d*s13^2*s12^2+4*s14^2*d*s24*s13*s23-3*d*s23*s12*s34^3+2*s14*s24^4-d*s24*s12^4-4*s14^2*d*s24*s23^2+12*s24^3*s34^2-14*s14*s24^2*s23^2-6*s14*d*s24*s13^2*s12+8*s14*s24*s12^3-9*d*s24^2*s13*s34^2-d*s24*s13^3*s34-3*d*s24^2*s13^2*s23-s14*d*s12*s34^3-2*s14^2*s23*s34^2+2*s14*s12^4+20*s14*s24^2*s12*s34-3*d*s13*s12*s34^3+6*s24^2*s23*s12^2+12*s13^2*s12^2*s34+5*s14*d*s13^2*s23*s34-s14*d*s13^3*s12-21*d*s24^2*s13*s12*s34+36*s24*s13*s12*s34^2+10*s13*s23*s12^2*s34+4*s14*s24*s13^2*s23+13*s14*d*s24^2*s23*s12+6*s13^2*s23*s34^2-6*d*s24^3*s34^2+2*s24*s12^4+4*s14^2*d*s13^2*s23+4*s14*s24*s13*s34^2+28*s24^3*s12*s34+9*s14*d*s23*s12*s34^2-s14*d*s24*s13^3+8*s24^2*s12^3-10*s14*s23^2*s34^2-4*s24*s13^3*s12+14*s14*d*s13*s23*s12*s34+12*s24^2*s13*s12^2-4*s14*s13*s23*s12^2+12*s12^3*s34^2+22*s14*s24*s12^2*s34-3*d*s24^3*s13^2-12*s14*s24^3*s23-d*s24^4*s23-28*s14^2*s23*s12*s34+8*s14^2*s24*s23^2+4*s24^3*s13*s23-12*s14*s24*s23*s34^2-s14*d*s24*s34^3-3*d*s24*s13^2*s34^2+6*s14*d*s24*s13*s23*s34-9*s14*d*s24^2*s13*s12+8*s14*s13^2*s12*s34-d*s24*s13^3*s12+12*s12^2*s34^3-3*s14*d*s24*s13^2*s34-9*d*s24^2*s13*s12^2+2*s14*s24*s34^3-24*s14*s23*s12^2*s34-d*s24*s34^4+12*s24^3*s12^2+7*s14*d*s24^3*s23-3*d*s24^3*s13*s23-10*s14^2*s23*s12^2-d*s24^2*s13^3+4*s14*d*s24*s13*s23^2+4*s14*d*s23^2*s34^2+2*s24*s13^2*s23*s12+14*s24^2*s13*s23*s34-9*d*s24*s13*s23*s34^2-3*d*s24^2*s23*s12^2+12*s14*d*s24*s23^2*s34-3*d*s13^2*s12^2*s34+12*s13*s12*s34^3-4*s14^2*s24*s13*s23+2*s14*s13^3*s12-13*d*s24^3*s12*s34-6*d*s13*s23*s12*s34^2-15*d*s24*s13*s12^2*s34+8*s13^2*s23*s12*s34+24*s14*s24*s13*s12*s34+4*s12*s34^4-4*d*s24^2*s34^3-8*s14^2*d*s23^3-6*s14*d*s24*s12*s34^2-3*d*s13^2*s23*s34^2+4*s14*d*s13*s23^2*s12+12*s24^2*s13*s34^2-4*s14*s13*s23*s34^2-d*s12*s34^4-4*s24*s13^3*s34-d*s24^5+4*s14*s12*s34^3+8*s24^2*s34^3+4*s14^2*d*s23*s12^2-2*s14*s23^2*s12^2-3*d*s24*s13^2*s12^2+6*s14*d*s24*s13*s23*s12-6*s14*d*s24^2*s13*s34-12*s14*s24*s23*s12^2+16*s14*s13*s12^2*s34-4*s14*d*s24*s12^3+12*s14^2*d*s23*s12*s34+2*s24^2*s13^2*s23-2*s24*s13^4+8*s14*d*s24^2*s23^2-28*s14*s23^2*s12*s34+6*s14*s13^2*s12^2+4*s13^3*s12*s34-9*d*s24*s13^2*s12*s34-4*s24^2*s13^3+5*s14*d*s13^2*s23*s12-48*s14*s24*s23*s12*s34-6*d*s24*s23*s12^2*s34+12*s24^2*s23*s34^2+8*s23*s12*s34^3-3*d*s12^2*s34^3-6*d*s24^3*s12^2+2*s24*s34^4+36*s24^2*s12^2*s34+24*s24*s13*s23*s12*s34-7*d*s24*s12*s34^3+16*s14*s24*s13*s12^2+13*s14*d*s24^2*s23*s34))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (1/2*Den(-2+d)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*(8*s14^2*d*s24*s23*s34-8*s14^2*s24*s23*s12-3*s14*d*s24*s13*s12^2-4*s14*s24^2*s23*s34+2*s14*d*s23*s34^3+6*s14*s24^2*s34^2+8*s14*s13^2*s23*s12+8*s14^2*d*s13*s23*s12-24*s14^2*s13*s23*s34+12*s14^2*s23^2*s34+4*s14*s24*s13*s23*s12-4*s14*d*s13*s34^3+16*s14*s24^2*s13*s34-12*s14^2*s13*s23^2-6*s14*d*s13*s12^2*s34+4*s14*s13^3*s23+10*s14*s24^2*s13^2+2*s14*d*s13*s23*s34^2+2*s14*s24^3*s34-12*s14*d*s24*s13*s12*s34+8*s14*s24*s12*s34^2-4*s14^2*d*s23^2*s34-2*s14^2*s24^2*s23+2*s14*s12^2*s34^2+4*s14*s24^3*s13-2*s14*d*s23*s12^2*s34+2*s14*s13*s12^3-9*s14*d*s13^2*s12*s34+4*s14^2*d*s13*s23^2+22*s14*s24*s13^2*s34+16*s14^3*s23^2+4*s14*d*s24*s23*s34^2+10*s14*s24^2*s13*s12-4*s14*s24*s13*s23*s34-s14*d*s13*s12^3-8*s14^3*d*s23^2-3*s14*d*s24*s12^2*s34-2*s14*d*s13*s23*s12^2-s14*d*s24^3*s13+4*s14*s13*s23*s12*s34-4*s14*s23*s12*s34^2-3*s14*d*s12^2*s34^2-9*s14*d*s24*s13*s34^2-16*s14^2*s24*s23*s34+4*s14^2*d*s24*s23*s12-4*s14^2*s23^2*s12-16*s14^2*s13*s23*s12+12*s14^2*d*s13*s23*s34+4*s14*s13^2*s23*s34-s14*d*s24^3*s34-3*s14*d*s24^2*s12*s34-3*s14*d*s24^2*s13^2-s14*d*s13^4+16*s14*s24*s13^2*s12-2*s14*d*s13^3*s23+8*s14*s13*s34^3+2*s14*d*s24^2*s13*s23+4*s14^2*d*s23^2*s12-s14*d*s34^4-3*s14*d*s24^2*s34^2-s14*d*s12^3*s34-4*s14*s23*s34^3+14*s14*s13*s12*s34^2-10*s14^2*s13^2*s23-9*s14*d*s13*s12*s34^2-3*s14*d*s13^2*s12^2+8*s14*s13^3*s34+12*s14^2*d*s24*s13*s23-4*s14^2*d*s24*s23^2-6*s14*d*s24*s13^2*s12-3*s14*d*s12*s34^3-14*s14^2*s23*s34^2+4*s14*s24^2*s12*s34-2*s14*d*s13^2*s23*s34-3*s14*d*s13^3*s12+12*s14*s13^2*s34^2+4*s14*s24*s13^2*s23+4*s14^2*d*s13^2*s23+20*s14*s24*s13*s34^2-3*s14*d*s24*s13^3+8*s14^2*d*s23*s34^2-4*s14*d*s13*s23*s12*s34+4*s14*s13*s23*s12^2+2*s14*s24*s12^2*s34-4*s14^2*s23*s12*s34+4*s14^2*s24*s23^2-8*s14*s24*s23*s34^2-3*s14*d*s24*s34^3+4*s14*d*s24*s13*s23*s34-3*s14*d*s24^2*s13*s12+16*s14*s13^2*s12*s34-9*s14*d*s24*s13^2*s34+6*s14*s24*s34^3+2*s14*s34^4-6*s14^2*s23*s12^2+8*s14*s24*s13^3-6*s14*d*s13^2*s34^2+2*s14*s13^4-28*s14^2*s24*s13*s23+6*s14*s13^3*s12+24*s14*s24*s13*s12*s34-6*s14*d*s24*s12*s34^2-4*s14*s13*s23*s34^2+4*s14*s12*s34^3+4*s14^2*d*s23*s12^2-6*s14*d*s24^2*s13*s34+8*s14*s13*s12^2*s34+4*s14^2*d*s23*s12*s34-4*s14*d*s13^3*s34+6*s14*s13^2*s12^2-4*s14*d*s13^2*s23*s12-4*s14*s24*s23*s12*s34+8*s14*s24*s13*s12^2+2*s14*d*s24^2*s23*s34))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (-1/2*(14*s14*s23*s12^2+6*d*s13^2*s12^2-4*s14*s13*s12*s34+9*d*s24*s13*s12^2-8*s24*s13^3+4*s14*s13*s12^2-2*s14*d*s24^2*s13+9*d*s13*s12^2*s34-4*s24^2*s12*s34-8*s13^3*s12+d*s12*s34^3+4*d*s13^3*s12+4*s14*s23*s12*s34-4*s14*s13^3+3*d*s24*s13^3-4*s14*d*s23*s34^2-8*s24*s13*s34^2+4*s14*s24^2*s12-8*s24*s12^2*s34-4*s14*d*s13^2*s23+9*d*s13^2*s12*s34-4*s14*d*s24*s23*s34-12*s13^2*s12^2-12*s14*d*s13*s23*s12+2*s14*d*s13*s34^2+12*d*s24*s13*s12*s34-4*s14*s13*s34^2+28*s14*s24*s13*s23+6*d*s24*s12^2*s34-16*s13^2*s12*s34+10*s14*s13^2*s23-4*s14^2*d*s13*s23-6*s13^3*s34+4*s14*s24*s12*s34-2*s14*d*s24^2*s12-6*s24*s12^3+6*s14*s23*s34^2+3*d*s24*s13*s34^2+4*s14*s12^2*s34+3*d*s13^2*s34^2+4*s14*s12^3-8*s14*d*s24*s23*s12-16*s14^2*s23^2-6*s13^2*s34^2+12*s14^2*s13*s23-2*s14*d*s13*s12^2+3*d*s24*s12^3-14*s13*s12^2*s34-8*s14*d*s13*s23*s34+3*d*s24^2*s12*s34-4*s14*d*s24*s13*s12+3*d*s13^3*s34-20*s24*s13*s12^2-8*s14*d*s23*s12^2-4*s14*s13^2*s12+6*d*s13*s12*s34^2-2*s12^4+4*s14*s24*s13*s12+d*s24^3*s12+16*s14*s13*s23*s34-10*s24^2*s13*s34+d*s13*s34^3+4*s14^2*d*s23*s12+16*s14*s24*s23*s12+9*d*s24*s13^2*s12+2*s14*d*s13^3-6*s24^2*s12^2+d*s13^4-2*s24*s12*s34^2+3*d*s24^2*s12^2+4*s14*d*s13^2*s34-2*s13*s34^3+6*d*s24^2*s13*s12-2*s24^3*s12+2*s14*d*s12*s34^2+8*s14*s24*s12^2-16*s24*s13^2*s34-12*s14*d*s24*s13*s23-12*s14^2*s23*s12+4*d*s13*s12^3-4*s14^2*d*s23*s34-4*s12^3*s34+24*s14*s13*s23*s12-16*s24^2*s13*s12-4*s14*d*s24*s12^2-4*s14^2*s24*s23-2*s13^4+d*s24^3*s13+6*d*s24*s13^2*s34+8*s14*s24*s23*s34+3*d*s24*s12*s34^2-24*s24*s13*s12*s34-8*s14*s13^2*s34+3*d*s12^2*s34^2-4*s14*s24*s13*s34-10*s24^2*s13^2-4*s14*d*s23*s12*s34-2*s14*d*s12^3+d*s12^4+2*s14*s24^2*s23+4*s14^2*d*s24*s23+3*d*s24^2*s13^2+3*d*s24^2*s13*s34+4*s14^2*s23*s34-2*s12^2*s34^2-22*s24*s13^2*s12-4*s24^3*s13+4*s14*d*s13*s12*s34+8*s14^2*d*s23^2-8*s13*s12*s34^2-8*s13*s12^3-4*s14*s24*s13^2+2*s14*d*s13^2*s12+3*d*s12^3*s34)*Den(-2+d)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*s23);

id INT(pentagon1x123,3,21,3,2,[],1,0,1,-2,1) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (Den(-2+d)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*(s14^2*d*s23^2*s12^2-4*s14^3*s24*s23^2+6*s14^2*d*s13^2*s12*s34+4*s14^3*s23^3-8*s14^2*s13^3*s12+6*s14^2*d*s13^2*s12^2-4*s14^2*s24*s13^3-4*s14^3*d*s23^2*s12-8*s14^2*s24*s13*s23*s12-2*s14^2*d*s23^2*s12*s34+6*s14^2*d*s13*s12^2*s34-2*s14^2*s23^2*s12^2-12*s14^2*s13*s23*s12^2-2*s14^2*d*s13*s23*s34^2-4*s14^2*s24*s12^2*s34+16*s14^3*s13*s23*s12+6*s14^2*d*s24*s13*s12^2+8*s14^3*s13^2*s23+2*s14^2*d*s24*s13^3-4*s14^3*d*s23*s12*s34-12*s14^2*s13^2*s12^2-2*s14^2*s13^4-4*s14^2*s24*s13^2*s23+4*s14^2*d*s13^3*s12+s14^2*d*s13^2*s34^2-4*s14^2*s13^3*s34-2*s14^2*d*s24^2*s13*s23+4*s14^2*d*s24*s13*s12*s34+4*s14^3*d*s23^2*s34-4*s14^3*d*s13*s23^2-4*s14^3*d*s24*s13*s23+s14^2*d*s23^2*s34^2-12*s14^2*s13^2*s12*s34-4*s14^2*s24*s12^3-4*s14^2*s23*s12^2*s34-2*s14^2*s24^2*s23^2-12*s14^2*s24*s13*s12^2+4*s14^3*s13*s23*s34+2*s14^2*d*s13^3*s34-2*s14^2*s13^2*s34^2-4*s14^2*d*s24*s23*s12*s34+4*s14^3*s24*s23*s12+2*s14^2*d*s24*s12^3-4*s14^2*s24*s23*s12^2-12*s14^2*s13*s12^2*s34+s14^2*d*s24^2*s23^2+6*s14^2*d*s13*s23*s12^2+2*s14^2*d*s24*s12^2*s34-2*s14^2*s12^4+8*s14^3*s23*s12^2-8*s14^2*s13*s23*s12*s34-2*s14^2*s23^2*s34^2-4*s14^3*d*s13*s23*s34-4*s14^3*d*s23*s12^2+2*s14^2*d*s24^2*s13*s12-4*s14^3*d*s24*s23*s12-12*s14^2*s13^2*s23*s12-2*s14^2*s24^2*s12^2-2*s14^2*d*s24^2*s23*s12-2*s14^2*d*s23*s12*s34^2+12*s14^3*s13*s23^2-4*s14^2*s24*s13^2*s34+6*s14^2*d*s24*s13^2*s12+s14^2*d*s13^4-2*s14^2*d*s24*s23^2*s12-4*s14^2*s24*s23^2*s34+2*s14^2*d*s13*s12*s34^2+4*s14^4*d*s23^2+4*s14^3*s24*s13*s23-4*s14^3*s23^2*s34+s14^2*d*s24^2*s12^2-2*s14^2*d*s13*s23^2*s34-4*s14^2*s13*s23^2*s12-4*s14^4*s23^2-4*s14^3*d*s13^2*s23+6*s14^2*d*s13^2*s23*s12-4*s14^2*s13^2*s23*s34+s14^2*d*s12^2*s34^2-4*s14^2*s12^3*s34+2*s14^2*d*s23*s12^3-8*s14^3*d*s13*s23*s12-2*s14^2*s24^2*s13^2+4*s14^3*s23*s12*s34+s14^2*d*s13^2*s23^2-4*s14^2*d*s24*s13*s23*s34-4*s14^2*s24^2*s13*s12-4*s14^2*s13^3*s23+4*s14^2*d*s13*s12^3-4*s14^2*s23*s12^3+2*s14^2*d*s12^3*s34-2*s14^2*s12^2*s34^2+2*s14^2*d*s24*s23^2*s34-4*s14^2*s13*s12*s34^2-8*s14^2*s24*s13*s12*s34+2*s14^2*d*s13*s23^2*s12+12*s14^3*s23^2*s12+s14^2*d*s12^4+2*s14^2*d*s13^3*s23+2*s14^2*d*s24*s13^2*s34-12*s14^2*s24*s13^2*s12-2*s14^2*s13^2*s23^2-8*s14^2*s13*s12^3+s14^2*d*s24^2*s13^2+4*s14^3*d*s24*s23^2-2*s14^2*d*s24*s13*s23^2))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (1/2*Den(-2+d)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*(32*s14^2*d*s24*s23*s34-8*s14^2*s24*s23*s12-6*s14*d*s24*s13*s12^2-s14^2*d*s24^3-9*d*s24^2*s13^2*s34+24*s24*s13*s34^3-48*s14*s24^2*s23*s34+8*s14*d*s23*s34^3-d*s13^3*s34^2+2*s14^2*s12*s34^2+16*s14^2*d*s24^2*s23-6*d*s24^3*s13*s12+24*s14*s24^2*s34^2+20*s14^3*s23*s12-6*s14*d*s24^3*s12+6*s24^4*s13-3*s14^2*d*s24*s34^2+16*s14^2*d*s13*s23*s12-8*s14^2*s13*s23*s34+16*s14*d*s24*s23*s12*s34+28*s14^2*s23^2*s34-8*s14*s24*s13*s23*s12+3*s14^2*d*s12^3-6*s14*d*s13*s34^3+24*s14*s24^2*s13*s34-4*s14^2*s13*s23^2-6*s14*d*s13*s12^2*s34-12*s14^2*s24*s13*s12-6*s14^2*d*s24*s13*s34+12*s24*s13^2*s12*s34-6*s14^2*s13^2*s34+10*s24^4*s34+4*s14*s24^2*s13^2+s14^2*d*s24*s13^2+8*s14*d*s13*s23*s34^2-18*d*s24^2*s12*s34^2+6*s13*s12^2*s34^2-2*d*s24*s12^3*s34+16*s14*s24^3*s34-6*s14*d*s24^2*s12^2-5*d*s24^4*s34-8*s14^3*d*s13*s23-24*s14*d*s24*s13*s12*s34+24*s14*s24*s12*s34^2+6*s14^2*s24*s34^2+6*s24^2*s13^2*s12+24*s24^3*s13*s34-12*s14^2*d*s23^2*s34-3*s14^2*d*s12*s34^2-28*s14^2*s24^2*s23+4*s14*s12^2*s34^2-2*s14*d*s24^4-6*s14^2*s24*s13^2-3*d*s24^4*s13+s14^2*d*s13^2*s34+8*s14*s24^3*s13+12*s24*s13*s12^2*s34+6*s13^2*s12*s34^2-9*d*s24*s12^2*s34^2-6*s14*d*s13^2*s12*s34+4*s14^2*d*s13*s23^2+2*s13^3*s34^2+8*s14*s24*s13^2*s34+32*s14^3*s23^2+2*s14^2*d*s24*s13*s12-3*d*s13^2*s12*s34^2+24*s14*d*s24*s23*s34^2+4*s14^2*s24*s13*s34+8*s14*s24^2*s13*s12+18*s24*s12^2*s34^2-40*s14*s24*s13*s23*s34-s14^2*d*s34^3-16*s14^3*d*s23^2+6*s13^2*s34^3-12*s14*d*s24*s12^2*s34-18*d*s24*s13*s12*s34^2-6*s14*d*s24^3*s13+6*s24^4*s12+36*s24^2*s13*s12*s34-18*s14^2*s13^2*s12-8*s14*s13*s23*s12*s34-12*d*s24^3*s13*s34-20*s14*s23*s12*s34^2-6*s14*d*s12^2*s34^2+6*s13*s34^4-20*s14*s24^2*s23*s12-18*s14*d*s24*s13*s34^2-56*s14^2*s24*s23*s34+8*s14^2*d*s24*s23*s12-3*d*s24^2*s13^2*s12+3*s14^2*d*s13^3-4*s14^2*s23^2*s12-24*s14^2*s13*s23*s12+8*s14^2*d*s13*s23*s34-12*s14^3*s23*s34+4*s14*s24^2*s12^2-4*s14*s13^2*s23*s34-8*s14*d*s24^3*s34+s14^2*d*s24*s12^2-18*s14*d*s24^2*s12*s34+9*s14^2*d*s13^2*s12-6*s14*d*s24^2*s13^2-3*d*s13*s34^4+36*s24^2*s12*s34^2+4*s24*s12^3*s34-3*d*s13*s12^2*s34^2+8*s14*s13*s34^3+8*s14*d*s24^2*s13*s23-3*d*s13^2*s34^3+12*s24^3*s13*s12+4*s14^2*d*s23^2*s12-6*s14^2*s24*s12^2-12*d*s24*s13*s34^3-2*s14*d*s34^4+18*s24^2*s13^2*s34+8*s14*s24^3*s12-3*d*s24^4*s12-12*s14*d*s24^2*s34^2-2*s14*d*s12^3*s34-16*s14*s23*s34^3-12*s14^3*s24*s23+8*s14*s13*s12*s34^2-12*s14^2*s13^2*s23+6*s24^3*s13^2-12*s14*d*s13*s12*s34^2-6*s14^2*s12^3+24*s24*s12*s34^3-9*d*s24^2*s12^2*s34-d*s24^2*s12^3+2*s14^2*s13*s34^2+2*s24^5-20*s14*s24^2*s13*s23-d*s12^3*s34^2-3*s14^2*d*s24^2*s13+8*s14^3*d*s24*s23+8*s14^2*d*s24*s13*s23+4*s14*s24^4-6*s14^2*s12^2*s34-12*s14^2*d*s24*s23^2+20*s24^3*s34^2-6*s14*d*s24*s13^2*s12-12*s14^2*s13*s12*s34+2*s14^2*s24^3-18*d*s24^2*s13*s34^2-2*d*s24*s13^3*s34-6*s14*d*s12*s34^3-28*s14^2*s23*s34^2-3*s14^2*d*s24^2*s34+24*s14*s24^2*s12*s34-6*s14^2*d*s24*s12*s34-6*d*s13*s12*s34^3+2*s14^2*s24^2*s13-18*d*s24^2*s13*s12*s34+36*s24*s13*s12*s34^2+4*s14*s13^2*s34^2-3*s14^2*d*s13*s34^2-d*s34^5-4*s14*s24*s13^2*s23+8*s14*d*s24^2*s23*s12-10*d*s24^3*s34^2+8*s14^2*d*s13^2*s23+24*s14*s24*s13*s34^2+24*s24^3*s12*s34+8*s14*d*s23*s12*s34^2+8*s14^3*d*s23*s34-2*s14*d*s24*s13^3+2*s24^2*s12^3+16*s14^2*d*s23*s34^2+6*s24^2*s13*s12^2+2*s12^3*s34^2+6*s14^2*s24^2*s34+8*s14*s24*s12^2*s34-3*d*s24^3*s13^2-16*s14*s24^3*s23-8*s14^2*s23*s12*s34+s14^2*d*s12^2*s34+28*s14^2*s24*s23^2-48*s14*s24*s23*s34^2-8*s14*d*s24*s34^3-9*d*s24*s13^2*s34^2+16*s14*d*s24*s13*s23*s34-12*s14*d*s24^2*s13*s12+6*s12^2*s34^3-6*s14^2*s13^3-12*s14*d*s24*s13^2*s34+2*s14^2*d*s13*s12*s34-3*d*s24^2*s13*s12^2+16*s14*s24*s34^3-4*s14*s23*s12^2*s34-5*d*s24*s34^4+6*s24^3*s12^2+8*s14*d*s24^3*s23+4*s14^2*s24*s12*s34+2*s34^5+18*s24*s13^2*s34^2-3*s14^2*d*s24^2*s12+4*s14*s34^4-12*s14^2*s23*s12^2-d*s24^2*s13^3+2*s14^2*s34^3+20*s14^3*s13*s23+12*s13*s12*s34^3-6*s14*d*s13^2*s34^2-8*s14^2*s24*s13*s23-12*d*s24^3*s12*s34-6*d*s24*s13*s12^2*s34-18*s14^2*s13*s12^2+16*s14*s24*s13*s12*s34+6*s12*s34^4-10*d*s24^2*s34^3-18*s14*d*s24*s12*s34^2+36*s24^2*s13*s34^2-20*s14*s13*s23*s34^2-3*d*s12*s34^4+2*s14^2*s24^2*s12+4*s24*s13^3*s34-d*s24^5+8*s14*s12*s34^3+20*s24^2*s34^3+8*s14^2*d*s23*s12^2-18*s14*d*s24^2*s13*s34-4*s14*s24*s23*s12^2-2*s14*d*s24*s12^3+8*s14^2*d*s23*s12*s34-2*s14*d*s13^3*s34+9*s14^2*d*s13*s12^2-6*d*s24*s13^2*s12*s34+2*s24^2*s13^3-40*s14*s24*s23*s12*s34-8*s14^3*d*s23*s12-3*d*s12^2*s34^3-3*d*s24^3*s12^2+10*s24*s34^4+18*s24^2*s12^2*s34-12*d*s24*s12*s34^3+24*s14*d*s24^2*s23*s34))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (-1/2*Den(-2+d)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*(4*s14^2*d*s24*s23*s34-s14^2*d*s24^3+2*s14^2*s12*s34^2+2*s14^2*d*s24^2*s23+20*s14^3*s23*s12-3*s14^2*d*s24*s34^2+4*s14^2*d*s13*s23*s12+3*s14^2*d*s12^3-12*s14^2*s24*s13*s12-6*s14^2*d*s24*s13*s34-6*s14^2*s13^2*s34+s14^2*d*s24*s13^2-8*s14^3*d*s13*s23+6*s14^2*s24*s34^2-3*s14^2*d*s12*s34^2-4*s14^2*s24^2*s23-6*s14^2*s24*s13^2+s14^2*d*s13^2*s34+8*s14^3*s23^2+2*s14^2*d*s24*s13*s12+4*s14^2*s24*s13*s34-s14^2*d*s34^3-18*s14^2*s13^2*s12-8*s14^2*s24*s23*s34-4*s14^2*d*s24*s23*s12+3*s14^2*d*s13^3-8*s14^2*s13*s23*s12-4*s14^2*d*s13*s23*s34-12*s14^3*s23*s34+s14^2*d*s24*s12^2+9*s14^2*d*s13^2*s12-6*s14^2*s24*s12^2-12*s14^3*s24*s23-4*s14^2*s13^2*s23-6*s14^2*s12^3+2*s14^2*s13*s34^2-3*s14^2*d*s24^2*s13+8*s14^3*d*s24*s23-4*s14^2*d*s24*s13*s23-6*s14^2*s12^2*s34-12*s14^2*s13*s12*s34+2*s14^2*s24^3-4*s14^2*s23*s34^2-3*s14^2*d*s24^2*s34-6*s14^2*d*s24*s12*s34+2*s14^2*s24^2*s13-3*s14^2*d*s13*s34^2+2*s14^2*d*s13^2*s23+8*s14^3*d*s23*s34+2*s14^2*d*s23*s34^2+6*s14^2*s24^2*s34+s14^2*d*s12^2*s34-6*s14^2*s13^3+2*s14^2*d*s13*s12*s34+4*s14^2*s24*s12*s34-3*s14^2*d*s24^2*s12-4*s14^2*s23*s12^2+2*s14^2*s34^3+20*s14^3*s13*s23-18*s14^2*s13*s12^2+2*s14^2*s24^2*s12+2*s14^2*d*s23*s12^2-4*s14^2*d*s23*s12*s34+9*s14^2*d*s13*s12^2-8*s14^3*d*s23*s12))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (-1/2*(8*s14^2*s24*s23*s12+12*s14*d*s24*s13*s12^2-3*d*s24^2*s13^2*s34+10*s13*s12^4-3*d*s13^3*s34^2-2*d*s24^3*s13*s12-3*d*s12^4*s34-8*s14*s12^3*s34-48*s14*s13^2*s23*s12-16*s14^2*d*s13*s23*s12+8*s14^2*s13*s23*s34-4*s14^2*s23^2*s34-40*s14*s24*s13*s23*s12+28*s14^2*s13*s23^2+12*s14*d*s13*s12^2*s34-16*s14*s13^3*s23+8*s14*d*s24*s23*s12^2+36*s24*s13^2*s12*s34-4*s14*s24^2*s13^2+18*s13*s12^2*s34^2-6*d*s24*s12^3*s34+20*s13^2*s12^3+2*s14*d*s24^2*s12^2+8*s14*d*s24*s13*s12*s34-12*d*s24*s13*s12^3+18*s24^2*s13^2*s12+2*s14*d*s12^4-10*d*s13^2*s12^3+4*s14^2*d*s23^2*s34-16*s14*s23*s12^3-4*s14*s12^2*s34^2+36*s24*s13*s12^2*s34+18*s13^2*s12*s34^2-3*d*s24*s12^2*s34^2+24*s13*s12^3*s34+8*s14*d*s23*s12^2*s34-16*s14*s13*s12^3+12*s14*d*s13^2*s12*s34+6*s12^4*s34-12*s14^2*d*s13*s23^2+6*s13^3*s34^2-8*s14*s24*s13^2*s34-5*d*s13*s12^4-8*s14^3*s23^2-9*d*s13^2*s12*s34^2-8*s14*s24^2*s13*s12-12*d*s13*s12^3*s34+6*s24*s12^2*s34^2-8*s14*s24*s13*s23*s34+8*s14*d*s13*s12^3+8*s14^3*d*s23^2+2*s13^2*s34^3+4*s14*d*s24*s12^2*s34+24*s14*d*s13*s23*s12^2-6*d*s24*s13*s12*s34^2+12*s24^2*s13*s12*s34-40*s14*s13*s23*s12*s34-4*s14*s23*s12*s34^2+2*s14*d*s12^2*s34^2+8*s14*d*s23*s12^3-10*d*s13^3*s12^2-4*s14*s24^2*s23*s12-8*s14^2*d*s24*s23*s12-9*d*s24^2*s13^2*s12+24*s24*s13*s12^3+28*s14^2*s23^2*s12+8*s14*d*s24*s13^2*s23+32*s14^2*s13*s23*s12-8*s14^2*d*s13*s23*s34-4*s14*s24^2*s12^2-20*s14*s13^2*s23*s34+2*s14*d*s24^2*s13^2+2*s14*d*s13^4+20*s13^3*s12^2-24*s14*s24*s13^2*s12+8*s14*d*s13^3*s23+12*s24*s12^3*s34-9*d*s13*s12^2*s34^2-d*s13^2*s34^3+4*s24^3*s13*s12-12*s14^2*d*s23^2*s12+6*s24^2*s13^2*s34+4*s14*d*s12^3*s34-8*s14*s13*s12*s34^2+16*s14^2*s13^2*s23+2*s24^3*s13^2+4*s14*d*s13*s12*s34^2-12*d*s13^3*s12*s34-3*d*s24^2*s12^2*s34-3*d*s24^2*s12^3-4*s14*s24^2*s13*s23-3*d*s12^3*s34^2-3*d*s13^4*s34+12*s14*d*s13^2*s12^2-8*s14*s13^3*s34-8*s14^2*d*s24*s13*s23-3*d*s24*s12^4+4*s14^2*d*s24*s23^2+12*s14*d*s24*s13^2*s12-8*s14*s24*s12^3-6*d*s24*s13^3*s34+36*s24*s13^2*s12^2-4*s14*s12^4+2*s12^5-2*d*s13*s12*s34^3+36*s13^2*s12^2*s34+8*s14*d*s13^2*s23*s34+8*s14*d*s13^3*s12-6*d*s24^2*s13*s12*s34+12*s24*s13*s12*s34^2-4*s14*s13^2*s34^2-20*s14*s24*s13^2*s23+6*s24*s12^4-8*s14^2*d*s13^2*s23+4*s14*d*s24*s13^3+6*s24^2*s12^3+24*s24*s13^3*s12+16*s14*d*s13*s23*s12*s34+6*s13^4*s34-d*s13^5+18*s24^2*s13*s12^2-48*s14*s13*s23*s12^2+6*s12^3*s34^2-8*s14*s24*s12^2*s34-d*s24^3*s13^2+8*s14^2*s23*s12*s34-4*s14^2*s24*s23^2-3*d*s24*s13^2*s34^2+4*s14*d*s24^2*s13*s12-24*s14*s13^2*s12*s34-12*d*s24*s13^3*s12+2*s12^2*s34^3+4*s14*d*s24*s13^2*s34-9*d*s24^2*s13*s12^2-20*s14*s23*s12^2*s34+2*s24^3*s12^2+6*s24*s13^2*s34^2+16*s14^2*s23*s12^2-3*d*s24^2*s13^3-8*s14*s24*s13^3-3*d*s24*s13^4-18*d*s13^2*s12^2*s34+4*s13*s12*s34^3+2*s14*d*s13^2*s34^2-5*d*s13^4*s12-4*s14*s13^4+8*s14^2*s24*s13*s23-16*s14*s13^3*s12-18*d*s24*s13*s12^2*s34-16*s14*s24*s13*s12*s34+2*s13^5-4*s14*s13*s23*s34^2+12*s24*s13^3*s34+10*s13^4*s12-8*s14^2*d*s23*s12^2-18*d*s24*s13^2*s12^2+16*s14*d*s24*s13*s23*s12-20*s14*s24*s23*s12^2-24*s14*s13*s12^2*s34+4*s14*d*s24*s12^3-8*s14^2*d*s23*s12*s34+6*s24*s13^4+4*s14*d*s13^3*s34-24*s14*s13^2*s12^2+24*s13^3*s12*s34-d*s12^5-18*d*s24*s13^2*s12*s34+6*s24^2*s13^3+24*s14*d*s13^2*s23*s12-8*s14*s24*s23*s12*s34-d*s12^2*s34^3-d*s24^3*s12^2+6*s24^2*s12^2*s34-24*s14*s24*s13*s12^2)*Den(-2+d)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2);

id INT(pentagon1x123,3,21,4,0,[],2,0,1,0,1) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-1/2*Den(s14+s24+s13+s23+s12+s34)*Den(s23)*(d*s13+d*s34+d*s12+d*s24-4*s24-4*s13+2*d*s23-8*s23-4*s12-4*s34))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (-Den(s14+s24+s13+s23+s12+s34)*(-3+d)*Den(s23))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (Den(s14+s24+s13+s23+s12+s34)*(-3+d)*Den(s23))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (-Den(s14+s24+s13+s23+s12+s34)*(-3+d)*Den(s23));

id INT(pentagon1x123,3,21,4,0,[],1,0,2,0,1) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (1/2*Den(s14)*Den(s23)*(d*s13+d*s34+d*s12+d*s24-4*s24-4*s13-4*s12-4*s34))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (Den(s14)*(-3+d)*Den(s23))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (-Den(s14)*(-3+d)*Den(s23))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (-Den(s14)*(-3+d)*Den(s23));

id INT(pentagon1x123,3,21,4,0,[],1,0,1,0,2) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-1/2*Den(s14)*Den(s14+s24+s13+s23+s12+s34)*(d*s13+2*s14*d+d*s34-8*s14+d*s12+d*s24-4*s24-4*s13-4*s12-4*s34))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (-Den(s14)*Den(s14+s24+s13+s23+s12+s34)*(-3+d))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (-Den(s14)*Den(s14+s24+s13+s23+s12+s34)*(-3+d))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (Den(s14)*Den(s14+s24+s13+s23+s12+s34)*(-3+d));

id INT(pentagon1x123,3,21,4,1,[],2,-1,1,0,1) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (1/2*(12*s14*s24*s23+2*d*s24*s13^2-2*s14*s13^2-4*s24*s13*s12-4*s12*s34^2-4*s14*d*s23*s12-12*s13*s23*s34-6*s13^2*s34+2*d*s24*s34^2-4*s14^2*s23-2*s14*s34^2-4*s14*s23*s34-2*s34^3+4*d*s24*s13*s34+3*d*s13^2*s34-4*s24*s34^2+2*d*s12*s34^2-4*s14*s13*s34-2*s13^3+2*d*s13*s23*s12+2*d*s24*s23*s34-4*s14*d*s23^2-4*s24*s13^2-4*s13^2*s12-6*s13*s23*s12-6*s24*s23*s34+d*s34^3+2*s14*d*s13*s34+4*s14*s12^2+d*s13^3+4*s14*s24^2-8*s24*s13*s34+4*d*s13*s23*s34+2*s14*s13*s12+12*s14*s23*s12-4*s14*d*s24*s23+2*d*s13^2*s12+2*d*s24*s13*s12+d*s24^2*s34+12*s14*s23^2-6*s13*s34^2-8*s13*s12*s34-6*s13^2*s23+2*s14*s24*s13+d*s24^2*s13-6*s23*s34^2+2*s14*s24*s34-2*s12^2*s34+2*d*s24*s12*s34+s14*d*s34^2-6*s23*s12*s34+d*s12^2*s34-2*s24^2*s13-4*s14*s13*s23+2*d*s23*s34^2+2*d*s24*s13*s23+2*d*s13^2*s23-2*s14*d*s24*s12+s14*d*s13^2-2*s24^2*s34+3*d*s13*s34^2+2*s14*s12*s34-6*s24*s13*s23+8*s14*s24*s12+2*d*s23*s12*s34-2*s13*s12^2-4*s24*s12*s34-s14*d*s24^2+d*s13*s12^2-s14*d*s12^2+4*d*s13*s12*s34)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*(d*s13+d*s34-d*s12-d*s24+3*s24-3*s13+3*s12-3*s34))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(s14+s24+s13+s23+s12+s34)*(3*s34^2+3*s13^2-3*s14*s24-3*s14*s12-d*s12*s34+3*s24*s13+2*s14*d*s23+3*s24*s34-d*s24*s34-d*s34^2+3*s14*s34-d*s13^2-d*s24*s13+3*s12*s34+3*s14*s13+s14*d*s12+s14*d*s24-d*s13*s12+3*s13*s12-s14*d*s13-2*d*s13*s34-s14*d*s34+6*s13*s34-6*s14*s23))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (-(6*s24*s12-d*s24^2-d*s12^2-2*d*s24*s12-d*s12*s34+3*s24*s13+3*s24^2+2*s14*d*s23+d*s13*s23+3*s24*s34+3*s12^2-d*s24*s34-3*s13*s23-d*s24*s13+3*s12*s34-d*s23*s12-d*s13*s12+3*s13*s12+3*s23*s12+3*s24*s23+d*s23*s34-3*s23*s34-6*s14*s23-d*s24*s23)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,4,1,[],2,0,1,-1,1) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-1/2*(10*s14*s23*s12^2+2*s14*d*s24*s23^2+16*s14*s13*s12*s34+12*s14*s13*s12^2-s14*d*s24^2*s13-2*s14*d*s12^2*s34+8*s14*s23*s12*s34+4*s14*s13^3-2*s14*d*s24*s13*s34+s14*d*s23*s34^2+4*s14*s24^2*s12-3*s14*d*s13^2*s23+2*s14*d*s24*s23*s34-6*s14*d*s13*s23*s12-s14*d*s13*s34^2+4*s14*s13*s34^2+8*s14*s24*s13*s23+10*s14*s13^2*s23+2*s14^2*d*s13*s23+8*s14*s24*s12*s34-s14*d*s24^2*s12-2*s14*s23*s34^2+8*s14*s12^2*s34+4*s14*s12^3-2*s14*d*s24*s23*s12-16*s14^2*s23^2-10*s14^2*s13*s23-3*s14*d*s13*s12^2+4*s14*s24^2*s13-2*s14*d*s13*s23*s34-4*s14*d*s24*s13*s12-6*s14*s24*s23^2-3*s14*d*s23*s12^2-2*s14*d*s24*s13^2+12*s14*s13^2*s12+16*s14*s24*s13*s12+8*s14*s13*s23*s34+6*s14*s23^2*s12+2*s14^2*d*s23*s12+8*s14*s24*s23*s12-s14*d*s13^3+s14*d*s24^2*s23-2*s14*d*s13*s23^2-2*s14*d*s13^2*s34-2*s14*d*s24*s12*s34-s14*d*s12*s34^2+8*s14*s24*s12^2-2*s14*d*s24*s13*s23+2*s14*d*s23^2*s34-10*s14^2*s23*s12-6*s14*s23^2*s34+2*s14^2*d*s23*s34+20*s14*s13*s23*s12-2*s14*d*s24*s12^2-6*s14^2*s24*s23+4*s14*s12*s34^2-4*s14*s24*s23*s34+8*s14*s13^2*s34+8*s14*s24*s13*s34+6*s14*s13*s23^2-2*s14*d*s23*s12*s34-s14*d*s12^3-2*s14*s24^2*s23+2*s14^2*d*s24*s23-6*s14^2*s23*s34-2*s14*d*s23^2*s12-4*s14*d*s13*s12*s34+4*s14^2*d*s23^2+8*s14*s24*s13^2-3*s14*d*s13^2*s12)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(s14+s24+s13+s23+s12+s34)*Den(s23))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * ((6*s14*s24*s23-3*s14*s13^2+2*s14*d*s23*s12+3*s13*s23*s34+6*s14^2*s23+2*s14*d*s13*s12-d*s24^2*s23+3*s24*s23*s12+3*s24^2*s23+6*s14*s23*s34-3*s14*s13*s34-2*d*s24*s23*s34+2*s14*d*s23^2+6*s24*s23*s34+s14*d*s13*s34-3*s14*s12^2-2*s14*d*s23*s34-d*s13*s23*s34-6*s14*s13*s12-d*s24*s23*s12-6*s14*s23*s12-2*s14*d*s24*s23-2*s14^2*d*s23-6*s14*s23^2-3*s14*s24*s13+3*s23*s34^2+3*s23*s12*s34-6*s14*s13*s23-d*s23*s34^2-d*s24*s13*s23+s14*d*s24*s12+s14*d*s13^2-3*s14*s12*s34+s14*d*s12*s34+3*s24*s13*s23-3*s14*s24*s12-d*s23*s12*s34+2*s14*d*s13*s23+s14*d*s24*s13+s14*d*s12^2)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(s14+s24+s13+s23+s12+s34)*Den(s23))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (-Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(s14+s24+s13+s23+s12+s34)*(3*s14*s24*s23-3*s14*s13^2+s14*d*s23*s12+6*s14^2*s23+2*s14*d*s13*s12+3*s14*s23*s34-3*s14*s13*s34+s14*d*s13*s34-3*s14*s12^2-s14*d*s23*s34-6*s14*s13*s12-3*s14*s23*s12-s14*d*s24*s23-2*s14^2*d*s23-3*s14*s24*s13-3*s14*s13*s23+s14*d*s24*s12+s14*d*s13^2-3*s14*s12*s34+s14*d*s12*s34-3*s14*s24*s12+s14*d*s13*s23+s14*d*s24*s13+s14*d*s12^2)*Den(s23))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (-Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(s14+s24+s13+s23+s12+s34)*(3*s14*s24*s23+2*d*s24*s13^2-12*s24*s13*s12-3*s12*s34^2-3*s14*d*s23*s12-3*s13*s23*s34-6*s13^2*s34+d*s12^3-3*s24*s23*s12+3*s14*s23*s34+2*d*s24*s13*s34+2*d*s13^2*s34+d*s12*s34^2-3*s13^3+2*d*s13*s23*s12-2*s14*d*s23^2-6*s24*s13^2-9*s13^2*s12+2*d*s24*s12^2-6*s13*s23*s12+d*s13^3-s14*d*s23*s34-6*s24*s13*s34+d*s13*s23*s34+d*s24*s23*s12+9*s14*s23*s12-3*s12^3-s14*d*s24*s23+3*d*s13^2*s12-6*s24*s12^2+4*d*s24*s13*s12+6*s14*s23^2-3*s13*s34^2-12*s13*s12*s34-3*s13^2*s23+d*s24^2*s13-6*s12^2*s34+2*d*s24*s12*s34-3*s23*s12*s34+2*d*s12^2*s34-3*s24^2*s13+9*s14*s13*s23+d*s24*s13*s23+d*s13^2*s23+d*s13*s34^2-3*s23*s12^2-3*s24*s13*s23+d*s23*s12*s34+d*s24^2*s12-3*s14*d*s13*s23-9*s13*s12^2-6*s24*s12*s34-3*s24^2*s12+3*d*s13*s12^2+d*s23*s12^2+4*d*s13*s12*s34)*Den(s23));

id INT(pentagon1x123,3,21,4,1,[],1,-1,2,0,1) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-1/2*Den(s14)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*(6*s14*s24*s23+2*d*s24*s13^2-4*s14*s13^2-8*s24*s13*s12-8*s12*s34^2-2*s14*d*s23*s12-12*s13^2*s34+2*d*s24*s34^2+4*s14^2*s23-4*s14*s34^2+10*s14*s23*s34-4*s34^3+4*d*s24*s13*s34+3*d*s13^2*s34-8*s24*s34^2+2*d*s12*s34^2-8*s14*s13*s34-4*s13^3-8*s24*s13^2-8*s13^2*s12+d*s34^3+2*s14*d*s13*s34+2*s14*s12^2+d*s13^3-2*s14*d*s23*s34+2*s14*s24^2-16*s24*s13*s34-2*s14*s13*s12+6*s14*s23*s12-2*s14*d*s24*s23+2*d*s13^2*s12+2*d*s24*s13*s12+d*s24^2*s34-12*s13*s34^2-16*s13*s12*s34-2*s14*s24*s13+d*s24^2*s13-2*s14*s24*s34-4*s12^2*s34+2*d*s24*s12*s34+s14*d*s34^2+d*s12^2*s34-4*s24^2*s13+10*s14*s13*s23-2*s14*d*s24*s12+s14*d*s13^2-4*s24^2*s34+3*d*s13*s34^2-2*s14*s12*s34+4*s14*s24*s12-2*s14*d*s13*s23-4*s13*s12^2-8*s24*s12*s34-s14*d*s24^2+d*s13*s12^2-s14*d*s12^2+4*d*s13*s12*s34))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (Den(s14)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*(3*s34^2+3*s13^2-3*s14*s24-3*s14*s12-d*s12*s34+3*s24*s13+2*s14*d*s23+3*s24*s34-d*s24*s34-d*s34^2+3*s14*s34-d*s13^2-d*s24*s13+3*s12*s34+3*s14*s13+s14*d*s12+s14*d*s24-d*s13*s12+3*s13*s12-s14*d*s13-2*d*s13*s34-s14*d*s34+6*s13*s34-6*s14*s23))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*(d*s13+d*s34-d*s12-d*s24+3*s24-3*s13+3*s12-3*s34))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (-Den(s14)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*(3*s34^2+3*s13^2-d*s12*s34+3*s24*s13+2*s14*d*s23+3*s24*s34-d*s24*s34-d*s34^2-d*s13^2-d*s24*s13+3*s12*s34-d*s13*s12+3*s13*s12-2*d*s13*s34+6*s13*s34-6*s14*s23));

id INT(pentagon1x123,3,21,4,1,[],1,-1,1,0,2) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (1/2*Den(s14)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(s14+s24+s13+s23+s12+s34)*(2*s14*s23*s12^2-2*s14*d*s24*s23^2-4*s24^2*s13*s23+2*d*s24*s23*s12*s34+3*d*s13*s23*s34^2-8*s24*s13*s23*s12-8*s24*s13^2*s23-8*s14*s23*s12*s34+3*s14*d*s23*s34^2-4*s13*s23*s12^2+3*s14*d*s13^2*s23+2*s14*d*s24*s23*s34+d*s23*s12^2*s34+2*s14*d*s13*s23*s12-8*s24*s23*s34^2-16*s13*s23*s12*s34-8*s14*s24*s13*s23-4*s23*s12^2*s34+d*s13*s23*s12^2-16*s24*s13*s23*s34-10*s14*s13^2*s23+2*s14^2*d*s13*s23+2*d*s24*s23*s34^2+2*d*s24*s13^2*s23-10*s14*s23*s34^2-2*s14*d*s24*s23*s12+16*s14^2*s23^2-6*s14^2*s13*s23-12*s13*s23*s34^2+6*s14*d*s13*s23*s34+6*s14*s24*s23^2-s14*d*s23*s12^2+d*s24^2*s13*s23+d*s23*s34^3-4*s24^2*s23*s34-8*s13^2*s23*s12-20*s14*s13*s23*s34+6*s14*s23^2*s12-2*s14^2*d*s23*s12+4*s14*s24*s23*s12-s14*d*s24^2*s23+4*d*s24*s13*s23*s34+2*d*s23*s12*s34^2-2*s14*d*s13*s23^2+4*d*s13*s23*s12*s34+3*d*s13^2*s23*s34-4*s23*s34^3+2*s14*d*s24*s13*s23-2*s14*d*s23^2*s34+6*s14^2*s23*s12+10*s14*s23^2*s34+2*s14^2*d*s23*s34-8*s14*s13*s23*s12+6*s14^2*s24*s23-8*s14*s24*s23*s34-4*s13^3*s23-8*s23*s12*s34^2-12*s13^2*s23*s34+10*s14*s13*s23^2+2*s14*d*s23*s12*s34+2*s14*s24^2*s23-2*s14^2*d*s24*s23-6*s14^2*s23*s34-2*s14*d*s23^2*s12+d*s13^3*s23+d*s24^2*s23*s34-4*s14^2*d*s23^2+2*d*s24*s13*s23*s12-8*s24*s23*s12*s34+2*d*s13^2*s23*s12))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (Den(s14)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*(6*s14*s24*s23-2*s14*d*s23*s12-6*s13*s23*s34-6*s14^2*s23-s14*d*s13*s12-6*s14*s23*s34+d*s13*s23*s12+d*s24*s23*s34-2*s14*d*s23^2-3*s13*s23*s12-3*s24*s23*s34+3*s14*s12^2+2*s14*d*s23*s34+3*s14*s24^2+2*d*s13*s23*s34+3*s14*s13*s12+6*s14*s23*s12-2*s14*d*s24*s23+2*s14^2*d*s23+6*s14*s23^2-3*s13^2*s23+3*s14*s24*s13-3*s23*s34^2+3*s14*s24*s34-3*s23*s12*s34-6*s14*s13*s23+d*s23*s34^2+d*s24*s13*s23+d*s13^2*s23-2*s14*d*s24*s12+3*s14*s12*s34-s14*d*s12*s34-3*s24*s13*s23+6*s14*s24*s12+d*s23*s12*s34+2*s14*d*s13*s23-s14*d*s24^2-s14*d*s24*s34-s14*d*s24*s13-s14*d*s12^2)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (-Den(s14)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(s14+s24+s13+s23+s12+s34)*(3*s14*s24*s23+2*d*s24*s13^2-3*s14*s13^2-6*s24*s13*s12-6*s12*s34^2-s14*d*s23*s12-9*s13^2*s34+2*d*s24*s34^2+6*s14^2*s23+s14*d*s13*s12-3*s14*s34^2+9*s14*s23*s34-3*s34^3+4*d*s24*s13*s34+3*d*s13^2*s34-6*s24*s34^2+2*d*s12*s34^2-6*s14*s13*s34-3*s13^3-6*s24*s13^2-6*s13^2*s12+d*s34^3+2*s14*d*s13*s34+d*s13^3-3*s14*d*s23*s34-12*s24*s13*s34-3*s14*s13*s12+3*s14*s23*s12-s14*d*s24*s23+2*d*s13^2*s12+2*d*s24*s13*s12+d*s24^2*s34-2*s14^2*d*s23-9*s13*s34^2-12*s13*s12*s34-3*s14*s24*s13+d*s24^2*s13-3*s14*s24*s34-3*s12^2*s34+2*d*s24*s12*s34+s14*d*s34^2+d*s12^2*s34-3*s24^2*s13+9*s14*s13*s23+s14*d*s13^2-3*s24^2*s34+3*d*s13*s34^2-3*s14*s12*s34+s14*d*s12*s34-3*s14*d*s13*s23-3*s13*s12^2-6*s24*s12*s34+s14*d*s24*s34+d*s13*s12^2+s14*d*s24*s13+4*d*s13*s12*s34))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (-Den(s14)*(3*s14*s24*s23-s14*d*s23*s12-6*s13*s23*s34-3*s14*s23*s34+d*s13*s23*s12+d*s24*s23*s34-2*s14*d*s23^2-3*s13*s23*s12-3*s24*s23*s34+s14*d*s23*s34+2*d*s13*s23*s34+3*s14*s23*s12-s14*d*s24*s23+6*s14*s23^2-3*s13^2*s23-3*s23*s34^2-3*s23*s12*s34-3*s14*s13*s23+d*s23*s34^2+d*s24*s13*s23+d*s13^2*s23-3*s24*s13*s23+d*s23*s12*s34+s14*d*s13*s23)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,4,1,[],1,0,2,-1,1) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*(6*s14*s24*s23+2*d*s24*s13^2-16*s24*s13*s12-4*s12*s34^2-2*s14*d*s23*s12-2*s13*s23*s34-8*s13^2*s34-d*s24^2*s23+d*s12^3-2*s24*s23*s12+2*s24^2*s23+6*s14*s23*s34+2*d*s24*s13*s34+2*d*s13^2*s34+d*s12*s34^2-4*s13^3+2*d*s13*s23*s12-2*d*s24*s23*s34-8*s24*s13^2-12*s13^2*s12+2*d*s24*s12^2-8*s13*s23*s12+4*s24*s23*s34+d*s13^3-2*s14*d*s23*s34-8*s24*s13*s34+10*s14*s23*s12-4*s12^3-2*s14*d*s24*s23+3*d*s13^2*s12-8*s24*s12^2+4*d*s24*s13*s12+4*s14*s23^2-4*s13*s34^2-16*s13*s12*s34-4*s13^2*s23+d*s24^2*s13+2*s23*s34^2-8*s12^2*s34+2*d*s24*s12*s34-2*s23*s12*s34+2*d*s12^2*s34-4*s24^2*s13+10*s14*s13*s23-d*s23*s34^2+d*s13^2*s23+d*s13*s34^2-4*s23*s12^2-2*s24*s13*s23+d*s24^2*s12-2*s14*d*s13*s23-12*s13*s12^2-8*s24*s12*s34-4*s24^2*s12+3*d*s13*s12^2+d*s23*s12^2+4*d*s13*s12*s34)*Den(s23))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*(3*s24*s12+3*s13^2-d*s12^2-d*s24*s12-d*s12*s34+3*s24*s13+2*s14*d*s23-d*s13*s23+3*s12^2+3*s13*s23-d*s13^2-d*s24*s13+3*s12*s34-d*s23*s12-2*d*s13*s12+6*s13*s12+3*s23*s12-3*s24*s23-d*s13*s34+d*s23*s34-3*s23*s34+3*s13*s34-6*s14*s23+d*s24*s23)*Den(s23))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (-(3*s24*s12+3*s13^2-d*s12^2-d*s24*s12-d*s12*s34+3*s24*s13+2*s14*d*s23+3*s12^2-d*s13^2-d*s24*s13+3*s12*s34-2*d*s13*s12+6*s13*s12-d*s13*s34+3*s13*s34-6*s14*s23)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(s23))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * ((d*s13-d*s34+d*s12-d*s24+3*s24-3*s13-3*s12+3*s34)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23));

id INT(pentagon1x123,3,21,4,1,[],1,0,1,-1,2) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*(12*s14*s24*s23+2*d*s24*s13^2-6*s14*s13^2-8*s24*s13*s12-2*s12*s34^2+2*s13*s23*s34-4*s13^2*s34+12*s14^2*s23+4*s14*d*s13*s12-d*s24^2*s23+d*s12^3+2*s24*s23*s12+4*s24^2*s23+12*s14*s23*s34+2*d*s24*s13*s34+2*d*s13^2*s34+d*s12*s34^2-6*s14*s13*s34-2*s13^3+2*d*s13*s23*s12-2*d*s24*s23*s34-4*s24*s13^2-6*s13^2*s12+2*d*s24*s12^2-4*s13*s23*s12+8*s24*s23*s34+2*s14*d*s13*s34-6*s14*s12^2+d*s13^3-4*s14*d*s23*s34-4*s24*s13*s34-12*s14*s13*s12-4*s14*s23*s12-2*s12^3-4*s14*d*s24*s23+3*d*s13^2*s12-4*s24*s12^2+4*d*s24*s13*s12-4*s14^2*d*s23-4*s14*s23^2-2*s13*s34^2-8*s13*s12*s34-2*s13^2*s23-6*s14*s24*s13+d*s24^2*s13+4*s23*s34^2-4*s12^2*s34+2*d*s24*s12*s34+2*s23*s12*s34+2*d*s12^2*s34-2*s24^2*s13-4*s14*s13*s23-d*s23*s34^2+d*s13^2*s23+2*s14*d*s24*s12+2*s14*d*s13^2+d*s13*s34^2-6*s14*s12*s34-2*s23*s12^2+2*s14*d*s12*s34+2*s24*s13*s23-6*s14*s24*s12+d*s24^2*s12-6*s13*s12^2-4*s24*s12*s34-2*s24^2*s12+3*d*s13*s12^2+2*s14*d*s24*s13+2*s14*d*s12^2+d*s23*s12^2+4*d*s13*s12*s34)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * ((d*s13-d*s34+d*s12-d*s24+3*s24-3*s13-3*s12+3*s34)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (-Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(s14+s24+s13+s23+s12+s34)*(3*s24*s12+3*s34^2-d*s24^2+3*s14*s24-d*s24*s12-3*s14*s12-d*s12*s34+3*s24*s13+3*s24^2+2*s14*d*s23+6*s24*s34-2*d*s24*s34-d*s34^2+3*s14*s34-d*s24*s13+3*s12*s34-3*s14*s13+s14*d*s12-s14*d*s24+s14*d*s13-d*s13*s34-s14*d*s34+3*s13*s34-6*s14*s23))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(s14+s24+s13+s23+s12+s34)*(3*s24*s12+3*s13^2-d*s12^2-d*s24*s12-d*s12*s34+3*s24*s13+2*s14*d*s23-d*s13*s23+3*s12^2+3*s13*s23-d*s13^2-d*s24*s13+3*s12*s34-d*s23*s12-2*d*s13*s12+6*s13*s12+3*s23*s12-3*s24*s23-d*s13*s34+d*s23*s34-3*s23*s34+3*s13*s34-6*s14*s23+d*s24*s23));

id INT(pentagon1x123,3,21,4,2,[],2,-2,1,0,1) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-1/2*(6*s14^2*d*s23^2*s12^2+2*s14*d*s24*s13^3*s23-12*s14^2*s23^3*s12-8*s14*d*s24^2*s13*s23^2-36*s14*s13*s23^2*s34^2-8*s24*s13^3*s23^2-s14^2*d*s23*s12^2*s34+12*s14^3*s24*s23^2-16*s14*d*s24*s13*s23^2*s12-4*s24^2*s23^2*s34^2+24*s14^3*s23^3+16*s14*s13^2*s23^3-8*s14*d*s13^2*s23^2*s12-4*s14^2*d*s13*s23^3-4*s14^2*s24^2*s13*s23-24*s13^2*s23^2*s12*s34-8*s14*d*s24*s13*s23*s12*s34+12*d*s13*s23^2*s12*s34^2+8*s14*d*s13^3*s23*s34+2*d*s13*s23*s12^3*s34-8*s14*d*s24^2*s23^2*s34-4*s13^2*s23^2*s12^2+6*d*s24^2*s13*s23*s12*s34+18*d*s24*s13^2*s23*s34^2+8*s14*s24*s13*s23^3+d*s23*s12^3*s34^2+8*s14^2*d*s23^4-8*s14^2*s24*s13*s23*s12-4*s14^2*d*s23^2*s12*s34+3*s14^2*d*s24*s23*s12^2-4*s14*d*s24*s13^2*s23*s12-4*s14*d*s24^2*s13*s23*s34+12*s14^2*d*s23^3*s12-8*s14*d*s24*s13^2*s23^2-12*s14^2*s23^2*s12^2+6*s14*d*s13^2*s23*s12*s34-4*s14^2*s13*s23*s12^2+3*s14^2*d*s13*s23*s34^2+32*s14*s13*s23^3*s34+d*s24^3*s13^2*s23+8*s14*d*s13*s23*s34^3-16*s24*s13*s23^2*s12*s34+d*s13^5*s23-8*s24^2*s13*s23^2*s34+12*d*s24*s13*s23^2*s34^2+d*s24^3*s23*s34^2-8*s23^2*s12*s34^3-8*s24*s13^2*s23^2*s12+36*s14^2*s13*s23^3+12*d*s13^2*s23^2*s34^2+9*d*s13*s23*s12^2*s34^2+3*d*s13^3*s23*s12^2+18*d*s13^2*s23*s12*s34^2-s14^2*d*s24^2*s13*s23+4*d*s23^2*s12*s34^3+2*s14*d*s13^3*s23*s12-8*s24*s23^2*s12*s34^2+3*d*s24*s13^2*s23*s12^2-2*s14*d*s24^3*s23*s34+9*d*s24^2*s13*s23*s34^2-2*s14*d*s23*s12^2*s34^2-24*s13^2*s23^2*s34^2+6*d*s24*s23*s12*s34^3-4*s14*d*s13*s23*s12^2*s34+2*d*s24^3*s13*s23*s34+36*s14^2*s23^3*s34-2*s14^2*d*s23^2*s34^2+8*s14*s23^3*s12*s34-16*s14*d*s24*s13*s23^2*s34-12*s14*s24*s23^2*s34^2+18*d*s24*s13*s23*s12*s34^2-4*s14^2*s23*s12^2*s34-12*s14^2*s24^2*s23^2+s14^2*d*s24^3*s23-4*s13^4*s23^2+12*d*s13^3*s23*s12*s34-8*s14*d*s23^2*s12*s34^2-24*s24*s13^2*s23^2*s34-2*s14*d*s23*s12^3*s34+2*d*s24^2*s23^2*s34^2+2*d*s13^4*s23^2-12*s14*s13^3*s23^2-2*s14*d*s13*s23*s12^3-s14^2*d*s24*s13^2*s23+3*d*s23*s12^2*s34^3+10*d*s13^3*s23*s34^2-8*s13*s23^2*s12^2*s34-2*s14^2*d*s24*s23*s12*s34+2*s14*d*s24*s23*s34^3-8*s14*d*s13^2*s23^3+d*s23*s34^5+2*d*s13^2*s23^2*s12^2-6*s14*d*s24^2*s13*s23*s12+8*s14*s24*s23^3*s34-s14^2*d*s24*s23*s34^2-12*s14^2*s24*s23*s12^2+6*s14*d*s24*s13^2*s23*s34+3*d*s23*s12*s34^4-4*s14^2*s24^3*s23+6*s14^2*d*s24^2*s23^2-16*s14*d*s13*s23^2*s12*s34-s14^2*d*s13*s23*s12^2+8*s14*s13*s23^3*s12+4*d*s24*s13^3*s23^2-4*s14*d*s24*s23*s12*s34^2-12*s14^2*s23^2*s34^2-4*s14^2*d*s23^3*s34+2*s14*d*s23*s12*s34^3+4*d*s13*s23^2*s12^2*s34-24*s14*s13*s23^2*s12*s34-8*s14*d*s13*s23^3*s12+4*d*s24*s23^2*s34^3+3*d*s24*s23*s12^2*s34^2-2*s14*d*s13^2*s23*s12^2+2*d*s23^2*s12^2*s34^2-16*s13^3*s23^2*s34+12*d*s24*s13^2*s23^2*s34-2*s14^2*d*s24*s13*s23*s12-2*s14*d*s24^2*s23*s34^2+6*d*s24*s13^3*s23*s12-8*s14*d*s24*s23^3*s34+2*s14*d*s13^4*s23+3*s14^2*d*s13^2*s23*s34-8*s14*d*s23^3*s34^2-12*s14^2*s24*s23^3-2*s14*d*s24^2*s13^2*s23-6*s14*d*s24^2*s23*s12*s34+2*d*s23^2*s34^4-6*s14*d*s24*s13*s23*s12^2-4*s14^2*s24^2*s23*s34+3*s14^2*d*s24^2*s23*s12-12*s14*s23^2*s34^3-12*s14*s23^2*s12*s34^2+s14^2*d*s23*s34^3-s14^2*d*s23*s12*s34^2-4*s24^2*s13^2*s23^2+3*d*s24*s23*s34^4+3*d*s24^2*s13^2*s23*s12-24*s14*s24*s13*s23^2*s34-4*s23^2*s34^4-4*s14^3*s13*s23^2-8*s14*d*s23^3*s12*s34+d*s13^2*s23*s12^3-8*s14*d*s24*s23^2*s34^2+4*d*s13^3*s23^2*s12-8*s14*d*s13*s23^2*s12^2-16*s13*s23^2*s34^3+4*d*s24*s23^2*s12*s34^2+3*d*s24^2*s23*s34^3+12*s14^2*d*s24*s23^2*s12+18*d*s24*s13^2*s23*s12*s34-8*s14^2*s23^4-4*s14^3*s23^2*s34-36*s14*s13^2*s23^2*s34-4*s14^2*d*s13*s23^2*s34+12*s14^2*d*s24*s23^3+3*d*s13^4*s23*s12+5*d*s13*s23*s34^4+3*d*s24^2*s13^3*s23-16*s14*d*s24*s23^2*s12*s34-2*s14*d*s24^3*s13*s23-s14^2*d*s13^2*s23*s12+6*s14*d*s13*s23*s12*s34^2-8*s14^2*s24*s23*s12*s34+s14^2*d*s23*s12^3+6*s14*d*s24*s13*s23*s34^2-s14^2*d*s24^2*s23*s34-12*s14^2*s24^2*s23*s12+6*d*s24*s13*s23*s12^2*s34+12*s14*d*s13^2*s23*s34^2-2*s14^2*d*s13*s23*s12*s34-16*s14*d*s13*s23^3*s34-12*s14*s24*s13^2*s23^2+9*d*s13^2*s23*s12^2*s34+8*d*s13*s23^2*s34^3-2*s14^2*d*s13^2*s23^2-2*s14^2*d*s24*s13*s23*s34+12*d*s24*s13^3*s23*s34+4*d*s24*s13^2*s23^2*s12-24*s24*s13*s23^2*s34^2+4*d*s24^2*s13*s23^2*s34-8*s13^3*s23^2*s12-4*s14^2*s23*s12^3-8*s14*d*s24*s13*s23^3+8*d*s24*s13*s23^2*s12*s34-24*s14^2*s24*s23^2*s12-4*s14^2*d*s24*s23^2*s34-6*s14*d*s24*s23*s12^2*s34+5*d*s13^4*s23*s34+16*s14*s23^3*s34^2+2*d*s24^2*s13^2*s23^2-24*s14^2*s13*s23^2*s34-4*s14^2*d*s13*s23^2*s12+12*s14^3*s23^2*s12-12*s14*s13^2*s23^2*s12-8*s24*s23^2*s34^3+s14^2*d*s13^3*s23+10*d*s13^2*s23*s34^3-12*s14^2*s13^2*s23^2+9*d*s24^2*s13^2*s23*s34-8*s14*d*s23^2*s12^2*s34+12*d*s13*s23*s12*s34^3+3*d*s24*s13^4*s23+2*s14*d*s23*s34^4+3*d*s24^2*s23*s12*s34^2+8*d*s13^3*s23^2*s34-4*s23^2*s12^2*s34^2-4*s14^2*d*s24*s13*s23^2+12*d*s24*s13*s23*s34^3-24*s13*s23^2*s12*s34^2+12*d*s13^2*s23^2*s12*s34)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(4*s14^2*d*s24*s23*s34-20*s14^2*s24*s23*s12+3*d*s24^2*s13^2*s34+16*s24*s13*s34^3-4*s14*s24^2*s23*s34-4*s14*d*s23*s34^3-2*s13*s12^4-2*s14^2*d*s24^2*s23+12*d*s24^3*s13*s12+3*d*s12^4*s34+8*s14*s12^3*s34+10*s14*s24^2*s34^2-2*s24^4*s13-20*s14*s13^2*s23*s12-2*s23^2*s12^3-2*s24^3*s23^2+4*s14^2*d*s13*s23*s12-4*s14^2*s13*s23*s34+3*d*s24^2*s13*s23^2-8*s14*d*s24*s23*s12*s34-2*d*s24*s13^3*s23+12*s14^2*s23^2*s34+8*d*s24^3*s23*s12+6*d*s24*s13*s23^2*s12-8*s14*s24*s13*s23*s12-4*s23*s12^4+20*s14*s24^2*s13*s34+12*s14^2*s13*s23^2+8*s24*s23*s34^3+3*d*s24^2*s23^2*s34-2*d*s13^4*s23-24*s14*d*s24*s23*s12^2+60*s24*s13^2*s12*s34-4*s23*s12^3*s34-2*s24^4*s34-8*d*s13^3*s23*s34+10*s14*s24^2*s13^2+6*s23^2*s12*s34^2-d*s13^2*s23^2*s12-12*s24*s23*s12^2*s34-12*s14*d*s13*s23*s34^2+9*d*s24^2*s12*s34^2-4*s13*s23*s12^3+30*s13*s12^2*s34^2+12*d*s24*s12^3*s34+6*s13^2*s12^3+8*s14*s24^3*s34+3*d*s24^4*s34-20*s14*s13*s23^2*s12+20*s14*s24*s12*s34^2+12*d*s24*s13*s12^3+18*s24^2*s13^2*s12-8*s14*d*s24*s23^3+3*d*s13^2*s12^3+12*s24^3*s13*s34+4*s14^2*d*s23^2*s34-d*s24*s13^2*s23^2+16*d*s24*s13*s23*s12*s34-20*s14*s24*s23^2*s34+2*d*s23*s12^4+16*s14*s23*s12^3+2*s13^4*s23-10*s14^2*s24^2*s23+10*s14*s12^2*s34^2+6*s23*s12^2*s34^2+3*d*s24^4*s13-20*s14*s24*s13*s23^2-4*s24^3*s23*s34+8*s14*s24^3*s13-6*d*s13^2*s23*s12*s34+d*s24^3*s23^2+d*s23^2*s12^3+24*s13*s23*s12*s34^2+36*s24*s13*s12^2*s34-6*s24^2*s23^2*s12+24*s13^2*s12*s34^2+8*d*s24*s23*s12^3+9*d*s24*s12^2*s34^2+12*s13*s12^3*s34-4*s24*s23^2*s12*s34+24*s24*s13*s23*s34^2-4*s14*d*s23*s12^2*s34+8*d*s24^2*s13*s23*s34+8*s13^3*s23*s12+8*d*s24*s13^2*s23*s12+8*s14*s13*s12^3-2*s12^4*s34+4*s14^2*d*s13*s23^2-8*d*s13*s23*s34^3+12*s14*s24*s13^2*s34+3*d*s13*s12^4+18*s13^2*s23^2*s34+16*s14^3*s23^2+2*s14*s13^2*s23^2-16*s24*s23*s12^3+3*d*s24^2*s23^2*s12+24*s14*s24^2*s13*s12+6*d*s13*s12^3*s34+18*s24*s12^2*s34^2-40*s14*s24*s13*s23*s34+4*d*s23*s12^2*s34^2+2*s23*s34^4-2*d*s24*s13*s23^2*s34+6*d*s24^3*s23*s34-16*s14^2*s23^3-9*d*s13^2*s23^2*s34-4*s14*d*s13*s23*s12^2+8*s13*s23*s34^3+6*d*s24*s13*s12*s34^2+8*d*s13*s23*s12^2*s34-10*s24^4*s12+36*s24^2*s13*s12*s34-2*d*s13^3*s23*s12-40*s14*s13*s23*s12*s34+6*d*s24^3*s13*s34-20*s14*s23*s12*s34^2-8*s14*d*s23*s12^3+d*s13^3*s12^2+6*s24*s13^2*s23^2+48*s14*s24^2*s23*s12-28*s14^2*s24*s23*s34-4*s14^2*d*s24*s23*s12+9*d*s24^2*s13^2*s12-8*s24*s13*s12^3-20*s14^2*s23^2*s12+12*s14*s24*s23^3-28*s14^2*s13*s23*s12-4*s14^2*d*s13*s23*s34+12*s14*s24^2*s12^2+6*s23^2*s34^3-2*s24^2*s23^2*s34-2*d*s24*s23*s34^3-12*s24^2*s23*s12*s34+8*d*s24*s23*s12*s34^2-16*s24^3*s23*s12-3*d*s23^2*s34^3-2*d*s13*s23^2*s12*s34+10*s13^3*s12^2+6*d*s13*s23*s12^3+20*s14*s24*s13^2*s12+6*s13^2*s23^2*s12-4*s14*d*s13^3*s23+18*s24^2*s12*s34^2-8*s24*s12^3*s34+3*d*s13*s12^2*s34^2+6*d*s23*s12^3*s34-6*d*s24*s13^2*s23*s34-d*s23^2*s12*s34^2-12*s24*s13*s23*s12^2+18*d*s24^2*s13*s23*s12+8*s13^3*s23*s34-4*s14*d*s24^2*s13*s23-8*s24^3*s13*s12+4*s14^2*d*s23^2*s12+4*s14*s13*s23^2*s34+30*s24^2*s13^2*s34+8*s14*s24^3*s12+5*d*s24^4*s12-2*s24^2*s13*s23^2+8*s24*s13^3*s23+52*s14*s24*s23^2*s12-2*d*s23*s34^4+12*s14*s13*s12*s34^2-2*s14^2*s13^2*s23+18*s13*s23^2*s34^2+4*d*s24^2*s23*s34^2+6*s24^3*s13^2-32*s14*d*s24*s23^2*s12-4*s24^4*s23-12*s24^2*s13*s23*s12+18*d*s24*s13*s23*s12^2+24*s24*s13^2*s23*s34+20*s24*s12*s34^3+12*s24*s23*s12*s34^2+4*d*s13^2*s23*s12^2+18*d*s24^2*s12^2*s34+18*d*s24^2*s23*s12*s34+10*d*s24^2*s12^3+8*s14*d*s13*s23^3-6*s24*s23^2*s12^2-2*s24^5+12*s13*s23^2*s12*s34-4*s14*s24^2*s13*s23+3*d*s12^3*s34^2-2*s23^2*s12^2*s34+4*s14^2*d*s24*s13*s23-2*d*s23*s12*s34^3+2*s14*s24^4+5*d*s24*s12^4+4*s14^2*d*s24*s23^2+6*s24^3*s34^2+26*s14*s24^2*s23^2+8*s14*s24*s12^3+3*d*s24^2*s13*s34^2-20*s14*s23^3*s34+4*d*s24^2*s13^2*s23-16*s14*d*s23^2*s12^2-2*s14^2*s23*s34^2+18*s24*s13^2*s12^2+2*s14*s12^4+24*s14*s24^2*s12*s34-3*d*s13^3*s23^2-2*s12^5-24*s24^2*s23*s12^2+30*s13^2*s12^2*s34-12*s14*d*s13^2*s23*s34+3*d*s13*s23^2*s12^2+18*d*s24^2*s13*s12*s34+60*s24*s13*s12*s34^2+12*s13*s23*s12^2*s34+6*s13^3*s23^2-20*s14*s24*s13^2*s23-24*s14*d*s24^2*s23*s12-d*s24*s23^2*s34^2+12*s13^2*s23*s34^2+3*d*s24^3*s34^2-10*s24*s12^4-2*s14^2*d*s13^2*s23+12*s14*s24*s13*s34^2-8*s24^3*s12*s34+12*s24*s13*s23^2*s34-20*s24^2*s12^3-2*s14^2*d*s23*s34^2+2*s14*s23^2*s34^2-8*s14*d*s23^3*s12+20*s24*s13^3*s12-12*s24^2*s13*s12^2-4*s14*s13*s23*s12^2+6*s12^3*s34^2+24*s14*s24*s12^2*s34+3*d*s24^3*s13^2+16*s14*s24^3*s23+2*d*s24^4*s23-28*s14^2*s23*s12*s34-20*s14^2*s24*s23^2-4*s24^3*s13*s23-20*s14*s24*s23*s34^2+12*s14*s13^2*s12*s34+2*d*s24*s13^3*s12+10*s12^2*s34^3+18*d*s24^2*s13*s12^2+4*s14*s24*s34^3-4*s14*s23*s12^2*s34-20*s24^3*s12^2-8*s14*d*s24^3*s23+6*d*s24^3*s13*s23+24*s24*s13^2*s34^2-10*s14^2*s23*s12^2+d*s24^2*s13^3+12*s14*s23^3*s12+4*s14*s24*s13^3+12*s24*s13^2*s23*s12+12*s24^2*s13*s23*s34-6*d*s24*s13*s23*s34^2+12*d*s24^2*s23*s12^2+3*d*s13^2*s12^2*s34+16*s13*s12*s34^3-2*s13*s23^2*s12^2-28*s14^2*s24*s13*s23+4*s14*s13^3*s12+12*d*s24^3*s12*s34-6*d*s13*s23*s12*s34^2+18*d*s24*s13*s12^2*s34+24*s13^2*s23*s12*s34+40*s14*s24*s13*s12*s34+4*s12*s34^4+6*d*s24*s23^2*s12*s34+d*s24^2*s34^3+8*s14^2*d*s23^3+6*s24*s23^2*s34^2-12*d*s13^2*s23*s34^2+30*s24^2*s13*s34^2+16*s24*s13^3*s34+d*s24^5+4*s13^4*s12+4*s14*s12*s34^3+10*s24^2*s34^3-2*s14^2*d*s23*s12^2+26*s14*s23^2*s12^2+8*s14*d*s23^3*s34+9*d*s24*s13^2*s12^2-8*s14*d*s24*s13*s23*s12+48*s14*s24*s23*s12^2+20*s14*s13*s12^2*s34+4*s14^2*d*s23*s12*s34+6*s24^2*s13^2*s23+4*s24*s13^4-16*s14*d*s24^2*s23^2-20*s14*s23^2*s12*s34+10*s14*s13^2*s12^2+16*s13^3*s12*s34+d*s12^5+6*d*s24*s13^2*s12*s34-20*s14*s13*s23^3+10*s24^2*s13^3-8*s14*s24*s23*s12*s34-9*d*s13*s23^2*s34^2+18*d*s24*s23*s12^2*s34+6*s24^2*s23*s34^2+8*s23*s12*s34^3+d*s12^2*s34^3-4*s24*s13*s23^2*s12+3*d*s23^2*s12^2*s34+10*d*s24^3*s12^2+6*s13^2*s23*s12^2+4*s24*s34^4-12*s24^2*s12^2*s34+24*s24*s13*s23*s12*s34+2*d*s24*s12*s34^3+24*s14*s24*s13*s12^2-4*s14*d*s24^2*s23*s34+3*d*s24*s23^2*s12^2))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (-Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(2*s14^2*d*s24*s23*s34+6*s14^2*s24*s23*s12-12*s24*s13*s34^3+2*s14*s24^2*s23*s34-2*s14*d*s23*s34^3-s14^2*d*s24^2*s23-s14*s24^2*s34^2+12*s14*s13^2*s23*s12+2*s14^2*d*s13*s23*s12+14*s14^2*s13*s23*s34+4*s14*d*s24*s23*s12*s34-2*d*s24*s13^3*s23-20*s14^2*s23^2*s34+4*s14*s24*s13*s23*s12+4*s14*d*s23^2*s12*s34-2*s14*s24^2*s13*s34-20*s14^2*s13*s23^2+4*s24*s23*s34^3-d*s13^4*s23+10*s14*s13^3*s23-18*s24*s13^2*s12*s34-4*d*s13^3*s23*s34-s14*s24^2*s13^2-6*s14*d*s13*s23*s34^2-9*s13*s12^2*s34^2-s13^2*s12^3-4*s14*s13*s23^2*s12-2*s14*s24*s12*s34^2-3*s24^2*s13^2*s12-2*s24^3*s13*s34+4*s14^2*d*s23^2*s34-4*d*s24*s13*s23*s12*s34-4*s14*s24*s23^2*s34+2*s13^4*s23+3*s14^2*s24^2*s23-s14*s12^2*s34^2+2*s23*s12^2*s34^2-4*s14*s24*s13*s23^2-6*d*s13^2*s23*s12*s34+12*s13*s23*s12*s34^2-6*s24*s13*s12^2*s34-18*s13^2*s12*s34^2-2*s13*s12^3*s34+12*s24*s13*s23*s34^2+2*s14*d*s23*s12^2*s34-2*d*s24^2*s13*s23*s34+4*s13^3*s23*s12-2*d*s24*s13^2*s23*s12+4*s14^2*d*s13*s23^2-4*d*s13*s23*s34^3-10*s13^3*s34^2-6*s14*s24*s13^2*s34-8*s14^3*s23^2-8*s14*s13^2*s23^2+4*s14*d*s13^2*s23^2-3*s24*s12^2*s34^2+24*s14*s24*s13*s23*s34-d*s23*s12^2*s34^2+2*s23*s34^4-10*s13^2*s34^3+4*s14^2*s23^3+2*s14*d*s13*s23*s12^2+8*s13*s23*s34^3-2*d*s13*s23*s12^2*s34-6*s24^2*s13*s12*s34-2*d*s13^3*s23*s12+24*s14*s13*s23*s12*s34+12*s14*s23*s12*s34^2-5*s13*s34^4+2*s14^2*s24*s23*s34-2*s14^2*d*s24*s23*s12+4*s14^2*s23^2*s12+2*s14^2*s13*s23*s12-2*s14^2*d*s13*s23*s34+30*s14*s13^2*s23*s34-2*d*s24*s23*s34^3-2*d*s24*s23*s12*s34^2-3*s13^3*s12^2-2*s14*s24*s13^2*s12-2*s14*d*s13^3*s23-3*s24^2*s12*s34^2-4*s14*s13*s34^3-6*d*s24*s13^2*s23*s34+8*s13^3*s23*s34+2*s14*d*s24^2*s13*s23-4*s14^2*d*s23^2*s12-16*s14*s13*s23^2*s34-9*s24^2*s13^2*s34+10*s14*s23*s34^3+4*s24*s13^3*s23-d*s23*s34^4-6*s14*s13*s12*s34^2+7*s14^2*s13^2*s23-d*s24^2*s23*s34^2-s24^3*s13^2+12*s24*s13^2*s23*s34-6*s24*s12*s34^3+4*s24*s23*s12*s34^2-d*s13^2*s23*s12^2+8*s14*d*s13*s23^2*s34+2*s14*s24^2*s13*s23-4*s14*s13^3*s34+2*s14^2*d*s24*s13*s23-2*d*s23*s12*s34^3-4*s14^2*d*s24*s23^2-s24^3*s34^2-d*s24^2*s13^2*s23+7*s14^2*s23*s34^2-3*s24*s13^2*s12^2-9*s13^2*s12^2*s34-6*s14*d*s13^2*s23*s34-18*s24*s13*s12*s34^2+4*s13*s23*s12^2*s34-6*s14*s13^2*s34^2+12*s14*s24*s13^2*s23+12*s13^2*s23*s34^2-s14^2*d*s13^2*s23-6*s14*s24*s13*s34^2-s14^2*d*s23*s34^2-8*s14*s23^2*s34^2-6*s24*s13^3*s12-5*s13^4*s34+2*s14*s13*s23*s12^2-s12^3*s34^2+2*s14^2*s23*s12*s34+4*s14^2*s24*s23^2+12*s14*s24*s23*s34^2-6*s14*s13^2*s12*s34-3*s12^2*s34^3-2*s14*s24*s34^3+2*s14*s23*s12^2*s34-s34^5-18*s24*s13^2*s34^2-s14*s34^4+3*s14^2*s23*s12^2+4*s14*d*s24*s13*s23^2+4*s14*d*s23^2*s34^2-2*s14*s24*s13^3+4*s24*s13^2*s23*s12+4*s24^2*s13*s23*s34-6*d*s24*s13*s23*s34^2+4*s14*d*s24*s23^2*s34-12*s13*s12*s34^3-s14*s13^4+2*s14^2*s24*s13*s23-2*s14*s13^3*s12-6*d*s13*s23*s12*s34^2+12*s13^2*s23*s12*s34-4*s14*s24*s13*s12*s34-3*s12*s34^4-s13^5-4*s14^2*d*s23^3-6*d*s13^2*s23*s34^2+4*s14*d*s13*s23^2*s12-9*s24^2*s13*s34^2+30*s14*s13*s23*s34^2-12*s24*s13^3*s34-3*s13^4*s12-2*s14*s12*s34^3-3*s24^2*s34^3-s14^2*d*s23*s12^2+4*s14*d*s24*s13*s23*s12-2*s14*s13*s12^2*s34+2*s14^2*d*s23*s12*s34+2*s24^2*s13^2*s23-3*s24*s13^4-4*s14*s23^2*s12*s34-s14*s13^2*s12^2-12*s13^3*s12*s34-3*s24^2*s13^3+4*s14*s24*s23*s12*s34+2*s24^2*s23*s34^2+4*s23*s12*s34^3+2*s13^2*s23*s12^2-3*s24*s34^4+8*s24*s13*s23*s12*s34+2*s14*d*s24^2*s23*s34))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (-1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(4*s14*s24^2*s23*s34-s14*d*s23*s34^3-2*s23^2*s12^3-2*s24^3*s23^2+3*d*s24^2*s13*s23^2+2*s14*d*s24*s23*s12*s34+4*s14^2*s23^2*s34+4*d*s24^3*s23*s12+6*d*s24*s13*s23^2*s12+8*s14*s24*s13*s23*s12-4*s14*d*s23^2*s12*s34-2*s23*s12^4+4*s14^2*s13*s23^2+3*d*s24^2*s23^2*s34-d*s13^4*s23-3*s14*d*s24*s23*s12^2-4*s23*s12^3*s34-4*d*s13^3*s23*s34+6*s23^2*s12*s34^2-d*s13^2*s23^2*s12-12*s24*s23*s12^2*s34-3*s14*d*s13*s23*s34^2-4*s13*s23*s12^3+4*s14*s13*s23^2*s12-8*s14*d*s24*s23^3-d*s24*s13^2*s23^2+16*d*s24*s13*s23*s12*s34+4*s14*s24*s23^2*s34+d*s23*s12^4+4*s14*s23*s12^3-2*s23*s12^2*s34^2+4*s14*s24*s13*s23^2-4*s24^3*s23*s34+d*s24^3*s23^2+d*s23^2*s12^3-6*s24^2*s23^2*s12+4*d*s24*s23*s12^3-4*s24*s23^2*s12*s34+s14*d*s23*s12^2*s34+8*d*s24^2*s13*s23*s34+8*d*s24*s13^2*s23*s12-4*d*s13*s23*s34^3+18*s13^2*s23^2*s34+10*s14*s13^2*s23^2-8*s24*s23*s12^3-2*s14*d*s13^2*s23^2+3*d*s24^2*s23^2*s12+s14*d*s24*s23*s34^2+4*d*s23*s12^2*s34^2-2*d*s24*s13*s23^2*s34+4*d*s24^3*s23*s34-24*s14^2*s23^3-9*d*s13^2*s23^2*s34+s14*d*s13*s23*s12^2+8*d*s13*s23*s12^2*s34-s14*d*s23*s12^3+6*s24*s13^2*s23^2+12*s14*s24^2*s23*s12-12*s14^2*s23^2*s12+s14*d*s24*s13^2*s23+12*s14*s24*s23^3+6*s23^2*s34^3-2*s24^2*s23^2*s34-12*s24^2*s23*s12*s34+8*d*s24*s23*s12*s34^2-8*s24^3*s23*s12-3*d*s23^2*s34^3-2*d*s13*s23^2*s12*s34+4*d*s13*s23*s12^3+6*s13^2*s23^2*s12-s14*d*s13^3*s23+4*d*s23*s12^3*s34-d*s23^2*s12*s34^2-12*s24*s13*s23*s12^2+12*d*s24^2*s13*s23*s12+s14*d*s24^2*s13*s23+20*s14*s13*s23^2*s34-2*s24^2*s13*s23^2+36*s14*s24*s23^2*s12-d*s23*s34^4+18*s13*s23^2*s34^2+4*d*s24^2*s23*s34^2-20*s14*d*s24*s23^2*s12-2*s24^4*s23-12*s24^2*s13*s23*s12+12*d*s24*s13*s23*s12^2-4*s24*s23*s12*s34^2+4*d*s13^2*s23*s12^2+12*d*s24^2*s23*s12*s34-4*s14*d*s13*s23^2*s34+8*s14*d*s13*s23^3-6*s24*s23^2*s12^2+12*s13*s23^2*s12*s34+4*s14*s24^2*s13*s23-2*s23^2*s12^2*s34+18*s14*s24^2*s23^2-20*s14*s23^3*s34+4*d*s24^2*s13^2*s23-10*s14*d*s23^2*s12^2-3*d*s13^3*s23^2-12*s24^2*s23*s12^2-3*s14*d*s13^2*s23*s34+3*d*s13*s23^2*s12^2-4*s13*s23*s12^2*s34+6*s13^3*s23^2-3*s14*d*s24^2*s23*s12-d*s24*s23^2*s34^2+12*s24*s13*s23^2*s34+s14*d*s23*s12*s34^2+10*s14*s23^2*s34^2-8*s14*d*s23^3*s12+2*s14*d*s13*s23*s12*s34+4*s14*s13*s23*s12^2+4*s14*s24^3*s23+d*s24^4*s23-12*s14^2*s24*s23^2-4*s24^3*s13*s23+2*s14*d*s24*s13*s23*s34+4*s14*s23*s12^2*s34-s14*d*s24^3*s23+4*d*s24^3*s13*s23-4*s14*d*s24*s13*s23^2+12*s14*s23^3*s12-2*s14*d*s23^2*s34^2-4*s24*s13^2*s23*s12-4*s24^2*s13*s23*s34+6*d*s24^2*s23*s12^2-4*s14*d*s24*s23^2*s34-2*s13*s23^2*s12^2+6*d*s24*s23^2*s12*s34+8*s14^2*d*s23^3+6*s24*s23^2*s34^2-6*d*s13^2*s23*s34^2-4*s14*d*s13*s23^2*s12+18*s14*s23^2*s12^2+8*s14*d*s23^3*s34+2*s14*d*s24*s13*s23*s12+12*s14*s24*s23*s12^2-2*s24^2*s13^2*s23-10*s14*d*s24^2*s23^2+4*s14*s23^2*s12*s34-20*s14*s13*s23^3+s14*d*s13^2*s23*s12+8*s14*s24*s23*s12*s34-9*d*s13*s23^2*s34^2+12*d*s24*s23*s12^2*s34-2*s24^2*s23*s34^2-4*s24*s13*s23^2*s12+3*d*s23^2*s12^2*s34-2*s13^2*s23*s12^2-8*s24*s13*s23*s12*s34+s14*d*s24^2*s23*s34+3*d*s24*s23^2*s12^2));

id INT(pentagon1x123,3,21,4,2,[],2,-1,1,-1,1) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(8*s14^2*d*s23^2*s12^2-5*s14*d*s24*s13^3*s23-s14^2*d*s12*s34^3-4*s14^2*s23^3*s12+2*s14*d*s24^2*s13*s23^2-8*s14^2*s24^2*s12*s34-4*s14*s13*s23^2*s34^2-s14*d*s24^3*s13*s12-4*s14*d*s13^4*s34+5*s14^2*d*s23*s12^2*s34-3*s14*d*s12^3*s34^2+12*s14^3*s24*s23^2-5*s14^2*d*s13^2*s12*s34-6*s14*d*s24^2*s13^2*s34-3*s14*d*s24*s12^3*s34+24*s14^3*s23^3-4*s14*d*s13^2*s23^2*s12+4*s14^2*d*s13*s23^3-3*s14*d*s24^2*s12*s34^2+2*s14^2*s13^3*s12-16*s14^2*s24^2*s13*s23-12*s14*d*s24*s13*s23*s12*s34-8*s14*d*s13^3*s23*s34+48*s14*s24*s13^2*s12*s34+2*s14*d*s24^2*s23^2*s34-2*s14*d*s13^3*s23^2+24*s14*s24*s13^2*s12^2+2*s14^2*s24*s13^3-8*s14^3*d*s23^2*s12-44*s14^2*s24*s13*s23*s12+4*s14^2*d*s23^2*s12*s34+8*s14*s13^4*s12+9*s14^2*d*s24*s23*s12^2-10*s14*d*s24*s13^2*s23*s12-s14^2*d*s13*s12^2*s34+24*s14*s13^2*s12^2*s34+2*s14*d*s24^2*s13*s23*s34+4*s14^2*d*s23^3*s12-12*s14^2*s23^2*s12^2+8*s14*s24*s13^4+18*s14*s13^2*s23*s34^2-3*s14*d*s24*s13*s12^3-19*s14*d*s13^2*s23*s12*s34-28*s14^2*s13*s23*s12^2+7*s14^2*d*s13*s23*s34^2-16*s14^2*s24*s12^2*s34+12*s14^3*s13*s23*s12+12*s14*s24^2*s13*s12^2+5*s14^2*d*s24*s13*s12^2+2*s14^2*s24*s13*s34^2+24*s14*s24*s13^3*s12-4*s14^3*s13^2*s23-s14^2*d*s24*s13^3+18*s14*s24*s13*s23*s34^2+12*s14*s24^2*s13^3-12*s14^2*s13*s23^3-6*s14*d*s24*s12^2*s34^2-4*s14*s24*s23^2*s12*s34+6*s14*s24^3*s13*s23+4*s14^3*s24*s23*s34-6*s14^2*s13^2*s12^2+24*s14*s24*s13*s12^2*s34+18*s14*s13*s23*s12*s34^2+2*s14^2*s13^4-20*s14^2*s24*s13^2*s23-s14*d*s24^3*s13^2-2*s14^2*d*s13^3*s12-3*s14^2*d*s13^2*s34^2+8*s14*s24^3*s13^2+6*s14^2*s13^3*s34+7*s14^2*d*s24^2*s13*s23-9*s14*d*s13^3*s23*s12+24*s14*s24^2*s13*s12*s34-2*s14*d*s13^2*s23^2*s34+s14*d*s24^3*s23*s34-3*s14*d*s24^2*s13^3-5*s14*d*s23*s12^2*s34^2-7*s14*d*s13*s12^3*s34+24*s14*s24*s13^2*s34^2-15*s14*d*s13^2*s12*s34^2+4*s14*s13*s23^2*s12^2+s14^2*d*s24^2*s12*s34+8*s14*s13*s12*s34^3-14*s14*d*s13*s23*s12^2*s34-15*s14*d*s24*s13*s12*s34^2-3*s14*d*s24*s13^4+12*s14^2*s23^3*s34+4*s14^2*d*s23^2*s34^2+4*s14^2*s13^2*s12*s34-12*s14^2*s24*s12^3+4*s14*d*s24*s13*s23^2*s34-6*s14*d*s24^2*s13^2*s12-8*s14*s24*s23^2*s34^2-12*s14^2*s23*s12^2*s34-s14^2*d*s24^3*s23-s14*d*s24^3*s13*s34-4*s14*d*s13^4*s12+18*s14*s24*s13*s23*s12^2-3*s14*d*s23*s12^3*s34-12*s14*d*s13*s12^2*s34^2-22*s14^2*s24*s13*s12^2+4*s14*s13^3*s23^2-s14^2*d*s24*s13*s34^2+24*s14*s24*s13^3*s34-s14*d*s12*s34^4-4*s14^3*s13*s23*s34+12*s14*s24^2*s13*s34^2-3*s14*d*s13*s23*s12^3-2*s14^3*d*s24^2*s23+9*s14^2*d*s24*s13^2*s23-3*s14^2*d*s13^3*s34-8*s14^3*d*s23^3+6*s14^2*s13^2*s34^2+18*s14*s24^2*s13^2*s23+6*s14^2*d*s24*s23*s12*s34+3*s14*d*s24*s23*s34^3+20*s14^3*s24*s23*s12-s14*d*s24^2*s13*s23*s12+3*s14^2*d*s24*s12^3+5*s14^2*d*s24*s23*s34^2-24*s14^2*s24*s23*s12^2-7*s14*d*s24*s13^2*s23*s34-10*s14^2*s13*s12^2*s34+24*s14*s13^3*s12*s34-4*s14^2*d*s24^2*s23^2-s14*d*s13^5-20*s14^2*s24*s13*s23*s34+8*s14*s13^4*s34-4*s14*d*s13*s23^2*s12*s34+11*s14^2*d*s13*s23*s12^2-4*s14^2*s13*s23*s34^2+2*s14^2*d*s24*s12^2*s34-4*s14^2*s12^4+16*s14^3*s23*s12^2-3*s14*d*s24*s13*s34^3+18*s14*s13^2*s23*s12^2-3*s14*d*s12^2*s34^3-20*s14^2*s13*s23*s12*s34-2*s14*d*s24*s23*s12*s34^2-12*s14^2*s23^2*s34^2-4*s14^2*d*s23^3*s34-s14*d*s23*s12*s34^3-s14*d*s12^4*s34+4*s14*s13*s23^2*s12*s34-6*s14*d*s13^3*s34^2+8*s14*s24*s13*s34^3-9*s14*d*s13^2*s23*s12^2-3*s14*d*s24^2*s12^2*s34+4*s14^3*d*s13*s23*s34+36*s14*s24*s13^2*s23*s34-s14^2*d*s13*s34^3+18*s14*s24^2*s13*s23*s12-13*s14*d*s13^3*s12*s34-2*s14^3*d*s23*s12^2+8*s14*s13^2*s34^3+18*s14^2*d*s24*s13*s23*s12+4*s14^2*d*s24^2*s13*s12+3*s14*d*s24^2*s23*s34^2-2*s14^2*s24^2*s13*s34-4*s14^3*d*s24*s23*s12-3*s14*d*s13^4*s23-20*s14^2*s13^2*s23*s12+2*s14*s13*s34^4+5*s14^2*d*s13^2*s23*s34+s14^2*d*s24^3*s12-12*s14^2*s24^2*s12^2+4*s14^2*s24*s23^3-s14*d*s24^2*s13^2*s23-s14*d*s24^2*s23*s12*s34+4*s14^3*s24^2*s23-9*s14*d*s24*s13^3*s34+12*s14*s13*s12^2*s34^2-5*s14*d*s24*s13*s23*s12^2-3*s14*d*s24^2*s13*s34^2+6*s14*s13*s23*s12^3+3*s14^2*d*s24^2*s23*s12-4*s14*s23^2*s34^3-4*s14*s23^2*s12*s34^2+3*s14^2*d*s23*s34^3+3*s14^2*d*s23*s12*s34^2+2*s14^2*s13*s34^3-4*s14*s24*s13*s23^2*s34+8*s14*s24^3*s13*s34-4*s14^3*s13*s23^2-4*s14*d*s13^2*s12^3+24*s14*s24^2*s13^2*s12+4*s14^2*s24*s13^2*s34+4*s14*d*s24*s23^2*s34^2+s14^2*d*s24*s13^2*s12+18*s14*s13*s23*s12^2*s34+24*s14*s24*s13*s12*s34^2+12*s14*s13^3*s12^2-48*s14^2*s24*s13*s23^2-s14^2*d*s13^4-2*s14*d*s13*s23^2*s12^2-7*s14*d*s13*s12*s34^3+4*s14^2*d*s24*s23^2*s12-12*s14^2*s24*s23^2*s34-9*s14*d*s24*s13^2*s34^2-4*s14^2*d*s13*s12*s34^2+8*s14*s13*s12^3*s34+24*s14*s13^2*s12*s34^2+8*s14^3*s24*s13*s23-12*s14^3*s23^2*s34-9*s14*d*s24^2*s13*s12*s34+4*s14*s13^2*s23^2*s34-s14*d*s13*s12^4+3*s14^2*d*s24^2*s12^2-4*s14^2*s24^3*s12+12*s14^2*d*s13*s23^2*s34-36*s14^2*s13*s23^2*s12-4*s14^2*s24*s12*s34^2-4*s14^2*d*s24*s23^3+18*s14*s13^3*s23*s12-8*s14^4*s23^2+s14*d*s24^3*s13*s23+2*s14^3*d*s13^2*s23+2*s14*s13*s12^4-15*s14*d*s24*s13*s12^2*s34+7*s14^2*d*s13^2*s23*s12-11*s14*d*s13*s23*s12*s34^2-12*s14^2*s24*s23*s12*s34-8*s14^2*s13^2*s23*s34-s14^2*d*s12^2*s34^2+2*s14*s13^5-8*s14^2*s12^3*s34+5*s14^2*d*s23*s12^3+2*s14*s24^4*s13+s14*d*s24*s13*s23*s34^2+s14^2*d*s24^2*s23*s34+6*s14*s13*s23*s34^3-12*s14^2*s24^2*s23*s12-3*s14*d*s24^2*s13*s12^2-9*s14*d*s24*s13^3*s12-6*s14*d*s13^2*s23*s34^2+8*s14*s24*s13*s12^3+10*s14^2*d*s13*s23*s12*s34+4*s14*s24*s13^2*s23^2-6*s14*d*s13^3*s12^2+s14^2*d*s24^3*s13-2*s14^2*s24^2*s13^2-s14*d*s24^3*s12*s34+36*s14*s13^2*s23*s12*s34+8*s14^3*s23*s12*s34+8*s14^2*d*s13^2*s23^2+14*s14^2*d*s24*s13*s23*s34-14*s14^2*s24^2*s13*s12-4*s14^2*s13^3*s23+s14^2*d*s24^2*s13*s34-15*s14*d*s13^2*s12^2*s34+2*s14^2*d*s13*s12^3+8*s14*s13^2*s12^3+2*s14^3*d*s23*s34^2+18*s14*s24^2*s13*s23*s34+36*s14*s24*s13^2*s23*s12-12*s14^2*s23*s12^3+s14^2*d*s12^3*s34+2*s14*d*s23^2*s34^3-4*s14^2*s12^2*s34^2+36*s14*s24*s13*s23*s12*s34-4*s14*s24^2*s23^2*s34-9*s14*d*s24*s13^2*s12^2-12*s14^2*s24*s23^2*s12+2*s14^2*s13*s12*s34^2-5*s14*d*s24*s23*s12^2*s34-12*s14^2*s24*s13*s12*s34+18*s14*s13^3*s23*s34-36*s14^2*s13*s23^2*s34+16*s14^2*d*s13*s23^2*s12-21*s14*d*s24*s13^2*s12*s34-s14^2*d*s24*s12*s34^2+36*s14^3*s23^2*s12+6*s14*s13^4*s23+8*s14*s13^2*s23^2*s12-s14*d*s13*s34^4+s14^2*d*s12^4+s14^2*d*s13^3*s23-2*s14^2*d*s24*s13^2*s34-8*s14^2*s24*s13^2*s12+24*s14*s24^2*s13^2*s34-3*s14*d*s24*s12*s34^3-24*s14^2*s13^2*s23^2-2*s14*d*s23^2*s12^2*s34+4*s14*s24*s13*s23^2*s12+8*s14*s24^3*s13*s12-4*s14*d*s13^2*s34^3-10*s14^2*s13*s12^3+s14*d*s23*s34^4+2*s14*d*s13*s23^2*s34^2+18*s14*s24*s13^3*s23+s14^2*d*s24^2*s13^2-8*s14^3*d*s24*s23^2+12*s14*s13^3*s34^2+12*s14^2*d*s24*s13*s23^2-2*s14^2*s24^3*s13))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (-1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*(4*s14^2*d*s24*s23*s34-8*s14^2*s24*s23*s12-5*s14*d*s24*s13*s12^2-6*d*s24^2*s13^2*s34-22*s24*s13*s34^3-4*s14*s24^2*s23*s34-3*s14*d*s23*s34^3-2*s14^2*s12*s34^2+10*s14^2*d*s24^2*s23-9*d*s24^3*s13*s12-d*s12^4*s34+8*s14*s12^3*s34-6*s14*s24^2*s34^2-20*s14^3*s23*s12-4*s14*d*s24^3*s12+2*s24^4*s13-12*s14*s13^2*s23*s12-4*s14^2*d*s13*s23*s12+40*s14^2*s13*s23*s34+22*s14*d*s24*s23*s12*s34-d*s24*s13^3*s23-20*s14^2*s23^2*s34-3*d*s24^3*s23*s12+4*s14*s24*s13*s23*s12+12*s14*d*s23^2*s12*s34-2*s14^2*d*s12^3+2*s14*d*s13*s34^3-24*s14*s24^2*s13*s34+12*s14^2*s13*s23^2+8*s24*s23*s34^3+4*s14*d*s13*s12^2*s34-6*s14*s13^3*s23+8*s14^2*s24*s13*s12+5*s14*d*s24*s23*s12^2-18*s24*s13^2*s12*s34-10*s14^2*s13^2*s34+4*s23*s12^3*s34+6*s24^4*s34-d*s13^3*s23*s34-18*s14*s24^2*s13^2+16*s24*s23*s12^2*s34-s14*d*s13*s23*s34^2-15*d*s24^2*s12*s34^2+12*s13*s12^2*s34^2-7*d*s24*s12^3*s34+2*s14*s24^3*s34-6*s14*d*s24^2*s12^2-4*d*s24^4*s34-4*s14^3*d*s13*s23-8*s14*s13*s23^2*s12-3*d*s24*s13*s12^3-4*s14^2*s24*s34^2-12*s24^2*s13^2*s12-s14*d*s12^4-2*s24^3*s13*s34-12*d*s24*s13*s23*s12*s34-24*s14*s24*s23^2*s34+2*s14^2*d*s12*s34^2-10*s14^2*s24^2*s23+6*s14*s12^2*s34^2-s14*d*s24^4-4*s14^2*s24*s13^2+10*s23*s12^2*s34^2-3*d*s24^4*s13+4*s14^2*d*s13^2*s34-4*s14*s24*s13*s23^2+8*s24^3*s23*s34-4*s14*s24^3*s13-3*d*s13^2*s23*s12*s34+16*s13*s23*s12*s34^2+18*s24*s13*s12^2*s34-6*s13^2*s12*s34^2-d*s24*s23*s12^3-12*d*s24*s12^2*s34^2+10*s13*s12^3*s34+16*s24*s13*s23*s34^2+11*s14*d*s23*s12^2*s34-9*d*s24^2*s13*s23*s34-3*d*s24*s13^2*s23*s12+2*s14*s13*s12^3+11*s14*d*s13^2*s12*s34+4*s12^4*s34-8*s14^2*d*s13*s23^2-3*d*s13*s23*s34^3-8*s13^3*s34^2-42*s14*s24*s13^2*s34-16*s14^3*s23^2-6*s14*s13^2*s23^2+2*s24*s23*s12^3+4*s14*d*s13^2*s23^2-4*s14^2*d*s24*s13*s12-3*d*s13^2*s12*s34^2+s14*d*s24*s23*s34^2-8*s14^2*s24*s13*s34-6*s14*s24^2*s13*s12-3*d*s13*s12^3*s34+24*s24*s12^2*s34^2+36*s14*s24*s13*s23*s34-3*d*s23*s12^2*s34^2-s14*d*s13*s12^3+2*s23*s34^4-4*d*s24^3*s23*s34-12*s13^2*s34^3+16*s14^2*s23^3-5*s14*d*s24*s12^2*s34+3*s14*d*s13*s23*s12^2+6*s13*s23*s34^3-15*d*s24*s13*s12*s34^2-3*s14*d*s24^3*s13-3*d*s13*s23*s12^2*s34+8*s24^4*s12+6*s24^2*s13*s12*s34-2*s14^2*s13^2*s12-16*s14*s13*s23*s12*s34-9*d*s24^3*s13*s34-4*s14*s23*s12*s34^2+s14*d*s12^2*s34^2-8*s13*s34^4-s14*d*s23*s12^3-20*s14*s24^2*s23*s12+s14*d*s24*s13*s34^2+16*s14^2*s24*s23*s34+8*s14^2*d*s24*s23*s12-6*d*s24^2*s13^2*s12+2*s14^2*d*s13^3+2*s24*s13*s12^3+12*s14^2*s23^2*s12+s14*d*s24*s13^2*s23+16*s14^2*s13*s23*s12-8*s14^2*d*s13*s23*s34+12*s14^3*s23*s34+12*s14*s24^2*s12^2+4*s14*s13^2*s23*s34-3*s14*d*s24^3*s34-4*s14^2*d*s24*s12^2-7*s14*d*s24^2*s12*s34-4*d*s24*s23*s34^3+20*s24^2*s23*s12*s34-9*d*s24*s23*s12*s34^2+2*s14^2*d*s13^2*s12-s14*d*s24^2*s13^2+6*s24^3*s23*s12+2*s14*d*s13^4-24*s14*s24*s13^2*s12+5*s14*d*s13^3*s23+18*s24^2*s12*s34^2+18*s24*s12^3*s34-6*d*s13*s12^2*s34^2-d*s23*s12^3*s34-16*s14*s13*s34^3-6*d*s24*s13^2*s23*s34+4*s24*s13*s23*s12^2-6*d*s24^2*s13*s23*s12+2*s13^3*s23*s34+3*s14*d*s24^2*s13*s23+6*s24^3*s13*s12-8*s14^2*d*s23^2*s12-16*s14*s13*s23^2*s34+12*s14^2*s24*s12^2-3*d*s24*s13*s34^3-24*s24^2*s13^2*s34+8*s14*s24^3*s12-4*d*s24^4*s12-3*s14*d*s24^2*s34^2-s14*d*s12^3*s34+16*s14*s23*s34^3-4*s14^3*s24*s23-16*s14*s24*s23^2*s12-d*s23*s34^4-18*s14*s13*s12*s34^2+14*s14^2*s13^2*s23-6*d*s24^2*s23*s34^2-6*s24^3*s13^2+7*s14*d*s13*s12*s34^2+8*s14*d*s24*s23^2*s12+2*s24^4*s23-d*s13^3*s12*s34+8*s24^2*s13*s23*s12-3*d*s24*s13*s23*s12^2+6*s14^2*s12^3+8*s24*s13^2*s23*s34+2*s24*s12*s34^3+22*s24*s23*s12*s34^2-15*d*s24^2*s12^2*s34-9*d*s24^2*s23*s12*s34+8*s14*d*s13*s23^2*s34-4*d*s24^2*s12^3-8*s14^2*s13*s34^2+2*s24^5+10*s14*s24^2*s13*s23-3*d*s12^3*s34^2-2*s14^2*d*s24^2*s13+4*s14^3*d*s24*s23+3*s14*d*s13^2*s12^2-16*s14*s13^3*s34-8*s14^2*d*s24*s13*s23-3*d*s23*s12*s34^3+2*s14*s24^4-d*s24*s12^4+6*s14^2*s12^2*s34+4*s24^3*s34^2-14*s14*s24^2*s23^2+2*s14*d*s24*s13^2*s12-4*s14^2*s13*s12*s34+8*s14*s24*s12^3-9*d*s24^2*s13*s34^2-d*s24*s13^3*s34-3*d*s24^2*s13^2*s23+s14*d*s12*s34^3+26*s14^2*s23*s34^2-6*s24*s13^2*s12^2+2*s14*s12^4+12*s14*s24^2*s12*s34-3*d*s13*s12*s34^3+6*s24^2*s23*s12^2+6*s13^2*s12^2*s34+7*s14*d*s13^2*s23*s34+5*s14*d*s13^3*s12-21*d*s24^2*s13*s12*s34-6*s24*s13*s12*s34^2+10*s13*s23*s12^2*s34-24*s14*s13^2*s34^2+2*s14^2*d*s13*s34^2+14*s14*s24*s13^2*s23+13*s14*d*s24^2*s23*s12+6*s13^2*s23*s34^2-6*d*s24^3*s34^2+2*s24*s12^4-2*s14^2*d*s13^2*s23-36*s14*s24*s13*s34^2+22*s24^3*s12*s34+9*s14*d*s23*s12*s34^2-4*s14^3*d*s23*s34+3*s14*d*s24*s13^3+8*s24^2*s12^3-6*s14^2*d*s23*s34^2-10*s14*s23^2*s34^2-10*s24*s13^3*s12+18*s14*d*s13*s23*s12*s34-2*s13^4*s34+6*s24^2*s13*s12^2-6*s14*s13*s23*s12^2+10*s12^3*s34^2-2*s14^2*s24^2*s34+18*s14*s24*s12^2*s34-3*d*s24^3*s13^2-10*s14*s24^3*s23-d*s24^4*s23-20*s14^2*s23*s12*s34-4*s14^2*s24*s23^2+4*s24^3*s13*s23+22*s14*s24*s23*s34^2-s14*d*s24*s34^3-3*d*s24*s13^2*s34^2+2*s14*d*s24*s13*s23*s34-7*s14*d*s24^2*s13*s12-24*s14*s13^2*s12*s34-d*s24*s13^3*s12+6*s12^2*s34^3-4*s14^2*s13^3+5*s14*d*s24*s13^2*s34+4*s14^2*d*s13*s12*s34-9*d*s24^2*s13*s12^2-10*s14*s24*s34^3-20*s14*s23*s12^2*s34-d*s24*s34^4+12*s24^3*s12^2+7*s14*d*s24^3*s23+4*s14^2*s24*s12*s34-3*d*s24^3*s13*s23-2*s34^5-30*s24*s13^2*s34^2-2*s14^2*d*s24^2*s12-4*s14*s34^4+2*s14^2*s23*s12^2-d*s24^2*s13^3+4*s14*d*s24*s13*s23^2+4*s14*d*s23^2*s34^2-2*s14^2*s34^3+12*s14^3*s13*s23-16*s14*s24*s13^3+2*s24*s13^2*s23*s12+14*s24^2*s13*s23*s34-9*d*s24*s13*s23*s34^2-3*d*s24^2*s23*s12^2+12*s14*d*s24*s23^2*s34-3*d*s13^2*s12^2*s34-6*s13*s12*s34^3+6*s14*d*s13^2*s34^2-4*s14*s13^4+52*s14^2*s24*s13*s23-10*s14*s13^3*s12-13*d*s24^3*s12*s34-6*d*s13*s23*s12*s34^2-15*d*s24*s13*s12^2*s34+8*s13^2*s23*s12*s34+8*s14^2*s13*s12^2-24*s14*s24*s13*s12*s34-2*s12*s34^4-4*d*s24^2*s34^3-8*s14^2*d*s23^3-2*s14*d*s24*s12*s34^2-3*d*s13^2*s23*s34^2+4*s14*d*s13*s23^2*s12-18*s24^2*s13*s34^2+26*s14*s13*s23*s34^2-d*s12*s34^4+6*s14^2*s24^2*s12-18*s24*s13^3*s34-d*s24^5-4*s14*s12*s34^3-4*s24^2*s34^3-2*s14^2*d*s23*s12^2-2*s14*s23^2*s12^2-3*d*s24*s13^2*s12^2+6*s14*d*s24*s13*s23*s12-4*s14*d*s24^2*s13*s34-10*s14*s24*s23*s12^2-4*s14*d*s24*s12^3+8*s14^2*d*s23*s12*s34+2*s24^2*s13^2*s23-4*s24*s13^4+8*s14*d*s24^2*s23^2-28*s14*s23^2*s12*s34+6*s14*d*s13^3*s34-6*s14*s13^2*s12^2-2*s13^3*s12*s34-2*s14^2*d*s13*s12^2-9*d*s24*s13^2*s12*s34-10*s24^2*s13^3+9*s14*d*s13^2*s23*s12-24*s14*s24*s23*s12*s34-6*d*s24*s23*s12^2*s34+12*s24^2*s23*s34^2+4*s14^3*d*s23*s12+8*s23*s12*s34^3-3*d*s12^2*s34^3-6*d*s24^3*s12^2-6*s24*s34^4+30*s24^2*s12^2*s34+24*s24*s13*s23*s12*s34-7*d*s24*s12*s34^3+11*s14*d*s24^2*s23*s34)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (-Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(2*s14^2*d*s24*s23*s34-6*s14^2*s24*s23*s12-2*s14*d*s24*s13*s12^2-2*s14*s24^2*s23*s34+s14*d*s23*s34^3+s14^2*s12*s34^2-s14^2*d*s24^2*s23+3*s14*s24^2*s34^2+10*s14^3*s23*s12+4*s14*s13^2*s23*s12+6*s14^2*d*s13*s23*s12-18*s14^2*s13*s23*s34+6*s14^2*s23^2*s34+2*s14*s24*s13*s23*s12+s14^2*d*s12^3-s14*d*s13*s34^3+11*s14*s24^2*s13*s34-6*s14^2*s13*s23^2-5*s14*d*s13*s12^2*s34+2*s14*s13^3*s23-4*s14^2*s24*s13*s12+5*s14^2*s13^2*s34+8*s14*s24^2*s13^2+s14*d*s13*s23*s34^2+s14*s24^3*s34+2*s14^3*d*s13*s23-6*s14*d*s24*s13*s12*s34+4*s14*s24*s12*s34^2+2*s14^2*s24*s34^2-2*s14^2*d*s23^2*s34-s14^2*d*s12*s34^2-s14^2*s24^2*s23+s14*s12^2*s34^2+2*s14^2*s24*s13^2-2*s14^2*d*s13^2*s34+3*s14*s24^3*s13-s14*d*s23*s12^2*s34+2*s14*s13*s12^3-7*s14*d*s13^2*s12*s34+2*s14^2*d*s13*s23^2+17*s14*s24*s13^2*s34+12*s14^3*s23^2+2*s14^2*d*s24*s13*s12+2*s14*d*s24*s23*s34^2+4*s14^2*s24*s13*s34+8*s14*s24^2*s13*s12-2*s14*s24*s13*s23*s34-s14*d*s13*s12^3-4*s14^3*d*s23^2-2*s14*d*s24*s12^2*s34-s14*d*s13*s23*s12^2+s14^2*s13^2*s12+2*s14*s13*s23*s12*s34-2*s14*s23*s12*s34^2-2*s14*d*s12^2*s34^2-2*s14*d*s24*s13*s34^2-10*s14^2*s24*s23*s34+2*s14^2*d*s24*s23*s12-s14^2*d*s13^3-2*s14^2*s23^2*s12-14*s14^2*s13*s23*s12+6*s14^2*d*s13*s23*s34-6*s14^3*s23*s34+2*s14*s13^2*s23*s34+2*s14^2*d*s24*s12^2-s14*d*s24^2*s12*s34-s14^2*d*s13^2*s12-s14*d*s24^2*s13^2-s14*d*s13^4+14*s14*s24*s13^2*s12-s14*d*s13^3*s23+5*s14*s13*s34^3+s14*d*s24^2*s13*s23+2*s14^2*d*s23^2*s12-6*s14^2*s24*s12^2-s14*d*s12^3*s34-2*s14*s23*s34^3+2*s14^3*s24*s23+10*s14*s13*s12*s34^2-9*s14^2*s13^2*s23-5*s14*d*s13*s12*s34^2-3*s14^2*s12^3+4*s14^2*s13*s34^2+s14^2*d*s24^2*s13-2*s14^3*d*s24*s23-3*s14*d*s13^2*s12^2+7*s14*s13^3*s34+6*s14^2*d*s24*s13*s23-3*s14^2*s12^2*s34-2*s14^2*d*s24*s23^2-4*s14*d*s24*s13^2*s12+2*s14^2*s13*s12*s34-s14*d*s12*s34^3-9*s14^2*s23*s34^2+2*s14*s24^2*s12*s34-s14*d*s13^2*s23*s34-3*s14*d*s13^3*s12+9*s14*s13^2*s34^2-s14^2*d*s13*s34^2+2*s14*s24*s13^2*s23+3*s14^2*d*s13^2*s23+13*s14*s24*s13*s34^2+2*s14^3*d*s23*s34-2*s14*d*s24*s13^3+3*s14^2*d*s23*s34^2-2*s14*d*s13*s23*s12*s34+2*s14*s13*s23*s12^2+s14^2*s24^2*s34+s14*s24*s12^2*s34-2*s14^2*s23*s12*s34+2*s14^2*s24*s23^2-4*s14*s24*s23*s34^2+2*s14*d*s24*s13*s23*s34-s14*d*s24^2*s13*s12+14*s14*s13^2*s12*s34+2*s14^2*s13^3-4*s14*d*s24*s13^2*s34-2*s14^2*d*s13*s12*s34+3*s14*s24*s34^3-2*s14^2*s24*s12*s34+s14^2*d*s24^2*s12+s14*s34^4-5*s14^2*s23*s12^2+s14^2*s34^3-6*s14^3*s13*s23+7*s14*s24*s13^3-3*s14*d*s13^2*s34^2+2*s14*s13^4-22*s14^2*s24*s13*s23+6*s14*s13^3*s12-4*s14^2*s13*s12^2+18*s14*s24*s13*s12*s34-2*s14*d*s24*s12*s34^2-2*s14*s13*s23*s34^2-3*s14^2*s24^2*s12+2*s14*s12*s34^3+3*s14^2*d*s23*s12^2-s14*d*s24^2*s13*s34+7*s14*s13*s12^2*s34+2*s14^2*d*s23*s12*s34-3*s14*d*s13^3*s34+6*s14*s13^2*s12^2+s14^2*d*s13*s12^2-2*s14*d*s13^2*s23*s12-2*s14*s24*s23*s12*s34-2*s14^3*d*s23*s12+7*s14*s24*s13*s12^2+s14*d*s24^2*s23*s34))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (-1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(20*s14^2*s24*s23*s12+5*s14*d*s24*s13*s12^2-12*d*s24^2*s13^2*s34+10*s24*s13*s34^3-4*s14*s24^2*s23*s34+2*s14*d*s23*s34^3+10*s13*s12^4-6*d*s13^3*s34^2-2*s14^2*d*s24^2*s23-8*d*s24^3*s13*s12-4*d*s12^4*s34-8*s14*s12^3*s34+s14*d*s24^3*s12+4*s24^4*s13-40*s14*s13^2*s23*s12-4*s14^2*s13*s23*s34+16*s14*d*s24*s23*s12*s34-3*d*s24*s13^3*s23-8*s14^2*s23^2*s34-d*s24^3*s23*s12-80*s14*s24*s13*s23*s12+4*s14*d*s23^2*s12*s34+2*s23*s12^4-s14*d*s13*s34^3-2*s14*s24^2*s13*s34+16*s14^2*s13*s23^2-s14*d*s13*s12^2*s34-d*s13^4*s23-10*s14*s13^3*s23+20*s14*d*s24*s23*s12^2+78*s24*s13^2*s12*s34+4*s23*s12^3*s34-3*d*s13^3*s23*s34-2*s14*s24^2*s13^2+8*s24*s23*s12^2*s34+8*s14*d*s13*s23*s34^2-6*d*s24^2*s12*s34^2+8*s13*s23*s12^3+24*s13*s12^2*s34^2-12*d*s24*s12^3*s34+20*s13^2*s12^3+3*s14*d*s24^2*s12^2-24*s14*s13*s23^2*s12-4*s14*s24*s12*s34^2-16*d*s24*s13*s12^3+48*s24^2*s13^2*s12+s14*d*s12^4-10*d*s13^2*s12^3+14*s24^3*s13*s34-12*d*s24*s13*s23*s12*s34-8*s14*s24*s23^2*s34-d*s23*s12^4-20*s14*s23*s12^3+2*s13^4*s23+4*s14^2*s24^2*s23-4*s14*s12^2*s34^2+2*s23*s12^2*s34^2-d*s24^4*s13-28*s14*s24*s13*s23^2-2*s14*s24^3*s13-9*d*s13^2*s23*s12*s34+8*s13*s23*s12*s34^2+66*s24*s13*s12^2*s34+30*s13^2*s12*s34^2-3*d*s24*s23*s12^3-12*d*s24*s12^2*s34^2+26*s13*s12^3*s34+8*s24*s13*s23*s34^2+14*s14*d*s23*s12^2*s34-3*d*s24^2*s13*s23*s34+8*s13^3*s23*s12-9*d*s24*s13^2*s23*s12-10*s14*s13*s12^3-5*s14*d*s13^2*s12*s34+6*s12^4*s34-8*s14^2*d*s13*s23^2-d*s13*s23*s34^3+12*s13^3*s34^2+4*s14*s24*s13^2*s34-5*d*s13*s12^4-8*s14^3*s23^2-10*s14*s13^2*s23^2+6*s24*s23*s12^3+4*s14*d*s13^2*s23^2-18*d*s13^2*s12*s34^2+4*s14*d*s24*s23*s34^2-14*s14*s24^2*s13*s12-16*d*s13*s12^3*s34+12*s24*s12^2*s34^2-40*s14*s24*s13*s23*s34-3*d*s23*s12^2*s34^2+2*s14*d*s13*s12^3+8*s13^2*s34^3+16*s14^2*s23^3+2*s14*d*s24*s12^2*s34+24*s14*d*s13*s23*s12^2+2*s13*s23*s34^3-24*d*s24*s13*s12*s34^2+s14*d*s24^3*s13-9*d*s13*s23*s12^2*s34+2*s24^4*s12+54*s24^2*s13*s12*s34-4*d*s13^3*s23*s12-44*s14*s13*s23*s12*s34-4*d*s24^3*s13*s34-4*s14*s23*s12*s34^2-s14*d*s12^2*s34^2+2*s13*s34^4+10*s14*d*s23*s12^3-10*d*s13^3*s12^2-24*s14*s24^2*s23*s12-s14*d*s24*s13*s34^2+4*s14^2*s24*s23*s34-4*s14^2*d*s24*s23*s12-18*d*s24^2*s13^2*s12+34*s24*s13*s12^3+40*s14^2*s23^2*s12+16*s14*d*s24*s13^2*s23+12*s14^2*s13*s23*s12+4*s14^2*d*s13*s23*s34-12*s14*s24^2*s12^2-20*s14*s13^2*s23*s34+s14*d*s24^2*s12*s34+4*s24^2*s23*s12*s34-3*d*s24*s23*s12*s34^2+s14*d*s24^2*s13^2+2*s24^3*s23*s12-s14*d*s13^4+20*s13^3*s12^2-4*d*s13*s23*s12^3-8*s14*s24*s13^2*s12-d*s13*s34^4+4*s14*d*s13^3*s23+6*s24^2*s12*s34^2+18*s24*s12^3*s34-18*d*s13*s12^2*s34^2-3*d*s23*s12^3*s34+2*s14*s13*s34^3-6*d*s24*s13^2*s23*s34+20*s24*s13*s23*s12^2-6*d*s24^2*s13*s23*s12+6*s13^3*s23*s34+12*s14*d*s24^2*s13*s23-4*d*s13^2*s34^3+22*s24^3*s13*s12-16*s14^2*d*s23^2*s12-16*s14*s13*s23^2*s34-4*d*s24*s13*s34^3+36*s24^2*s13^2*s34-4*s14*s24^3*s12-d*s24^4*s12+s14*d*s12^3*s34+8*s24*s13^3*s23-16*s14*s24*s23^2*s12+2*s14*s13*s12*s34^2-4*s14^2*s13^2*s23+14*s24^3*s13^2-4*s14*d*s13*s12*s34^2+8*s14*d*s24*s23^2*s12-16*d*s13^3*s12*s34+16*s24^2*s13*s23*s12-9*d*s24*s13*s23*s12^2+16*s24*s13^2*s23*s34+2*s24*s12*s34^3+2*s24*s23*s12*s34^2-6*d*s13^2*s23*s12^2-12*d*s24^2*s12^2*s34-3*d*s24^2*s23*s12*s34+8*s14*d*s13*s23^2*s34-6*d*s24^2*s12^3-30*s14*s24^2*s13*s23-6*d*s12^3*s34^2-4*d*s13^4*s34+6*s14*s13^3*s34-d*s23*s12*s34^3-4*d*s24*s12^4-8*s14^2*d*s24*s23^2-2*s14*s24^2*s23^2+s14*d*s24*s13^2*s12-12*s14*s24*s12^3-6*d*s24^2*s13*s34^2-12*d*s24*s13^3*s34-3*d*s24^2*s13^2*s23+8*s14*d*s23^2*s12^2-s14*d*s12*s34^3+54*s24*s13^2*s12^2-4*s14*s12^4-8*s14*s24^2*s12*s34+2*s12^5-8*d*s13*s12*s34^3+6*s24^2*s23*s12^2+42*s13^2*s12^2*s34+10*s14*d*s13^2*s23*s34-2*s14*d*s13^3*s12-24*d*s24^2*s13*s12*s34+42*s24*s13*s12*s34^2+14*s13*s23*s12^2*s34+6*s14*s13^2*s34^2-38*s14*s24*s13^2*s23+10*s14*d*s24^2*s23*s12+6*s13^2*s23*s34^2+8*s24*s12^4+2*s14^2*d*s13^2*s23+2*s14*s24*s13*s34^2+6*s24^3*s12*s34+6*s14*d*s23*s12*s34^2-s14*d*s24*s13^3+12*s24^2*s12^3+2*s14^2*d*s23*s34^2-6*s14*s23^2*s34^2+38*s24*s13^3*s12+24*s14*d*s13*s23*s12*s34+8*s13^4*s34-d*s13^5+42*s24^2*s13*s12^2-50*s14*s13*s23*s12^2+6*s12^3*s34^2-16*s14*s24*s12^2*s34-4*d*s24^3*s13^2-2*s14*s24^3*s23+8*s14^2*s23*s12*s34+16*s14^2*s24*s23^2+4*s24^3*s13*s23-2*s14*s24*s23*s34^2-12*d*s24*s13^2*s34^2+20*s14*d*s24*s13*s23*s34+4*s14*d*s24^2*s13*s12+4*s14*s13^2*s12*s34-16*d*s24*s13^3*s12+2*s12^2*s34^3-2*s14*d*s24*s13^2*s34-18*d*s24^2*s13*s12^2-24*s14*s23*s12^2*s34+8*s24^3*s12^2-d*s24^3*s13*s23+30*s24*s13^2*s34^2+16*s14^2*s23*s12^2-6*d*s24^2*s13^3+12*s14*d*s24*s13*s23^2+4*s14*d*s23^2*s34^2+2*s14*s24*s13^3+22*s24*s13^2*s23*s12+10*s24^2*s13*s23*s34-3*d*s24*s13*s23*s34^2-3*d*s24^2*s23*s12^2+4*s14*d*s24*s23^2*s34-4*d*s24*s13^4-24*d*s13^2*s12^2*s34+10*s13*s12*s34^3-3*s14*d*s13^2*s34^2-5*d*s13^4*s12+2*s14*s13^4+8*s14^2*s24*s13*s23+2*s14*s13^3*s12-4*d*s24^3*s12*s34-6*d*s13*s23*s12*s34^2-36*d*s24*s13*s12^2*s34+16*s13^2*s23*s12*s34-12*s14*s24*s13*s12*s34+2*s13^5-8*s14^2*d*s23^3-s14*d*s24*s12*s34^2-3*d*s13^2*s23*s34^2+12*s14*d*s13*s23^2*s12+18*s24^2*s13*s34^2-10*s14*s13*s23*s34^2-d*s12*s34^4+30*s24*s13^3*s34+10*s13^4*s12-2*s14^2*d*s23*s12^2-14*s14*s23^2*s12^2-24*d*s24*s13^2*s12^2+36*s14*d*s24*s13*s23*s12+s14*d*s24^2*s13*s34-42*s14*s24*s23*s12^2-10*s14*s13*s12^2*s34+3*s14*d*s24*s12^3+10*s24^2*s13^2*s23+10*s24*s13^4-4*s14*s23^2*s12*s34-3*s14*d*s13^3*s34-6*s14*s13^2*s12^2+30*s13^3*s12*s34-d*s12^5-36*d*s24*s13^2*s12*s34+18*s24^2*s13^3+18*s14*d*s13^2*s23*s12-28*s14*s24*s23*s12*s34-6*d*s24*s23*s12^2*s34-4*d*s12^2*s34^3-4*d*s24^3*s12^2+12*s13^2*s23*s12^2+18*s24^2*s12^2*s34+24*s24*s13*s23*s12*s34-4*d*s24*s12*s34^3-22*s14*s24*s13*s12^2+2*s14*d*s24^2*s23*s34));

id INT(pentagon1x123,3,21,4,2,[],2,0,1,-2,1) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(36*s14^2*s13*s12^2*s34^2+48*s14^2*s13*s23*s12^3+2*s14^2*d*s13*s23*s34^3+12*s14^2*s23^2*s12^3+24*s14^2*s23*s12^3*s34-6*s14^2*d*s24*s23*s12^3-4*s14^2*d*s13^4*s23+20*s14^2*s13*s12^4-3*s14^2*d*s24*s12^2*s34^2-2*s14^2*d*s23^3*s34^2+72*s14^2*s24*s13*s12^2*s34+24*s14^2*s13*s23*s12*s34^2+40*s14^2*s13^2*s12^3-8*s14^3*d*s23^3*s34-8*s14^3*s13*s23*s34^2+6*s14^2*d*s24*s23*s12*s34^2-3*s14^2*d*s12^4*s34-3*s14^2*d*s13^3*s34^2-4*s14^3*d*s24^2*s23^2-24*s14^3*s23^2*s12*s34+s14^2*d*s24*s13^2*s23^2-4*s14^4*d*s24*s23^2+12*s14^3*d*s13^2*s23*s12-16*s14^3*s24*s23*s12*s34+12*s14^2*s23*s12^4+20*s14^4*s23^2*s12+2*s14^2*d*s13*s23^2*s12*s34-28*s14^3*s24*s23*s12^2-12*s14^2*d*s24*s13*s12^3-5*s14^2*d*s13*s12^4+12*s14^3*s24*s23^3+12*s14^2*s13^2*s23^2*s34+24*s14^2*s24*s23*s12^2*s34-15*s14^2*d*s13^2*s23^2*s12+12*s14^2*s13^4*s23-6*s14^2*d*s24*s12^3*s34+72*s14^2*s24*s13^2*s12*s34+8*s14^3*d*s24*s13*s23^2+4*s14^2*s23^3*s34^2-6*s14^2*d*s13^3*s23*s34+48*s14^2*s13^3*s23*s12+48*s14^2*s13*s12^3*s34+36*s14^2*s13^2*s12*s34^2-3*s14^2*d*s24^2*s23^2*s34+2*s14^2*d*s24^3*s23*s12-5*s14^2*d*s23^2*s12^3-s14^2*d*s24^3*s23^2+12*s14^2*s23*s12^2*s34^2+4*s14^2*s13^5+12*s14^2*s13^3*s34^2+5*s14^2*d*s24^2*s13*s23^2-28*s14^3*s23*s12^2*s34+12*s14^2*s12^4*s34-6*s14^2*d*s24*s13^3*s23+24*s14^3*d*s13*s23^2*s12-18*s14^2*d*s13*s23*s12^2*s34-6*s14^2*d*s24*s13*s12*s34^2-4*s14^2*d*s23*s12^4-10*s14^2*d*s13^2*s12^3-4*s14^3*d*s23^2*s34^2-2*s14^2*d*s24^3*s13*s12+16*s14^3*d*s24*s13*s23*s12+10*s14^2*d*s24*s13*s23^2*s34-3*s14^2*d*s24^2*s13^2*s34+36*s14^2*s24^2*s13^2*s12-8*s14^3*d*s24*s23^2*s34-18*s14^2*d*s24*s13^2*s23*s12+4*s14^3*d*s24^2*s23*s12+6*s14^2*d*s24^2*s13*s23*s34-60*s14^3*s13*s23*s12^2+4*s14^3*d*s23*s12*s34^2+8*s14^3*d*s23^3*s12-48*s14^3*s13^2*s23^2+4*s14^2*s13^2*s34^3-18*s14^2*d*s13^2*s23*s12*s34+48*s14^2*s24*s13*s12^3+8*s14^3*d*s13^2*s23*s34+4*s14^4*s23^2*s34-10*s14^2*d*s13^3*s12^2+12*s14^2*s24*s13^2*s23^2+20*s14^4*s13*s23^2-6*s14^2*d*s23*s12^3*s34-28*s14^3*s24*s13^2*s23+72*s14^2*s24*s13*s23*s12^2+5*s14^2*d*s23^2*s12*s34^2-16*s14^2*d*s13*s23*s12^3-20*s14^3*s23*s12^3-9*s14^2*d*s13*s12^2*s34^2-2*s14^2*d*s24^2*s23^3-2*s14^2*d*s23^3*s12^2+12*s14^2*s24*s12^2*s34^2+24*s14^2*s24*s23*s12^3+8*s14^3*d*s13*s23^2*s34+24*s14^2*s24*s13^3*s23+16*s14^3*d*s13*s23*s12*s34+40*s14^2*s13^3*s12^2+2*s14^2*d*s24*s13*s23^2*s12+12*s14^2*s24^2*s13^2*s34+4*s14^2*s12^5-9*s14^2*d*s24^2*s13^2*s12+8*s14^3*d*s24*s23^2*s12-s14^2*d*s13^2*s34^3+12*s14^3*d*s23^2*s12^2+8*s14^3*d*s24*s13*s23*s34-20*s14^3*s13^3*s23+8*s14^2*s24^3*s13*s12+4*s14^2*s24^2*s23^3+4*s14^2*s23^3*s12^2+24*s14^2*s13^3*s23*s34-16*s14^2*d*s13^3*s23*s12+24*s14^2*s24^2*s13*s12*s34+24*s14^2*s24*s12^3*s34+s14^2*d*s13^2*s23^2*s34+36*s14^2*s13^2*s23^2*s12-8*s14^3*s24^2*s13*s23-s14^2*d*s23^2*s34^3-9*s14^2*d*s13^2*s12*s34^2+5*s14^2*d*s24^2*s23^2*s12+8*s14^3*d*s13*s23^3-12*s14^2*d*s13*s12^3*s34-24*s14^3*s13*s23^2*s34-3*s14^2*d*s24*s13^2*s34^2+72*s14^2*s24*s13^2*s12^2-5*s14^2*d*s13^3*s23^2+48*s14^2*s24*s13*s23*s12*s34-18*s14^2*d*s24*s13^2*s12*s34-24*s14^3*s24*s23^2*s12+4*s14^2*s24^3*s13^2-36*s14^3*s13*s23^3-3*s14^2*d*s24*s12^4-3*s14^2*d*s13^4*s34+12*s14^2*s23^2*s12^2*s34-3*s14^2*d*s12^3*s34^2-3*s14^2*d*s24^2*s12^3+12*s14^2*s24*s23^2*s12^2-3*s14^2*d*s24*s23^2*s34^2+4*s14^2*d*s23^3*s12*s34-8*s14^4*d*s23^3+4*s14^3*d*s24^2*s13*s23+72*s14^2*s13*s23*s12^2*s34+24*s14^2*s24*s13*s12*s34^2-2*s14^2*d*s13*s12*s34^3-48*s14^3*s23^2*s12^2+4*s14^3*d*s13^3*s23-15*s14^2*d*s13*s23^2*s12^2-8*s14^3*s24^2*s23*s12-18*s14^2*d*s24*s13*s12^2*s34+12*s14^3*d*s13*s23*s12^2-8*s14^3*s23*s12*s34^2+12*s14^2*s24*s12^4-s14^2*d*s24^3*s13^2-56*s14^3*s13*s23*s12*s34+4*s14^3*d*s23*s12^3+10*s14^2*d*s24*s23^2*s12*s34+12*s14^2*s13^3*s23^2+36*s14^2*s24^2*s13*s12^2+6*s14^2*d*s24*s13*s23*s34^2-28*s14^3*s13^2*s23*s34+48*s14^2*s24*s13^3*s12-6*s14^2*d*s24*s13^3*s34-16*s14^3*s24*s13*s23*s34-4*s14^4*d*s23^2*s34+24*s14^2*s13*s23^2*s12*s34+2*s14^2*d*s23*s12*s34^3+8*s14^3*d*s24*s13^2*s23-3*s14^2*d*s24^2*s12^2*s34-24*s14^2*d*s13^2*s23*s12^2+12*s14^2*s13^2*s23*s34^2-4*s14^4*d*s13*s23^2-36*s14^3*s23^3*s12+12*s14^3*d*s13^2*s23^2-4*s14^2*d*s13*s23^3*s12+12*s14^2*s12^3*s34^2+24*s14^2*s24^2*s13*s23*s12-12*s14^2*d*s13^3*s12*s34-s14^2*d*s13^5+24*s14^2*s24*s13^2*s23*s34+12*s14^2*s13^4*s34-4*s14^2*d*s24*s23^3*s34+12*s14^2*s24^2*s12^3+72*s14^2*s13^2*s12^2*s34+12*s14^2*s24^2*s23*s12^2+s14^2*d*s24*s23^2*s12^2-24*s14^3*s24*s13*s23^2+s14^2*d*s23^2*s12^2*s34-5*s14^2*d*s13^4*s12+24*s14^2*s24*s13*s23^2*s12+5*s14^2*d*s13*s23^2*s34^2+36*s14^2*s13*s23^2*s12^2+4*s14^2*s24^3*s12^2-3*s14^2*d*s24*s13^4+8*s14^2*s13*s12*s34^3+4*s14^2*s12^2*s34^3+4*s14^2*d*s24*s13*s23^3-3*s14^2*d*s24^2*s13^3-8*s14^3*d*s24*s23^3+8*s14^3*d*s23*s12^2*s34+12*s14^2*s24*s13^2*s34^2-18*s14^2*d*s24*s13^2*s12^2-96*s14^3*s13*s23^2*s12+8*s14^3*d*s24*s23*s12*s34-6*s14^2*d*s24^2*s13*s12*s34+4*s14^2*s13^2*s23^3+8*s14^2*s13*s23^3*s12+4*s14^2*d*s13*s23^3*s34+12*s14^2*s24*s13^4+12*s14^2*s24^2*s12^2*s34+72*s14^2*s13^2*s23*s12^2-s14^2*d*s24^3*s12^2+12*s14^3*s23^3*s34+72*s14^2*s13^2*s23*s12*s34-s14^2*d*s12^2*s34^3-18*s14^2*d*s13^2*s12^2*s34+8*s14^2*s24*s23^3*s34+4*s14^2*d*s24*s23^3*s12+24*s14^4*s23^3+72*s14^2*s24*s13^2*s23*s12+20*s14^2*s13^4*s12-8*s14^3*s23^4+48*s14^2*s13^3*s12*s34+12*s14^2*s24^2*s13^2*s23+6*s14^2*d*s24^2*s23*s12*s34+2*s14^2*d*s24^3*s13*s23+4*s14^3*d*s13*s23*s34^2-2*s14^2*d*s13^2*s23^3-4*s14^4*d*s23^2*s12-56*s14^3*s24*s13*s23*s12+8*s14^3*d*s23^2*s12*s34+12*s14^2*s24^2*s13^3-60*s14^3*s13^2*s23*s12-12*s14^2*d*s24*s13^3*s12+24*s14^2*s24*s13^3*s34+4*s14^4*s24*s23^2-9*s14^2*d*s24^2*s13*s12^2-s14^2*d*s12^5+8*s14^3*d*s24*s23*s12^2-18*s14^2*d*s24*s13*s23*s12^2)*Den(s23))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (-1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(10*s14^2*d*s23^2*s12^2-2*s14*d*s24*s13^3*s23-6*d*s24^3*s13*s23*s12-4*s14^2*s23^3*s12+8*s14*d*s24^2*s13*s23^2+6*s23*s12*s34^4-20*s14*s13*s23^2*s34^2-4*s14*s23^2*s12^2*s34+s14^2*d*s23*s12^2*s34-4*s14*s24*s23^2*s12^2-36*s14^3*s24*s23^2+24*s24^3*s23*s12*s34+12*s14^2*d*s13^2*s12*s34+36*s24^2*s23*s12*s34^2+48*s14^3*s23^3+12*s14*s24*s23*s12^2*s34+4*s14^2*d*s13*s23^3-24*s14^2*s13^3*s12+6*s14^2*s24^2*s13*s23-24*s14*d*s24*s13*s23*s12*s34+24*s24*s13*s23*s34^3-2*s14*d*s13^3*s23*s34+12*s14^2*d*s13^2*s12^2+6*s24^3*s23*s12^2+24*s14*d*s24^2*s23^2*s34-18*d*s24^2*s13*s23*s12*s34+12*s24*s13*s23*s12^2*s34+6*s23*s12^2*s34^3+2*s13^3*s23*s34^2-12*s14^2*s24*s13^3-3*d*s24^2*s13*s23*s12^2-16*s14^3*d*s23^2*s12-9*d*s24*s13^2*s23*s34^2+12*s13*s23*s12*s34^3+18*s24^2*s13^2*s23*s34-6*s14*d*s24^3*s23*s12-d*s23*s12^3*s34^2-36*s14^2*s24*s13*s23*s12+4*s14^2*d*s23^2*s12*s34+18*s14^2*s24*s23*s34^2+s14^2*d*s24*s23*s12^2-6*s14*d*s24*s13^2*s23*s12+12*s14^2*d*s13*s12^2*s34-18*s14*d*s24^2*s13*s23*s34+6*s14*s24^2*s23*s12^2+4*s14^2*d*s23^3*s12-18*s14^2*s23^2*s12^2+2*s14^3*s23*s34^2+6*s14*s13^2*s23*s34^2-6*s14*d*s13^2*s23*s12*s34-54*s14^2*s13*s23*s12^2-7*s14^2*d*s13*s23*s34^2-12*s14^2*s24*s12^2*s34-3*d*s24^3*s13^2*s23+52*s14^3*s13*s23*s12+4*s24*s13^3*s23*s34-6*s14*d*s13*s23*s34^3+12*s14^2*d*s24*s13*s12^2-10*d*s24^3*s23*s34^2+26*s14^3*s13^2*s23+4*s14^2*d*s24*s13^3+36*s14*s24*s13*s23*s34^2-8*s14^3*d*s23*s12*s34-4*s14^2*s13*s23^3-40*s14*s24*s23^2*s12*s34-2*s14*d*s24*s23*s12^3-3*d*s24^4*s13*s23+12*s14*s24^3*s13*s23+4*s14^3*s24*s23*s34-36*s14^2*s13^2*s12^2+12*s14*s13*s23*s12*s34^2-2*s14*d*s24^4*s23-6*s14^2*s13^4-18*s14^2*s24*s13^2*s23-3*d*s13*s23*s12^2*s34^2+8*s14^2*d*s13^3*s12-3*d*s13^2*s23*s12*s34^2+6*s14*s24^4*s23+2*s14^2*d*s13^2*s34^2+20*s24^3*s23*s34^2-12*s14^2*s13^3*s34-7*s14^2*d*s24^2*s13*s23+8*s14^2*d*s24*s13*s12*s34+4*s24*s23*s12^3*s34+16*s14^3*d*s23^2*s34-8*s14*d*s24^3*s23*s34+6*s24^2*s13^2*s23*s12-18*d*s24^2*s13*s23*s34^2-6*s14*d*s23*s12^2*s34^2-12*d*s24*s23*s12*s34^3+8*s14*d*s24^2*s23^2*s12+6*s24^4*s13*s23-6*s14*d*s13*s23*s12^2*s34-16*s14^3*d*s13*s23^2+2*s23*s34^5-12*d*s24^3*s13*s23*s34-8*s14^3*d*s24*s13*s23+28*s14^2*s23^3*s34+18*s14^2*d*s23^2*s34^2-36*s14^2*s13^2*s12*s34-12*s14^2*s24*s12^3+16*s14*d*s24*s13*s23^2*s34+6*s24^3*s13^2*s23-48*s14*s24*s23^2*s34^2-18*d*s24*s13*s23*s12*s34^2-18*s14^2*s23*s12^2*s34-42*s14^2*s24^2*s23^2-s14^2*d*s24^3*s23+8*s14*d*s23^2*s12*s34^2-3*d*s24^3*s23*s12^2-2*s14*d*s23*s12^3*s34+12*s24*s13^2*s23*s12*s34-36*s14^2*s24*s13*s12^2+12*s14^3*s13*s23*s34+s14^2*d*s24*s13^2*s23+4*s14^2*d*s13^3*s34-3*d*s23*s12^2*s34^3-d*s13^3*s23*s34^2-16*s14^3*d*s23^3-6*s14^2*s13^2*s34^2+2*s23*s12^3*s34^2+6*s14*s24^2*s13^2*s23-14*s14^2*d*s24*s23*s12*s34+36*s14*s24^2*s23*s12*s34-8*s14*d*s24*s23*s34^3+12*s14^3*s24*s23*s12-d*s23*s34^5+18*s24*s23*s12^2*s34^2-9*d*s24^2*s23*s12^2*s34-12*s14*d*s24^2*s13*s23*s12+36*s14*s24^2*s23*s34^2+4*s14^2*d*s24*s12^3-3*s14^2*d*s24*s23*s34^2-18*s14^2*s24*s23*s12^2-12*s14*d*s24*s13^2*s23*s34-3*d*s23*s12*s34^4-36*s14^2*s13*s12^2*s34+6*s14^2*s24^3*s23-12*s14^2*s23^2*s12*s34+18*s14^2*d*s24^2*s23^2+12*s14^2*s24*s13*s23*s34+21*s14^2*d*s13*s23*s12^2+6*s14^2*s13*s23*s34^2+4*s14^2*d*s24*s12^2*s34-6*s14^2*s12^4+26*s14^3*s23*s12^2-36*s14^2*s13*s23*s12*s34-18*s14*d*s24*s23*s12*s34^2-42*s14^2*s23^2*s34^2+12*s14*s23*s12*s34^3-12*s14^2*d*s23^3*s34-6*s14*d*s23*s12*s34^3-8*s14*s13*s23^2*s12*s34+18*s24^2*s23*s12^2*s34-9*d*s24*s23*s12^2*s34^2+6*s14*s23*s34^4+36*s14*s24*s23*s12*s34^2-8*s14^3*d*s13*s23*s34+6*s13^2*s23*s34^3+12*s14*s24*s13^2*s23*s34+12*s14*s24^2*s13*s23*s12-8*s14^3*d*s23*s12^2+2*s24^2*s23*s12^3+2*s14^2*d*s24*s13*s23*s12+4*s14^2*d*s24^2*s13*s12-12*s14*d*s24^2*s23*s34^2-8*s14^3*d*s24*s23*s12+36*s24*s13*s23*s12*s34^2-54*s14^2*s13^2*s23*s12+24*s14*s24*s23*s34^3+s14^2*d*s13^2*s23*s34-6*s14^2*s24^2*s12^2+28*s14^2*s24*s23^3-6*s14*d*s24^2*s13^2*s23-18*s14*d*s24^2*s23*s12*s34+6*s24^4*s23*s12+2*s14^3*s24^2*s23-6*s14*d*s24*s13*s23*s12^2+18*s14^2*s24^2*s23*s34-d*s24^5*s23-7*s14^2*d*s24^2*s23*s12-16*s14*s23^2*s34^3-20*s14*s23^2*s12*s34^2-s14^2*d*s23*s34^3-7*s14^2*d*s23*s12*s34^2-5*d*s24*s23*s34^4+2*s24^5*s23+36*s24^2*s13*s23*s34^2-3*d*s24^2*s13^2*s23*s12-40*s14*s24*s13*s23^2*s34+60*s14^3*s13*s23^2+24*s24*s23*s12*s34^3-12*s14^2*s24*s13^2*s34+24*s14*d*s24*s23^2*s34^2+12*s14^2*d*s24*s13^2*s12+6*s13^2*s23*s12*s34^2-12*s14^2*s24*s13*s23^2+2*s14^2*d*s13^4-2*d*s24*s23*s12^3*s34-10*d*s24^2*s23*s34^3+4*s14^2*d*s24*s23^2*s12-84*s14^2*s24*s23^2*s34+4*s14^2*d*s13*s12*s34^2-6*d*s24*s13^2*s23*s12*s34-20*s14*s24^2*s23^2*s12-5*d*s24^4*s23*s34+8*s14*d*s24^3*s23^2+8*s14^4*d*s23^2+24*s14*s24^3*s23*s34+12*s14^3*s24*s13*s23+6*s14*s23*s12^2*s34^2+6*s14^2*s23*s34^3+2*s24^2*s13^3*s23+6*s13*s23*s34^4-36*s14^3*s23^2*s34-4*s14*s13^2*s23^2*s34+2*s14^2*d*s24^2*s12^2+4*s14^2*d*s13*s23^2*s34-36*s14^2*s13*s23^2*s12-12*s14^2*d*s24*s23^3+24*s24^3*s13*s23*s34+10*s24^4*s23*s34-3*d*s13*s23*s34^4-d*s24^2*s13^3*s23+16*s14*d*s24*s23^2*s12*s34-16*s14^4*s23^2-6*s14*d*s24^3*s13*s23-8*s14^3*d*s13^2*s23+21*s14^2*d*s13^2*s23*s12-12*s14*d*s13*s23*s12*s34^2+12*s14^2*s24*s23*s12*s34-18*s14^2*s13^2*s23*s34+2*s14^2*d*s12^2*s34^2+6*s14^2*s23*s12*s34^2-16*s14*s24^3*s23^2-12*s14^2*s12^3*s34+7*s14^2*d*s23*s12^3-18*s14*d*s24*s13*s23*s34^2-3*s14^2*d*s24^2*s23*s34+12*s14*s13*s23*s34^3+6*s14^2*s24^2*s23*s12-6*d*s24*s13*s23*s12^2*s34+36*s24^2*s13*s23*s12*s34-6*s14*d*s13^2*s23*s34^2-16*s14^3*d*s13*s23*s12+2*s14^2*d*s13*s23*s12*s34-4*s14*s24*s13^2*s23^2+6*s13*s23*s12^2*s34^2-6*s14^2*s24^2*s13^2+12*s14^3*s23*s12*s34+10*s14^2*d*s13^2*s23^2-14*s14^2*d*s24*s13*s23*s34+20*s24^2*s23*s34^3-12*s14^2*s24^2*s13*s12-6*s14*d*s24^2*s23*s12^2-18*s14^2*s13^3*s23-2*d*s24*s13^3*s23*s34+8*s14^2*d*s13*s12^3+36*s14*s24^2*s13*s23*s34-18*s14^2*s23*s12^3+4*s14^2*d*s12^3*s34+8*s14*d*s23^2*s34^3-3*d*s24^4*s23*s12+12*s14*s24^3*s23*s12-6*s14^2*s12^2*s34^2+24*s14*s24*s13*s23*s12*s34-12*d*s24^3*s23*s12*s34-48*s14*s24^2*s23^2*s34-12*s14^2*s24*s23^2*s12+36*s14^2*d*s24*s23^2*s34-12*s14^2*s13*s12*s34^2-12*s14*d*s24*s23*s12^2*s34-24*s14^2*s24*s13*s12*s34+12*s24^3*s13*s23*s12+10*s24*s23*s34^4-12*s14^2*s13*s23^2*s34+20*s14^2*d*s13*s23^2*s12+60*s14^3*s23^2*s12+2*s14^2*d*s12^4+7*s14^2*d*s13^3*s23+4*s14^2*d*s24*s13^2*s34-36*s14^2*s24*s13^2*s12-3*d*s13^2*s23*s34^3-18*s14^2*s13^2*s23^2-9*d*s24^2*s13^2*s23*s34-8*s14*s24*s13*s23^2*s12-6*d*s13*s23*s12*s34^3+18*s24*s13^2*s23*s34^2+6*s24^2*s13*s23*s12^2-24*s14^2*s13*s12^3-2*s14*d*s23*s34^4-d*s24^2*s23*s12^3+8*s14*d*s13*s23^2*s34^2-18*d*s24^2*s23*s12*s34^2+2*s14^2*d*s24^2*s13^2+16*s14^3*d*s24*s23^2+4*s14^2*d*s24*s13*s23^2-20*s14*s24^2*s13*s23^2-12*d*s24*s13*s23*s34^3)*Den(s23))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(s14^2*d*s23^2*s12^2-8*s14^3*s24*s23^2+6*s14^2*d*s13^2*s12*s34+4*s14^3*s23^3-12*s14^2*s13^3*s12+s14^2*s24^2*s13*s23+6*s14^2*d*s13^2*s12^2-6*s14^2*s24*s13^3-4*s14^3*d*s23^2*s12-10*s14^2*s24*s13*s23*s12-2*s14^2*d*s23^2*s12*s34+3*s14^2*s24*s23*s34^2+6*s14^2*d*s13*s12^2*s34-2*s14^2*s23^2*s12^2+s14^3*s23*s34^2-15*s14^2*s13*s23*s12^2-2*s14^2*d*s13*s23*s34^2-6*s14^2*s24*s12^2*s34+26*s14^3*s13*s23*s12+6*s14^2*d*s24*s13*s12^2+13*s14^3*s13^2*s23+2*s14^2*d*s24*s13^3-4*s14^3*d*s23*s12*s34+2*s14^3*s24*s23*s34-18*s14^2*s13^2*s12^2-3*s14^2*s13^4-5*s14^2*s24*s13^2*s23+4*s14^2*d*s13^3*s12+s14^2*d*s13^2*s34^2-6*s14^2*s13^3*s34-2*s14^2*d*s24^2*s13*s23+4*s14^2*d*s24*s13*s12*s34+4*s14^3*d*s23^2*s34-4*s14^3*d*s13*s23^2-4*s14^3*d*s24*s13*s23+s14^2*d*s23^2*s34^2-18*s14^2*s13^2*s12*s34-6*s14^2*s24*s12^3-5*s14^2*s23*s12^2*s34-2*s14^2*s24^2*s23^2-18*s14^2*s24*s13*s12^2+6*s14^3*s13*s23*s34+2*s14^2*d*s13^3*s34-3*s14^2*s13^2*s34^2-4*s14^2*d*s24*s23*s12*s34+6*s14^3*s24*s23*s12+2*s14^2*d*s24*s12^3-5*s14^2*s24*s23*s12^2-18*s14^2*s13*s12^2*s34+s14^2*s24^3*s23+s14^2*d*s24^2*s23^2+2*s14^2*s24*s13*s23*s34+6*s14^2*d*s13*s23*s12^2+s14^2*s13*s23*s34^2+2*s14^2*d*s24*s12^2*s34-3*s14^2*s12^4+13*s14^3*s23*s12^2-10*s14^2*s13*s23*s12*s34-2*s14^2*s23^2*s34^2-4*s14^3*d*s13*s23*s34-4*s14^3*d*s23*s12^2+2*s14^2*d*s24^2*s13*s12-4*s14^3*d*s24*s23*s12-15*s14^2*s13^2*s23*s12-3*s14^2*s24^2*s12^2+s14^3*s24^2*s23+3*s14^2*s24^2*s23*s34-2*s14^2*d*s24^2*s23*s12-2*s14^2*d*s23*s12*s34^2+16*s14^3*s13*s23^2-6*s14^2*s24*s13^2*s34+6*s14^2*d*s24*s13^2*s12+s14^2*d*s13^4-2*s14^2*d*s24*s23^2*s12-4*s14^2*s24*s23^2*s34+2*s14^2*d*s13*s12*s34^2+4*s14^4*d*s23^2+6*s14^3*s24*s13*s23+s14^2*s23*s34^3-8*s14^3*s23^2*s34+s14^2*d*s24^2*s12^2-2*s14^2*d*s13*s23^2*s34-4*s14^2*s13*s23^2*s12-8*s14^4*s23^2-4*s14^3*d*s13^2*s23+6*s14^2*d*s13^2*s23*s12+2*s14^2*s24*s23*s12*s34-5*s14^2*s13^2*s23*s34+s14^2*d*s12^2*s34^2+s14^2*s23*s12*s34^2-6*s14^2*s12^3*s34+2*s14^2*d*s23*s12^3+s14^2*s24^2*s23*s12-8*s14^3*d*s13*s23*s12-3*s14^2*s24^2*s13^2+6*s14^3*s23*s12*s34+s14^2*d*s13^2*s23^2-4*s14^2*d*s24*s13*s23*s34-6*s14^2*s24^2*s13*s12-5*s14^2*s13^3*s23+4*s14^2*d*s13*s12^3-5*s14^2*s23*s12^3+2*s14^2*d*s12^3*s34-3*s14^2*s12^2*s34^2+2*s14^2*d*s24*s23^2*s34-6*s14^2*s13*s12*s34^2-12*s14^2*s24*s13*s12*s34+2*s14^2*d*s13*s23^2*s12+16*s14^3*s23^2*s12+s14^2*d*s12^4+2*s14^2*d*s13^3*s23+2*s14^2*d*s24*s13^2*s34-18*s14^2*s24*s13^2*s12-2*s14^2*s13^2*s23^2-12*s14^2*s13*s12^3+s14^2*d*s24^2*s13^2+4*s14^3*d*s24*s23^2-2*s14^2*d*s24*s13*s23^2)*Den(s23))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (1/2*(24*s24^3*s13*s12^2-22*s14^2*d*s23^2*s12^2+20*s14*d*s24*s13^3*s23+2*s23*s12^5+40*s13^4*s12*s34-4*s14*s12^2*s34^3-2*d*s24^3*s13*s23*s12+28*s14^2*s23^3*s12-4*s14*s24^3*s12^2-d*s24^4*s12^2+12*s24^2*s13^2*s34^2-4*s14*s13*s23^2*s34^2-d*s12^2*s34^4+12*s24^2*s13^4+2*s14*d*s24^3*s13*s12-20*s14*s23^2*s12^2*s34+3*s14*d*s13^4*s34-8*s14^2*d*s23*s12^2*s34+3*s14*d*s12^3*s34^2-20*s14*s24*s23^2*s12^2-4*s14^3*s24*s23^2+3*s14*d*s24^2*s12^3-24*d*s24^2*s13^3*s12+2*s13^5*s23+16*s14*d*s24*s13*s23^2*s12+3*s14*d*s24^2*s13^2*s34+6*s14*d*s24*s12^3*s34-24*s14^3*s23^3-60*s14*s24*s23*s12^2*s34+24*s14*d*s13^2*s23^2*s12-12*s14^2*d*s13*s23^3+8*s13^3*s34^3+8*s14^2*s24^2*s13*s23+40*s14*d*s24*s13*s23*s12*s34-72*d*s24*s13^2*s12^2*s34+12*s13*s12^5+20*s14*d*s13^3*s23*s34-72*s14*s24*s13^2*s12*s34-12*d*s13*s23*s12^3*s34+80*s13^3*s12^2*s34+2*s24^3*s23*s12^2+3*s14*d*s24*s12^4+24*s24*s12^3*s34^2+24*s13^2*s12*s34^3+8*s14*d*s13^3*s23^2-6*d*s24^2*s13*s23*s12*s34+36*s24*s13*s23*s12^2*s34-4*d*s24*s12^2*s34^3-72*s14*s24*s13^2*s12^2+24*s24*s13^4*s34+2*s23*s12^2*s34^3+6*s13^3*s23*s34^2-9*d*s24^2*s13*s23*s12^2+4*s14^3*d*s23^2*s12-3*d*s24*s13^2*s23*s34^2+4*s13*s23*s12*s34^3+8*s12^5*s34+6*s24^2*s13^2*s23*s34-3*d*s23*s12^3*s34^2+56*s14^2*s24*s13*s23*s12-12*s14^2*d*s23^2*s12*s34+16*s24^3*s13*s12*s34-20*s14*s13^4*s12-4*d*s12^5*s34-8*s14^2*d*s24*s23*s12^2+60*s14*d*s24*s13^2*s23*s12-36*d*s24^2*s13^2*s12^2-72*s14*s13^2*s12^2*s34-30*s14*s24^2*s23*s12^2-12*s14^2*d*s23^3*s12+4*s13*s12*s34^4+8*s14*d*s24*s13^2*s23^2-4*d*s13^3*s34^3+58*s14^2*s23^2*s12^2-12*s14*s24*s13^4-30*s14*s13^2*s23*s34^2+12*s14*d*s24*s13*s12^3+60*s14*d*s13^2*s23*s12*s34+60*s14^2*s13*s23*s12^2-4*s14^2*d*s13*s23*s34^2+24*s24^2*s13^3*s34-6*d*s13*s12^5-d*s24^3*s13^2*s23-24*d*s13*s12^3*s34^2+12*s24*s13^3*s23*s34-36*s14*s24^2*s13*s12^2+s14*d*s12^5-6*d*s24^2*s13^4+24*s13*s12^2*s34^3-48*s14*s24*s13^3*s12-d*s13^5*s23-12*s14*s24*s13*s23*s34^2-12*s14*s24^2*s13^3-d*s23*s12^5+28*s14^2*s13*s23^3-20*d*s24*s13^4*s12+3*s14*d*s24*s12^2*s34^2-8*s14*s24*s23^2*s12*s34+20*s14*d*s24*s23*s12^3-4*s14*s24^3*s13*s23-72*s14*s24*s13*s12^2*s34-60*s14*s13*s23*s12*s34^2+2*s12^2*s34^4+28*s14^2*s24*s13^2*s23+2*s24^4*s12^2+s14*d*s24^3*s13^2-9*d*s13*s23*s12^2*s34^2-4*d*s24^3*s12^2*s34+24*s24^2*s13*s12*s34^2-10*d*s13^3*s23*s12^2+36*s13^2*s23*s12^2*s34-9*d*s13^2*s23*s12*s34^2-36*d*s24^2*s13*s12^2*s34+72*s24*s13*s12^2*s34^2-d*s24^4*s13^2-4*s14*s24^3*s13^2-4*s14^2*d*s24^2*s13*s23+24*s24*s13*s23*s12^3+40*s14*d*s13^3*s23*s12-24*s14*s24^2*s13*s12*s34+8*s14*d*s13^2*s23^2*s34-48*d*s24*s13^3*s12*s34+48*s13*s12^3*s34^2+40*s13^3*s12^3-12*d*s13*s12^2*s34^3+12*s24*s23*s12^3*s34-18*d*s24*s13^2*s23*s12^2+4*s14^3*d*s23^2*s34+18*s24^2*s13^2*s23*s12+3*s14*d*s24^2*s13^3+8*s24^3*s12^2*s34+20*s13^3*s23*s12^2+10*s14*d*s23*s12^2*s34^2+12*s14*d*s13*s12^3*s34+12*s24^2*s12^4+40*s24*s13^4*s12-12*s14*s24*s13^2*s34^2+9*s14*d*s13^2*s12*s34^2+12*s12^4*s34^2+72*s24^2*s13^2*s12^2-48*s14*s13*s23^2*s12^2-8*s14*s13*s12*s34^3+60*s14*d*s13*s23*s12^2*s34+6*s14*d*s24*s13*s12*s34^2+3*s14*d*s24*s13^4+4*s14^3*d*s13*s23^2-4*s14^2*s23^3*s34+2*s14^2*d*s23^2*s34^2+9*s14*d*s24^2*s13^2*s12+2*s24^3*s13^2*s23-6*d*s24*s13*s23*s12*s34^2-12*d*s24^2*s13^3*s34+28*s14^2*s23*s12^2*s34-2*d*s13*s12*s34^4+2*s14^2*s24^2*s23^2-12*d*s13^3*s23*s12*s34+5*s14*d*s13^4*s12-144*s14*s24*s13*s23*s12^2-8*d*s24*s13*s12*s34^3-40*d*s13^3*s12^2*s34-d*s24^3*s23*s12^2+20*s14*d*s23*s12^3*s34+36*s24*s13^2*s23*s12*s34+9*s14*d*s13*s12^2*s34^2-16*s14*s13^3*s23^2-24*s14*s24*s13^3*s34+24*s24*s13^3*s23*s12+40*s14*d*s13*s23*s12^3+96*s24*s13*s12^3*s34-8*s14^2*d*s24*s13^2*s23-12*s14*s24*s12^4-d*s23*s12^2*s34^3-3*d*s13^3*s23*s34^2+8*s14^3*d*s23^3+72*s24*s13^2*s12*s34^2+6*s23*s12^3*s34^2-36*d*s24^2*s13^2*s12*s34-30*s14*s24^2*s13^2*s23-8*s14^2*d*s24*s23*s12*s34-12*d*s13^2*s12*s34^3-12*s14*s24^2*s23*s12*s34-12*d*s24*s12^3*s34^2+8*s24*s12^2*s34^3-12*d*s24*s13^4*s34+6*s24*s23*s12^2*s34^2-3*d*s24^2*s23*s12^2*s34+20*s14*d*s24^2*s13*s23*s12+28*s14^2*s24*s23*s12^2+20*s14*d*s24*s13^2*s23*s34-6*d*s24^2*s13^2*s34^2-12*s14*s24^2*s12^3-6*d*s12^4*s34^2-12*s14*s12^3*s34^2-12*d*s24^3*s13*s12^2-6*d*s24^2*s12^4-48*s14*s13^3*s12*s34+36*s14^2*s23^2*s12*s34+2*s14^2*d*s24^2*s23^2+s14*d*s13^5+16*s14^2*s24*s13*s23*s34-12*s14*s13^4*s34-20*d*s13^4*s12*s34+16*s14*d*s13*s23^2*s12*s34-12*s14^2*d*s13*s23*s12^2+8*s14^2*s13*s23*s34^2+48*s24^2*s13^3*s12-12*s14*s24^2*s12^2*s34+2*s24^4*s13^2+s14*d*s24^3*s12^2-132*s14*s13^2*s23*s12^2+s14*d*s12^2*s34^3+56*s14^2*s13*s23*s12*s34+2*s14^2*s23^2*s34^2-4*s14*s23*s12*s34^3+4*s14^2*d*s23^3*s34-20*d*s13^3*s12^3+4*s24^4*s13*s12+72*s24^2*s13^2*s12*s34-36*d*s24*s13^2*s12*s34^2+3*s14*d*s12^4*s34-4*d*s24*s12^5+48*s13^3*s12*s34^2-48*d*s24*s13*s12^3*s34+6*s24*s13^4*s23-40*s14*s13*s23^2*s12*s34+3*s14*d*s13^3*s34^2+6*s24^2*s23*s12^2*s34-3*d*s24*s23*s12^2*s34^2+60*s14*d*s13^2*s23*s12^2-12*s14*s24*s23*s12*s34^2+3*s14*d*s24^2*s12^2*s34-d*s13^6+2*s13^2*s23*s34^3-60*s14*s24*s13^2*s23*s34-60*s14*s24^2*s13*s23*s12+12*s14*d*s13^3*s12*s34+16*s24*s13*s12*s34^3-4*s14*s13^2*s34^3+6*s24^2*s23*s12^3-16*s14^2*d*s24*s13*s23*s12-4*s14*s12^5-12*d*s24*s13^3*s23*s12+12*s24*s13*s23*s12*s34^2-d*s13^2*s34^4-40*d*s13^2*s12^3*s34+12*s24^2*s12^2*s34^2+10*s14*d*s13^4*s23+24*s24*s13^3*s34^2+60*s14^2*s13^2*s23*s12+30*s13^4*s12^2-8*s14^2*d*s13^2*s23*s34+24*s24*s12^4*s34-4*d*s24*s13^2*s34^3-5*d*s13*s23*s12^4-3*d*s23*s12^4*s34-4*d*s24^3*s13^3+24*s24^3*s13^2*s12-4*s14^2*s24*s23^3+10*s14*d*s24^2*s13^2*s23+8*s13^5*s34+6*s14*d*s24*s13^3*s34-36*s14*s13*s12^2*s34^2+60*s14*d*s24*s13*s23*s12^2+8*s12^3*s34^3-88*s14*s13*s23*s12^3-4*s14^2*d*s24^2*s23*s12+48*s24^2*s13*s12^3+6*s13^4*s23*s34-4*s14*s23^2*s12*s34^2-48*s14*s23*s12^3*s34-4*s14^2*d*s23*s12*s34^2-4*d*s12^3*s34^3-9*d*s24^2*s13^2*s23*s12-8*s14*s24*s13*s23^2*s34+36*s24*s13^2*s23*s12^2-20*s14^3*s13*s23^2+10*s14*d*s13^2*s12^3-36*s14*s24^2*s13^2*s12-10*d*s13^2*s23*s12^3+24*s24^2*s12^3*s34-36*d*s13^2*s12^2*s34^2-12*d*s24*s13*s23*s12^3-144*s14*s13*s23*s12^2*s34-24*s14*s24*s13*s12*s34^2-36*d*s24*s13*s12^2*s34^2+18*s13^2*s23*s12*s34^2+72*s24^2*s13*s12^2*s34-15*d*s13^4*s12^2+40*s24*s13*s12^4-40*s14*s13^3*s12^2+36*s14^2*s24*s13*s23^2+24*s14*d*s13*s23^2*s12^2-4*d*s13^5*s34-6*d*s24*s23*s12^3*s34+2*s12^6+10*s14*d*s23*s12^4+8*s24^3*s13^3+2*s14*d*s13*s12*s34^3+96*s24*s13^3*s12*s34-12*s14^2*d*s24*s23^2*s12+4*s14^2*s24*s23^2*s34+3*s14*d*s24*s13^2*s34^2-18*d*s24*s13^2*s23*s12*s34+80*s24*s13^2*s12^3-48*s14*s13*s12^3*s34-40*d*s24*s13^3*s12^2-36*s14*s13^2*s12*s34^2-4*s14*s24^2*s23^2*s12+8*s14*d*s23^2*s12^3+2*s13^2*s34^4+24*s13^3*s23*s12*s34-30*s14*s23*s12^2*s34^2-4*d*s24^3*s13^2*s34+6*s24^2*s13^3*s23-4*s14^3*s23^2*s34+6*s14*d*s24^2*s13*s12*s34-20*s14*s13^2*s23^2*s34+5*s14*d*s13*s12^4-20*d*s13*s12^4*s34-12*s14^2*d*s13*s23^2*s34+116*s14^2*s13*s23^2*s12+8*s24*s12^5+6*s24*s23*s12^4+4*s14^2*d*s24*s23^3-88*s14*s13^3*s23*s12-5*d*s13^4*s23*s12+12*s13^5*s12-3*d*s24^2*s13^3*s23+8*s24^3*s13^2*s34-d*s12^6-12*s14*s24*s12^2*s34^2-40*d*s24*s13^2*s12^3-4*d*s24*s13^5+80*s24*s13^3*s12^2-20*s14*s13*s12^4+18*s14*d*s24*s13*s12^2*s34-12*s14^2*d*s13^2*s23*s12-48*s14*s24*s23*s12^3+20*s14*d*s13*s23*s12*s34^2+16*s14^2*s24*s23*s12*s34+12*s13^4*s34^2+28*s14^2*s13^2*s23*s34+8*s14^2*s23*s12*s34^2-4*s14*s13^5-3*d*s24*s23*s12^4-16*s14*s23^2*s12^3+10*s13^4*s23*s12-4*s14^2*d*s23*s12^3-8*d*s24^3*s13*s12*s34-4*s14*s13*s23*s34^3+8*s14^2*s24^2*s23*s12+9*s14*d*s24^2*s13*s12^2-18*d*s24*s13*s23*s12^2*s34+12*s14*d*s24*s13^3*s12+12*s24^2*s13*s23*s12*s34+40*s13*s12^4*s34+10*s14*d*s13^2*s23*s34^2-22*s14*s23*s12^4-48*s14*s24*s13*s12^3-16*s14^2*d*s13*s23*s12*s34-4*d*s24^3*s12^3+20*s13^2*s23*s12^3+72*s13^2*s12^2*s34^2-12*d*s24^2*s12^3*s34-20*s14*s24*s13^2*s23^2+10*s14*d*s13^3*s12^2-12*d*s24^2*s13*s12*s34^2-18*d*s13^2*s23*s12^2*s34+18*s13*s23*s12^2*s34^2-144*s14*s13^2*s23*s12*s34-22*s14^2*d*s13^2*s23^2-15*d*s13^2*s12^4-8*s14^2*d*s24*s13*s23*s34+10*s14*d*s24^2*s23*s12^2+20*s14^2*s13^3*s23-6*d*s24*s13^3*s23*s34+18*s14*d*s13^2*s12^2*s34-40*s14*s13^2*s12^3-12*s14*s24^2*s13*s23*s34-20*d*s24*s13*s12^4-144*s14*s24*s13^2*s23*s12+20*s14^2*s23*s12^3-12*d*s24^3*s13^2*s12+6*s23*s12^4*s34+10*s13*s23*s12^4+30*s13^2*s12^4-4*s14*s24^3*s23*s12-120*s14*s24*s13*s23*s12*s34-12*d*s24*s13^3*s34^2+18*s14*d*s24*s13^2*s12^2+36*s14^2*s24*s23^2*s12+4*s14^2*d*s24*s23^2*s34-12*d*s24*s12^4*s34+8*s24*s13^2*s34^3+20*s14*d*s24*s23*s12^2*s34-48*s14*s13^3*s23*s34+2*s13^6+4*s24^3*s13*s23*s12-3*d*s13^4*s23*s34+8*s24^3*s12^3-24*s14*s24*s12^3*s34+36*s14^2*s13*s23^2*s34-44*s14^2*d*s13*s23^2*s12+18*s14*d*s24*s13^2*s12*s34-20*s14^3*s23^2*s12-24*d*s24^2*s13*s12^3-22*s14*s13^4*s23-48*s14*s13^2*s23^2*s12-4*s14^2*d*s13^3*s23+8*s14*d*s24*s23^2*s12^2-12*s14*s24^2*s13^2*s34-d*s13^2*s23*s34^3+58*s14^2*s13^2*s23^2-3*d*s24^2*s13^2*s23*s34+8*s14*d*s23^2*s12^2*s34-40*s14*s24*s13*s23^2*s12-8*s14*s24^3*s13*s12-2*d*s13*s23*s12*s34^3+6*s24*s13^2*s23*s34^2-2*d*s24^4*s13*s12+s14*d*s13^2*s34^3-24*d*s13^3*s12*s34^2+18*s24^2*s13*s23*s12^2-3*d*s24*s13^4*s23-3*d*s24^2*s23*s12^3-6*d*s24^2*s12^2*s34^2+80*s13^2*s12^3*s34-6*d*s13^5*s12-48*s14*s24*s13^3*s23+4*s14^3*d*s24*s23^2-6*d*s13^4*s34^2-12*s14*s13^3*s34^2-12*s14^2*d*s24*s13*s23^2+24*s13*s23*s12^3*s34-4*s14*s24^2*s13*s23^2-12*s14*s12^4*s34+144*s24*s13^2*s12^2*s34+8*s24*s13^5)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*Den(s23));

id INT(pentagon1x123,3,21,4,2,[],1,-2,2,0,1) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (1/2*Den(s14)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*(4*s14^2*d*s23^2*s12^2+2*s14*d*s24*s13^3*s23-4*s14^2*s23^3*s12-4*s14*d*s24^2*s13*s23^2-12*s23*s12*s34^4+60*s14*s13*s23^2*s34^2+8*s14*s23^2*s12^2*s34-s14^2*d*s23*s12^2*s34-4*s14^3*s24*s23^2-4*s13^5*s23-8*s14*d*s24*s13*s23^2*s12-12*s24^2*s23*s12*s34^2-16*s14^3*s23^3-8*s14*d*s13^2*s23^2*s12+4*s14^2*d*s13*s23^3-8*s14*d*s24*s13*s23*s12*s34-48*s24*s13*s23*s34^3+8*s14*d*s13^3*s23*s34+2*d*s13*s23*s12^3*s34-4*s14*d*s24^2*s23^2*s34-4*s14*d*s13^3*s23^2+6*d*s24^2*s13*s23*s12*s34-24*s24*s13*s23*s12^2*s34-12*s23*s12^2*s34^3-40*s13^3*s23*s34^2+18*d*s24*s13^2*s23*s34^2-48*s13*s23*s12*s34^3-36*s24^2*s13^2*s23*s34+d*s23*s12^3*s34^2-4*s14^2*s24*s23*s34^2+3*s14^2*d*s24*s23*s12^2-4*s14*d*s24*s13^2*s23*s12-4*s14*d*s24^2*s13*s23*s34+4*s14^2*d*s23^3*s12-8*s14*d*s24*s13^2*s23^2-48*s14*s13^2*s23*s34^2+6*s14*d*s13^2*s23*s12*s34+3*s14^2*d*s13*s23*s34^2+d*s24^3*s13^2*s23-48*s24*s13^3*s23*s34+8*s14*d*s13*s23*s34^3+d*s13^5*s23+d*s24^3*s23*s34^2-48*s14*s24*s13*s23*s34^2-20*s14^2*s13*s23^3+16*s14*s24*s23^2*s12*s34-48*s14*s13*s23*s12*s34^2-4*s14^2*s24*s13^2*s23+9*d*s13*s23*s12^2*s34^2+3*d*s13^3*s23*s12^2-36*s13^2*s23*s12^2*s34+18*d*s13^2*s23*s12*s34^2-4*s24^3*s23*s34^2-s14^2*d*s24^2*s13*s23+2*s14*d*s13^3*s23*s12-12*s14*d*s13^2*s23^2*s34+3*d*s24*s13^2*s23*s12^2-2*s14*d*s24^3*s23*s34-12*s24^2*s13^2*s23*s12-12*s13^3*s23*s12^2+9*d*s24^2*s13*s23*s34^2-2*s14*d*s23*s12^2*s34^2+6*d*s24*s23*s12*s34^3+8*s14*s13*s23^2*s12^2-4*s14*d*s13*s23*s12^2*s34-4*s23*s34^5+2*d*s24^3*s13*s23*s34-20*s14^2*s23^3*s34-4*s14^2*d*s23^2*s34^2-16*s14*d*s24*s13*s23^2*s34-4*s24^3*s13^2*s23+28*s14*s24*s23^2*s34^2+18*d*s24*s13*s23*s12*s34^2+s14^2*d*s24^3*s23+12*d*s13^3*s23*s12*s34-8*s14*d*s23^2*s12*s34^2-2*s14*d*s23*s12^3*s34-72*s24*s13^2*s23*s12*s34+20*s14*s13^3*s23^2-24*s24*s13^3*s23*s12-2*s14*d*s13*s23*s12^3-s14^2*d*s24*s13^2*s23+3*d*s23*s12^2*s34^3+10*d*s13^3*s23*s34^2-4*s23*s12^3*s34^2-8*s14*s24^2*s13^2*s23-2*s14^2*d*s24*s23*s12*s34+2*s14*d*s24*s23*s34^3+d*s23*s34^5-12*s24*s23*s12^2*s34^2-6*s14*d*s24^2*s13*s23*s12-8*s14*s24^2*s23*s34^2-s14^2*d*s24*s23*s34^2+6*s14*d*s24*s13^2*s23*s34+3*d*s23*s12*s34^4+16*s14^2*s23^2*s12*s34+4*s14^2*d*s24^2*s23^2-8*s14^2*s24*s13*s23*s34-16*s14*d*s13*s23^2*s12*s34-s14^2*d*s13*s23*s12^2-12*s14^2*s13*s23*s34^2-8*s14*s13^2*s23*s12^2-8*s14^2*s13*s23*s12*s34-4*s14*d*s24*s23*s12*s34^2+32*s14^2*s23^2*s34^2-16*s14*s23*s12*s34^3+4*s14^2*d*s23^3*s34+2*s14*d*s23*s12*s34^3-12*s24*s13^4*s23+56*s14*s13*s23^2*s12*s34+3*d*s24*s23*s12^2*s34^2-8*s14*s23*s34^4-2*s14*d*s13^2*s23*s12^2-16*s14*s24*s23*s12*s34^2-40*s13^2*s23*s34^3-48*s14*s24*s13^2*s23*s34-2*s14^2*d*s24*s13*s23*s12-2*s14*d*s24^2*s23*s34^2+6*d*s24*s13^3*s23*s12-72*s24*s13*s23*s12*s34^2+2*s14*d*s13^4*s23-4*s14^2*s13^2*s23*s12-16*s14*s24*s23*s34^3+3*s14^2*d*s13^2*s23*s34-4*s14^2*s24*s23^3-2*s14*d*s24^2*s13^2*s23-6*s14*d*s24^2*s23*s12*s34-6*s14*d*s24*s13*s23*s12^2+3*s14^2*d*s24^2*s23*s12+20*s14*s23^2*s34^3-20*s13^4*s23*s34+28*s14*s23^2*s12*s34^2+s14^2*d*s23*s34^3-s14^2*d*s23*s12*s34^2+3*d*s24*s23*s34^4-36*s24^2*s13*s23*s34^2+3*d*s24^2*s13^2*s23*s12+56*s14*s24*s13*s23^2*s34-12*s24*s13^2*s23*s12^2+12*s14^3*s13*s23^2+d*s13^2*s23*s12^3-24*s24*s23*s12*s34^3-8*s14*d*s24*s23^2*s34^2-16*s14*s13*s23*s12^2*s34-72*s13^2*s23*s12*s34^2+16*s14^2*s24*s13*s23^2-4*s14*d*s13*s23^2*s12^2+3*d*s24^2*s23*s34^3+8*s14^2*d*s24*s23^2*s12+16*s14^2*s24*s23^2*s34+18*d*s24*s13^2*s23*s12*s34-48*s13^3*s23*s12*s34-8*s14*s23*s12^2*s34^2-4*s14^2*s23*s34^3-12*s24^2*s13^3*s23-20*s13*s23*s34^4+12*s14^3*s23^2*s34+60*s14*s13^2*s23^2*s34-8*s14^2*d*s13*s23^2*s34+16*s14^2*s13*s23^2*s12+4*s14^2*d*s24*s23^3-16*s14*s13^3*s23*s12+3*d*s13^4*s23*s12-8*s24^3*s13*s23*s34+5*d*s13*s23*s34^4+3*d*s24^2*s13^3*s23-8*s14*d*s24*s23^2*s12*s34-2*s14*d*s24^3*s13*s23-s14^2*d*s13^2*s23*s12+6*s14*d*s13*s23*s12*s34^2-12*s14^2*s13^2*s23*s34-4*s14^2*s23*s12*s34^2-12*s13^4*s23*s12+s14^2*d*s23*s12^3+6*s14*d*s24*s13*s23*s34^2-s14^2*d*s24^2*s23*s34-32*s14*s13*s23*s34^3+6*d*s24*s13*s23*s12^2*s34-24*s24^2*s13*s23*s12*s34+12*s14*d*s13^2*s23*s34^2-2*s14^2*d*s13*s23*s12*s34-4*s13^2*s23*s12^3+28*s14*s24*s13^2*s23^2+9*d*s13^2*s23*s12^2*s34-36*s13*s23*s12^2*s34^2-48*s14*s13^2*s23*s12*s34-4*s14^2*d*s13^2*s23^2-2*s14^2*d*s24*s13*s23*s34-12*s24^2*s23*s34^3-4*s14^2*s13^3*s23+12*d*s24*s13^3*s23*s34-16*s14*s24^2*s13*s23*s34-16*s14*s24*s13^2*s23*s12-4*s14*d*s23^2*s34^3-32*s14*s24*s13*s23*s12*s34+8*s14*s24^2*s23^2*s34-6*s14*d*s24*s23*s12^2*s34-32*s14*s13^3*s23*s34+5*d*s13^4*s23*s34-12*s24*s23*s34^4+64*s14^2*s13*s23^2*s34-4*s14^3*s23^2*s12-8*s14*s13^4*s23+28*s14*s13^2*s23^2*s12+s14^2*d*s13^3*s23+10*d*s13^2*s23*s34^3+32*s14^2*s13^2*s23^2+9*d*s24^2*s13^2*s23*s34-4*s14*d*s23^2*s12^2*s34+16*s14*s24*s13*s23^2*s12+12*d*s13*s23*s12*s34^3-72*s24*s13^2*s23*s34^2+3*d*s24*s13^4*s23+2*s14*d*s23*s34^4-12*s14*d*s13*s23^2*s34^2+3*d*s24^2*s23*s12*s34^2-16*s14*s24*s13^3*s23-8*s13*s23*s12^3*s34+8*s14*s24^2*s13*s23^2+12*d*s24*s13*s23*s34^3))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (-Den(s14)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*(2*s14^2*d*s24*s23*s34+14*s14^2*s24*s23*s12-2*s14*s24^2*s23*s34-2*s14*d*s23*s34^3-s14^2*d*s24^2*s23-2*s14*s12^3*s34-s14*s24^2*s34^2+6*s14*s13^2*s23*s12+2*s14^2*d*s13*s23*s12+6*s14^2*s13*s23*s34+4*s14*d*s24*s23*s12*s34-2*d*s24*s13^3*s23-20*s14^2*s23^2*s34-4*s14*s24*s13*s23*s12+4*s14*d*s23^2*s12*s34-2*s14*s24^2*s13*s34-20*s14^2*s13*s23^2+6*s24*s23*s34^3-d*s13^4*s23+6*s14*s13^3*s23-4*d*s13^3*s23*s34-s14*s24^2*s13^2-6*s14*d*s13*s23*s34^2-2*s14*s24^3*s34-6*s14*s13*s23^2*s12-2*s14*s24*s12*s34^2+4*s14^2*d*s23^2*s34-4*d*s24*s13*s23*s12*s34-6*s14*s24*s23^2*s34-2*s14*s23*s12^3+3*s13^4*s23+7*s14^2*s24^2*s23-s14*s12^2*s34^2+3*s23*s12^2*s34^2-6*s14*s24*s13*s23^2-2*s14*s24^3*s13-6*d*s13^2*s23*s12*s34+18*s13*s23*s12*s34^2+18*s24*s13*s23*s34^2+2*s14*d*s23*s12^2*s34-2*d*s24^2*s13*s23*s34+6*s13^3*s23*s12-2*d*s24*s13^2*s23*s12-2*s14*s13*s12^3+4*s14^2*d*s13*s23^2-4*d*s13*s23*s34^3-8*s14^3*s23^2-13*s14*s13^2*s23^2+4*s14*d*s13^2*s23^2-6*s14*s24^2*s13*s12+12*s14*s24*s13*s23*s34-d*s23*s12^2*s34^2+3*s23*s34^4+8*s14^2*s23^3+2*s14*d*s13*s23*s12^2+12*s13*s23*s34^3-2*d*s13*s23*s12^2*s34-2*d*s13^3*s23*s12+12*s14*s13*s23*s12*s34+6*s14*s23*s12*s34^2-6*s14*s24^2*s23*s12+2*s14^2*s24*s23*s34-2*s14^2*d*s24*s23*s12+12*s14^2*s23^2*s12+2*s14^2*s13*s23*s12-2*s14^2*d*s13*s23*s34-6*s14*s24^2*s12^2+18*s14*s13^2*s23*s34-2*d*s24*s23*s34^3-2*d*s24*s23*s12*s34^2-2*s14*s24*s13^2*s12-2*s14*d*s13^3*s23-6*d*s24*s13^2*s23*s34+12*s13^3*s23*s34+2*s14*d*s24^2*s13*s23-4*s14^2*d*s23^2*s12-26*s14*s13*s23^2*s34-4*s14*s24^3*s12+6*s14*s23*s34^3+6*s24*s13^3*s23-2*s14*s24*s23^2*s12-d*s23*s34^4+3*s14^2*s13^2*s23-d*s24^2*s23*s34^2+18*s24*s13^2*s23*s34+6*s24*s23*s12*s34^2-d*s13^2*s23*s12^2+8*s14*d*s13*s23^2*s34-2*s14*s24^2*s13*s23+2*s14^2*d*s24*s13*s23-2*d*s23*s12*s34^3-s14*s24^4-4*s14^2*d*s24*s23^2-s14*s24^2*s23^2-4*s14*s24*s12^3-d*s24^2*s13^2*s23+3*s14^2*s23*s34^2-s14*s12^4-6*s14*s24^2*s12*s34-6*s14*d*s13^2*s23*s34+6*s13*s23*s12^2*s34+6*s14*s24*s13^2*s23+18*s13^2*s23*s34^2-s14^2*d*s13^2*s23-s14^2*d*s23*s34^2-13*s14*s23^2*s34^2-2*s14*s13*s23*s12^2-6*s14*s24*s12^2*s34-2*s14*s24^3*s23+2*s14^2*s23*s12*s34+12*s14^2*s24*s23^2+6*s14*s24*s23*s34^2-2*s14*s23*s12^2*s34+7*s14^2*s23*s12^2+4*s14*d*s24*s13*s23^2+4*s14*d*s23^2*s34^2+6*s24*s13^2*s23*s12+6*s24^2*s13*s23*s34-6*d*s24*s13*s23*s34^2+4*s14*d*s24*s23^2*s34+2*s14^2*s24*s13*s23-6*d*s13*s23*s12*s34^2+18*s13^2*s23*s12*s34-4*s14*s24*s13*s12*s34-4*s14^2*d*s23^3-6*d*s13^2*s23*s34^2+4*s14*d*s13*s23^2*s12+18*s14*s13*s23*s34^2-s14^2*d*s23*s12^2-s14*s23^2*s12^2+4*s14*d*s24*s13*s23*s12-6*s14*s24*s23*s12^2-2*s14*s13*s12^2*s34+2*s14^2*d*s23*s12*s34+3*s24^2*s13^2*s23-6*s14*s23^2*s12*s34-s14*s13^2*s12^2-4*s14*s24*s23*s12*s34+3*s24^2*s23*s34^2+6*s23*s12*s34^3+3*s13^2*s23*s12^2+12*s24*s13*s23*s12*s34-6*s14*s24*s13*s12^2+2*s14*d*s24^2*s23*s34))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (1/2*Den(s14)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*(4*s14^2*d*s24*s23*s34-4*s14^2*s24*s23*s12-9*d*s24^2*s13^2*s34+48*s24*s13*s34^3-8*s14*s24^2*s23*s34+4*s14*d*s23*s34^3-10*d*s13^3*s34^2-2*s14^2*d*s24^2*s23+4*s14*s12^3*s34+10*s14*s24^2*s34^2-28*s14*s13^2*s23*s12+4*s14^2*d*s13*s23*s12-20*s14^2*s13*s23*s34+8*s14*d*s24*s23*s12*s34+20*s14^2*s23^2*s34-16*s14*s24*s13*s23*s12+20*s14*s24^2*s13*s34+20*s14^2*s13*s23^2-20*s14*s13^3*s23+72*s24*s13^2*s12*s34+10*s14*s24^2*s13^2+12*s14*d*s13*s23*s34^2-3*d*s24^2*s12*s34^2+36*s13*s12^2*s34^2+4*s13^2*s12^3+4*s14*s24^3*s34+20*s14*s24*s12*s34^2+12*s24^2*s13^2*s12-d*s13^2*s12^3+8*s24^3*s13*s34-4*s14^2*d*s23^2*s34-2*s14^2*s24^2*s23+10*s14*s12^2*s34^2+4*s14*s24^3*s13+24*s24*s13*s12^2*s34+72*s13^2*s12*s34^2-3*d*s24*s12^2*s34^2+8*s13*s12^3*s34+4*s14*d*s23*s12^2*s34+4*s14*s13*s12^3-4*s14^2*d*s13*s23^2+40*s13^3*s34^2+24*s14*s24*s13^2*s34+16*s14^3*s23^2-18*d*s13^2*s12*s34^2+8*s14*d*s24*s23*s34^2+12*s14*s24^2*s13*s12-2*d*s13*s12^3*s34+12*s24*s12^2*s34^2-56*s14*s24*s13*s23*s34+40*s13^2*s34^3+4*s14*d*s13*s23*s12^2-18*d*s24*s13*s12*s34^2+24*s24^2*s13*s12*s34-56*s14*s13*s23*s12*s34-2*d*s24^3*s13*s34-28*s14*s23*s12*s34^2+20*s13*s34^4-3*d*s13^3*s12^2-28*s14^2*s24*s23*s34-4*s14^2*d*s24*s23*s12-3*d*s24^2*s13^2*s12+4*s14^2*s23^2*s12+8*s14*d*s24*s13^2*s23-28*s14^2*s13*s23*s12-4*s14^2*d*s13*s23*s34-60*s14*s13^2*s23*s34+12*s13^3*s12^2+20*s14*s24*s13^2*s12-5*d*s13*s34^4+4*s14*d*s13^3*s23+12*s24^2*s12*s34^2-9*d*s13*s12^2*s34^2+8*s14*s13*s34^3+4*s14*d*s24^2*s13*s23-10*d*s13^2*s34^3-4*s14^2*d*s23^2*s12-12*d*s24*s13*s34^3+36*s24^2*s13^2*s34-20*s14*s23*s34^3+24*s14*s13*s12*s34^2-10*s14^2*s13^2*s23+4*s24^3*s13^2-12*d*s13^3*s12*s34+24*s24*s12*s34^3-8*s14*s24^2*s13*s23-d*s12^3*s34^2-5*d*s13^4*s34+8*s14*s13^3*s34+4*s14^2*d*s24*s13*s23-4*s14^2*d*s24*s23^2+4*s24^3*s34^2-9*d*s24^2*s13*s34^2-12*d*s24*s13^3*s34-10*s14^2*s23*s34^2+12*s24*s13^2*s12^2+12*s14*s24^2*s12*s34-12*d*s13*s12*s34^3+36*s13^2*s12^2*s34+12*s14*d*s13^2*s23*s34-6*d*s24^2*s13*s12*s34+72*s24*s13*s12*s34^2+12*s14*s13^2*s34^2-d*s34^5-28*s14*s24*s13^2*s23-d*s24^3*s34^2-2*s14^2*d*s13^2*s23+24*s14*s24*s13*s34^2+8*s14*d*s23*s12*s34^2-2*s14^2*d*s23*s34^2+24*s24*s13^3*s12+16*s14*d*s13*s23*s12*s34+20*s13^4*s34-d*s13^5-8*s14*s13*s23*s12^2+4*s12^3*s34^2+12*s14*s24*s12^2*s34-d*s24^3*s13^2-28*s14^2*s23*s12*s34+4*s14^2*s24*s23^2-28*s14*s24*s23*s34^2-18*d*s24*s13^2*s34^2+16*s14*d*s24*s13*s23*s34+24*s14*s13^2*s12*s34-6*d*s24*s13^3*s12+12*s12^2*s34^3+8*s14*s24*s34^3-8*s14*s23*s12^2*s34-3*d*s24*s34^4+4*s34^5+72*s24*s13^2*s34^2+2*s14*s34^4-2*s14^2*s23*s12^2-3*d*s24^2*s13^3+8*s14*s24*s13^3-3*d*s24*s13^4-9*d*s13^2*s12^2*s34+48*s13*s12*s34^3-3*d*s13^4*s12+2*s14*s13^4-28*s14^2*s24*s13*s23+8*s14*s13^3*s12-6*d*s24*s13*s12^2*s34+40*s14*s24*s13*s12*s34+12*s12*s34^4+4*s13^5-3*d*s24^2*s34^3+36*s24^2*s13*s34^2-60*s14*s13*s23*s34^2-3*d*s12*s34^4+48*s24*s13^3*s34+12*s13^4*s12+8*s14*s12*s34^3+12*s24^2*s34^3-2*s14^2*d*s23*s12^2-3*d*s24*s13^2*s12^2+8*s14*d*s24*s13*s23*s12+20*s14*s13*s12^2*s34+4*s14^2*d*s23*s12*s34+12*s24*s13^4+10*s14*s13^2*s12^2+48*s13^3*s12*s34-18*d*s24*s13^2*s12*s34+12*s24^2*s13^3+8*s14*d*s13^2*s23*s12-16*s14*s24*s23*s12*s34-3*d*s12^2*s34^3+12*s24*s34^4-6*d*s24*s12*s34^3+12*s14*s24*s13*s12^2+4*s14*d*s24^2*s23*s34))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (-1/2*Den(s14)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*(s14*d*s23*s34^3-4*s14*s13^2*s23*s12-2*s14*d*s24*s23*s12*s34+4*d*s24*s13^3*s23+12*s14^2*s23^2*s34-8*s14*d*s23^2*s12*s34+12*s14^2*s13*s23^2-12*s24*s23*s34^3+2*d*s13^4*s23-4*s14*s13^3*s23+3*s14*d*s24*s23*s12^2+8*d*s13^3*s23*s34+3*s14*d*s13*s23*s34^2+12*s14*s13*s23^2*s12+8*d*s24*s13*s23*s12*s34+12*s14*s24*s23^2*s34-6*s13^4*s23-6*s23*s12^2*s34^2+12*s14*s24*s13*s23^2+12*d*s13^2*s23*s12*s34-36*s13*s23*s12*s34^2-36*s24*s13*s23*s34^2-s14*d*s23*s12^2*s34+4*d*s24^2*s13*s23*s34-12*s13^3*s23*s12+4*d*s24*s13^2*s23*s12+8*d*s13*s23*s34^3+26*s14*s13^2*s23^2-8*s14*d*s13^2*s23^2-s14*d*s24*s23*s34^2-8*s14*s24*s13*s23*s34+2*d*s23*s12^2*s34^2-6*s23*s34^4-16*s14^2*s23^3-s14*d*s13*s23*s12^2-24*s13*s23*s34^3+4*d*s13*s23*s12^2*s34+4*d*s13^3*s23*s12-8*s14*s13*s23*s12*s34-4*s14*s23*s12*s34^2+s14*d*s23*s12^3-4*s14^2*s23^2*s12-s14*d*s24*s13^2*s23-12*s14*s13^2*s23*s34+4*d*s24*s23*s34^3+4*d*s24*s23*s12*s34^2+s14*d*s13^3*s23+12*d*s24*s13^2*s23*s34-24*s13^3*s23*s34-s14*d*s24^2*s13*s23+52*s14*s13*s23^2*s34-4*s14*s23*s34^3-12*s24*s13^3*s23+4*s14*s24*s23^2*s12+2*d*s23*s34^4+2*d*s24^2*s23*s34^2-36*s24*s13^2*s23*s34-12*s24*s23*s12*s34^2+2*d*s13^2*s23*s12^2-16*s14*d*s13*s23^2*s34+4*d*s23*s12*s34^3+2*s14*s24^2*s23^2+2*d*s24^2*s13^2*s23+3*s14*d*s13^2*s23*s34-12*s13*s23*s12^2*s34-4*s14*s24*s13^2*s23+3*s14*d*s24^2*s23*s12-36*s13^2*s23*s34^2-s14*d*s23*s12*s34^2+26*s14*s23^2*s34^2-2*s14*d*s13*s23*s12*s34-4*s14^2*s24*s23^2-4*s14*s24*s23*s34^2-2*s14*d*s24*s13*s23*s34+s14*d*s24^3*s23-8*s14*d*s24*s13*s23^2-8*s14*d*s23^2*s34^2-12*s24*s13^2*s23*s12-12*s24^2*s13*s23*s34+12*d*s24*s13*s23*s34^2-8*s14*d*s24*s23^2*s34+12*d*s13*s23*s12*s34^2-36*s13^2*s23*s12*s34+8*s14^2*d*s23^3+12*d*s13^2*s23*s34^2-8*s14*d*s13*s23^2*s12-12*s14*s13*s23*s34^2+2*s14*s23^2*s12^2-2*s14*d*s24*s13*s23*s12-6*s24^2*s13^2*s23+12*s14*s23^2*s12*s34-s14*d*s13^2*s23*s12-6*s24^2*s23*s34^2-12*s23*s12*s34^3-6*s13^2*s23*s12^2-24*s24*s13*s23*s12*s34-s14*d*s24^2*s23*s34));

id INT(pentagon1x123,3,21,4,2,[],1,-2,1,0,2) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-1/2*Den(s14)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(28*s14*s24*s23^3*s34^2-16*s14*d*s24*s13*s23^3*s34+6*d*s24*s13*s23^2*s12^2*s34-24*s24^2*s13*s23^2*s12*s34-8*s14*d*s24*s13^2*s23^3-12*s14^2*s23^2*s12*s34^2+8*s14*s13*s23^3*s12^2+18*s14*d*s13*s23^2*s12*s34^2-12*s24*s23^2*s34^4-12*s14^2*d*s23^3*s34^2-48*s14*s13^3*s23^2*s34+5*d*s13^4*s23^2*s34+9*d*s24^2*s13^2*s23^2*s34-72*s24*s13^2*s23^2*s34^2-8*s14^3*d*s23^3*s34+10*d*s13^2*s23^2*s34^3-12*s14*s24^2*s13^2*s23^2+12*d*s24*s13*s23^2*s34^3-36*s13*s23^2*s12^2*s34^2+9*d*s13^2*s23^2*s12^2*s34-72*s14*s13^2*s23^2*s12*s34+2*s14^3*d*s24^2*s23^2-s14^2*d*s24*s13^2*s23^2-2*s14^2*d*s13*s23^2*s12*s34-12*s14*d*s13^2*s23^3*s34+4*s14*d*s23^2*s34^4-12*s14^3*s24*s23^3-36*s14^2*s13^2*s23^2*s34-s14^2*d*s13^2*s23^2*s12-6*s14*d*s24*s23^2*s12^2*s34+5*d*s13*s23^2*s34^4-4*s14^3*d*s24*s13*s23^2+48*s14^2*s23^3*s34^2-4*s24^3*s13^2*s23^2+28*s14*s23^3*s12*s34^2+18*s14*d*s24*s13*s23^2*s34^2-48*s14*s13*s23^2*s34^3-5*s14^2*d*s24^2*s23^2*s34-12*s13^4*s23^2*s12+s14^2*d*s23^2*s12^3+s14^2*d*s24^3*s23^2-4*s14*d*s24^2*s13*s23^3-48*s14*s24*s13*s23^2*s12*s34-8*s13*s23^2*s12^3*s34-5*s14^2*d*s24^2*s13*s23^2+56*s14*s13*s23^3*s12*s34+3*d*s24^2*s23^2*s12*s34^2+24*s14*d*s13^2*s23^2*s34^2-4*s14^3*d*s13*s23^2*s12-4*s13^2*s23^2*s12^3-4*s14*d*s13^3*s23^3+12*d*s13*s23^2*s12*s34^3-24*s14*s24*s13^2*s23^2*s12-24*s14*s24^2*s13*s23^2*s34+2*s14^3*d*s23^2*s34^2-12*s24^2*s23^2*s34^3-2*s14^2*d*s24*s13*s23^2*s34+12*d*s24*s13^3*s23^2*s34-4*s14^3*d*s24*s23^2*s34+4*s14^2*d*s24*s23^4-4*s14*d*s23^3*s12^2*s34+d*s13^2*s23^2*s12^3-72*s24*s13*s23^2*s12*s34^2-4*s14*d*s24^2*s23^3*s34+3*d*s24^2*s13^2*s23^2*s12-12*s24*s13^2*s23^2*s12^2+8*s14^3*d*s23^3*s12-4*s14^3*s13^2*s23^2+d*s13^5*s23^2-36*s24^2*s13*s23^2*s34^2-8*s14*d*s13^2*s23^3*s12+20*s14*s13^3*s23^3+3*d*s24*s23^2*s12^2*s34^2+3*d*s24^2*s23^2*s34^3-24*s14*s24*s23^2*s12*s34^2+6*s14*d*s23^2*s12*s34^3-12*s14^2*s24*s13^2*s23^2-12*s14^2*s23^2*s34^3-20*s13*s23^2*s34^4-s14^2*d*s23^2*s12*s34^2-8*s14*d*s24*s13*s23^3*s12-24*s14*s13^3*s23^2*s12-8*s24^3*s13*s23^2*s34+3*d*s13^4*s23^2*s12+4*s14^2*d*s24^2*s23^3-6*s14*d*s24^2*s23^2*s12*s34+4*s14^2*d*s23^3*s12^2+60*s14*s13*s23^3*s34^2+d*s24^3*s13^2*s23^2-12*s14*s23^2*s34^4+4*s14^3*d*s13*s23^2*s34-40*s13^2*s23^2*s34^3-24*s14*s13*s23^2*s12^2*s34-72*s13^2*s23^2*s12*s34^2-24*s24*s23^2*s12*s34^3-10*s14^2*d*s24*s13*s23^2*s12-4*s14^2*s24*s23^4+4*s14^3*d*s24*s23^2*s12+6*d*s24*s13^3*s23^2*s12+2*s14^3*d*s23^2*s12^2-72*s14*s24*s13^2*s23^2*s34+6*s14*d*s24*s13^3*s23^2-8*s14*d*s24*s23^3*s12*s34+15*s14^2*d*s13^2*s23^2*s34-24*s14*s24*s23^2*s34^3-12*s14^2*s13^2*s23^2*s12-48*s13^3*s23^2*s12*s34+3*d*s24*s23^2*s34^4-12*s14*s23^2*s12^2*s34^2-20*s13^4*s23^2*s34+5*s14^2*d*s23^2*s34^3-6*s14*d*s24*s13*s23^2*s12^2+3*s14^2*d*s24^2*s23^2*s12-4*s13^5*s23^2+18*d*s24*s13^2*s23^2*s12*s34-8*s14^3*d*s13*s23^3-8*s14^3*s13*s23^2*s34-24*s24*s13^3*s23^2*s12-2*s14*d*s13*s23^2*s12^3+6*d*s24*s23^2*s12*s34^3+5*s14^2*d*s13^3*s23^2+3*d*s24*s13^4*s23^2+24*s14^2*s24*s13*s23^3+4*s14^2*d*s23^4*s34+d*s23^2*s34^5+6*s14*d*s24*s23^2*s34^3-8*s14^3*s24*s23^2*s12+18*d*s13^2*s23^2*s12*s34^2+36*s14^3*s13*s23^3+16*s14*s24*s23^3*s12*s34-24*s14*s24*s13^3*s23^2+10*d*s13^3*s23^2*s34^2-24*s14^2*s24*s13*s23^2*s34+12*d*s13^3*s23^2*s12*s34-s14^2*d*s24*s23^2*s34^2+18*s14*d*s24*s13^2*s23^2*s34-6*s14*d*s24^2*s13*s23^2*s12-8*s14^2*d*s23^3*s12*s34-12*s14*s24^2*s23^2*s34^2+8*s14^3*d*s23^4+18*d*s24*s13*s23^2*s12*s34^2-12*s14*s13^4*s23^2-4*s14^3*s23^2*s12^2-12*s14*s13^2*s23^2*s12^2-36*s14^2*s13*s23^2*s34^2-5*s14^2*d*s13*s23^2*s12^2-12*s14*d*s13*s23^3*s34^2-12*s24*s23^2*s12^2*s34^2+3*d*s23^2*s12^2*s34^3+6*s14*d*s13^3*s23^2*s12-4*s23^2*s12^3*s34^2-10*s14^2*d*s24*s23^2*s12*s34-4*s24^3*s23^2*s34^2-12*s14^2*s13^3*s23^2-72*s24*s13^2*s23^2*s12*s34-20*s14^2*s23^4*s34-12*s13^3*s23^2*s12^2+9*d*s24^2*s13*s23^2*s34^2+3*d*s24*s13^2*s23^2*s12^2-12*s24^2*s13^2*s23^2*s12-2*s14*d*s24^3*s23^2*s34+16*s14*s24*s13*s23^3*s12-2*s14*d*s23^2*s12^3*s34-24*s14*s23^2*s12*s34^3-24*s14^2*s13*s23^2*s12*s34+3*d*s24^2*s13^3*s23^2-4*s23^2*s34^5+2*d*s24^3*s13*s23^2*s34-2*s14*d*s24^3*s13*s23^2-12*s14^3*s23^3*s12+2*s14^3*d*s13^2*s23^2+28*s14*s13^2*s23^3*s12-8*s14^2*d*s13*s23^3*s12+96*s14^2*s13*s23^3*s34-4*s14*d*s23^3*s34^3-8*s14^2*d*s24*s23^3*s34+8*s14*s24^2*s23^3*s34+8*s14*s23^3*s12^2*s34+3*d*s23^2*s12*s34^4+24*s14^2*s23^3*s12*s34+3*s14^2*d*s24*s23^2*s12^2-12*s14^2*s24*s23^2*s34^2-20*s14^2*s13*s23^4-12*s24^2*s13^3*s23^2-5*s14^2*d*s23^2*s12^2*s34+20*s14*s23^3*s34^3+15*s14^2*d*s13*s23^2*s34^2-12*s23^2*s12*s34^4-4*s14^3*s23^2*s34^2-72*s14*s13^2*s23^2*s34^2-16*s14*d*s13*s23^3*s12*s34-8*s14^2*d*s24*s13*s23^3-12*s23^2*s12^2*s34^3+8*s14^3*d*s24*s23^3+4*s14^2*d*s23^4*s12-72*s14*s24*s13*s23^2*s34^2+d*s24^3*s23^2*s34^2-48*s13*s23^2*s12*s34^3+d*s23^2*s12^3*s34^2+8*s14*s24^2*s13*s23^3+6*d*s24^2*s13*s23^2*s12*s34-48*s24*s13^3*s23^2*s34+16*s14*d*s13*s23^2*s34^3-24*s24*s13*s23^2*s12^2*s34-8*s14*d*s23^3*s12*s34^2+3*d*s13^3*s23^2*s12^2+2*d*s13*s23^2*s12^3*s34-12*s24^2*s23^2*s12*s34^2+48*s14^2*s13^2*s23^3+24*s14^2*s13*s23^3*s12-24*s14^2*d*s13*s23^3*s34+18*s14*d*s13^2*s23^2*s12*s34+36*s14^3*s23^3*s34+60*s14*s13^2*s23^3*s34+4*s14*d*s13^4*s23^2+24*s14^2*s24*s23^3*s34-4*s14^3*s24^2*s23^2+8*s14^2*d*s24*s23^3*s12+8*s14^4*s23^3-24*s14^3*s23^4+4*s14^2*d*s13*s23^4-72*s14*s13*s23^2*s12*s34^2-12*s24*s13^4*s23^2-36*s13^2*s23^2*s12^2*s34+9*d*s13*s23^2*s12^2*s34^2-48*s24*s13*s23^2*s34^3+16*s14*d*s13^3*s23^2*s34-12*s14^2*d*s13^2*s23^3-4*s14*d*s13*s23^3*s12^2+18*d*s24*s13^2*s23^2*s34^2-36*s24^2*s13^2*s23^2*s34+56*s14*s24*s13*s23^3*s34+28*s14*s24*s13^2*s23^3-4*s14^2*s23^4*s12-40*s13^3*s23^2*s34^2-4*s14^3*d*s23^2*s12*s34-8*s14*d*s24*s23^3*s34^2))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (-1/2*Den(s14)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*(18*s14^2*d*s23^2*s12^2-2*s14*d*s24*s13^3*s23+2*s14*s12^2*s34^3-36*s14^2*s23^3*s12-7*s14*d*s24^2*s13*s23^2+20*s14*s24^3*s12^2-54*s14*s13*s23^2*s34^2-12*s24*s13^3*s23^2-12*s14*d*s24^3*s13*s12+6*s14*s23^2*s12^2*s34+8*s14^2*d*s23*s12^2*s34-3*s14*d*s12^3*s34^2+18*s14*s24*s23^2*s12^2+28*s14^3*s24*s23^2-10*s14*d*s24^2*s12^3+4*s14*s24*s12*s34^3-14*s14*d*s24*s13*s23^2*s12-3*s14*d*s24^2*s13^2*s34-12*s14*d*s24*s12^3*s34-6*s24^2*s23^2*s34^2+48*s14^3*s23^3+26*s14*s13^2*s23^3+36*s14*s24*s23*s12^2*s34+s14*d*s13^2*s23^2*s12-16*s14^2*d*s13*s23^3-9*s14*d*s24^2*s12*s34^2-20*s14^2*s24^2*s13*s23-36*s13^2*s23^2*s12*s34-24*s14*d*s24*s13*s23*s12*s34+12*d*s13*s23^2*s12*s34^2+12*s14*s24*s13^2*s12*s34-5*s14*d*s24*s12^4-7*s14*d*s24^2*s23^2*s34-6*s13^2*s23^2*s12^2+7*s14*d*s13^3*s23^2+18*s14*s24*s13^2*s12^2-12*s14^3*d*s23^2*s12-8*s14*d*s24^3*s23*s12+12*s14*s24*s13*s23^3+8*s14^2*d*s23^4-40*s14^2*s24*s13*s23*s12+4*s14^2*d*s23^2*s12*s34-s14*d*s24^5+4*s14*s24*s23^3*s12-4*s14^2*s24*s23*s34^2+24*s14^2*d*s24*s23*s12^2-12*s14*d*s24*s13^2*s23*s12+2*s14*s24^2*s34^3+6*s14*s13^2*s12^2*s34-12*s14*d*s24^2*s13*s23*s34+36*s14*s24^2*s23*s12^2+16*s14^2*d*s23^3*s12+s14*d*s24*s13^2*s23^2-42*s14^2*s23^2*s12^2+24*s14*s24^3*s12*s34-12*s14*d*s24*s13*s12^3-6*s14*d*s13^2*s23*s12*s34-3*s14*d*s24^3*s34^2-20*s14^2*s13*s23*s12^2+52*s14*s13*s23^3*s34+36*s14*s24^2*s13*s12^2-24*s24*s13*s23^2*s12*s34-s14*d*s12^5+4*s14*s24*s13^3*s12-12*s24^2*s13*s23^2*s34+12*d*s24*s13*s23^2*s34^2-12*s23^2*s12*s34^3+2*s14*s24^2*s13^3-12*s24*s13^2*s23^2*s12+60*s14^2*s13*s23^3+12*d*s13^2*s23^2*s34^2-9*s14*d*s24*s12^2*s34^2+12*s14*s24*s23^2*s12*s34-8*s14*d*s24*s23*s12^3+12*s14*s24^3*s13*s23+36*s14*s24*s13*s12^2*s34-2*s14*d*s24^4*s23-4*s14^2*s24*s13^2*s23-3*s14*d*s24^3*s13^2+6*s14*s24^4*s23+6*s14*s24^3*s13^2+8*s14^2*d*s24^2*s13*s23+4*d*s23^2*s12*s34^3-2*s14*d*s13^3*s23*s12+36*s14*s24^2*s13*s12*s34+21*s14*d*s13^2*s23^2*s34-12*s24*s23^2*s12*s34^2+4*s14^3*d*s23^2*s34-6*s14*d*s24^3*s23*s34-s14*d*s24^2*s13^3-6*s14*d*s23*s12^2*s34^2-36*s13^2*s23^2*s34^2-6*s14*d*s13*s12^3*s34-3*s14*d*s24^2*s23^2*s12+6*s14*s13*s23^2*s12^2-12*s14*d*s13*s23*s12^2*s34-6*s14*d*s24*s13*s12*s34^2+6*s14*s24^3*s34^2+4*s14^3*d*s13*s23^2+60*s14^2*s23^3*s34+10*s14^2*d*s23^2*s34^2+12*s14*s23^3*s12*s34+2*s14*d*s24*s13*s23^2*s34-9*s14*d*s24^2*s13^2*s12-18*s14*s24*s23^2*s34^2-s14*d*s24^2*s34^3-20*s14^2*s23*s12^2*s34-42*s14^2*s24^2*s23^2+8*s14^2*d*s24^3*s23-6*s13^4*s23^2-6*s14*d*s24^3*s13*s34+36*s14*s24*s13*s23*s12^2+s14*d*s23^2*s12*s34^2-36*s24*s13^2*s23^2*s34-6*s14*d*s23*s12^3*s34-3*s14*d*s13*s12^2*s34^2+2*d*s24^2*s23^2*s34^2+2*d*s13^4*s23^2-18*s14*s13^3*s23^2+6*s14*s24^2*s13*s34^2-6*s14*d*s13*s23*s12^3+10*s14*s24*s12^4-16*s14^3*d*s23^3-12*s13*s23^2*s12^2*s34+6*s14*s24^2*s13^2*s23+16*s14^2*d*s24*s23*s12*s34+36*s14*s24^2*s23*s12*s34-2*s14*d*s24*s23*s34^3-8*s14*d*s13^2*s23^3+2*d*s13^2*s23^2*s12^2-18*s14*d*s24^2*s13*s23*s12+6*s14*s24^2*s23*s34^2+12*s14*s24*s23^3*s34-48*s14^2*s24*s23*s12^2-6*s14*d*s24*s13^2*s23*s34+20*s14*s24^2*s12^3+6*s14*s12^3*s34^2-16*s14^2*s24^3*s23-12*s14^2*s23^2*s12*s34+18*s14^2*d*s24^2*s23^2-8*s14^2*s24*s13*s23*s34+2*s14*d*s13*s23^2*s12*s34+8*s14^2*d*s13*s23*s12^2+12*s14*s13*s23^3*s12+36*s14*s24^2*s12^2*s34-10*s14*d*s24^3*s12^2+6*s14*s13^2*s23*s12^2-s14*d*s12^2*s34^3+4*d*s24*s13^3*s23^2-8*s14^2*s13*s23*s12*s34-12*s14*d*s24*s23*s12*s34^2-18*s14^2*s23^2*s34^2-16*s14^2*d*s23^3*s34-2*s14*d*s23*s12*s34^3+4*d*s13*s23^2*s12^2*s34-3*s14*d*s12^4*s34-36*s14*s13*s23^2*s12*s34-8*s14*d*s13*s23^3*s12+4*d*s24*s23^2*s34^3-6*s14*d*s13^2*s23*s12^2+12*s14*s24*s23*s12*s34^2-18*s14*d*s24^2*s12^2*s34+2*d*s23^2*s12^2*s34^2-24*s13^3*s23^2*s34+36*s14*s24^2*s13*s23*s12+12*d*s24*s13^2*s23^2*s34+16*s14^2*d*s24*s13*s23*s12+2*s14*s12^5-6*s14*d*s24^2*s23*s34^2+10*s14*s24^4*s12-8*s14*d*s24*s23^3*s34-4*s14^2*s13^2*s23*s12-8*s14*d*s23^3*s34^2-36*s14^2*s24*s23^3-6*s14*d*s24^2*s13^2*s23-18*s14*d*s24^2*s23*s12*s34+2*d*s23^2*s34^4+6*s14*s13*s12^2*s34^2-18*s14*d*s24*s13*s23*s12^2-3*s14*d*s24^2*s13*s34^2-20*s14^2*s24^2*s23*s34+12*s14*s13*s23*s12^3+24*s14^2*d*s24^2*s23*s12-18*s14*s23^2*s34^3-18*s14*s23^2*s12*s34^2+12*s14*s23*s12^3*s34+2*s14*s24^5-6*s24^2*s13^2*s23^2-36*s14*s24*s13*s23^2*s34+12*s14*s24^3*s13*s34-6*s23^2*s34^4-4*s14^3*s13*s23^2-3*s14*d*s13^2*s12^3+18*s14*s24^2*s13^2*s12-8*s14*d*s23^3*s12*s34-3*s14*d*s24^4*s34+s14*d*s24*s23^2*s34^2+12*s14*s13*s23*s12^2*s34+12*s14*s24*s13*s12*s34^2+4*d*s13^3*s23^2*s12+2*s14*s13^3*s12^2-12*s14^2*s24*s13*s23^2-7*s14*d*s13*s23^2*s12^2-24*s13*s23^2*s34^3-2*s14*d*s23*s12^4+4*d*s24*s23^2*s12*s34^2+36*s14^2*d*s24*s23^2*s12-12*s14^2*s24*s23^2*s34+12*s14*s13*s12^3*s34+18*s14*s24^2*s23^2*s12-s14*d*s23^2*s12^3-s14*d*s24^3*s23^2+12*s14*s24^3*s23*s34-16*s14^2*s23^4-3*s14*d*s24^4*s13+6*s14*s23*s12^2*s34^2-4*s14^3*s23^2*s34-18*s14*d*s24^2*s13*s12*s34-54*s14*s13^2*s23^2*s34-3*s14*d*s13*s12^4+20*s14^2*d*s13*s23^2*s34-12*s14^2*s13*s23^2*s12+2*s14*s23^3*s12^2+2*s14*s24^2*s23^3+16*s14^2*d*s24*s23^3-14*s14*d*s24*s23^2*s12*s34+18*s14*s24*s12^2*s34^2-6*s14*d*s24^3*s13*s23+6*s14*s13*s12^4-18*s14*d*s24*s13*s12^2*s34+24*s14*s24*s23*s12^3-6*s14*d*s13*s23*s12*s34^2-40*s14^2*s24*s23*s12*s34-4*s14^2*s23*s12*s34^2+6*s14*s24^3*s23^2+6*s14*s23^2*s12^3+8*s14^2*d*s23*s12^3+6*s14*s24^4*s13-6*s14*d*s24*s13*s23*s34^2+8*s14^2*d*s24^2*s23*s34-48*s14^2*s24^2*s23*s12-18*s14*d*s24^2*s13*s12^2-2*s14*d*s24*s13^3*s12+6*s14*s23*s12^4+24*s14*s24*s13*s12^3-16*s14*d*s13*s23^3*s34-18*s14*s24*s13^2*s23^2-s14*d*s13^3*s12^2-12*s14*d*s24^3*s12*s34+8*d*s13*s23^2*s34^3+10*s14^2*d*s13^2*s23^2+6*s14*s24^4*s34-12*s14*d*s24^2*s23*s12^2-3*s14*d*s13^2*s12^2*s34+6*s14*s13^2*s12^3+12*s14*s24^2*s13*s23*s34+4*d*s24*s13^2*s23^2*s12-36*s24*s13*s23^2*s34^2+12*s14*s24*s13^2*s23*s12+4*d*s24^2*s13*s23^2*s34-12*s13^3*s23^2*s12-16*s14^2*s23*s12^3+7*s14*d*s23^2*s34^3-8*s14*d*s24*s13*s23^3+24*s14*s24^3*s23*s12+24*s14*s24*s13*s23*s12*s34+8*d*s24*s13*s23^2*s12*s34+6*s14*s24^2*s23^2*s34-9*s14*d*s24*s13^2*s12^2-84*s14^2*s24*s23^2*s12+4*s14^2*d*s24*s23^2*s34-18*s14*d*s24*s23*s12^2*s34+26*s14*s23^3*s34^2+2*d*s24^2*s13^2*s23^2+24*s14*s24*s12^3*s34-36*s14^2*s13*s23^2*s34+4*s14^2*d*s13*s23^2*s12-6*s14*d*s24*s13^2*s12*s34+28*s14^3*s23^2*s12+18*s14*s24^2*s12*s34^2-18*s14*s13^2*s23^2*s12-12*s24*s23^2*s34^3-5*s14*d*s24^4*s12-3*s14*d*s24*s23^2*s12^2+6*s14*s24^2*s13^2*s34-2*s14*d*s24*s12*s34^3-18*s14^2*s13^2*s23^2-7*s14*d*s23^2*s12^2*s34+12*s14*s24*s13*s23^2*s12+24*s14*s24^3*s13*s12+21*s14*d*s13*s23^2*s34^2+8*d*s13^3*s23^2*s34-6*s23^2*s12^2*s34^2-12*s14^3*d*s24*s23^2+4*s14^2*d*s24*s13*s23^2+6*s14*s24^2*s13*s23^2+6*s14*s12^4*s34-36*s13*s23^2*s12*s34^2+12*d*s13^2*s23^2*s12*s34)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (1/2*Den(s14)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(2*s14^2*d*s23^2*s12^2-12*d*s24*s12*s34^4+20*s14*d*s24*s13^3*s23+40*s13^4*s12*s34+6*s14*s12^2*s34^3-4*s14^2*s23^3*s12-4*s14*d*s24^2*s13*s23^2-12*s23*s12*s34^4+72*s24^2*s13^2*s34^2+60*s14*s13*s23^2*s34^2-6*d*s12^2*s34^4+12*s24^2*s13^4+8*s14*s23^2*s12^2*s34-5*s14*d*s13^4*s34-s14*d*s12^3*s34^2-4*s14^3*s24*s23^2-12*d*s24^2*s13^3*s12-4*s13^5*s23+12*s14*s24*s12*s34^3-8*s14*d*s24*s13*s23^2*s12-9*s14*d*s24^2*s13^2*s34-12*s24^2*s23*s12*s34^2-24*s14^3*s23^3-12*s14*s24*s23*s12^2*s34-8*s14*d*s13^2*s23^2*s12+4*s14^2*d*s13*s23^3-3*s14*d*s24^2*s12*s34^2+40*s13^3*s34^3-4*s14^2*s24^2*s13*s23+40*s14*d*s24*s13*s23*s12*s34-36*d*s24*s13^2*s12^2*s34-48*s24*s13*s23*s34^3+40*s14*d*s13^3*s23*s34+36*s14*s24*s13^2*s12*s34+2*d*s13*s23*s12^3*s34+48*s13^3*s12^2*s34+8*s24*s12^3*s34^2-4*s14*d*s24^2*s23^2*s34+6*s14*s12*s34^4+80*s13^2*s12*s34^3-4*s14*d*s13^3*s23^2+6*d*s24^2*s13*s23*s12*s34+12*s24^2*s34^4-24*s24*s13*s23*s12^2*s34-12*d*s24*s12^2*s34^3+6*s14*s24*s13^2*s12^2+40*s24*s13^4*s34-12*s23*s12^2*s34^3-40*s13^3*s23*s34^2+4*s14^3*d*s23^2*s12+18*d*s24*s13^2*s23*s34^2-48*s13*s23*s12*s34^3-36*s24^2*s13^2*s23*s34+d*s23*s12^3*s34^2-6*d*s24^2*s34^4-8*s14^2*s24*s13*s23*s12-12*s14^2*d*s23^2*s12*s34+16*s24^3*s13*s12*s34+6*s14*s13^4*s12-12*d*s24^3*s13*s34^2-20*s14^2*s24*s23*s34^2+20*s14*d*s24*s13^2*s23*s12+6*s14*s24^2*s34^3-6*d*s24^2*s13^2*s12^2+18*s14*s13^2*s12^2*s34+20*s14*d*s24^2*s13*s23*s34+4*s14^2*d*s23^3*s12+40*s13*s12*s34^4-8*s14*d*s24*s13^2*s23^2-20*d*s13^3*s34^3+2*s14^2*s23^2*s12^2+6*s14*s24*s13^4-132*s14*s13^2*s23*s34^2+60*s14*d*s13^2*s23*s12*s34-s14*d*s24^3*s34^2-4*s14^2*s13*s23*s12^2+24*s14^2*d*s13*s23*s34^2+48*s24^2*s13^3*s34+d*s24^3*s13^2*s23-12*d*s13*s12^3*s34^2-48*s24*s13^3*s23*s34+40*s14*d*s13*s23*s34^3-12*d*s24^2*s12*s34^3-6*d*s24^2*s13^4+48*s13*s12^2*s34^3+12*s14*s24*s13^3*s12+d*s13^5*s23+d*s24^3*s23*s34^2-144*s14*s24*s13*s23*s34^2+6*s14*s24^2*s13^3-20*s14^2*s13*s23^3-12*d*s24*s13^4*s12-3*s14*d*s24*s12^2*s34^2+16*s14*s24*s23^2*s12*s34-4*s14*s24^3*s13*s23+12*s14*s24*s13*s12^2*s34-144*s14*s13*s23*s12*s34^2+12*s12^2*s34^4-20*s14^2*s24*s13^2*s23-s14*d*s24^3*s13^2+9*d*s13*s23*s12^2*s34^2+6*s14*s24*s34^4+72*s24^2*s13*s12*s34^2+3*d*s13^3*s23*s12^2-36*s13^2*s23*s12^2*s34+18*d*s13^2*s23*s12*s34^2-12*d*s24^2*s13*s12^2*s34+72*s24*s13*s12^2*s34^2-d*s24^4*s13^2-4*s24^3*s23*s34^2-3*s14*d*s24*s34^4+2*s14*s24^3*s13^2+20*s14*d*s13^3*s23*s12+12*s14*s24^2*s13*s12*s34+12*s13*s34^5+24*s24^2*s12*s34^3-12*s14*d*s13^2*s23^2*s34-48*d*s24*s13^3*s12*s34+24*s13*s12^3*s34^2+8*s13^3*s12^3-24*d*s13*s12^2*s34^3+3*d*s24*s13^2*s23*s12^2-12*s14^3*d*s23^2*s34-12*s24^2*s13^2*s23*s12-3*s14*d*s24^2*s13^3-12*s13^3*s23*s12^2+9*d*s24^2*s13*s23*s34^2+10*s14*d*s23*s12^2*s34^2-2*s14*d*s13*s12^3*s34+24*s24*s13^4*s12+36*s14*s24*s13^2*s34^2+6*d*s24*s23*s12*s34^3-18*s14*d*s13^2*s12*s34^2+2*s12^4*s34^2+12*s24^2*s13^2*s12^2+8*s14*s13*s23^2*s12^2+24*s14*s13*s12*s34^3+20*s14*d*s13*s23*s12^2*s34-18*s14*d*s24*s13*s12*s34^2+2*s14*s24^3*s34^2-3*s14*d*s24*s13^4-d*s24^4*s34^2-12*s14^3*d*s13*s23^2-4*s23*s34^5+2*d*s24^3*s13*s23*s34-20*s14^2*s23^3*s34+24*s24^3*s13*s34^2-22*s14^2*d*s23^2*s34^2-16*s14*d*s24*s13*s23^2*s34-3*s14*d*s24^2*s13^2*s12-4*s24^3*s13^2*s23+28*s14*s24*s23^2*s34^2-3*s14*d*s24^2*s34^3+18*d*s24*s13*s23*s12*s34^2-24*d*s24^2*s13^3*s34-4*s14^2*s23*s12^2*s34-20*d*s13*s12*s34^4+2*s14^2*s24^2*s23^2+12*d*s13^3*s23*s12*s34-2*s14*d*s24^3*s13*s34-3*s14*d*s13^4*s12-12*s14*s24*s13*s23*s12^2-8*s14*d*s23^2*s12*s34^2-48*d*s24*s13*s12*s34^3-24*d*s13^3*s12^2*s34-72*s24*s13^2*s23*s12*s34-9*s14*d*s13*s12^2*s34^2-s14*d*s34^5+20*s14*s13^3*s23^2+24*s14*s24*s13^3*s34-3*s14*d*s12*s34^4+18*s14*s24^2*s13*s34^2-24*s24*s13^3*s23*s12+16*s24*s13*s12^3*s34+8*s14^2*d*s24*s13^2*s23+2*s24^4*s34^2+3*d*s23*s12^2*s34^3+10*d*s13^3*s23*s34^2+8*s14^3*d*s23^3+144*s24*s13^2*s12*s34^2-4*s23*s12^3*s34^2-36*d*s24^2*s13^2*s12*s34-30*s14*s24^2*s13^2*s23-40*d*s13^2*s12*s34^3-12*s14*s24^2*s23*s12*s34+20*s14*d*s24*s23*s34^3-4*d*s24*s12^3*s34^2+24*s24*s12^2*s34^3+d*s23*s34^5-20*d*s24*s13^4*s34-12*s24*s23*s12^2*s34^2-30*s14*s24^2*s23*s34^2+8*s14^2*d*s24*s23*s34^2+60*s14*d*s24*s13^2*s23*s34-36*d*s24^2*s13^2*s34^2+3*d*s23*s12*s34^4+24*s24*s12*s34^4-d*s12^4*s34^2+2*s14*s12^3*s34^2+24*s14*s13^3*s12*s34+36*s14^2*s23^2*s12*s34+2*s14^2*d*s24^2*s23^2-s14*d*s13^5-40*s14^2*s24*s13*s23*s34+10*s14*s13^4*s34-20*d*s13^4*s12*s34-16*s14*d*s13*s23^2*s12*s34-48*s14^2*s13*s23*s34^2+24*s24^2*s13^3*s12-6*d*s13*s34^5+2*s24^4*s13^2-12*s14*d*s24*s13*s34^3-30*s14*s13^2*s23*s12^2-3*s14*d*s12^2*s34^3-40*s14^2*s13*s23*s12*s34+20*s14*d*s24*s23*s12*s34^2+58*s14^2*s23^2*s34^2-48*s14*s23*s12*s34^3+4*s14^2*d*s23^3*s34-4*d*s13^3*s12^3+20*s14*d*s23*s12*s34^3+72*s24^2*s13^2*s12*s34-72*d*s24*s13^2*s12*s34^2+80*s13^3*s12*s34^2-8*d*s24*s13*s12^3*s34-12*s24*s13^4*s23+56*s14*s13*s23^2*s12*s34-10*s14*d*s13^3*s34^2+3*d*s24*s23*s12^2*s34^2+24*s14*s24*s13*s34^3-22*s14*s23*s34^4+10*s14*d*s13^2*s23*s12^2-60*s14*s24*s23*s12*s34^2-d*s13^6-40*s13^2*s23*s34^3-4*d*s24^3*s34^3-20*d*s24*s13*s34^4-144*s14*s24*s13^2*s23*s34-12*s14*s24^2*s13*s23*s12-12*s14*d*s13^3*s12*s34+96*s24*s13*s12*s34^3+20*s14*s13^2*s34^3+10*s14*d*s24^2*s23*s34^2+6*d*s24*s13^3*s23*s12-72*s24*s13*s23*s12*s34^2-15*d*s13^2*s34^4-12*d*s13^2*s12^3*s34+12*s24^2*s12^2*s34^2+10*s14*d*s13^4*s23+80*s24*s13^3*s34^2-20*s14^2*s13^2*s23*s12+12*s13^4*s12^2-48*s14*s24*s23*s34^3+10*s14*s13*s34^4+24*s14^2*d*s13^2*s23*s34-40*d*s24*s13^2*s34^3-4*d*s24^3*s13^3+8*s24^3*s13^2*s12-d*s34^6-4*s14^2*s24*s23^3+10*s14*d*s24^2*s13^2*s23+12*s13^5*s34-12*s14*d*s24*s13^3*s34+18*s14*s13*s12^2*s34^2-9*s14*d*s24^2*s13*s34^2-4*s14^2*s24^2*s23*s34+8*s12^3*s34^3-4*s14*s13*s23*s12^3+20*s14*s23^2*s34^3-20*s13^4*s23*s34+28*s14*s23^2*s12*s34^2+8*s14^2*d*s23*s34^3-4*s14*s23*s12^3*s34+8*s14^2*d*s23*s12*s34^2+3*d*s24*s23*s34^4-4*d*s12^3*s34^3-36*s24^2*s13*s23*s34^2+3*d*s24^2*s13^2*s23*s12+56*s14*s24*s13*s23^2*s34-12*s24*s13^2*s23*s12^2+4*s14*s24^3*s13*s34-2*d*s24^4*s13*s34+28*s14^3*s13*s23^2-s14*d*s13^2*s12^3+6*s14*s24^2*s13^2*s12+d*s13^2*s23*s12^3-24*s24*s23*s12*s34^3-8*s14*d*s24*s23^2*s34^2-36*d*s13^2*s12^2*s34^2-60*s14*s13*s23*s12^2*s34+36*s14*s24*s13*s12*s34^2-4*d*s24^3*s12*s34^2-36*d*s24*s13*s12^2*s34^2-72*s13^2*s23*s12*s34^2+24*s24^2*s13*s12^2*s34-6*d*s13^4*s12^2+6*s14*s13^3*s12^2+36*s14^2*s24*s13*s23^2-4*s14*d*s13*s23^2*s12^2-6*d*s13^5*s34+3*d*s24^2*s23*s34^3+8*s24^3*s13^3-12*s14*d*s13*s12*s34^3+96*s24*s13^3*s12*s34+4*s14^2*d*s24*s23^2*s12+36*s14^2*s24*s23^2*s34-18*s14*d*s24*s13^2*s34^2+18*d*s24*s13^2*s23*s12*s34+8*s24*s13^2*s12^3+4*s14*s13*s12^3*s34-12*d*s24*s13^3*s12^2+36*s14*s13^2*s12*s34^2+30*s13^2*s34^4-48*s13^3*s23*s12*s34-4*s14*s24^3*s23*s34-30*s14*s23*s12^2*s34^2-12*d*s24^3*s13^2*s34-16*s14^2*s23*s34^3-12*s24^2*s13^3*s23-20*s13*s23*s34^4-24*d*s24^2*s13*s34^3+28*s14^3*s23^2*s34-6*s14*d*s24^2*s13*s12*s34+60*s14*s13^2*s23^2*s34-2*d*s13*s12^4*s34-44*s14^2*d*s13*s23^2*s34+36*s14^2*s13*s23^2*s12+4*s14^2*d*s24*s23^3+8*s24^3*s34^3-48*s14*s13^3*s23*s12+3*d*s13^4*s23*s12-8*s24^3*s13*s23*s34+8*s13^5*s12+5*d*s13*s23*s34^4+3*d*s24^2*s13^3*s23-8*s14*d*s24*s23^2*s12*s34+24*s24^3*s13^2*s34+6*s14*s24*s12^2*s34^2-4*d*s24*s13^2*s12^3-4*d*s24*s13^5+24*s24*s13^3*s12^2-6*s14*d*s24*s13*s12^2*s34+8*s14^2*d*s13^2*s23*s12+60*s14*d*s13*s23*s12*s34^2-8*s14^2*s24*s23*s12*s34+30*s13^4*s34^2-48*s14^2*s13^2*s23*s34-20*s14^2*s23*s12*s34^2+2*s14*s13^5+8*s12*s34^5-12*s13^4*s23*s12-8*d*s24^3*s13*s12*s34+60*s14*d*s24*s13*s23*s34^2-88*s14*s13*s23*s34^3+48*s24^2*s13*s34^3+6*d*s24*s13*s23*s12^2*s34-6*s14*d*s24*s13^3*s12-24*s24^2*s13*s23*s12*s34+4*s13*s12^4*s34+60*s14*d*s13^2*s23*s34^2+16*s14^2*d*s13*s23*s12*s34-4*s13^2*s23*s12^3+72*s13^2*s12^2*s34^2+28*s14*s24*s13^2*s23^2-3*s14*d*s13^3*s12^2-36*d*s24^2*s13*s12*s34^2+9*d*s13^2*s23*s12^2*s34-36*s13*s23*s12^2*s34^2+4*s24^4*s13*s34-144*s14*s13^2*s23*s12*s34-4*d*s24*s34^5-22*s14^2*d*s13^2*s23^2-d*s13^2*s12^4+16*s14^2*d*s24*s13*s23*s34-12*s24^2*s23*s34^3-16*s14^2*s13^3*s23+2*s14*s34^5+12*d*s24*s13^3*s23*s34-9*s14*d*s13^2*s12^2*s34+2*s14*s13^2*s12^3-60*s14*s24^2*s13*s23*s34-60*s14*s24*s13^2*s23*s12+8*s24^3*s12*s34^2-4*d*s24^3*s13^2*s12+2*s13^2*s12^4-4*s14*d*s23^2*s34^3-120*s14*s24*s13*s23*s12*s34-40*d*s24*s13^3*s34^2+8*s14*s24^2*s23^2*s34-3*s14*d*s24*s13^2*s12^2+4*s14^2*s24*s23^2*s12-12*s14^2*d*s24*s23^2*s34+80*s24*s13^2*s34^3-88*s14*s13^3*s23*s34+2*s13^6+5*d*s13^4*s23*s34-12*s24*s23*s34^4+8*s24*s34^5+116*s14^2*s13*s23^2*s34-12*s14^2*d*s13*s23^2*s12-18*s14*d*s24*s13^2*s12*s34-4*s14^3*s23^2*s12+6*s14*s24^2*s12*s34^2-22*s14*s13^4*s23+28*s14*s13^2*s23^2*s12-5*s14*d*s13*s34^4-4*d*s12*s34^5+8*s14^2*d*s13^3*s23+18*s14*s24^2*s13^2*s34-6*s14*d*s24*s12*s34^3+10*d*s13^2*s23*s34^3+58*s14^2*s13^2*s23^2+9*d*s24^2*s13^2*s23*s34-4*s14*d*s23^2*s12^2*s34+16*s14*s24*s13*s23^2*s12+12*d*s13*s23*s12*s34^3-72*s24*s13^2*s23*s34^2-10*s14*d*s13^2*s34^3-40*d*s13^3*s12*s34^2+3*d*s24*s13^4*s23+10*s14*d*s23*s34^4-6*d*s24^2*s12^2*s34^2-12*s14*d*s13*s23^2*s34^2+3*d*s24^2*s23*s12*s34^2+24*s13^2*s12^3*s34-4*d*s13^5*s12+2*s34^6-48*s14*s24*s13^3*s23+4*s14^3*d*s24*s23^2-15*d*s13^4*s34^2+40*s24*s13*s34^4+20*s14*s13^3*s34^2-12*s14^2*d*s24*s13*s23^2-8*s13*s23*s12^3*s34+8*s14*s24^2*s13*s23^2+72*s24*s13^2*s12^2*s34+12*d*s24*s13*s23*s34^3+8*s24*s13^5))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (Den(s14)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(s14^2*d*s23^2*s12^2-8*s14^2*s23^3*s12-2*s14*d*s24^2*s13*s23^2-15*s14*s13*s23^2*s34^2-6*s24*s13^3*s23^2+s14*s23^2*s12^2*s34+3*s14*s24*s23^2*s12^2-4*s14*d*s24*s13*s23^2*s12-3*s24^2*s23^2*s34^2+4*s14^3*s23^3+13*s14*s13^2*s23^3-4*s14^2*d*s13*s23^3-18*s13^2*s23^2*s12*s34+6*d*s13*s23^2*s12*s34^2-2*s14*d*s24^2*s23^2*s34-3*s13^2*s23^2*s12^2+2*s14*d*s13^3*s23^2+6*s14*s24*s13*s23^3+4*s14^2*d*s23^4-2*s14^2*d*s23^2*s12*s34+2*s14*s24*s23^3*s12+4*s14^2*d*s23^3*s12-2*s14^2*s23^2*s12^2+26*s14*s13*s23^3*s34-12*s24*s13*s23^2*s12*s34-6*s24^2*s13*s23^2*s34+6*d*s24*s13*s23^2*s34^2-6*s23^2*s12*s34^3-6*s24*s13^2*s23^2*s12+16*s14^2*s13*s23^3+6*d*s13^2*s23^2*s34^2+2*s14*s24*s23^2*s12*s34+2*d*s23^2*s12*s34^3+6*s14*d*s13^2*s23^2*s34-6*s24*s23^2*s12*s34^2-18*s13^2*s23^2*s34^2+s14*s13*s23^2*s12^2+16*s14^2*s23^3*s34+s14^2*d*s23^2*s34^2+6*s14*s23^3*s12*s34-5*s14*s24*s23^2*s34^2-2*s14^2*s24^2*s23^2-3*s13^4*s23^2-18*s24*s13^2*s23^2*s34+d*s24^2*s23^2*s34^2+d*s13^4*s23^2-5*s14*s13^3*s23^2-6*s13*s23^2*s12^2*s34-4*s14*d*s13^2*s23^3+d*s13^2*s23^2*s12^2+6*s14*s24*s23^3*s34+s14^2*d*s24^2*s23^2+6*s14*s13*s23^3*s12+2*d*s24*s13^3*s23^2-2*s14^2*s23^2*s34^2-4*s14^2*d*s23^3*s34+2*d*s13*s23^2*s12^2*s34-10*s14*s13*s23^2*s12*s34-4*s14*d*s13*s23^3*s12+2*d*s24*s23^2*s34^3+d*s23^2*s12^2*s34^2-12*s13^3*s23^2*s34+6*d*s24*s13^2*s23^2*s34-4*s14*d*s24*s23^3*s34-4*s14*d*s23^3*s34^2-8*s14^2*s24*s23^3+d*s23^2*s34^4-5*s14*s23^2*s34^3-5*s14*s23^2*s12*s34^2-3*s24^2*s13^2*s23^2-10*s14*s24*s13*s23^2*s34-3*s23^2*s34^4-4*s14*d*s23^3*s12*s34+2*d*s13^3*s23^2*s12-2*s14*d*s13*s23^2*s12^2-12*s13*s23^2*s34^3+2*d*s24*s23^2*s12*s34^2+2*s14^2*d*s24*s23^2*s12+3*s14*s24^2*s23^2*s12-8*s14^2*s23^4-15*s14*s13^2*s23^2*s34+2*s14^2*d*s13*s23^2*s34+s14*s23^3*s12^2+s14*s24^2*s23^3+4*s14^2*d*s24*s23^3-4*s14*d*s24*s23^2*s12*s34+s14*s24^3*s23^2+s14*s23^2*s12^3-8*s14*d*s13*s23^3*s34-5*s14*s24*s13^2*s23^2+4*d*s13*s23^2*s34^3+s14^2*d*s13^2*s23^2+2*d*s24*s13^2*s23^2*s12-18*s24*s13*s23^2*s34^2+2*d*s24^2*s13*s23^2*s34-6*s13^3*s23^2*s12+2*s14*d*s23^2*s34^3-4*s14*d*s24*s13*s23^3+4*d*s24*s13*s23^2*s12*s34+s14*s24^2*s23^2*s34-4*s14^2*s24*s23^2*s12-2*s14^2*d*s24*s23^2*s34+13*s14*s23^3*s34^2+d*s24^2*s13^2*s23^2-4*s14^2*s13*s23^2*s34-2*s14^2*d*s13*s23^2*s12-5*s14*s13^2*s23^2*s12-6*s24*s23^2*s34^3-2*s14^2*s13^2*s23^2-2*s14*d*s23^2*s12^2*s34+2*s14*s24*s13*s23^2*s12+6*s14*d*s13*s23^2*s34^2+4*d*s13^3*s23^2*s34-3*s23^2*s12^2*s34^2-2*s14^2*d*s24*s13*s23^2+s14*s24^2*s13*s23^2-18*s13*s23^2*s12*s34^2+6*d*s13^2*s23^2*s12*s34));

id INT(pentagon1x123,3,21,4,2,[],1,-1,2,-1,1) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*(4*s14^2*s24*s23*s12+5*s14*d*s24*s13*s12^2-6*d*s24^2*s13^2*s34+14*s24*s13*s34^3-10*s14*s24^2*s23*s34+3*s14*d*s23*s34^3+4*s13*s12^4-6*d*s13^3*s34^2-2*s14^2*d*s24^2*s23-d*s24^3*s13*s12-d*s12^4*s34-2*s14*s12^3*s34+s14*d*s24^3*s12+2*s24^4*s13-42*s14*s13^2*s23*s12-20*s14^2*s13*s23*s34+6*s14*d*s24*s23*s12*s34-d*s24*s13^3*s23+16*s14^2*s23^2*s34-52*s14*s24*s13*s23*s12-s14*d*s13*s34^3+4*s14*s24^2*s13*s34+16*s14^2*s13*s23^2-6*s24*s23*s34^3-s14*d*s13*s12^2*s34-d*s13^4*s23-18*s14*s13^3*s23+5*s14*d*s24*s23*s12^2+90*s24*s13^2*s12*s34+2*s23*s12^3*s34-2*d*s13^3*s23*s34+4*s14*s24^2*s13^2+2*s24*s23*s12^2*s34+9*s14*d*s13*s23*s34^2-3*d*s24^2*s12*s34^2+4*s13*s23*s12^3+36*s13*s12^2*s34^2-3*d*s24*s12^3*s34+16*s13^2*s12^3+3*s14*d*s24^2*s12^2-20*s14*s13*s23^2*s12+2*s14*s24*s12*s34^2-3*d*s24*s13*s12^3+36*s24^2*s13^2*s12+s14*d*s12^4-4*d*s13^2*s12^3+10*s24^3*s13*s34-4*s14^2*d*s23^2*s34+4*s14*s24*s23^2*s34-6*s14*s23*s12^3+4*s13^4*s23+2*s14*s12^2*s34^2+2*s23*s12^2*s34^2-8*s14*s24*s13*s23^2-2*s24^3*s23*s34-5*d*s13^2*s23*s12*s34+8*s13*s23*s12*s34^2+54*s24*s13*s12^2*s34+54*s13^2*s12*s34^2-6*d*s24*s12^2*s34^2+22*s13*s12^3*s34-4*s24*s13*s23*s34^2+5*s14*d*s23*s12^2*s34+4*d*s24^2*s13*s23*s34+12*s13^3*s23*s12-2*d*s24*s13^2*s23*s12-2*s14*s13*s12^3-5*s14*d*s13^2*s12*s34+2*s12^4*s34-4*s14^2*d*s13*s23^2+2*d*s13*s23*s34^3+24*s13^3*s34^2+16*s14*s24*s13^2*s34-d*s13*s12^4+8*s14^3*s23^2-16*s14*s13^2*s23^2+2*s14*d*s13^2*s23^2-15*d*s13^2*s12*s34^2+5*s14*d*s24*s23*s34^2-2*s14*s24^2*s13*s12-7*d*s13*s12^3*s34+12*s24*s12^2*s34^2-52*s14*s24*s13*s23*s34-d*s23*s12^2*s34^2+2*s14*d*s13*s12^3-2*s23*s34^4+d*s24^3*s23*s34+16*s13^2*s34^3+8*s14^2*s23^3+2*s14*d*s24*s12^2*s34+9*s14*d*s13*s23*s12^2-2*s13*s23*s34^3-15*d*s24*s13*s12*s34^2+s14*d*s24^3*s13-4*d*s13*s23*s12^2*s34+42*s24^2*s13*s12*s34-3*d*s13^3*s23*s12-60*s14*s13*s23*s12*s34-d*s24^3*s13*s34-18*s14*s23*s12*s34^2-s14*d*s12^2*s34^2+4*s13*s34^4+3*s14*d*s23*s12^3-6*d*s13^3*s12^2-10*s14*s24^2*s23*s12-s14*d*s24*s13*s34^2-4*s14^2*s24*s23*s34-4*s14^2*d*s24*s23*s12-6*d*s24^2*s13^2*s12+14*s24*s13*s12^3+16*s14^2*s23^2*s12+9*s14*d*s24*s13^2*s23-12*s14^2*s13*s23*s12+4*s14^2*d*s13*s23*s34-6*s14*s24^2*s12^2-42*s14*s13^2*s23*s34+s14*d*s24^2*s12*s34+3*d*s24*s23*s34^3-2*s24^2*s23*s12*s34+2*d*s24*s23*s12*s34^2+s14*d*s24^2*s13^2-s14*d*s13^4+24*s13^3*s12^2-d*s13*s23*s12^3+10*s14*s24*s13^2*s12-d*s13*s34^4+3*s14*d*s13^3*s23+6*s24^2*s12*s34^2+6*s24*s12^3*s34-12*d*s13*s12^2*s34^2-d*s23*s12^3*s34+4*s14*s13*s34^3+d*s24*s13^2*s23*s34+8*s24*s13*s23*s12^2+d*s24^2*s13*s23*s12+10*s13^3*s23*s34+5*s14*d*s24^2*s13*s23-4*d*s13^2*s34^3+10*s24^3*s13*s12-4*s14^2*d*s23^2*s12-12*s14*s13*s23^2*s34-3*d*s24*s13*s34^3+36*s24^2*s13^2*s34-2*s14*s24^3*s12+s14*d*s12^3*s34-6*s14*s23*s34^3+8*s24*s13^3*s23-4*s14*s24*s23^2*s12+d*s23*s34^4+14*s14*s13*s12*s34^2-16*s14^2*s13^2*s23+3*d*s24^2*s23*s34^2+10*s24^3*s13^2-4*s14*d*s13*s12*s34^2-13*d*s13^3*s12*s34+4*s24^2*s13*s23*s12-d*s24*s13*s23*s12^2+10*s24*s13^2*s23*s34+6*s24*s12*s34^3-4*s24*s23*s12*s34^2-3*d*s13^2*s23*s12^2-3*d*s24^2*s12^2*s34+d*s24^2*s23*s12*s34-22*s14*s24^2*s13*s23-3*d*s12^3*s34^2-4*d*s13^4*s34+12*s14*s13^3*s34+d*s23*s12*s34^3-4*s14^2*d*s24*s23^2+s14*d*s24*s13^2*s12-6*s14*s24*s12^3-3*d*s24^2*s13*s34^2-9*d*s24*s13^3*s34+d*s24^2*s13^2*s23+2*s14*d*s23^2*s12^2-s14*d*s12*s34^3-4*s14^2*s23*s34^2+42*s24*s13^2*s12^2-2*s14*s12^4-2*s14*s24^2*s12*s34-7*d*s13*s12*s34^3+54*s13^2*s12^2*s34+9*s14*d*s13^2*s23*s34-2*s14*d*s13^3*s12-9*d*s24^2*s13*s12*s34+54*s24*s13*s12*s34^2+14*s13*s23*s12^2*s34+12*s14*s13^2*s34^2-38*s14*s24*s13^2*s23+s14*d*s24^2*s23*s12+6*s13^2*s23*s34^2+2*s14^2*d*s13^2*s23+8*s14*s24*s13*s34^2+2*s24^3*s12*s34+5*s14*d*s23*s12*s34^2-s14*d*s24*s13^3+2*s14^2*d*s23*s34^2+4*s14*s23^2*s34^2+42*s24*s13^3*s12+14*s14*d*s13*s23*s12*s34+16*s13^4*s34-d*s13^5+18*s24^2*s13*s12^2-30*s14*s13*s23*s12^2+6*s12^3*s34^2-4*s14*s24*s12^2*s34-d*s24^3*s13^2-2*s14*s24^3*s23-8*s14^2*s23*s12*s34+16*s14^2*s24*s23^2-14*s14*s24*s23*s34^2-9*d*s24*s13^2*s34^2+14*s14*d*s24*s13*s23*s34+4*s14*d*s24^2*s13*s12+22*s14*s13^2*s12*s34-9*d*s24*s13^3*s12+6*s12^2*s34^3-2*s14*d*s24*s13^2*s34-3*d*s24^2*s13*s12^2-18*s14*s23*s12^2*s34-s14*d*s24^3*s23+d*s24^3*s13*s23+42*s24*s13^2*s34^2+4*s14^2*s23*s12^2-3*d*s24^2*s13^3-2*s14*d*s23^2*s34^2+8*s14*s24*s13^3+16*s24*s13^2*s23*s12-2*s24^2*s13*s23*s34+5*d*s24*s13*s23*s34^2-4*s14*d*s24*s23^2*s34-3*d*s24*s13^4-15*d*s13^2*s12^2*s34+22*s13*s12*s34^3-3*s14*d*s13^2*s34^2-4*d*s13^4*s12+4*s14*s13^4-8*s14^2*s24*s13*s23+10*s14*s13^3*s12-d*s24^3*s12*s34-d*s13*s23*s12*s34^2-15*d*s24*s13*s12^2*s34+22*s13^2*s23*s12*s34+12*s14*s24*s13*s12*s34+2*s12*s34^4+4*s13^5-s14*d*s24*s12*s34^2+4*s14*d*s13*s23^2*s12+18*s24^2*s13*s34^2-30*s14*s13*s23*s34^2-d*s12*s34^4+42*s24*s13^3*s34+16*s13^4*s12+2*s14*s12*s34^3-2*s14^2*d*s23*s12^2-4*s14*s23^2*s12^2-9*d*s24*s13^2*s12^2+14*s14*d*s24*s13*s23*s12+s14*d*s24^2*s13*s34-14*s14*s24*s23*s12^2+8*s14*s13*s12^2*s34+3*s14*d*s24*s12^3+4*s24^2*s13^2*s23+14*s24*s13^4-2*s14*d*s24^2*s23^2-8*s14*s23^2*s12*s34-3*s14*d*s13^3*s34+6*s14*s13^2*s12^2+50*s13^3*s12*s34-21*d*s24*s13^2*s12*s34+18*s24^2*s13^3+9*s14*d*s13^2*s23*s12-28*s14*s24*s23*s12*s34-d*s24*s23*s12^2*s34-6*s24^2*s23*s34^2-2*s23*s12*s34^3-3*d*s12^2*s34^3+12*s13^2*s23*s12^2+6*s24^2*s12^2*s34+12*s24*s13*s23*s12*s34-3*d*s24*s12*s34^3-4*s14*s24*s13*s12^2+s14*d*s24^2*s23*s34))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*(s24*s34^3+4*s14*s23*s12^2+3*d*s13^2*s12^2+2*s14*d*s24*s23^2+s24^2*s13*s23-4*s14*s13*s12*s34+2*d*s24*s13*s12^2-8*s24*s13^3-d*s13*s23*s34^2+s14*s13*s12^2-s14*d*s24^2*s13+5*d*s13*s12^2*s34+6*s24^2*s12*s34-9*s13^3*s12-2*s24*s13*s23*s12+d*s12*s34^3-3*s24*s13^2*s23+3*d*s13^3*s12-3*s14*s13^3+2*d*s24*s13^3-3*s14*d*s23*s34^2-6*s24*s13*s34^2+4*s14*s24^2*s12+3*s24*s12^2*s34-3*s13*s23*s12^2-3*s14*d*s13^2*s23+7*d*s13^2*s12*s34-2*s14*d*s24*s23*s34-9*s13^2*s12^2+d*s23*s12^2*s34-6*s14*d*s13*s23*s12+5*s24*s23*s34^2+s14*d*s13*s34^2+6*d*s24*s13*s12*s34-3*s14*s13*s34^2-4*s13*s23*s12*s34+16*s14*s24*s13*s23+2*d*s24*s12^2*s34+d*s13*s23*s12^2-18*s13^2*s12*s34+2*s24*s13*s23*s34+12*s14*s13^2*s23-2*s14^2*d*s13*s23-9*s13^3*s34-2*d*s24*s23*s34^2+4*s14*s24*s12*s34-s14*d*s24^2*s12+s24*s12^3+4*s14*s23*s34^2+2*d*s24*s13*s34^2+2*s14*s12^2*s34+3*d*s13^2*s34^2+2*s14*s12^3-2*s14*d*s24*s23*s12-8*s14^2*s23^2-9*s13^2*s34^2+10*s14^2*s13*s23+s13*s23*s34^2-s14*d*s13*s12^2+s14*s24^2*s13-9*s13*s12^2*s34+s24*s23*s12^2-6*s14*d*s13*s23*s34+d*s24^2*s12*s34-2*s14*d*s24*s13*s12+s14*s24^3-6*s14*s24*s23^2+3*d*s13^3*s34-6*s24*s13*s12^2+s24^3*s23+2*s14*s24^2*s34-3*s14*d*s23*s12^2-d*s24^2*s13*s23-4*s14*s13^2*s12-d*s23*s34^3+4*s24^2*s23*s34+5*d*s13*s12*s34^2+2*s14*s24*s13*s12-6*s13^2*s23*s12+16*s14*s13*s23*s34-3*s24^2*s13*s34+2*s14*s23^2*s12+d*s13*s34^3+2*s14^2*d*s23*s12+4*d*s24*s13^2*s12+s14*d*s13^3+s14*d*s24^2*s23+s24^4+3*s24^2*s12^2-2*d*s24*s13*s23*s34+d*s13^4+3*s24*s12*s34^2-2*s14*d*s13*s23^2+2*d*s13*s23*s12*s34+2*s14*d*s13^2*s34+d*s13^2*s23*s34-3*s13*s34^3+d*s24^2*s13*s12+3*s24^3*s12+s14*d*s12*s34^2+5*s14*s24*s12^2+2*s23*s34^3-15*s24*s13^2*s34-6*s14*d*s24*s13*s23+2*s14*d*s23^2*s34-6*s14^2*s23*s12-6*s14*s23^2*s34+d*s13*s12^3-2*s14^2*d*s23*s34+16*s14*s13*s23*s12-3*s24^2*s13*s12-2*s14*d*s24*s12^2-6*s14^2*s24*s23-3*s13^4+3*s24^2*s34^2+4*d*s24*s13^2*s34+2*d*s24*s12*s34^2+2*s24^2*s23*s12-3*s13^3*s23-12*s24*s13*s12*s34-6*s14*s13^2*s34+2*d*s12^2*s34^2+2*s23*s12*s34^2-2*s14*s24*s13*s34-4*s13^2*s23*s34-6*s24^2*s13^2+10*s14*s13*s23^2-2*s14*d*s23*s12*s34-s14*d*s12^3-4*s14*s24^2*s23+2*s14^2*d*s24*s23+3*s24^3*s34+d*s24^2*s13^2+d*s24^2*s13*s34+2*s14^2*s23*s34-2*s14*d*s23^2*s12+s14*s24*s34^2+d*s13^3*s23-15*s24*s13^2*s12-d*s24^2*s23*s34+2*s14*d*s13*s12*s34+4*s14^2*d*s23^2-9*s13*s12*s34^2-3*s13*s12^3+4*s24*s23*s12*s34+2*d*s13^2*s23*s12-3*s14*s24*s13^2+s14*d*s13^2*s12+d*s12^3*s34))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (-1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*(6*s24*s34^3+4*s14*s23*s12^2+3*d*s13^2*s12^2-8*s14*s13*s12*s34+d*s24*s13*s12^2-8*s24*s13^3+2*s14*s13*s12^2-2*s14*d*s24^2*s13+4*d*s13*s12^2*s34+2*s24^2*s12*s34-12*s13^3*s12-d*s12*s34^3+3*d*s13^3*s12+8*s14*s23*s12*s34-6*s14*s13^3+2*s12*s34^3+d*s24*s13^3+2*s14*d*s23*s34^2+4*s24*s13*s34^2+8*s14*s24^2*s12-2*s24*s12^2*s34-2*s14*d*s13^2*s23+5*d*s13^2*s12*s34+4*s14*d*s24*s23*s34-12*s13^2*s12^2-4*s14*d*s13*s23*s12-3*d*s24*s34^3+2*s14*d*s13*s34^2-6*s14*s13*s34^2+8*s14*s24*s13*s23+d*s24*s12^2*s34-22*s13^2*s12*s34+16*s14*s13^2*s23-4*s14^2*d*s13*s23-10*s13^3*s34+8*s14*s24*s12*s34-2*s14*d*s24^2*s12-4*s14*s23*s34^2-5*d*s24*s13*s34^2+4*s14*s12^2*s34+4*s14*s12^3-8*s14^2*s23^2-6*s13^2*s34^2+20*s14^2*s13*s23-2*s14*d*s13*s12^2+2*s14*s24^2*s13-14*s13*s12^2*s34-d*s24^2*s12*s34-4*s14*d*s24*s13*s12+2*s14*s24^3+2*d*s13^3*s34-8*s24*s13*s12^2+4*s14*s24^2*s34-2*s14*d*s23*s12^2-8*s14*s13^2*s12+d*s13*s12*s34^2+4*s14*s24*s13*s12+12*s14*s13*s23*s34+2*s24^2*s13*s34-2*d*s13*s34^3+4*s14^2*d*s23*s12+4*s14*s24*s23*s12+2*d*s24*s13^2*s12+2*s14*d*s13^3+2*s14*d*s24^2*s23+d*s13^4+4*s24*s12*s34^2+4*s14*d*s13^2*s34+2*s13*s34^3-d*s24^2*s13*s12-d*s34^4+2*s14*d*s12*s34^2+10*s14*s24*s12^2-10*s24*s13^2*s34-12*s14^2*s23*s12+d*s13*s12^3-4*s14^2*d*s23*s34-2*s12^3*s34+20*s14*s13*s23*s12-4*s24^2*s13*s12-4*s14*d*s24*s12^2-12*s14^2*s24*s23-4*s13^4+6*s24^2*s34^2-d*s24^3*s13-d*s24*s13^2*s34-4*s14*s24*s23*s34-2*d*s24*s12*s34^2-12*s24*s13*s12*s34-12*s14*s13^2*s34+d*s12^2*s34^2+2*s34^4-4*s14*s24*s13*s34-4*s24^2*s13^2-d*s24^3*s34-2*s14*d*s12^3+4*s14^2*d*s24*s23+2*s24^3*s34-d*s24^2*s13^2-4*d*s24^2*s13*s34+4*s14^2*s23*s34-2*s12^2*s34^2+2*s14*s24*s34^2-16*s24*s13^2*s12-3*d*s24^2*s34^2+4*s14*d*s13*s12*s34-8*s13*s12*s34^2-4*s13*s12^3-6*s14*s24*s13^2+2*s14*d*s13^2*s12+d*s12^3*s34))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*(4*s14*s23*s12^2-4*s14*d*s24*s23^2-2*s24^2*s13*s23+5*d*s24*s13*s12^2+8*s24*s13^3+2*d*s13*s23*s34^2-d*s13*s12^2*s34-2*s24^2*s12*s34+10*s13^3*s12+4*s24*s13*s23*s12-d*s12*s34^3+6*s24*s13^2*s23-2*d*s13^3*s12-8*s14*s23*s12*s34+2*s12*s34^3-d*s24*s13^3+2*s14*d*s23*s34^2+8*s24*s13*s34^2-4*s24*s12^2*s34+6*s13*s23*s12^2+2*s14*d*s13^2*s23-5*d*s13^2*s12*s34+6*s13^2*s12^2-2*d*s23*s12^2*s34-10*s24*s23*s34^2+8*s13*s23*s12*s34-8*s14*s24*s13*s23+2*d*s24*s12^2*s34-2*d*s13*s23*s12^2+22*s13^2*s12*s34-4*s24*s13*s23*s34-16*s14*s13^2*s23+12*s13^3*s34+4*d*s24*s23*s34^2-6*s24*s12^3-4*s14*s23*s34^2-d*s24*s13*s34^2-3*d*s13^2*s34^2-4*s14*d*s24*s23*s12+8*s14^2*s23^2+12*s13^2*s34^2-2*s13*s23*s34^2+3*d*s24*s12^3+8*s13*s12^2*s34-2*s24*s23*s12^2+4*s14*d*s13*s23*s34+d*s24^2*s12*s34+12*s14*s24*s23^2-3*d*s13^3*s34-4*s24*s13*s12^2-2*s24^3*s23-2*s14*d*s23*s12^2+2*d*s24^2*s13*s23+2*d*s23*s34^3-8*s24^2*s23*s34-4*d*s13*s12*s34^2-2*s12^4+d*s24^3*s12+12*s13^2*s23*s12-20*s14*s13*s23*s34+4*s24^2*s13*s34-4*s14*s23^2*s12-d*s13*s34^3+4*s14*s24*s23*s12+d*s24*s13^2*s12-2*s14*d*s24^2*s23-6*s24^2*s12^2+4*d*s24*s13*s23*s34-d*s13^4+2*s24*s12*s34^2+4*s14*d*s13*s23^2+3*d*s24^2*s12^2-4*d*s13*s23*s12*s34-2*d*s13^2*s23*s34+4*s13*s34^3+4*d*s24^2*s13*s12-2*s24^3*s12-4*s23*s34^3+16*s24*s13^2*s34-4*s14*d*s23^2*s34+12*s14*s23^2*s34+2*d*s13*s12^3-2*s12^3*s34-12*s14*s13*s23*s12-2*s24^2*s13*s12+4*s13^4+d*s24^3*s13-2*d*s24*s13^2*s34-4*s14*s24*s23*s34-d*s24*s12*s34^2-4*s24^2*s23*s12+6*s13^3*s23+12*s24*s13*s12*s34-d*s12^2*s34^2-4*s23*s12*s34^2+8*s13^2*s23*s34+4*s24^2*s13^2-20*s14*s13*s23^2+d*s12^4+d*s24^2*s13^2+d*s24^2*s13*s34+4*s14*d*s23^2*s12+2*s12^2*s34^2-2*d*s13^3*s23+10*s24*s13^2*s12+2*d*s24^2*s23*s34+14*s13*s12*s34^2-2*s13*s12^3-8*s24*s23*s12*s34-4*d*s13^2*s23*s12+d*s12^3*s34));

id INT(pentagon1x123,3,21,4,2,[],1,-1,1,-1,2) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(4*s14^2*d*s23^2*s12^2-5*s14*d*s24*s13^3*s23-d*s24^3*s13*s23*s12-12*s14^2*s23^3*s12+7*s14*d*s24^2*s13*s23^2-28*s14*s13*s23^2*s34^2+2*s24*s13^3*s23^2+4*s14^3*s24*s23^2+2*s13^5*s23+14*s14*d*s24*s13*s23^2*s12-12*s24^2*s23^2*s34^2+24*s14^3*s23^3-4*s14*s13^2*s23^3+5*s14*d*s13^2*s23^2*s12+4*s13^2*s23^2*s12*s34-12*s14*d*s24*s13*s23*s12*s34-d*s13*s23^2*s12*s34^2+8*s24*s13*s23*s34^3-9*s14*d*s13^3*s23*s34-7*d*s13*s23*s12^3*s34+3*s14*d*s24^2*s23^2*s34+6*s13^2*s23^2*s12^2+s14*d*s13^3*s23^2-9*d*s24^2*s13*s23*s12*s34+24*s24*s13*s23*s12^2*s34+12*s13^3*s23*s34^2-3*d*s24^2*s13*s23*s12^2-4*s14^3*d*s23^2*s12-9*d*s24*s13^2*s23*s34^2+8*s13*s23*s12*s34^3+24*s24^2*s13^2*s23*s34+s14*d*s24^3*s23*s12+8*s14*s24*s13*s23^3-3*d*s23*s12^3*s34^2-4*s14^2*s24*s13*s23*s12+4*s14^2*d*s23^2*s12*s34+4*s14*s24*s23^3*s12+4*s14^2*d*s24*s23*s12^2-7*s14*d*s24*s13^2*s23*s12-s14*d*s24^2*s13*s23*s34+9*s14*d*s24*s13^2*s23^2-12*s14^2*s23^2*s12^2+18*s14*s13^2*s23*s34^2-19*s14*d*s13^2*s23*s12*s34-4*s14^2*s13*s23*s12^2-2*s14^2*d*s13*s23*s34^2+12*s14*s13*s23^3*s34-d*s24^3*s13^2*s23+24*s24*s13^3*s23*s34-3*s14*d*s13*s23*s34^3-12*s24*s13*s23^2*s12*s34-d*s13^5*s23-14*s24^2*s13*s23^2*s34+5*d*s24*s13*s23^2*s34^2-8*s23^2*s12*s34^3+18*s14*s24*s13*s23*s34^2+4*s24*s13^2*s23^2*s12-4*s14^2*s13*s23^3-12*s14*s24*s23^2*s12*s34+3*s14*d*s24*s23*s12^3-d*s24*s23^2*s12^2*s34+6*s14*s24^3*s13*s23+18*s14*s13*s23*s12*s34^2+4*s14^2*s24*s13^2*s23-12*d*s13*s23*s12^2*s34^2-6*d*s13^3*s23*s12^2+24*s13^2*s23*s12^2*s34-15*d*s13^2*s23*s12*s34^2+2*s14^2*d*s24^2*s13*s23+8*s24*s13*s23*s12^3+d*s23^2*s12*s34^3-8*s14*d*s13^3*s23*s12+7*s14*d*s13^2*s23^2*s34+d*s24^2*s23^2*s12*s34-16*s24*s23^2*s12*s34^2-9*d*s24*s13^2*s23*s12^2+4*s14^3*d*s23^2*s34+24*s24^2*s13^2*s23*s12+12*s13^3*s23*s12^2-3*d*s24^2*s13*s23*s34^2-5*s14*d*s23*s12^2*s34^2-6*s13^2*s23^2*s34^2-3*d*s24*s23*s12*s34^3+s14*d*s24^2*s23^2*s12+2*s24^4*s13*s23-4*s14*s13*s23^2*s12^2-11*s14*d*s13*s23*s12^2*s34+4*s14^3*d*s13*s23^2-d*s24^3*s13*s23*s34+36*s14^2*s23^3*s34+8*s14^2*d*s23^2*s34^2+8*s14*s23^3*s12*s34+18*s14*d*s24*s13*s23^2*s34+8*s24^3*s13^2*s23-24*s14*s24*s23^2*s34^2-15*d*s24*s13*s23*s12*s34^2-4*s14^2*s23*s12^2*s34+2*s13^4*s23^2-13*d*s13^3*s23*s12*s34+18*s14*s24*s13*s23*s12^2+5*s14*d*s23^2*s12*s34^2-8*s24*s13^2*s23^2*s34-2*s24^2*s13*s23^2*s12-d*s24*s13*s23^2*s12^2-s14*d*s23*s12^3*s34+48*s24*s13^2*s23*s12*s34+3*d*s24^2*s23^2*s34^2-d*s13^4*s23^2-4*s14*s13^3*s23^2+24*s24*s13^3*s23*s12-3*d*s23*s12^2*s34^3-6*d*s13^3*s23*s34^2-8*s14^3*d*s23^3+2*s13*s23^2*s12^2*s34+18*s14*s24^2*s13^2*s23+2*s14*d*s13^2*s23^3-3*d*s13^2*s23^2*s12^2-3*d*s24^2*s23*s12^2*s34+2*s14*d*s24^2*s13*s23*s12+20*s14*s24*s23^3*s34-8*s14^2*s24*s23*s12^2-10*s14*d*s24*s13^2*s23*s34-d*s23*s12*s34^4-4*s14^2*d*s24^2*s23^2+4*s14^2*s24*s13*s23*s34+10*s14*d*s13*s23^2*s12*s34+2*s14^2*d*s13*s23*s12^2+4*s14^2*s13*s23*s34^2-4*s14*s13*s23^3*s12+18*s14*s13^2*s23*s12^2-d*s24*s13^3*s23^2+4*s14^2*s13*s23*s12*s34-5*s14*d*s24*s23*s12*s34^2-12*s14^2*s23^2*s34^2-8*s14^2*d*s23^3*s34-3*s14*d*s23*s12*s34^3-4*d*s13*s23^2*s12^2*s34+8*s24*s13^4*s23-20*s14*s13*s23^2*s12*s34+4*s14*d*s13*s23^3*s12+3*d*s24*s23^2*s34^3-6*d*s24*s23*s12^2*s34^2-6*s14*d*s13^2*s23*s12^2+8*s13^2*s23*s34^3+2*s24*s13*s23^2*s12^2-d*s23^2*s12^2*s34^2+36*s14*s24*s13^2*s23*s34+d*s24^2*s13*s23^2*s12+2*s13^3*s23^2*s34+18*s14*s24^2*s13*s23*s12+d*s24*s13^2*s23^2*s34+4*s14^2*d*s24*s13*s23*s12-9*d*s24*s13^3*s23*s12-d*s13*s23^2*s12^3+24*s24*s13*s23*s12*s34^2-4*s14*d*s24*s23^3*s34-3*s14*d*s13^4*s23+4*s14^2*s13^2*s23*s12-4*s14^2*d*s13^2*s23*s34-2*s14*d*s23^3*s34^2-d*s13*s23*s12^4-d*s23*s12^4*s34+12*s14^2*s24*s23^3-s14*d*s24^2*s13^2*s23-s14*d*s24^2*s23*s12*s34+d*s23^2*s34^4+s14*d*s24*s13*s23*s12^2+6*s14*s13*s23*s12^3+2*s14^2*d*s24^2*s23*s12-12*s14*s23^2*s34^3+8*s13^4*s23*s34-12*s14*s23^2*s12*s34^2-2*s14^2*d*s23*s12*s34^2-2*s24^2*s13^2*s23^2-d*s23^2*s12^3*s34+12*s24^2*s13*s23*s34^2+d*s24^3*s23^2*s34-6*d*s24^2*s13^2*s23*s12-44*s14*s24*s13*s23^2*s34+24*s24*s13^2*s23*s12^2-4*s23^2*s34^4-12*s14^3*s13*s23^2-4*d*s13^2*s23*s12^3+9*s14*d*s24*s23^2*s34^2-3*d*s24*s13*s23*s12^3+18*s14*s13*s23*s12^2*s34-3*d*s13^3*s23^2*s12+24*s13^2*s23*s12*s34^2-48*s14^2*s24*s13*s23^2+7*s14*d*s13*s23^2*s12^2-10*s13*s23^2*s34^3-3*d*s24*s23*s12^3*s34+s14*d*s23*s12^4+2*d*s24*s23^2*s12*s34^2-8*s24^2*s23^2*s12*s34-12*s14^2*s24*s23^2*s34-21*d*s24*s13^2*s23*s12*s34+3*s14*d*s23^2*s12^3+24*s13^3*s23*s12*s34-s14*d*s24^3*s23^2-8*s14^2*s23^4+12*s24^2*s13^3*s23+2*s13*s23*s34^4-4*s14^3*s23^2*s34-20*s14*s13^2*s23^2*s34+d*s24^3*s13*s23^2+16*s14^2*d*s13*s23^2*s34-36*s14^2*s13*s23^2*s12+4*s14*s24^2*s23^3-8*s14^2*d*s24*s23^3+18*s14*s13^3*s23*s12-4*d*s13^4*s23*s12+8*s24^3*s13*s23*s34-2*s14*d*s24^2*s23^3-d*s13*s23*s34^4+2*s14*d*s23^3*s12^2-3*d*s24^2*s13^3*s23+6*s14*d*s24*s23^2*s12*s34+s14*d*s24^3*s13*s23-2*s14^2*d*s13^2*s23*s12-14*s14*d*s13*s23*s12*s34^2-4*s14^2*s24*s23*s12*s34+8*s14^2*s13^2*s23*s34+8*s13^4*s23*s12+2*s14^2*d*s23*s12^3-5*s14*d*s24*s13*s23*s34^2+6*s14*s13*s23*s34^3-4*s14^2*s24^2*s23*s12-15*d*s24*s13*s23*s12^2*s34-2*s24^3*s13*s23^2+24*s24^2*s13*s23*s12*s34-9*s14*d*s13^2*s23*s34^2-4*s24*s23^2*s12^2*s34-4*s14^2*d*s13*s23*s12*s34+8*s13^2*s23*s12^3-20*s14*s24*s13^2*s23^2-4*s24^3*s23^2*s34-15*d*s13^2*s23*s12^2*s34+12*s13*s23*s12^2*s34^2+36*s14*s13^2*s23*s12*s34+2*d*s13*s23^2*s34^3+8*s14^2*d*s13^2*s23^2+3*s14*d*s24^2*s23*s12^2+4*s14^2*s13^3*s23-9*d*s24*s13^3*s23*s34+18*s14*s24^2*s13*s23*s34-2*d*s24*s13^2*s23^2*s12-22*s24*s13*s23^2*s34^2+36*s14*s24*s13^2*s23*s12+4*d*s24^2*s13*s23^2*s34+6*s13^3*s23^2*s12-4*s14^2*s23*s12^3+2*s13*s23*s12^4+5*s14*d*s23^2*s34^3+36*s14*s24*s13*s23*s12*s34-d*s24^3*s23*s12*s34-12*s14*s24^2*s23^2*s34-12*s14^2*s24*s23^2*s12+4*s14^2*d*s24*s23^2*s34-2*s14*d*s24*s23*s12^2*s34+18*s14*s13^3*s23*s34+8*s24^3*s13*s23*s12-4*d*s13^4*s23*s34+16*s14*s23^3*s34^2+d*s24^2*s13^2*s23^2-36*s14^2*s13*s23^2*s34+12*s14^2*d*s13*s23^2*s12+12*s14^3*s23^2*s12+6*s14*s13^4*s23-8*s14*s13^2*s23^2*s12-12*s24*s23^2*s34^3-2*s14^2*d*s13^3*s23+5*s14*d*s24*s23^2*s12^2-4*d*s13^2*s23*s34^3-24*s14^2*s13^2*s23^2-6*d*s24^2*s13^2*s23*s34+3*s14*d*s23^2*s12^2*s34-20*s14*s24*s13*s23^2*s12-7*d*s13*s23*s12*s34^3+24*s24*s13^2*s23*s34^2+12*s24^2*s13*s23*s12^2-3*d*s24*s13^4*s23+11*s14*d*s13*s23^2*s34^2-3*d*s24^2*s23*s12*s34^2+2*s13*s23^2*s12^3+18*s14*s24*s13^3*s23-2*d*s13^3*s23^2*s34-4*s23^2*s12^2*s34^2-4*s14^3*d*s24*s23^2+12*s14^2*d*s24*s13*s23^2+8*s13*s23*s12^3*s34-16*s14*s24^2*s13*s23^2-3*d*s24*s13*s23*s34^3-10*s13*s23^2*s12*s34^2-5*d*s13^2*s23^2*s12*s34))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (-1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(8*s14^2*d*s24*s23*s34-24*s14^2*s24*s23*s12-9*s14*d*s24*s13*s12^2-6*d*s24^2*s13^2*s34+2*s24*s13*s34^3-20*s14*s24^2*s23*s34-s14*d*s23*s34^3-8*s13*s12^4+8*s14^2*d*s24^2*s23-9*d*s24^3*s13*s12-d*s12^4*s34+8*s14*s12^3*s34+6*s14*s24^2*s34^2-4*s14*d*s24^3*s12+2*s24^4*s13+4*s14*s13^2*s23*s12-2*s23^2*s12^3+8*s14^2*d*s13*s23*s12-8*s14^2*s13*s23*s34-2*d*s24^2*s13*s23^2+22*s14*d*s24*s23*s12*s34+3*d*s24*s13^3*s23+12*s14^2*s23^2*s34-3*d*s24^3*s23*s12+36*s14*s24*s13*s23*s12+8*s14*d*s23^2*s12*s34-4*s23*s12^4+8*s14*s24^2*s13*s34+12*s14^2*s13*s23^2+8*s24*s23*s34^3-6*s14*d*s13*s12^2*s34-2*d*s24^2*s23^2*s34+2*d*s13^4*s23-6*s14*s13^3*s23+s14*d*s24*s23*s12^2-18*s24*s13^2*s12*s34-4*s23*s12^3*s34+8*s24^4*s34+5*d*s13^3*s23*s34+2*s14*s24^2*s13^2+6*s23^2*s12*s34^2+4*d*s13^2*s23^2*s12+3*s14*d*s13*s23*s34^2-15*d*s24^2*s12*s34^2-16*s13*s23*s12^3+12*s13*s12^2*s34^2-7*d*s24*s12^3*s34-12*s13^2*s12^3+6*s14*s24^3*s34-6*s14*d*s24^2*s12^2-4*d*s24^4*s34-12*s14*d*s24*s13*s12*s34+40*s14*s13*s23^2*s12+16*s14*s24*s12*s34^2-3*d*s24*s13*s12^3-24*s24^2*s13^2*s12-s14*d*s12^4+4*s14*d*s24*s23^3+6*s24^3*s13*s34-8*s14^2*d*s23^2*s34-8*s14*s24*s23^2*s34+16*s14*s23*s12^3-4*s13^4*s23-14*s14^2*s24^2*s23+10*s14*s12^2*s34^2-s14*d*s24^4+6*s23*s12^2*s34^2-3*d*s24^4*s13+52*s14*s24*s13*s23^2+8*s24^3*s23*s34+4*s14*s24^3*s13+11*d*s13^2*s23*s12*s34-6*s24*s13*s12^2*s34-2*s24^2*s23^2*s12+6*s13^2*s12*s34^2-d*s24*s23*s12^3-12*d*s24*s12^2*s34^2-6*s13*s12^3*s34+4*s24*s23^2*s12*s34+9*s14*d*s23*s12^2*s34-7*d*s24^2*s13*s23*s34-16*s13^3*s23*s12+5*d*s24*s13^2*s23*s12+6*s14*s13*s12^3-3*s14*d*s13^2*s12*s34-2*s12^4*s34-8*s14^2*d*s13*s23^2-d*s13*s23*s34^3+2*s14*s24*s13^2*s34-2*s13^2*s23^2*s34+16*s14^3*s23^2+14*s14*s13^2*s23^2-10*s24*s23*s12^3-2*s14*d*s13^2*s23^2-3*d*s13^2*s12*s34^2+5*s14*d*s24*s23*s34^2+14*s14*s24^2*s13*s12-3*d*s13*s12^3*s34+24*s24*s12^2*s34^2+4*s14*s24*s13*s23*s34+d*s23*s12^2*s34^2-3*s14*d*s13*s12^3+2*s23*s34^4-4*d*s24*s13*s23^2*s34-8*s14^3*d*s23^2-4*d*s24^3*s23*s34-16*s14^2*s23^3+2*d*s13^2*s23^2*s34-9*s14*d*s24*s12^2*s34-s14*d*s13*s23*s12^2+2*s13*s23*s34^3-15*d*s24*s13*s12*s34^2-3*s14*d*s24^3*s13+7*d*s13*s23*s12^2*s34+6*s24^4*s12+6*s24^2*s13*s12*s34+6*d*s13^3*s23*s12-16*s14*s13*s23*s12*s34-9*d*s24^3*s13*s34-20*s14*s23*s12*s34^2-3*s14*d*s12^2*s34^2-3*s14*d*s23*s12^3-4*s24*s13^2*s23^2-4*s14*s24^2*s23*s12-3*s14*d*s24*s13*s34^2-16*s14^2*s24*s23*s34+12*s14^2*d*s24*s23*s12-6*d*s24^2*s13^2*s12-22*s24*s13*s12^3-20*s14^2*s23^2*s12+s14*d*s24*s13^2*s23-4*s14*s24*s23^3-16*s14^2*s13*s23*s12+4*s14^2*d*s13*s23*s34+12*s14*s24^2*s12^2-12*s14*s13^2*s23*s34-3*s14*d*s24^3*s34+6*s23^2*s34^3-9*s14*d*s24^2*s12*s34+6*s24^2*s23^2*s34-4*d*s24*s23*s34^3+12*s24^2*s23*s12*s34-5*d*s24*s23*s12*s34^2-3*s14*d*s24^2*s13^2+2*s24^3*s23*s12-2*d*s23^2*s34^3+4*d*s13*s23^2*s12*s34-8*s13^3*s12^2+2*d*s13*s23*s12^3+8*s14*s24*s13^2*s12-10*s13^2*s23^2*s12+5*s14*d*s13^3*s23+30*s24^2*s12*s34^2+2*s24*s12^3*s34-6*d*s13*s12^2*s34^2+d*s23*s12^3*s34+2*d*s24*s13^2*s23*s34-36*s24*s13*s23*s12^2-4*d*s24^2*s13*s23*s12-10*s13^3*s23*s34+3*s14*d*s24^2*s13*s23-2*s24^3*s13*s12+16*s14*s13*s23^2*s34-3*d*s24*s13*s34^3-12*s24^2*s13^2*s34+8*s14*s24^3*s12-4*d*s24^4*s12-3*s14*d*s24^2*s34^2-3*s14*d*s12^3*s34-16*s24*s13^3*s23+16*s14*s24*s23^2*s12-d*s23*s34^4+10*s14*s13*s12*s34^2-6*s14^2*s13^2*s23+8*s13*s23^2*s34^2-6*d*s24^2*s23*s34^2-6*s24^3*s13^2-3*s14*d*s13*s12*s34^2+4*s14*d*s24*s23^2*s12+2*s24^4*s23-d*s13^3*s12*s34-24*s24^2*s13*s23*s12+d*s24*s13*s23*s12^2-24*s24*s13^2*s23*s34+18*s24*s12*s34^3+18*s24*s23*s12*s34^2+6*d*s13^2*s23*s12^2-15*d*s24^2*s12^2*s34-7*d*s24^2*s23*s12*s34-4*s14*d*s13*s23^2*s34-4*d*s24^2*s12^3-4*s14*d*s13*s23^3-4*s24*s23^2*s12^2+2*s24^5-4*s13*s23^2*s12*s34+10*s14*s24^2*s13*s23-3*d*s12^3*s34^2-2*s23^2*s12^2*s34-3*s14*d*s13^2*s12^2+4*s14^2*d*s24*s13*s23-d*s23*s12*s34^3+2*s14*s24^4-d*s24*s12^4+12*s24^3*s34^2-10*s14*s24^2*s23^2-6*s14*d*s24*s13^2*s12+8*s14*s24*s12^3-9*d*s24^2*s13*s34^2-d*s24*s13^3*s34-20*s14*s23^3*s34-d*s24^2*s13^2*s23-6*s14*d*s23^2*s12^2-s14*d*s12*s34^3-2*s14^2*s23*s34^2-30*s24*s13^2*s12^2+2*s14*s12^4+20*s14*s24^2*s12*s34+2*d*s13^3*s23^2-2*s12^5-3*d*s13*s12*s34^3-6*s24^2*s23*s12^2-6*s13^2*s12^2*s34+9*s14*d*s13^2*s23*s34+2*d*s13*s23^2*s12^2-s14*d*s13^3*s12-21*d*s24^2*s13*s12*s34+18*s24*s13*s12*s34^2-18*s13*s23*s12^2*s34-4*s13^3*s23^2+14*s14*s24*s13^2*s23+11*s14*d*s24^2*s23*s12-4*d*s24*s23^2*s34^2-6*s13^2*s23*s34^2-6*d*s24^3*s34^2-6*s24*s12^4+4*s14^2*d*s13^2*s23+4*s14*s24*s13*s34^2+22*s24^3*s12*s34+8*s24*s13*s23^2*s34+11*s14*d*s23*s12*s34^2-s14*d*s24*s13^3-4*s24^2*s12^3+2*s14*s23^2*s34^2-4*s14*d*s23^3*s12-18*s24*s13^3*s12+18*s14*d*s13*s23*s12*s34-18*s24^2*s13*s12^2+26*s14*s13*s23*s12^2+6*s12^3*s34^2+22*s14*s24*s12^2*s34-3*d*s24^3*s13^2-10*s14*s24^3*s23-d*s24^4*s23-28*s14^2*s23*s12*s34-4*s14^2*s24*s23^2-4*s24^3*s13*s23-10*s14*s24*s23*s34^2-s14*d*s24*s34^3-3*d*s24*s13^2*s34^2+6*s14*d*s24*s13*s23*s34-9*s14*d*s24^2*s13*s12+8*s14*s13^2*s12*s34-d*s24*s13^3*s12+10*s12^2*s34^3-3*s14*d*s24*s13^2*s34-9*d*s24^2*s13*s12^2+2*s14*s24*s34^3-4*s14*s23*s12^2*s34-d*s24*s34^4+4*s24^3*s12^2+7*s14*d*s24^3*s23-3*d*s24^3*s13*s23-6*s24*s13^2*s34^2-10*s14^2*s23*s12^2-d*s24^2*s13^3-8*s14*d*s24*s13*s23^2+12*s14*s23^3*s12-2*s14*d*s23^2*s34^2-42*s24*s13^2*s23*s12-6*s24^2*s13*s23*s34-5*d*s24*s13*s23*s34^2-3*d*s24^2*s23*s12^2+8*s14*d*s24*s23^2*s34-3*d*s13^2*s12^2*s34+10*s13*s12*s34^3-8*s13*s23^2*s12^2-4*s14^2*s24*s13*s23+2*s14*s13^3*s12-13*d*s24^3*s12*s34+4*d*s13*s23*s12*s34^2-15*d*s24*s13*s12^2*s34-24*s13^2*s23*s12*s34+24*s14*s24*s13*s12*s34+4*s12*s34^4-4*d*s24^2*s34^3+12*s24*s23^2*s34^2-6*s14*d*s24*s12*s34^2+3*d*s13^2*s23*s34^2-8*s14*d*s13*s23^2*s12+6*s24^2*s13*s34^2-6*s14*s13*s23*s34^2-d*s12*s34^4-10*s24*s13^3*s34-d*s24^5-2*s13^4*s12+4*s14*s12*s34^3+8*s24^2*s34^3+4*s14^2*d*s23*s12^2+26*s14*s23^2*s12^2+4*s14*d*s23^3*s34-3*d*s24*s13^2*s12^2+2*s14*d*s24*s13*s23*s12-6*s14*d*s24^2*s13*s34+22*s14*s24*s23*s12^2+16*s14*s13*s12^2*s34-4*s14*d*s24*s12^3+12*s14^2*d*s23*s12*s34-18*s24^2*s13^2*s23-4*s24*s13^4+10*s14*d*s24^2*s23^2-20*s14*s23^2*s12*s34+6*s14*s13^2*s12^2-2*s13^3*s12*s34-9*d*s24*s13^2*s12*s34+12*s14*s13*s23^3-10*s24^2*s13^3+7*s14*d*s13^2*s23*s12-24*s14*s24*s23*s12*s34-2*d*s13*s23^2*s34^2-2*d*s24*s23*s12^2*s34+12*s24^2*s23*s34^2+8*s23*s12*s34^3-3*d*s12^2*s34^3-8*s24*s13*s23^2*s12+2*d*s23^2*s12^2*s34-6*d*s24^3*s12^2-24*s13^2*s23*s12^2+2*s24*s34^4+18*s24^2*s12^2*s34-24*s24*s13*s23*s12*s34-7*d*s24*s12*s34^3+16*s14*s24*s13*s12^2+13*s14*d*s24^2*s23*s34))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (-1/2*(8*s14^2*d*s24*s23*s34-8*s14^2*s24*s23*s12-3*s14*d*s24*s13*s12^2-18*d*s24^2*s13^2*s34+34*s24*s13*s34^3-24*s14*s24^2*s23*s34+10*s14*d*s23*s34^3+2*s13*s12^4-10*d*s13^3*s34^2-4*d*s24^3*s13*s12-d*s12^4*s34+6*s14*s24^2*s34^2+4*s24^4*s13-20*s14*s13^2*s23*s12+8*s14^2*d*s13*s23*s12-24*s14^2*s13*s23*s34+16*s14*d*s24*s23*s12*s34-d*s24*s13^3*s23+40*s14^2*s23^2*s34-40*s14*s24*s13*s23*s12-4*s14*d*s13*s34^3+16*s14*s24^2*s13*s34+16*s14^2*s13*s23^2-12*s24*s23*s34^3-6*s14*d*s13*s12^2*s34-d*s13^4*s23-10*s14*s13^3*s23+4*s14*d*s24*s23*s12^2+78*s24*s13^2*s12*s34+2*s24^4*s34-2*d*s13^3*s23*s34+10*s14*s24^2*s13^2-4*s24*s23*s12^2*s34+24*s14*d*s13*s23*s34^2-12*d*s24^2*s12*s34^2+2*s13*s23*s12^3+24*s13*s12^2*s34^2-4*d*s24*s12^3*s34+8*s13^2*s12^3+2*s14*s24^3*s34-d*s24^4*s34-12*s14*d*s24*s13*s12*s34-4*s14*s13*s23^2*s12+8*s14*s24*s12*s34^2-4*d*s24*s13*s12^3+36*s24^2*s13^2*s12-4*d*s13^2*s12^3+22*s24^3*s13*s34-16*s14^2*d*s23^2*s34+20*s14*s24*s23^2*s34+2*s13^4*s23-2*s14^2*s24^2*s23+2*s14*s12^2*s34^2-4*s23*s12^2*s34^2-d*s24^4*s13+8*s14*s24*s13*s23^2-4*s24^3*s23*s34+4*s14*s24^3*s13-5*d*s13^2*s23*s12*s34-10*s13*s23*s12*s34^2+42*s24*s13*s12^2*s34+42*s13^2*s12*s34^2-12*d*s24*s12^2*s34^2+10*s13*s12^3*s34-22*s24*s13*s23*s34^2+6*s14*d*s23*s12^2*s34+4*d*s24^2*s13*s23*s34+6*s13^3*s23*s12-2*d*s24*s13^2*s23*s12+2*s14*s13*s12^3-9*s14*d*s13^2*s12*s34-8*s14^2*d*s13*s23^2+2*d*s13*s23*s34^3+20*s13^3*s34^2+22*s14*s24*s13^2*s34-d*s13*s12^4+16*s14^3*s23^2-4*s14*s13^2*s23^2+2*s14*d*s13^2*s23^2-24*d*s13^2*s12*s34^2+20*s14*d*s24*s23*s34^2+10*s14*s24^2*s13*s12-8*d*s13*s12^3*s34+12*s24*s12^2*s34^2-80*s14*s24*s13*s23*s34-d*s23*s12^2*s34^2-s14*d*s13*s12^3-4*s23*s34^4-8*s14^3*d*s23^2+d*s24^3*s23*s34+20*s13^2*s34^3-8*s14^2*s23^3-3*s14*d*s24*s12^2*s34+8*s14*d*s13*s23*s12^2-10*s13*s23*s34^3-36*d*s24*s13*s12*s34^2-s14*d*s24^3*s13-4*d*s13*s23*s12^2*s34+54*s24^2*s13*s12*s34-3*d*s13^3*s23*s12-44*s14*s13*s23*s12*s34-8*d*s24^3*s13*s34-24*s14*s23*s12*s34^2-3*s14*d*s12^2*s34^2+10*s13*s34^4+2*s14*d*s23*s12^3-6*d*s13^3*s12^2-4*s14*s24^2*s23*s12-9*s14*d*s24*s13*s34^2-16*s14^2*s24*s23*s34+4*s14^2*d*s24*s23*s12-12*d*s24^2*s13^2*s12+10*s24*s13*s12^3-8*s14^2*s23^2*s12+16*s14*d*s24*s13^2*s23-16*s14^2*s13*s23*s12+12*s14^2*d*s13*s23*s34-40*s14*s13^2*s23*s34-s14*d*s24^3*s34-3*s14*d*s24^2*s12*s34+3*d*s24*s23*s34^3-8*s24^2*s23*s12*s34+2*d*s24*s23*s12*s34^2-3*s14*d*s24^2*s13^2-s14*d*s13^4+12*s13^3*s12^2-d*s13*s23*s12^3+16*s14*s24*s13^2*s12-5*d*s13*s34^4+4*s14*d*s13^3*s23+18*s24^2*s12*s34^2+2*s24*s12^3*s34-18*d*s13*s12^2*s34^2-d*s23*s12^3*s34+8*s14*s13*s34^3+d*s24*s13^2*s23*s34+2*s24*s13*s23*s12^2+d*s24^2*s13*s23*s12+2*s13^3*s23*s34+12*s14*d*s24^2*s13*s23-10*d*s13^2*s34^3+14*s24^3*s13*s12+12*s14*s13*s23^2*s34-16*d*s24*s13*s34^3-s14*d*s34^4+48*s24^2*s13^2*s34-3*s14*d*s24^2*s34^2-s14*d*s12^3*s34-20*s14*s23*s34^3+2*s24*s13^3*s23+4*s14*s24*s23^2*s12+d*s23*s34^4+14*s14*s13*s12*s34^2-10*s14^2*s13^2*s23+3*d*s24^2*s23*s34^2+14*s24^3*s13^2-9*s14*d*s13*s12*s34^2-16*d*s13^3*s12*s34-2*s24^2*s13*s23*s12-d*s24*s13*s23*s12^2-8*s24*s13^2*s23*s34+18*s24*s12*s34^3-16*s24*s23*s12*s34^2-3*d*s13^2*s23*s12^2-6*d*s24^2*s12^2*s34+d*s24^2*s23*s12*s34-30*s14*s24^2*s13*s23-4*d*s12^3*s34^2-5*d*s13^4*s34-3*s14*d*s13^2*s12^2+8*s14*s13^3*s34+12*s14^2*d*s24*s13*s23+d*s23*s12*s34^3-8*s14^2*d*s24*s23^2+8*s24^3*s34^2+4*s14*s24^2*s23^2-6*s14*d*s24*s13^2*s12-18*d*s24^2*s13*s34^2-16*d*s24*s13^3*s34+d*s24^2*s13^2*s23+2*s14*d*s23^2*s12^2-3*s14*d*s12*s34^3-14*s14^2*s23*s34^2+30*s24*s13^2*s12^2+4*s14*s24^2*s12*s34-16*d*s13*s12*s34^3+30*s13^2*s12^2*s34+18*s14*d*s13^2*s23*s34-3*s14*d*s13^3*s12-24*d*s24^2*s13*s12*s34+66*s24*s13*s12*s34^2+2*s13*s23*s12^2*s34+12*s14*s13^2*s34^2-d*s34^5-38*s14*s24*s13^2*s23+2*s14*d*s24^2*s23*s12-6*s13^2*s23*s34^2-4*d*s24^3*s34^2+4*s14^2*d*s13^2*s23+20*s14*s24*s13*s34^2+6*s24^3*s12*s34+14*s14*d*s23*s12*s34^2-3*s14*d*s24*s13^3+8*s14^2*d*s23*s34^2+16*s14*s23^2*s34^2+30*s24*s13^3*s12+24*s14*d*s13*s23*s12*s34+10*s13^4*s34-d*s13^5+18*s24^2*s13*s12^2-10*s14*s13*s23*s12^2+2*s12^3*s34^2+2*s14*s24*s12^2*s34-4*d*s24^3*s13^2-2*s14*s24^3*s23-4*s14^2*s23*s12*s34+16*s14^2*s24*s23^2-2*s24^3*s13*s23-42*s14*s24*s23*s34^2-3*s14*d*s24*s34^3-24*d*s24*s13^2*s34^2+36*s14*d*s24*s13*s23*s34-3*s14*d*s24^2*s13*s12+16*s14*s13^2*s12*s34-12*d*s24*s13^3*s12+6*s12^2*s34^3-9*s14*d*s24*s13^2*s34-6*d*s24^2*s13*s12^2+6*s14*s24*s34^3-4*s14*s23*s12^2*s34-4*d*s24*s34^4+d*s24^3*s13*s23+2*s34^5+54*s24*s13^2*s34^2+2*s14*s34^4-6*s14^2*s23*s12^2-6*d*s24^2*s13^3-2*s14*d*s23^2*s34^2+8*s14*s24*s13^3+4*s24*s13^2*s23*s12-14*s24^2*s13*s23*s34+5*d*s24*s13*s23*s34^2-4*s14*d*s24*s23^2*s34-4*d*s24*s13^4-18*d*s13^2*s12^2*s34+26*s13*s12*s34^3-6*s14*d*s13^2*s34^2-4*d*s13^4*s12+2*s14*s13^4-28*s14^2*s24*s13*s23+6*s14*s13^3*s12-4*d*s24^3*s12*s34-d*s13*s23*s12*s34^2-24*d*s24*s13*s12^2*s34+4*s13^2*s23*s12*s34+24*s14*s24*s13*s12*s34+6*s12*s34^4+2*s13^5-6*d*s24^2*s34^3-6*s14*d*s24*s12*s34^2+4*s14*d*s13*s23^2*s12+42*s24^2*s13*s34^2-50*s14*s13*s23*s34^2-4*d*s12*s34^4+38*s24*s13^3*s34+8*s13^4*s12+4*s14*s12*s34^3+12*s24^2*s34^3+4*s14^2*d*s23*s12^2-12*d*s24*s13^2*s12^2+20*s14*d*s24*s13*s23*s12-6*s14*d*s24^2*s13*s34-2*s14*s24*s23*s12^2+8*s14*s13*s12^2*s34+4*s14^2*d*s23*s12*s34-2*s24^2*s13^2*s23+10*s24*s13^4-2*s14*d*s24^2*s23^2+8*s14*s23^2*s12*s34-4*s14*d*s13^3*s34+6*s14*s13^2*s12^2+30*s13^3*s12*s34-36*d*s24*s13^2*s12*s34+18*s24^2*s13^3+10*s14*d*s13^2*s23*s12-28*s14*s24*s23*s12*s34-d*s24*s23*s12^2*s34-12*s24^2*s23*s34^2-8*s23*s12*s34^3-6*d*s12^2*s34^3+6*s13^2*s23*s12^2+8*s24*s34^4+6*s24^2*s12^2*s34-12*s24*s13*s23*s12*s34-12*d*s24*s12*s34^3+8*s14*s24*s13*s12^2+10*s14*d*s24^2*s23*s34)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (-Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(2*s14*s13^2*s23*s12+s23^2*s12^3+d*s24^2*s13*s23^2-2*d*s24*s13^3*s23-2*s14^2*s23^2*s34-2*s14*s24*s13*s23*s12+2*s14*d*s23^2*s12*s34+s23*s12^4-6*s14^2*s13*s23^2+d*s24^2*s23^2*s34-d*s13^4*s23+2*s14*s13^3*s23+2*s14*d*s24*s23*s12^2+2*s23*s12^3*s34-3*d*s13^3*s23*s34-3*s23^2*s12*s34^2-2*d*s13^2*s23^2*s12+4*s24*s23*s12^2*s34-s14*d*s13*s23*s34^2+5*s13*s23*s12^3-18*s14*s13*s23^2*s12-2*s14*d*s24*s23^3+2*s14^2*d*s23^2*s34-6*d*s24*s13*s23*s12*s34-6*s14*s24*s23^2*s34-2*s14*s23*s12^3+2*s13^4*s23+s23*s12^2*s34^2-22*s14*s24*s13*s23^2-7*d*s13^2*s23*s12*s34+7*s13*s23*s12*s34^2+s24^2*s23^2*s12-2*s24*s23^2*s12*s34+7*s24*s13*s23*s34^2-d*s24^2*s13*s23*s34+7*s13^3*s23*s12-4*d*s24*s13^2*s23*s12+2*s14^2*d*s13*s23^2-d*s13*s23*s34^3+s13^2*s23^2*s34-9*s14*s13^2*s23^2+3*s24*s23*s12^3+3*s14*d*s13^2*s23^2+2*s14*s24*s13*s23*s34-2*d*s23*s12^2*s34^2+2*d*s24*s13*s23^2*s34+12*s14^2*s23^3-d*s13^2*s23^2*s34+s14*d*s13*s23*s12^2+2*s13*s23*s34^3-5*d*s13*s23*s12^2*s34-3*d*s13^3*s23*s12+2*s14*s13*s23*s12*s34+s14*d*s23*s12^3+2*s24*s13^2*s23^2-2*s14*s24^2*s23*s12+6*s14^2*s23^2*s12+2*s14*s24*s23^3+4*s14*s13^2*s23*s34-3*s23^2*s34^3-3*s24^2*s23^2*s34+2*s24^2*s23*s12*s34-2*d*s24*s23*s12*s34^2+s24^3*s23*s12+d*s23^2*s34^3-2*d*s13*s23^2*s12*s34-d*s13*s23*s12^3+5*s13^2*s23^2*s12-s14*d*s13^3*s23-d*s23*s12^3*s34-4*d*s24*s13^2*s23*s34+13*s24*s13*s23*s12^2-d*s24^2*s13*s23*s12+6*s13^3*s23*s34+s14*d*s24^2*s13*s23-2*s14^2*d*s23^2*s12-14*s14*s13*s23^2*s34+7*s24*s13^3*s23-10*s14*s24*s23^2*s12-4*s13*s23^2*s34^2+2*s14*d*s24*s23^2*s12+11*s24^2*s13*s23*s12-2*d*s24*s13*s23*s12^2+14*s24*s13^2*s23*s34+s24*s23*s12*s34^2-3*d*s13^2*s23*s12^2-d*s24^2*s23*s12*s34+6*s14*d*s13*s23^2*s34+2*s14*d*s13*s23^3+2*s24*s23^2*s12^2+2*s13*s23^2*s12*s34+s23^2*s12^2*s34-d*s23*s12*s34^3-2*s14^2*d*s24*s23^2-s14*s24^2*s23^2+10*s14*s23^3*s34-d*s24^2*s13^2*s23+3*s14*d*s23^2*s12^2-d*s13^3*s23^2+3*s24^2*s23*s12^2-2*s14*d*s13^2*s23*s34-d*s13*s23^2*s12^2+10*s13*s23*s12^2*s34+2*s13^3*s23^2+2*s14*s24*s13^2*s23+s14*d*s24^2*s23*s12+2*d*s24*s23^2*s34^2+6*s13^2*s23*s34^2-4*s24*s13*s23^2*s34-s14*d*s23*s12*s34^2-5*s14*s23^2*s34^2+2*s14*d*s23^3*s12-2*s14*d*s13*s23*s12*s34-2*s14*s13*s23*s12^2+2*s14^2*s24*s23^2+3*s24^3*s13*s23-2*s14*s23*s12^2*s34+6*s14*d*s24*s13*s23^2-6*s14*s23^3*s12+3*s14*d*s23^2*s34^2+17*s24*s13^2*s23*s12+8*s24^2*s13*s23*s34-2*d*s24*s13*s23*s34^2+2*s14*d*s24*s23^2*s34+4*s13*s23^2*s12^2-5*d*s13*s23*s12*s34^2+14*s13^2*s23*s12*s34-4*s14^2*d*s23^3-6*s24*s23^2*s34^2-3*d*s13^2*s23*s34^2+6*s14*d*s13*s23^2*s12+2*s14*s13*s23*s34^2-9*s14*s23^2*s12^2-2*s14*d*s23^3*s34+2*s14*d*s24*s13*s23*s12-4*s14*s24*s23*s12^2+8*s24^2*s13^2*s23-s14*d*s24^2*s23^2-2*s14*s23^2*s12*s34-6*s14*s13*s23^3-s14*d*s13^2*s23*s12-2*s14*s24*s23*s12*s34+d*s13*s23^2*s34^2-2*d*s24*s23*s12^2*s34+4*s24*s13*s23^2*s12-d*s23^2*s12^2*s34+9*s13^2*s23*s12^2+18*s24*s13*s23*s12*s34));

id INT(pentagon1x123,3,21,4,2,[],1,0,2,-2,1) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*(4*s14^2*d*s23^2*s12^2-2*s14*d*s24*s13^3*s23+4*s14*s12^2*s34^3-12*s14^2*s23^3*s12+s14*d*s24^2*s13*s23^2+4*s14*s24^3*s12^2-2*s14*d*s24^3*s13*s12+4*s14*s23^2*s12^2*s34-3*s14*d*s13^4*s34+8*s14^2*d*s23*s12^2*s34-3*s14*d*s12^3*s34^2+4*s14*s24*s23^2*s12^2+4*s14^3*s24*s23^2-3*s14*d*s24^2*s12^3+2*s14*d*s24*s13*s23^2*s12-3*s14*d*s24^2*s13^2*s34-6*s14*d*s24*s12^3*s34+16*s14^3*s23^3+16*s14*s24*s23*s12^2*s34-3*s14*d*s13^2*s23^2*s12-8*s14^2*s24^2*s13*s23+8*s14*d*s24*s13*s23*s12*s34-2*s14*d*s13^3*s23*s34+72*s14*s24*s13^2*s12*s34-3*s14*d*s24*s12^4-3*s14*d*s24^2*s23^2*s34-s14*d*s13^3*s23^2+72*s14*s24*s13^2*s12^2-4*s14^3*d*s23^2*s12+2*s14*d*s24^3*s23*s12-56*s14^2*s24*s13*s23*s12+20*s14*s13^4*s12+8*s14^2*d*s24*s23*s12^2-6*s14*d*s24*s13^2*s23*s12+72*s14*s13^2*s12^2*s34+6*s14*d*s24^2*s13*s23*s34+8*s14*s24^2*s23*s12^2+s14*d*s24*s13^2*s23^2-32*s14^2*s23^2*s12^2+12*s14*s24*s13^4+8*s14*s13^2*s23*s34^2-12*s14*d*s24*s13*s12^3-6*s14*d*s13^2*s23*s12*s34-60*s14^2*s13*s23*s12^2+4*s14^2*d*s13*s23*s34^2+2*s14*d*s13*s23*s34^3+36*s14*s24^2*s13*s12^2-s14*d*s12^5+48*s14*s24*s13^3*s12+12*s14*s24^2*s13^3-12*s14^2*s13*s23^3-3*s14*d*s24*s12^2*s34^2-2*s14*d*s24*s23*s12^3+72*s14*s24*s13*s12^2*s34+16*s14*s13*s23*s12*s34^2-28*s14^2*s24*s13^2*s23-s14*d*s24^3*s13^2+4*s14*s24^3*s13^2+4*s14^2*d*s24^2*s13*s23-8*s14*d*s13^3*s23*s12+24*s14*s24^2*s13*s12*s34+s14*d*s13^2*s23^2*s34-4*s14^3*d*s23^2*s34-3*s14*d*s24^2*s13^3+2*s14*d*s23*s12^2*s34^2-12*s14*d*s13*s12^3*s34+12*s14*s24*s13^2*s34^2+s14*d*s24^2*s23^2*s12-9*s14*d*s13^2*s12*s34^2+12*s14*s13*s23^2*s12^2+8*s14*s13*s12*s34^3-6*s14*d*s13*s23*s12^2*s34-6*s14*d*s24*s13*s12*s34^2-3*s14*d*s24*s13^4-4*s14^3*d*s13*s23^2+4*s14^2*s23^3*s34-4*s14^2*d*s23^2*s34^2+2*s14*d*s24*s13*s23^2*s34-9*s14*d*s24^2*s13^2*s12-28*s14^2*s23*s12^2*s34-5*s14*d*s13^4*s12+48*s14*s24*s13*s23*s12^2+s14*d*s23^2*s12*s34^2-2*s14*d*s23*s12^3*s34-9*s14*d*s13*s12^2*s34^2+4*s14*s13^3*s23^2+24*s14*s24*s13^3*s34-8*s14*d*s13*s23*s12^3+8*s14^2*d*s24*s13^2*s23+12*s14*s24*s12^4+8*s14*s24^2*s13^2*s23+8*s14^2*d*s24*s23*s12*s34+4*s14*d*s24^2*s13*s23*s12-28*s14^2*s24*s23*s12^2+4*s14*d*s24*s13^2*s23*s34+12*s14*s24^2*s12^3+12*s14*s12^3*s34^2+48*s14*s13^3*s12*s34-16*s14^2*s23^2*s12*s34-4*s14^2*d*s24^2*s23^2-s14*d*s13^5-16*s14^2*s24*s13*s23*s34+12*s14*s13^4*s34+2*s14*d*s13*s23^2*s12*s34+12*s14^2*d*s13*s23*s12^2-8*s14^2*s13*s23*s34^2+12*s14*s24^2*s12^2*s34-s14*d*s24^3*s12^2+48*s14*s13^2*s23*s12^2-s14*d*s12^2*s34^3-56*s14^2*s13*s23*s12*s34+6*s14*d*s24*s23*s12*s34^2+2*s14*d*s23*s12*s34^3-3*s14*d*s12^4*s34+8*s14*s13*s23^2*s12*s34-3*s14*d*s13^3*s34^2-12*s14*d*s13^2*s23*s12^2-3*s14*d*s24^2*s12^2*s34+16*s14*s24*s13^2*s23*s34+16*s14*s24^2*s13*s23*s12-12*s14*d*s13^3*s12*s34+4*s14*s13^2*s34^3+16*s14^2*d*s24*s13*s23*s12+4*s14*s12^5-2*s14*d*s13^4*s23-60*s14^2*s13^2*s23*s12+8*s14^2*d*s13^2*s23*s34+4*s14^2*s24*s23^3+2*s14*d*s24^2*s13^2*s23+6*s14*d*s24^2*s23*s12*s34-6*s14*d*s24*s13^3*s34+36*s14*s13*s12^2*s34^2-6*s14*d*s24*s13*s23*s12^2+32*s14*s13*s23*s12^3+4*s14^2*d*s24^2*s23*s12+16*s14*s23*s12^3*s34+4*s14^2*d*s23*s12*s34^2+20*s14^3*s13*s23^2-10*s14*d*s13^2*s12^3+36*s14*s24^2*s13^2*s12-3*s14*d*s24*s23^2*s34^2+48*s14*s13*s23*s12^2*s34+24*s14*s24*s13*s12*s34^2+40*s14*s13^3*s12^2-16*s14^2*s24*s13*s23^2-3*s14*d*s13*s23^2*s12^2-2*s14*d*s23*s12^4-2*s14*d*s13*s12*s34^3-3*s14*d*s24*s13^2*s34^2+48*s14*s13*s12^3*s34+36*s14*s13^2*s12*s34^2-s14*d*s23^2*s12^3-s14*d*s24^3*s23^2+8*s14*s23*s12^2*s34^2+4*s14^3*s23^2*s34-6*s14*d*s24^2*s13*s12*s34+4*s14*s13^2*s23^2*s34-5*s14*d*s13*s12^4-64*s14^2*s13*s23^2*s12+32*s14*s13^3*s23*s12+2*s14*d*s24*s23^2*s12*s34+12*s14*s24*s12^2*s34^2+2*s14*d*s24^3*s13*s23+20*s14*s13*s12^4-18*s14*d*s24*s13*s12^2*s34+12*s14^2*d*s13^2*s23*s12+16*s14*s24*s23*s12^3+4*s14*d*s13*s23*s12*s34^2-16*s14^2*s24*s23*s12*s34-28*s14^2*s13^2*s23*s34-8*s14^2*s23*s12*s34^2+4*s14*s13^5+4*s14*s23^2*s12^3+4*s14^2*d*s23*s12^3+6*s14*d*s24*s13*s23*s34^2-8*s14^2*s24^2*s23*s12-9*s14*d*s24^2*s13*s12^2-12*s14*d*s24*s13^3*s12+2*s14*d*s13^2*s23*s34^2+8*s14*s23*s12^4+48*s14*s24*s13*s12^3+16*s14^2*d*s13*s23*s12*s34+4*s14*s24*s13^2*s23^2-10*s14*d*s13^3*s12^2+48*s14*s13^2*s23*s12*s34+4*s14^2*d*s13^2*s23^2+8*s14^2*d*s24*s13*s23*s34+2*s14*d*s24^2*s23*s12^2-20*s14^2*s13^3*s23-18*s14*d*s13^2*s12^2*s34+40*s14*s13^2*s12^3+48*s14*s24*s13^2*s23*s12-20*s14^2*s23*s12^3-s14*d*s23^2*s34^3+32*s14*s24*s13*s23*s12*s34-18*s14*d*s24*s13^2*s12^2-16*s14^2*s24*s23^2*s12-8*s14^2*d*s24*s23^2*s34+4*s14*d*s24*s23*s12^2*s34+16*s14*s13^3*s23*s34+24*s14*s24*s12^3*s34-16*s14^2*s13*s23^2*s34+8*s14^2*d*s13*s23^2*s12-18*s14*d*s24*s13^2*s12*s34+20*s14^3*s23^2*s12+8*s14*s13^4*s23+12*s14*s13^2*s23^2*s12+4*s14^2*d*s13^3*s23+s14*d*s24*s23^2*s12^2+12*s14*s24^2*s13^2*s34-32*s14^2*s13^2*s23^2+s14*d*s23^2*s12^2*s34+8*s14*s24*s13*s23^2*s12+8*s14*s24^3*s13*s12-s14*d*s13^2*s34^3+s14*d*s13*s23^2*s34^2+16*s14*s24*s13^3*s23-4*s14^3*d*s24*s23^2+12*s14*s13^3*s34^2+12*s14*s12^4*s34)*Den(s23))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * ((6*s14^2*s24*s23*s12+6*s14*d*s24*s13*s12^2+6*s14*s24^2*s23*s34-6*s14*s12^3*s34-18*s14*s13^2*s23*s12-8*s14^2*d*s13*s23*s12+6*s14^2*s13*s23*s34-4*s14*d*s24*s23*s12*s34-12*s14^2*s23^2*s34-12*s14*s24*s13*s23*s12-2*s14*d*s23^2*s12*s34+20*s14^2*s13*s23^2+4*s24*s23*s34^3+6*s14*d*s13*s12^2*s34-6*s14*s13^3*s23-3*s14*s24^2*s13^2+2*s24*s23*s12^2*s34-2*s14*d*s13*s23*s34^2+s14*d*s24^2*s12^2+4*s14*d*s24*s13*s12*s34-6*s14*s13*s23^2*s12+s14*d*s12^4+4*s14^2*d*s23^2*s34-14*s14*s24*s23^2*s34-6*s14*s23*s12^3+s14^2*s24^2*s23-3*s14*s12^2*s34^2+s23*s12^2*s34^2-2*s14*s24*s13*s23^2+4*s24^3*s23*s34+2*s13*s23*s12*s34^2+6*s24*s13*s23*s34^2-12*s14*s13*s12^3+6*s14*d*s13^2*s12*s34-4*s14^2*d*s13*s23^2-6*s14*s24*s13^2*s34-8*s14^3*s23^2-3*s14*s13^2*s23^2+s14*d*s13^2*s23^2-6*s14*s24^2*s13*s12+4*s14*s24*s13*s23*s34+4*s14*d*s13*s12^3+s23*s34^4+4*s14^3*d*s23^2+8*s14^2*s23^3+2*s14*d*s24*s12^2*s34+6*s14*d*s13*s23*s12^2+2*s13*s23*s34^3-12*s14*s13*s23*s12*s34+2*s14*s23*s12*s34^2+s14*d*s12^2*s34^2+2*s14*d*s23*s12^3+2*s14*s24^2*s23*s12+2*s14^2*s24*s23*s34-4*s14^2*d*s24*s23*s12+20*s14^2*s23^2*s12+26*s14^2*s13*s23*s12-4*s14^2*d*s13*s23*s34-3*s14*s24^2*s12^2-6*s14*s13^2*s23*s34+6*s24^2*s23*s12*s34+s14*d*s24^2*s13^2+2*s24^3*s23*s12+s14*d*s13^4-18*s14*s24*s13^2*s12+2*s14*d*s13^3*s23-2*s14*d*s24^2*s13*s23-4*s14^2*d*s23^2*s12-2*s14*s13*s23^2*s34+2*s14*d*s12^3*s34+2*s14*s23*s34^3-2*s14*s24*s23^2*s12-6*s14*s13*s12*s34^2+13*s14^2*s13^2*s23+2*s14*d*s13*s12*s34^2-2*s14*d*s24*s23^2*s12+s24^4*s23+2*s24^2*s13*s23*s12+2*s24*s13^2*s23*s34+6*s24*s23*s12*s34^2-2*s14*d*s13*s23^2*s34+2*s14*s24^2*s13*s23+6*s14*d*s13^2*s12^2-6*s14*s13^3*s34-4*s14^2*d*s24*s13*s23+4*s14^2*d*s24*s23^2-7*s14*s24^2*s23^2+6*s14*d*s24*s13^2*s12-6*s14*s24*s12^3+s14*d*s23^2*s12^2+s14^2*s23*s34^2-3*s14*s12^4+s24^2*s23*s12^2+4*s14*d*s13^3*s12-3*s14*s13^2*s34^2-6*s14*s24*s13^2*s23-2*s14*d*s24^2*s23*s12+s13^2*s23*s34^2-4*s14^2*d*s13^2*s23-2*s14*d*s23*s12*s34^2+2*s14*d*s24*s13^3-7*s14*s23^2*s34^2-18*s14*s13*s23*s12^2-6*s14*s24*s12^2*s34+2*s14*s24^3*s23+6*s14^2*s23*s12*s34-12*s14^2*s24*s23^2+2*s24^3*s13*s23+6*s14*s24*s23*s34^2-4*s14*d*s24*s13*s23*s34+2*s14*d*s24^2*s13*s12-18*s14*s13^2*s12*s34+2*s14*d*s24*s13^2*s34-6*s14*s23*s12^2*s34+13*s14^2*s23*s12^2-2*s14*d*s24*s13*s23^2+s14*d*s23^2*s34^2-6*s14*s24*s13^3+6*s24^2*s13*s23*s34+2*s14*d*s24*s23^2*s34+s14*d*s13^2*s34^2-3*s14*s13^4+6*s14^2*s24*s13*s23-12*s14*s13^3*s12-12*s14*s24*s13*s12*s34+2*s14*d*s13*s23^2*s12+2*s14*s13*s23*s34^2-4*s14^2*d*s23*s12^2-3*s14*s23^2*s12^2-6*s14*s24*s23*s12^2-18*s14*s13*s12^2*s34+2*s14*d*s24*s12^3-4*s14^2*d*s23*s12*s34+s24^2*s13^2*s23+s14*d*s24^2*s23^2-2*s14*s23^2*s12*s34+2*s14*d*s13^3*s34-18*s14*s13^2*s12^2+6*s14*d*s13^2*s23*s12+4*s14*s24*s23*s12*s34+6*s24^2*s23*s34^2+2*s23*s12*s34^3+4*s24*s13*s23*s12*s34-18*s14*s24*s13*s12^2)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s23))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (-1/2*(12*s14^2*s24*s23*s12+12*s14*d*s24*s13*s12^2+s14*d*s23*s34^3-12*s14*s12^3*s34-12*s14*s13^2*s23*s12-16*s14^2*d*s13*s23*s12+12*s14^2*s13*s23*s34-2*s14*d*s24*s23*s12*s34-4*s14^2*s23^2*s34-8*s14*s24*s13*s23*s12+12*s14^2*s13*s23^2+12*s14*d*s13*s12^2*s34-4*s14*s13^3*s23-s14*d*s24*s23*s12^2-6*s14*s24^2*s13^2-s14*d*s13*s23*s34^2+2*s14*d*s24^2*s12^2+8*s14*d*s24*s13*s12*s34+2*s14*d*s12^4-4*s14*s23*s12^3+2*s14^2*s24^2*s23-6*s14*s12^2*s34^2-s14*d*s23*s12^2*s34-24*s14*s13*s12^3+12*s14*d*s13^2*s12*s34-12*s14*s24*s13^2*s34-16*s14^3*s23^2+3*s14*d*s24*s23*s34^2-12*s14*s24^2*s13*s12+8*s14*d*s13*s12^3+8*s14^3*d*s23^2+4*s14*d*s24*s12^2*s34+3*s14*d*s13*s23*s12^2-8*s14*s13*s23*s12*s34+2*s14*d*s12^2*s34^2+s14*d*s23*s12^3+4*s14^2*s24*s23*s34-8*s14^2*d*s24*s23*s12+12*s14^2*s23^2*s12-s14*d*s24*s13^2*s23+52*s14^2*s13*s23*s12-8*s14^2*d*s13*s23*s34-6*s14*s24^2*s12^2-4*s14*s13^2*s23*s34+2*s14*d*s24^2*s13^2+2*s14*d*s13^4-36*s14*s24*s13^2*s12+s14*d*s13^3*s23-s14*d*s24^2*s13*s23+4*s14*d*s12^3*s34-12*s14*s13*s12*s34^2+26*s14^2*s13^2*s23+4*s14*d*s13*s12*s34^2+12*s14*d*s13^2*s12^2-12*s14*s13^3*s34-8*s14^2*d*s24*s13*s23+12*s14*d*s24*s13^2*s12-12*s14*s24*s12^3+2*s14^2*s23*s34^2-6*s14*s12^4-s14*d*s13^2*s23*s34+8*s14*d*s13^3*s12-6*s14*s13^2*s34^2-4*s14*s24*s13^2*s23-s14*d*s24^2*s23*s12-8*s14^2*d*s13^2*s23-s14*d*s23*s12*s34^2+4*s14*d*s24*s13^3-2*s14*d*s13*s23*s12*s34-12*s14*s13*s23*s12^2-12*s14*s24*s12^2*s34+12*s14^2*s23*s12*s34-4*s14^2*s24*s23^2-2*s14*d*s24*s13*s23*s34+4*s14*d*s24^2*s13*s12-36*s14*s13^2*s12*s34+4*s14*d*s24*s13^2*s34-4*s14*s23*s12^2*s34+s14*d*s24^3*s23+26*s14^2*s23*s12^2-12*s14*s24*s13^3+2*s14*d*s13^2*s34^2-6*s14*s13^4+12*s14^2*s24*s13*s23-24*s14*s13^3*s12-24*s14*s24*s13*s12*s34-8*s14^2*d*s23*s12^2-2*s14*d*s24*s13*s23*s12-4*s14*s24*s23*s12^2-36*s14*s13*s12^2*s34+4*s14*d*s24*s12^3-8*s14^2*d*s23*s12*s34+4*s14*d*s13^3*s34-36*s14*s13^2*s12^2+3*s14*d*s13^2*s23*s12-36*s14*s24*s13*s12^2+3*s14*d*s24^2*s23*s34)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s23))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (-1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s23)*(3*d*s24^2*s13^2*s34-20*s13*s12^4+3*d*s13^3*s34^2+2*d*s24^3*s13*s12+3*d*s12^4*s34+60*s14*s13^2*s23*s12-8*s14*d*s24*s23*s12*s34-4*s14^2*s23^2*s34+56*s14*s24*s13*s23*s12-4*s14*d*s23^2*s12*s34-2*s23*s12^4-20*s14^2*s13*s23^2+20*s14*s13^3*s23-8*s14*d*s24*s23*s12^2-72*s24*s13^2*s12*s34-8*s23*s12^3*s34-20*s24*s23*s12^2*s34-4*s14*d*s13*s23*s34^2-8*s13*s23*s12^3-36*s13*s12^2*s34^2+6*d*s24*s12^3*s34-40*s13^2*s12^3+20*s14*s13*s23^2*s12+12*d*s24*s13*s12^3-36*s24^2*s13^2*s12+10*d*s13^2*s12^3+4*s14^2*d*s23^2*s34+4*s14*s24*s23^2*s34+20*s14*s23*s12^3-2*s13^4*s23-10*s23*s12^2*s34^2+28*s14*s24*s13*s23^2-20*s13*s23*s12*s34^2-72*s24*s13*s12^2*s34-36*s13^2*s12*s34^2+3*d*s24*s12^2*s34^2-48*s13*s12^3*s34-12*s24*s13*s23*s34^2-8*s14*d*s23*s12^2*s34-8*s13^3*s23*s12-12*s12^4*s34+4*s14^2*d*s13*s23^2-12*s13^3*s34^2+5*d*s13*s12^4+10*s14*s13^2*s23^2-8*s24*s23*s12^3+2*s14*d*s13^2*s23^2+9*d*s13^2*s12*s34^2+12*d*s13*s12^3*s34-12*s24*s12^2*s34^2+16*s14*s24*s13*s23*s34-4*s13^2*s34^3-16*s14^2*s23^3-12*s14*d*s13*s23*s12^2-4*s13*s23*s34^3+6*d*s24*s13*s12*s34^2-24*s24^2*s13*s12*s34+56*s14*s13*s23*s12*s34+8*s14*s23*s12*s34^2-4*s14*d*s23*s12^3+10*d*s13^3*s12^2+8*s14*s24^2*s23*s12+9*d*s24^2*s13^2*s12-48*s24*s13*s12^3-20*s14^2*s23^2*s12-8*s14*d*s24*s13^2*s23+28*s14*s13^2*s23*s34-12*s24^2*s23*s12*s34-4*s24^3*s23*s12-40*s13^3*s12^2-4*s14*d*s13^3*s23-24*s24*s12^3*s34+9*d*s13*s12^2*s34^2-24*s24*s13*s23*s12^2-8*s13^3*s23*s34-4*s14*d*s24^2*s13*s23+d*s13^2*s34^3-8*s24^3*s13*s12+4*s14^2*d*s23^2*s12+28*s14*s13*s23^2*s34-12*s24^2*s13^2*s34-8*s24*s13^3*s23+28*s14*s24*s23^2*s12-4*s24^3*s13^2-4*s14*d*s24*s23^2*s12+12*d*s13^3*s12*s34-20*s24^2*s13*s23*s12-20*s24*s13^2*s23*s34-12*s24*s23*s12*s34^2+3*d*s24^2*s12^2*s34-4*s14*d*s13*s23^2*s34+3*d*s24^2*s12^3+8*s14*s24^2*s13*s23+3*d*s12^3*s34^2+3*d*s13^4*s34+3*d*s24*s12^4+4*s14^2*d*s24*s23^2+2*s14*s24^2*s23^2+6*d*s24*s13^3*s34+2*s14*d*s23^2*s12^2-72*s24*s13^2*s12^2-4*s12^5+2*d*s13*s12*s34^3-10*s24^2*s23*s12^2-72*s13^2*s12^2*s34-8*s14*d*s13^2*s23*s34+6*d*s24^2*s13*s12*s34-24*s24*s13*s12*s34^2-24*s13*s23*s12^2*s34+28*s14*s24*s13^2*s23-4*s14*d*s24^2*s23*s12-10*s13^2*s23*s34^2-12*s24*s12^4-4*s14*d*s23*s12*s34^2-12*s24^2*s12^3+2*s14*s23^2*s34^2-48*s24*s13^3*s12-16*s14*d*s13*s23*s12*s34-12*s13^4*s34+d*s13^5-36*s24^2*s13*s12^2+60*s14*s13*s23*s12^2-12*s12^3*s34^2+d*s24^3*s13^2-4*s14^2*s24*s23^2-4*s24^3*s13*s23+3*d*s24*s13^2*s34^2-8*s14*d*s24*s13*s23*s34+12*d*s24*s13^3*s12-4*s12^2*s34^3+9*d*s24^2*s13*s12^2+28*s14*s23*s12^2*s34-4*s24^3*s12^2-12*s24*s13^2*s34^2+3*d*s24^2*s13^3-4*s14*d*s24*s13*s23^2+2*s14*d*s23^2*s34^2-24*s24*s13^2*s23*s12-12*s24^2*s13*s23*s34+4*s14*d*s24*s23^2*s34+3*d*s24*s13^4+18*d*s13^2*s12^2*s34-8*s13*s12*s34^3+5*d*s13^4*s12+18*d*s24*s13*s12^2*s34-24*s13^2*s23*s12*s34-4*s13^5+4*s14*d*s13*s23^2*s12+8*s14*s13*s23*s34^2-24*s24*s13^3*s34-20*s13^4*s12+10*s14*s23^2*s12^2+18*d*s24*s13^2*s12^2-16*s14*d*s24*s13*s23*s12+28*s14*s24*s23*s12^2-10*s24^2*s13^2*s23-12*s24*s13^4+2*s14*d*s24^2*s23^2+28*s14*s23^2*s12*s34-48*s13^3*s12*s34+d*s12^5+18*d*s24*s13^2*s12*s34-12*s24^2*s13^3-12*s14*d*s13^2*s23*s12+16*s14*s24*s23*s12*s34-4*s23*s12*s34^3+d*s12^2*s34^3+d*s24^3*s12^2-12*s13^2*s23*s12^2-12*s24^2*s12^2*s34-40*s24*s13*s23*s12*s34));

id INT(pentagon1x123,3,21,4,2,[],1,0,1,-2,2) = 
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(2*s14^2*d*s23^2*s12^2-2*s14*d*s24*s13^3*s23+4*s14^2*s23^3*s12+s14*d*s24^2*s13*s23^2+4*s14*s13*s23^2*s34^2-2*s14*d*s24^3*s13*s12-3*s14*d*s13^4*s34+8*s14^2*d*s23*s12^2*s34-3*s14*d*s12^3*s34^2+12*s14^3*s24*s23^2-3*s14*d*s24^2*s12^3-12*s14^2*d*s13^2*s12*s34+2*s14*d*s24*s13*s23^2*s12-3*s14*d*s24^2*s13^2*s34-6*s14*d*s24*s12^3*s34-24*s14^3*s23^3-3*s14*d*s13^2*s23^2*s12+16*s14^2*s13^3*s12+8*s14*d*s24*s13*s23*s12*s34-2*s14*d*s13^3*s23*s34-12*s14^2*d*s13^2*s12^2-3*s14*d*s24*s12^4-3*s14*d*s24^2*s23^2*s34-s14*d*s13^3*s23^2+8*s14^2*s24*s13^3+4*s14^3*d*s23^2*s12+2*s14*d*s24^3*s23*s12+24*s14^2*s24*s13*s23*s12+4*s14^2*d*s23^2*s12*s34+8*s14^2*d*s24*s23*s12^2-6*s14*d*s24*s13^2*s23*s12-12*s14^2*d*s13*s12^2*s34+6*s14*d*s24^2*s13*s23*s34+s14*d*s24*s13^2*s23^2+12*s14^2*s23^2*s12^2-12*s14*d*s24*s13*s12^3-6*s14*d*s13^2*s23*s12*s34+36*s14^2*s13*s23*s12^2+8*s14^2*d*s13*s23*s34^2+8*s14^2*s24*s12^2*s34-32*s14^3*s13*s23*s12+2*s14*d*s13*s23*s34^3-s14*d*s12^5-12*s14^2*d*s24*s13*s12^2-16*s14^3*s13^2*s23-4*s14^2*d*s24*s13^3+8*s14^3*d*s23*s12*s34+4*s14^2*s13*s23^3-3*s14*d*s24*s12^2*s34^2+8*s14*s24*s23^2*s12*s34-2*s14*d*s24*s23*s12^3+24*s14^2*s13^2*s12^2+4*s14^2*s13^4+12*s14^2*s24*s13^2*s23-s14*d*s24^3*s13^2-8*s14^2*d*s13^3*s12-2*s14^2*d*s13^2*s34^2+8*s14^2*s13^3*s34+8*s14^2*d*s24^2*s13*s23-8*s14*d*s13^3*s23*s12-8*s14^2*d*s24*s13*s12*s34+s14*d*s13^2*s23^2*s34-12*s14^3*d*s23^2*s34-3*s14*d*s24^2*s13^3+2*s14*d*s23*s12^2*s34^2-12*s14*d*s13*s12^3*s34+s14*d*s24^2*s23^2*s12-9*s14*d*s13^2*s12*s34^2-6*s14*d*s13*s23*s12^2*s34-6*s14*d*s24*s13*s12*s34^2-3*s14*d*s24*s13^4+4*s14^3*d*s13*s23^2+8*s14^3*d*s24*s13*s23-12*s14^2*s23^3*s34-6*s14^2*d*s23^2*s34^2+24*s14^2*s13^2*s12*s34+8*s14^2*s24*s12^3+2*s14*d*s24*s13*s23^2*s34-9*s14*d*s24^2*s13^2*s12+12*s14*s24*s23^2*s34^2+12*s14^2*s23*s12^2*s34+12*s14^2*s24^2*s23^2-5*s14*d*s13^4*s12+s14*d*s23^2*s12*s34^2-2*s14*d*s23*s12^3*s34-9*s14*d*s13*s12^2*s34^2+24*s14^2*s24*s13*s12^2-8*s14^3*s13*s23*s34-8*s14*d*s13*s23*s12^3+8*s14^2*d*s24*s13^2*s23-4*s14^2*d*s13^3*s34+4*s14^2*s13^2*s34^2+16*s14^2*d*s24*s23*s12*s34-8*s14^3*s24*s23*s12+4*s14*d*s24^2*s13*s23*s12-4*s14^2*d*s24*s12^3+12*s14^2*s24*s23*s12^2+4*s14*d*s24*s13^2*s23*s34+24*s14^2*s13*s12^2*s34-6*s14^2*d*s24^2*s23^2-s14*d*s13^5+2*s14*d*s13*s23^2*s12*s34-4*s14^2*d*s24*s12^2*s34+4*s14^2*s12^4-16*s14^3*s23*s12^2-s14*d*s24^3*s12^2-s14*d*s12^2*s34^3+24*s14^2*s13*s23*s12*s34+6*s14*d*s24*s23*s12*s34^2+12*s14^2*s23^2*s34^2+2*s14*d*s23*s12*s34^3-3*s14*d*s12^4*s34-3*s14*d*s13^3*s34^2-12*s14*d*s13^2*s23*s12^2-3*s14*d*s24^2*s12^2*s34+8*s14^3*d*s13*s23*s34-12*s14*d*s13^3*s12*s34+8*s14^3*d*s23*s12^2+16*s14^2*d*s24*s13*s23*s12-4*s14^2*d*s24^2*s13*s12+8*s14^3*d*s24*s23*s12-2*s14*d*s13^4*s23+36*s14^2*s13^2*s23*s12+8*s14^2*d*s13^2*s23*s34+4*s14^2*s24^2*s12^2-12*s14^2*s24*s23^3+2*s14*d*s24^2*s13^2*s23+6*s14*d*s24^2*s23*s12*s34-6*s14*d*s24*s13^3*s34-6*s14*d*s24*s13*s23*s12^2+8*s14^2*d*s24^2*s23*s12+4*s14*s23^2*s34^3+4*s14*s23^2*s12*s34^2+8*s14^2*d*s23*s12*s34^2+8*s14*s24*s13*s23^2*s34-36*s14^3*s13*s23^2-10*s14*d*s13^2*s12^3+8*s14^2*s24*s13^2*s34-3*s14*d*s24*s23^2*s34^2-12*s14^2*d*s24*s13^2*s12-2*s14^2*d*s13^4-3*s14*d*s13*s23^2*s12^2-2*s14*d*s23*s12^4-2*s14*d*s13*s12*s34^3+4*s14^2*d*s24*s23^2*s12+24*s14^2*s24*s23^2*s34-3*s14*d*s24*s13^2*s34^2-4*s14^2*d*s13*s12*s34^2+4*s14*s24^2*s23^2*s12-s14*d*s23^2*s12^3-s14*d*s24^3*s23^2-8*s14^4*d*s23^2-8*s14^3*s24*s13*s23+12*s14^3*s23^2*s34-6*s14*d*s24^2*s13*s12*s34-5*s14*d*s13*s12^4-2*s14^2*d*s24^2*s12^2+4*s14^2*d*s13*s23^2*s34+24*s14^2*s13*s23^2*s12+2*s14*d*s24*s23^2*s12*s34+8*s14^4*s23^2+2*s14*d*s24^3*s13*s23+8*s14^3*d*s13^2*s23-18*s14*d*s24*s13*s12^2*s34+4*s14*d*s13*s23*s12*s34^2+12*s14^2*s13^2*s23*s34-2*s14^2*d*s12^2*s34^2+4*s14*s24^3*s23^2+8*s14^2*s12^3*s34+6*s14*d*s24*s13*s23*s34^2-9*s14*d*s24^2*s13*s12^2-12*s14*d*s24*s13^3*s12+2*s14*d*s13^2*s23*s34^2+16*s14^3*d*s13*s23*s12+16*s14^2*d*s13*s23*s12*s34-10*s14*d*s13^3*s12^2+4*s14^2*s24^2*s13^2-8*s14^3*s23*s12*s34+2*s14^2*d*s13^2*s23^2+16*s14^2*d*s24*s13*s23*s34+8*s14^2*s24^2*s13*s12+2*s14*d*s24^2*s23*s12^2+12*s14^2*s13^3*s23-18*s14*d*s13^2*s12^2*s34-8*s14^2*d*s13*s12^3+12*s14^2*s23*s12^3-4*s14^2*d*s12^3*s34-s14*d*s23^2*s34^3+4*s14^2*s12^2*s34^2+12*s14*s24^2*s23^2*s34-18*s14*d*s24*s13^2*s12^2-12*s14^2*d*s24*s23^2*s34+8*s14^2*s13*s12*s34^2+4*s14*d*s24*s23*s12^2*s34+16*s14^2*s24*s13*s12*s34+4*s14^2*d*s13*s23^2*s12-18*s14*d*s24*s13^2*s12*s34-36*s14^3*s23^2*s12-2*s14^2*d*s12^4-4*s14^2*d*s24*s13^2*s34+s14*d*s24*s23^2*s12^2+24*s14^2*s24*s13^2*s12+12*s14^2*s13^2*s23^2+s14*d*s23^2*s12^2*s34-s14*d*s13^2*s34^3+16*s14^2*s13*s12^3+s14*d*s13*s23^2*s34^2-2*s14^2*d*s24^2*s13^2-12*s14^3*d*s24*s23^2+4*s14^2*d*s24*s13*s23^2+4*s14*s24^2*s13*s23^2))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (-1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(32*s14^2*d*s24*s23*s34+20*s14^2*s24*s23*s12+6*s14*d*s24*s13*s12^2-s14^2*d*s24^3-9*d*s24^2*s13^2*s34+8*s24*s13*s34^3-48*s14*s24^2*s23*s34+8*s14*d*s23*s34^3-d*s13^3*s34^2+2*s14^2*s12*s34^2+16*s14^2*d*s24^2*s23-6*d*s24^3*s13*s12-8*s14*s12^3*s34+24*s14*s24^2*s34^2+20*s14^3*s23*s12-6*s14*d*s24^3*s12+2*s24^4*s13-3*s14^2*d*s24*s34^2+20*s14^2*s13*s23*s34+8*s14*d*s24*s23*s12*s34+20*s14^2*s23^2*s34+40*s14*s24*s13*s23*s12-4*s14*d*s23^2*s12*s34+3*s14^2*d*s12^3-6*s14*d*s13*s34^3+12*s14*s24^2*s13*s34-12*s14^2*s13*s23^2-8*s24*s23*s34^3+6*s14*d*s13*s12^2*s34-12*s14^2*s24*s13*s12-6*s14^2*d*s24*s13*s34-60*s24*s13^2*s12*s34-6*s14^2*s13^2*s34-4*s23*s12^3*s34+10*s24^4*s34-6*s14*s24^2*s13^2+s14^2*d*s24*s13^2-20*s24*s23*s12^2*s34+4*s14*d*s13*s23*s34^2-18*d*s24^2*s12*s34^2-30*s13*s12^2*s34^2-2*d*s24*s12^3*s34+16*s14*s24^3*s34-4*s14*d*s24^2*s12^2-5*d*s24^4*s34-8*s14^3*d*s13*s23-16*s14*d*s24*s13*s12*s34+4*s14*s13*s23^2*s12+12*s14*s24*s12*s34^2+6*s14^2*s24*s34^2-30*s24^2*s13^2*s12+2*s14*d*s12^4+8*s24^3*s13*s34-4*s14^2*d*s23^2*s34+20*s14*s24*s23^2*s34-3*s14^2*d*s12*s34^2-26*s14^2*s24^2*s23-6*s14*s12^2*s34^2-2*s14*d*s24^4-6*s14^2*s24*s13^2-10*s23*s12^2*s34^2-3*d*s24^4*s13+s14^2*d*s13^2*s34+28*s14*s24*s13*s23^2-8*s24^3*s23*s34+4*s14*s24^3*s13-20*s13*s23*s12*s34^2-60*s24*s13*s12^2*s34-30*s13^2*s12*s34^2-9*d*s24*s12^2*s34^2-16*s13*s12^3*s34-24*s24*s13*s23*s34^2-8*s14*s13*s12^3+6*s14*d*s13^2*s12*s34-4*s12^4*s34-4*s14^2*d*s13*s23^2-10*s13^3*s34^2-12*s14*s24*s13^2*s34+16*s14^3*s23^2+2*s14*s13^2*s23^2-4*s24*s23*s12^3+2*s14*d*s13^2*s23^2+2*s14^2*d*s24*s13*s12-3*d*s13^2*s12*s34^2+24*s14*d*s24*s23*s34^2+4*s14^2*s24*s13*s34-12*s14*s24^2*s13*s12-18*s24*s12^2*s34^2+8*s14*s24*s13*s23*s34+8*s14*d*s13*s12^3-2*s23*s34^4-s14^2*d*s34^3-8*s14^3*d*s23^2-6*s13^2*s34^3-16*s14^2*s23^3-8*s14*d*s24*s12^2*s34+12*s14*d*s13*s23*s12^2-8*s13*s23*s34^3-18*d*s24*s13*s12*s34^2-6*s14*d*s24^3*s13+2*s24^4*s12-36*s24^2*s13*s12*s34-18*s14^2*s13^2*s12+40*s14*s13*s23*s12*s34-12*d*s24^3*s13*s34+4*s14*s23*s12*s34^2-4*s14*d*s12^2*s34^2+2*s13*s34^4+4*s14*d*s23*s12^3+4*s14*s24^2*s23*s12-18*s14*d*s24*s13*s34^2-52*s14^2*s24*s23*s34-3*d*s24^2*s13^2*s12+3*s14^2*d*s13^3-16*s24*s13*s12^3-12*s14^2*s23^2*s12-4*s14^2*s13*s23*s12-12*s14^3*s23*s34-6*s14*s24^2*s12^2+20*s14*s13^2*s23*s34-8*s14*d*s24^3*s34+s14^2*d*s24*s12^2-18*s14*d*s24^2*s12*s34-24*s24^2*s23*s12*s34+9*s14^2*d*s13^2*s12-4*s14*d*s24^2*s13^2-8*s24^3*s23*s12+2*s14*d*s13^4-24*s14*s24*s13^2*s12-3*d*s13*s34^4+4*s14*d*s13^3*s23+12*s24^2*s12*s34^2-20*s24*s12^3*s34-3*d*s13*s12^2*s34^2+4*s14*s13*s34^3-12*s24*s13*s23*s12^2-4*s13^3*s23*s34+4*s14*d*s24^2*s13*s23-3*d*s13^2*s34^3-12*s24^3*s13*s12-4*s14^2*d*s23^2*s12+28*s14*s13*s23^2*s34-6*s14^2*s24*s12^2-12*d*s24*s13*s34^3-2*s14*d*s34^4-18*s24^2*s13^2*s34+4*s14*s24^3*s12-3*d*s24^4*s12-12*s14*d*s24^2*s34^2+2*s14*d*s12^3*s34-16*s14*s23*s34^3-4*s24*s13^3*s23-12*s14^3*s24*s23+28*s14*s24*s23^2*s12-12*s14*s13*s12*s34^2-2*s14^2*s13^2*s23-6*s24^3*s13^2-8*s14*d*s13*s12*s34^2-4*s14*d*s24*s23^2*s12-2*s24^4*s23-20*s24^2*s13*s23*s12-6*s14^2*s12^3-20*s24*s13^2*s23*s34+8*s24*s12*s34^3-24*s24*s23*s12*s34^2-9*d*s24^2*s12^2*s34-4*s14*d*s13*s23^2*s34-d*s24^2*s12^3+2*s14^2*s13*s34^2+2*s24^5+4*s14*s24^2*s13*s23-d*s12^3*s34^2-3*s14^2*d*s24^2*s13+8*s14^3*d*s24*s23+12*s14*d*s13^2*s12^2-8*s14*s13^3*s34+4*s14*s24^4-6*s14^2*s12^2*s34-4*s14^2*d*s24*s23^2+20*s24^3*s34^2+10*s14*s24^2*s23^2+6*s14*d*s24*s13^2*s12-12*s14^2*s13*s12*s34-8*s14*s24*s12^3+2*s14^2*s24^3-18*d*s24^2*s13*s34^2-2*d*s24*s13^3*s34+2*s14*d*s23^2*s12^2-6*s14*d*s12*s34^3-26*s14^2*s23*s34^2-24*s24*s13^2*s12^2-2*s14*s12^4-3*s14^2*d*s24^2*s34+12*s14*s24^2*s12*s34-6*s14^2*d*s24*s12*s34-6*d*s13*s12*s34^3-10*s24^2*s23*s12^2-24*s13^2*s12^2*s34+2*s14^2*s24^2*s13+8*s14*d*s13^3*s12-18*d*s24^2*s13*s12*s34-36*s24*s13*s12*s34^2-12*s13*s23*s12^2*s34-6*s14*s13^2*s34^2-3*s14^2*d*s13*s34^2-d*s34^5+20*s14*s24*s13^2*s23+4*s14*d*s24^2*s23*s12-10*s13^2*s23*s34^2-10*d*s24^3*s34^2-4*s24*s12^4+12*s14*s24*s13*s34^2+8*s24^3*s12*s34+4*s14*d*s23*s12*s34^2+8*s14^3*d*s23*s34+2*s14*d*s24*s13^3-10*s24^2*s12^3+16*s14^2*d*s23*s34^2+10*s14*s23^2*s34^2-16*s24*s13^3*s12-4*s13^4*s34-30*s24^2*s13*s12^2-10*s12^3*s34^2+6*s14^2*s24^2*s34-12*s14*s24*s12^2*s34-3*d*s24^3*s13^2-16*s14*s24^3*s23+20*s14^2*s23*s12*s34+s14^2*d*s12^2*s34+20*s14^2*s24*s23^2-8*s24^3*s13*s23-48*s14*s24*s23*s34^2-8*s14*d*s24*s34^3-9*d*s24*s13^2*s34^2+8*s14*d*s24*s13*s23*s34-8*s14*d*s24^2*s13*s12-24*s14*s13^2*s12*s34-6*s12^2*s34^3-6*s14^2*s13^3-8*s14*d*s24*s13^2*s34+2*s14^2*d*s13*s12*s34-3*d*s24^2*s13*s12^2+16*s14*s24*s34^3+20*s14*s23*s12^2*s34-5*d*s24*s34^4-6*s24^3*s12^2+8*s14*d*s24^3*s23+4*s14^2*s24*s12*s34+2*s34^5-18*s24*s13^2*s34^2-3*s14^2*d*s24^2*s12+4*s14*s34^4-2*s14^2*s23*s12^2-d*s24^2*s13^3-4*s14*d*s24*s13*s23^2+2*s14*d*s23^2*s34^2+2*s14^2*s34^3+20*s14^3*s13*s23-8*s14*s24*s13^3-12*s24*s13^2*s23*s12-24*s24^2*s13*s23*s34+4*s14*d*s24*s23^2*s34-12*s13*s12*s34^3-4*s14*d*s13^2*s34^2-2*s14*s13^4+20*s14^2*s24*s13*s23-8*s14*s13^3*s12-12*d*s24^3*s12*s34-6*d*s24*s13*s12^2*s34-12*s13^2*s23*s12*s34-18*s14^2*s13*s12^2-24*s14*s24*s13*s12*s34+2*s12*s34^4-10*d*s24^2*s34^3-18*s14*d*s24*s12*s34^2+4*s14*d*s13*s23^2*s12+12*s24^2*s13*s34^2+4*s14*s13*s23*s34^2-3*d*s12*s34^4+2*s14^2*s24^2*s12-20*s24*s13^3*s34-d*s24^5+4*s14*s12*s34^3+20*s24^2*s34^3+2*s14*s23^2*s12^2-18*s14*d*s24^2*s13*s34+20*s14*s24*s23*s12^2-24*s14*s13*s12^2*s34+2*s14*d*s24*s12^3-10*s24^2*s13^2*s23-4*s24*s13^4+2*s14*d*s24^2*s23^2+28*s14*s23^2*s12*s34+2*s14*d*s13^3*s34-12*s14*s13^2*s12^2-16*s13^3*s12*s34+9*s14^2*d*s13*s12^2-6*d*s24*s13^2*s12*s34-10*s24^2*s13^3+12*s14*d*s13^2*s23*s12+8*s14*s24*s23*s12*s34-12*s24^2*s23*s34^2-8*s14^3*d*s23*s12-8*s23*s12*s34^3-3*d*s12^2*s34^3-3*d*s24^3*s12^2+10*s24*s34^4-18*s24^2*s12^2*s34-40*s24*s13*s23*s12*s34-12*d*s24*s12*s34^3-24*s14*s24*s13*s12^2+24*s14*d*s24^2*s23*s34))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (1/2*(20*s14^2*d*s24*s23*s34-4*s14^2*s24*s23*s12-s14^2*d*s24^3-12*s14*s24^2*s23*s34+s14*d*s23*s34^3+2*s14^2*s12*s34^2+10*s14^2*d*s24^2*s23+12*s14*s24^2*s34^2+20*s14^3*s23*s12-4*s14*d*s24^3*s12-3*s14^2*d*s24*s34^2+4*s14^2*d*s13*s23*s12-4*s14^2*s13*s23*s34-2*s14*d*s24*s23*s12*s34+12*s14^2*s23^2*s34+3*s14^2*d*s12^3-4*s14*d*s13*s34^3+12*s14*s24^2*s13*s34-4*s14^2*s13*s23^2-12*s14^2*s24*s13*s12-s14*d*s24*s23*s12^2-6*s14^2*d*s24*s13*s34-6*s14^2*s13^2*s34+2*s14*s24^2*s13^2+s14^2*d*s24*s13^2-s14*d*s13*s23*s34^2+8*s14*s24^3*s34-4*s14*d*s24^2*s12^2-8*s14^3*d*s13*s23-16*s14*d*s24*s13*s12*s34+12*s14*s24*s12*s34^2+6*s14^2*s24*s34^2+s14*d*s12^4-3*s14^2*d*s12*s34^2-18*s14^2*s24^2*s23+2*s14*s12^2*s34^2-s14*d*s24^4-6*s14^2*s24*s13^2+s14^2*d*s13^2*s34+4*s14*s24^3*s13-s14*d*s23*s12^2*s34+4*s14*s24*s13^2*s34+24*s14^3*s23^2+2*s14^2*d*s24*s13*s12+3*s14*d*s24*s23*s34^2+4*s14^2*s24*s13*s34+4*s14*s24^2*s13*s12-8*s14*s24*s13*s23*s34+4*s14*d*s13*s12^3-s14^2*d*s34^3-8*s14^3*d*s23^2-8*s14*d*s24*s12^2*s34+3*s14*d*s13*s23*s12^2-4*s14*d*s24^3*s13-18*s14^2*s13^2*s12-4*s14*s23*s12*s34^2-4*s14*d*s12^2*s34^2+s14*d*s23*s12^3-4*s14*s24^2*s23*s12-12*s14*d*s24*s13*s34^2-36*s14^2*s24*s23*s34+4*s14^2*d*s24*s23*s12+3*s14^2*d*s13^3-4*s14^2*s23^2*s12-s14*d*s24*s13^2*s23-20*s14^2*s13*s23*s12+4*s14^2*d*s13*s23*s34-12*s14^3*s23*s34+2*s14*s24^2*s12^2-4*s14*d*s24^3*s34+s14^2*d*s24*s12^2-12*s14*d*s24^2*s12*s34+9*s14^2*d*s13^2*s12-4*s14*d*s24^2*s13^2+s14*d*s13^4+s14*d*s13^3*s23+4*s14*s13*s34^3-s14*d*s24^2*s13*s23-6*s14^2*s24*s12^2-s14*d*s34^4+4*s14*s24^3*s12-6*s14*d*s24^2*s34^2-4*s14*s23*s34^3-12*s14^3*s24*s23+4*s14*s13*s12*s34^2-10*s14^2*s13^2*s23-8*s14*d*s13*s12*s34^2-6*s14^2*s12^3+2*s14^2*s13*s34^2-4*s14*s24^2*s13*s23-3*s14^2*d*s24^2*s13+8*s14^3*d*s24*s23+6*s14*d*s13^2*s12^2+4*s14^2*d*s24*s13*s23+2*s14*s24^4-6*s14^2*s12^2*s34-12*s14^2*s13*s12*s34+2*s14^2*s24^3-4*s14*d*s12*s34^3-18*s14^2*s23*s34^2-3*s14^2*d*s24^2*s34+12*s14*s24^2*s12*s34-6*s14^2*d*s24*s12*s34-s14*d*s13^2*s23*s34+2*s14^2*s24^2*s13+4*s14*d*s13^3*s12+2*s14*s13^2*s34^2-3*s14^2*d*s13*s34^2-s14*d*s24^2*s23*s12+2*s14^2*d*s13^2*s23+12*s14*s24*s13*s34^2-s14*d*s23*s12*s34^2+8*s14^3*d*s23*s34+10*s14^2*d*s23*s34^2-2*s14*d*s13*s23*s12*s34+6*s14^2*s24^2*s34+4*s14*s24*s12^2*s34-4*s14*s24^3*s23-4*s14^2*s23*s12*s34+s14^2*d*s12^2*s34+12*s14^2*s24*s23^2-12*s14*s24*s23*s34^2-4*s14*d*s24*s34^3-2*s14*d*s24*s13*s23*s34-8*s14*d*s24^2*s13*s12-6*s14^2*s13^3-8*s14*d*s24*s13^2*s34+2*s14^2*d*s13*s12*s34+8*s14*s24*s34^3+s14*d*s24^3*s23+4*s14^2*s24*s12*s34-3*s14^2*d*s24^2*s12+2*s14*s34^4-10*s14^2*s23*s12^2+2*s14^2*s34^3+20*s14^3*s13*s23-4*s14*d*s13^2*s34^2-4*s14^2*s24*s13*s23-18*s14^2*s13*s12^2+8*s14*s24*s13*s12*s34-12*s14*d*s24*s12*s34^2-4*s14*s13*s23*s34^2+2*s14^2*s24^2*s12+4*s14*s12*s34^3+2*s14^2*d*s23*s12^2-2*s14*d*s24*s13*s23*s12-12*s14*d*s24^2*s13*s34+4*s14^2*d*s23*s12*s34+9*s14^2*d*s13*s12^2+3*s14*d*s13^2*s23*s12-8*s14*s24*s23*s12*s34-8*s14^3*d*s23*s12+3*s14*d*s24^2*s23*s34)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(4*s14^2*s24*s23*s12+6*s14*d*s24*s13*s12^2+5*s13*s12^4-4*s14*s12^3*s34-30*s14*s13^2*s23*s12-8*s14^2*d*s13*s23*s12+4*s14^2*s13*s23*s34-4*s14*d*s24*s23*s12*s34-4*s14^2*s23^2*s34-24*s14*s24*s13*s23*s12-2*s14*d*s23^2*s12*s34+s23*s12^4+20*s14^2*s13*s23^2+6*s14*d*s13*s12^2*s34-10*s14*s13^3*s23+18*s24*s13^2*s12*s34+2*s23*s12^3*s34-2*s14*s24^2*s13^2+2*s24*s23*s12^2*s34-2*s14*d*s13*s23*s34^2+4*s13*s23*s12^3+9*s13*s12^2*s34^2+10*s13^2*s12^3+s14*d*s24^2*s12^2+4*s14*d*s24*s13*s12*s34-14*s14*s13*s23^2*s12+9*s24^2*s13^2*s12+s14*d*s12^4+4*s14^2*d*s23^2*s34-6*s14*s24*s23^2*s34-10*s14*s23*s12^3+s13^4*s23-2*s14*s12^2*s34^2+s23*s12^2*s34^2-2*s14*s24*s13*s23^2+2*s13*s23*s12*s34^2+18*s24*s13*s12^2*s34+9*s13^2*s12*s34^2+12*s13*s12^3*s34+4*s13^3*s23*s12-8*s14*s13*s12^3+6*s14*d*s13^2*s12*s34+3*s12^4*s34-4*s14^2*d*s13*s23^2+3*s13^3*s34^2-4*s14*s24*s13^2*s34-4*s14^3*s23^2-7*s14*s13^2*s23^2+2*s24*s23*s12^3+s14*d*s13^2*s23^2-4*s14*s24^2*s13*s12+3*s24*s12^2*s34^2-4*s14*s24*s13*s23*s34+4*s14*d*s13*s12^3+4*s14^3*d*s23^2+s13^2*s34^3+8*s14^2*s23^3+2*s14*d*s24*s12^2*s34+6*s14*d*s13*s23*s12^2+6*s24^2*s13*s12*s34-24*s14*s13*s23*s12*s34-2*s14*s23*s12*s34^2+s14*d*s12^2*s34^2+2*s14*d*s23*s12^3-2*s14*s24^2*s23*s12-4*s14^2*d*s24*s23*s12+12*s24*s13*s12^3+20*s14^2*s23^2*s12+16*s14^2*s13*s23*s12-4*s14^2*d*s13*s23*s34-2*s14*s24^2*s12^2-12*s14*s13^2*s23*s34+s14*d*s24^2*s13^2+s14*d*s13^4+10*s13^3*s12^2-12*s14*s24*s13^2*s12+2*s14*d*s13^3*s23+6*s24*s12^3*s34+6*s24*s13*s23*s12^2+2*s13^3*s23*s34-2*s14*d*s24^2*s13*s23+2*s24^3*s13*s12-4*s14^2*d*s23^2*s12-2*s14*s13*s23^2*s34+3*s24^2*s13^2*s34+2*s14*d*s12^3*s34+2*s24*s13^3*s23-2*s14*s24*s23^2*s12-4*s14*s13*s12*s34^2+8*s14^2*s13^2*s23+s24^3*s13^2+2*s14*d*s13*s12*s34^2-2*s14*d*s24*s23^2*s12+2*s24^2*s13*s23*s12+2*s24*s13^2*s23*s34-2*s14*d*s13*s23^2*s34-2*s14*s24^2*s13*s23+6*s14*d*s13^2*s12^2-4*s14*s13^3*s34-4*s14^2*d*s24*s13*s23+4*s14^2*d*s24*s23^2-3*s14*s24^2*s23^2+6*s14*d*s24*s13^2*s12-4*s14*s24*s12^3+s14*d*s23^2*s12^2+18*s24*s13^2*s12^2-2*s14*s12^4+s12^5+s24^2*s23*s12^2+18*s13^2*s12^2*s34+4*s14*d*s13^3*s12+6*s24*s13*s12*s34^2+6*s13*s23*s12^2*s34-2*s14*s13^2*s34^2-12*s14*s24*s13^2*s23-2*s14*d*s24^2*s23*s12+s13^2*s23*s34^2+3*s24*s12^4-4*s14^2*d*s13^2*s23-2*s14*d*s23*s12*s34^2+2*s14*d*s24*s13^3+3*s24^2*s12^3-3*s14*s23^2*s34^2+12*s24*s13^3*s12+3*s13^4*s34+9*s24^2*s13*s12^2-30*s14*s13*s23*s12^2+3*s12^3*s34^2-4*s14*s24*s12^2*s34+4*s14^2*s23*s12*s34-4*s14^2*s24*s23^2-4*s14*d*s24*s13*s23*s34+2*s14*d*s24^2*s13*s12-12*s14*s13^2*s12*s34+s12^2*s34^3+2*s14*d*s24*s13^2*s34-12*s14*s23*s12^2*s34+s24^3*s12^2+3*s24*s13^2*s34^2+8*s14^2*s23*s12^2-2*s14*d*s24*s13*s23^2+s14*d*s23^2*s34^2-4*s14*s24*s13^3+6*s24*s13^2*s23*s12+2*s14*d*s24*s23^2*s34+2*s13*s12*s34^3+s14*d*s13^2*s34^2-2*s14*s13^4+4*s14^2*s24*s13*s23-8*s14*s13^3*s12+6*s13^2*s23*s12*s34-8*s14*s24*s13*s12*s34+s13^5+2*s14*d*s13*s23^2*s12-2*s14*s13*s23*s34^2+6*s24*s13^3*s34+5*s13^4*s12-4*s14^2*d*s23*s12^2-7*s14*s23^2*s12^2-12*s14*s24*s23*s12^2-12*s14*s13*s12^2*s34+2*s14*d*s24*s12^3-4*s14^2*d*s23*s12*s34+s24^2*s13^2*s23+3*s24*s13^4+s14*d*s24^2*s23^2-2*s14*s23^2*s12*s34+2*s14*d*s13^3*s34-12*s14*s13^2*s12^2+12*s13^3*s12*s34+3*s24^2*s13^3+6*s14*d*s13^2*s23*s12-4*s14*s24*s23*s12*s34+6*s13^2*s23*s12^2+3*s24^2*s12^2*s34+4*s24*s13*s23*s12*s34-12*s14*s24*s13*s12^2));

id INT(pentagon1x123,3,21,4,3,[],1,-3,1,0,2) = 
  + INT(pentagon1x123,3,21,4,3,[],1,-3,2,0,1)
    * (-1)
  + INT(pentagon1x123,3,21,4,3,[],2,-3,1,0,1)
    * (-1)
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (1/2*Den(s14)*Den(-2+d)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(120*s14*d*s13^4*s23^2*s34+6*s14*d^2*s13^4*s23^3-24*s14^2*d^2*s24*s13*s23^3*s12+48*s14*s13^3*s23^3*s12+216*s14^2*d*s13^2*s23^2*s34^2-36*s14^2*s13^2*s23^2*s12^2-3*s14^2*d^2*s23^2*s12^3*s34-3*s14^2*d^2*s24^3*s23^2*s34+6*d*s24^3*s13^3*s23^2+240*s14^2*s13*s23^3*s12*s34-36*s14*d*s24*s23^3*s12*s34^2+72*s14*d*s13^2*s23^2*s12^2*s34+48*s14*s23^3*s12*s34^3+192*s14*d*s24*s13*s23^2*s34^3+36*s14^2*d*s13^2*s23^4-72*s14^2*s24^2*s13*s23^2*s34-120*s13^4*s23^2*s34^2+36*s14^2*d^2*s13*s23^3*s34^2-72*s14^2*s24*s13^2*s23^2*s12+24*s14*d^2*s24*s13*s23^3*s12*s34-12*s14^3*s24^2*s13*s23^2+144*s14^2*s23^3*s34^3-240*s13^3*s23^2*s12*s34^2-3*s14*d^2*s13^5*s23^2+72*s14*d*s24^2*s13^2*s23^2*s34-9*s14^2*d^2*s24^2*s23^2*s12*s34+3*s14^2*d^2*s13^3*s23^2*s12+216*d*s24*s13^2*s23^2*s12*s34^2+24*s14*d*s23^2*s34^5-120*s24*s13*s23^2*s34^4-36*s14^2*s24^2*s23^2*s34^2+120*s14^4*s23^3*s34+144*d*s24*s13^3*s23^2*s12*s34-24*s14^3*d*s24*s23^2*s12*s34-12*s14^3*s24^2*s23^2*s34+3*s14^3*d^2*s23^2*s12*s34^2-24*s14^2*d*s24*s23^3*s12*s34-12*s14*d^2*s24*s13^3*s23^2*s34-48*s14^2*d*s24*s13*s23^2*s12*s34-3*s14*d^2*s24*s13^4*s23^2+72*s14^3*d*s13*s23^2*s34^2-9*d^2*s24*s13*s23^2*s12^2*s34^2-12*s14*d^2*s13*s23^2*s12*s34^3+24*s14*d^2*s13*s23^3*s34^3-180*s14*s13*s23^2*s12^2*s34^2-96*s14^2*s24*s13^3*s23^2+24*s14^3*d*s23^2*s34^3-48*s14^4*s23^4-12*s14^4*s24^2*s23^2-24*s24^2*s13^3*s23^2*s12+18*d*s24*s13^3*s23^2*s12^2-8*s13^6*s23^2-18*s14^2*d*s24*s13*s23^2*s12^2-30*s14*d^2*s13^3*s23^2*s34^2+72*s14^2*d*s13*s23^4*s34-36*s14^3*s13^2*s23^2*s12+9*s14*d^2*s24^2*s23^2*s12*s34^2+12*s14*d^2*s13*s23^3*s12^2*s34-72*s14^3*s23^4*s34+240*s14*d*s13^2*s23^2*s34^3+18*d*s24^2*s23^2*s12*s34^3-12*s14^2*d*s24^2*s13*s23^3-24*s24*s23^2*s34^5-12*s14^3*d*s23^2*s12^2*s34-24*s14^3*s24*s13*s23^2*s12-72*s14*s24^2*s13*s23^2*s12*s34-504*s14*s24*s13^2*s23^2*s34^2-44*s14^3*s13^3*s23^2-3*s14^2*d^2*s24^3*s13*s23^2+18*d*s13^5*s23^2*s12-96*s14^2*d*s23^3*s34^3-36*s14^3*s24*s13^2*s23^2-12*s14*s24^3*s23^2*s34^2+3*s14^2*d^2*s24*s23^2*s34^3-12*s14*s23^2*s12^3*s34^2-24*s14^2*s13^2*s23^4-s14^3*d^2*s13^3*s23^2-6*s14^3*d^2*s24*s23^2*s12*s34+192*s14*d*s24*s13^3*s23^2*s34-24*s14^2*d^2*s24*s23^3*s12*s34+6*d*s13^6*s23^2-120*s24*s13^4*s23^2*s34+18*s14*d^2*s24*s13^2*s23^2*s12*s34-12*s14^3*d^2*s23^4*s34+24*s14^2*s23^3*s12^2*s34+192*s14*d*s13*s23^2*s12*s34^3+24*s14^2*s24^2*s23^3*s34+3*s14*d^2*s24^2*s13^3*s23^2-96*s14^2*s23^2*s12*s34^3-288*s14^2*s13^2*s23^2*s12*s34-36*s14*d*s13*s23^3*s12^2*s34-3*d^2*s24^2*s23^2*s12*s34^3-3*s14*d^2*s23^2*s12*s34^4-3*d^2*s24*s13^3*s23^2*s12^2-24*s24^3*s13*s23^2*s34^2-3*s14^2*d^2*s13*s23^2*s12^3+18*d*s13^4*s23^2*s12^2-9*d^2*s24^2*s13^2*s23^2*s12*s34-60*s14*s13^3*s23^2*s12^2-9*s14^2*d^2*s24*s13*s23^2*s12^2+120*s14*d*s13*s23^2*s34^4+12*s14^3*d*s24*s23^4-24*s23^2*s12^2*s34^4-3*d^2*s24^2*s23^2*s34^4+120*s14^2*s13^2*s23^3*s12+3*s14^2*d^2*s23^2*s12^2*s34^2+12*s14^2*d*s24*s13*s23^4+48*s14*s24*s23^3*s34^3-288*s14^2*d*s13^2*s23^3*s34-120*s13*s23^2*s12*s34^4-18*s14*d*s24^2*s23^3*s34^2+12*s14^3*d*s24*s23^3*s12+24*s14*d^2*s13^3*s23^3*s34-24*s14^2*d*s24*s13*s23^3*s12-18*s14*d*s23^3*s12^2*s34^2+3*s14*d^2*s23^2*s12^2*s34^3-96*s13*s23^2*s12^2*s34^3-12*s14*d^2*s24*s13*s23^2*s34^3-3*s14^3*d^2*s13^2*s23^2*s34+36*d*s13*s23^2*s34^5+144*s14*s24*s13^2*s23^3*s34+12*s14*s24^2*s13^2*s23^3+12*s14*d^2*s24*s23^3*s12*s34^2+9*s14*d^2*s13^2*s23^2*s12^2*s34+36*s14^4*d*s24*s23^3-84*s14^2*d*s24*s13^2*s23^3+6*s14^3*d*s23^3*s12^2+6*s14^3*d*s24^2*s23^3-12*s14^4*d*s23^2*s12*s34-3*d^2*s23^2*s12*s34^5-12*s14^4*s23^2*s34^2-12*s14^2*d^2*s23^4*s34^2-20*d^2*s13^3*s23^2*s34^3+36*s14*s23^3*s34^4-18*s14*d*s13^2*s23^3*s12^2-204*s14^3*d*s13*s23^3*s34-48*s13^5*s23^2*s34-24*s24^2*s13^4*s23^2-18*s14^2*d*s24^2*s23^2*s12*s34-24*s14*s13*s23^2*s12^3*s34+3*s14^3*d^2*s24^2*s23^2*s12+9*s14*d^2*s24^2*s13^2*s23^2*s34-3*d^2*s24*s13^5*s23^2-240*s24*s13^2*s23^2*s34^3-48*s13*s23^2*s34^5+144*s14*d*s24*s13^2*s23^2*s12*s34+30*s14^2*d*s24*s13^3*s23^2-18*s14^2*d*s24*s23^2*s12^2*s34-24*s13*s23^2*s12^3*s34^2+18*d*s13^2*s23^2*s12^3*s34-60*s14*s24^2*s13^3*s23^2+36*s14*d^2*s24*s13*s23^3*s34^2+12*s14^2*d*s24*s23^4*s34+3*s14*d^2*s24^3*s23^2*s34^2+3*s14*d^2*s23^2*s12^3*s34^2-12*s14^3*d*s13*s23^2*s12^2-30*s14*d*s23^3*s34^4-24*s14^4*s23^3*s12-15*d^2*s13^4*s23^2*s12*s34+24*s14*d*s24^2*s23^2*s34^3-12*d^2*s13^3*s23^2*s12^2*s34+144*s14*s13*s23^3*s12*s34^2-12*s14^3*s24^2*s23^2*s12+6*s14*d^2*s24*s13^3*s23^2*s12+12*s14*d^2*s24*s23^3*s34^3-180*s14*s24^2*s13*s23^2*s34^2+18*d*s24^2*s13^4*s23^2+36*d*s13^5*s23^2*s34-144*s14^2*s24*s13*s23^2*s12*s34+24*s14^2*s24^2*s13*s23^3-72*s14^3*s24*s13*s23^2*s34-3*s14^2*d^2*s23^2*s34^4-240*s13^2*s23^2*s12*s34^3-36*s14*s24*s13^2*s23^2*s12^2-132*s14^3*s13^2*s23^2*s34-6*d^2*s24*s23^2*s12*s34^4-24*s14^3*s23^4*s12-3*d^2*s24^3*s13^2*s23^2*s34-84*s14*s23^2*s12*s34^4-12*s14^3*d^2*s13*s23^4-96*s24^2*s13^3*s23^2*s34+3*s14^2*d^2*s24^2*s13^2*s23^2-12*s14^3*d*s24*s23^2*s34^2-72*s24*s13^2*s23^2*s12^2*s34+180*d*s24*s13^3*s23^2*s34^2+54*d*s24^2*s13^2*s23^2*s12*s34+12*s14^2*d*s13*s23^4*s12+3*s14*d^2*s13^3*s23^2*s12^2+90*s14^2*d*s24*s13*s23^2*s34^2-48*s14^2*s13*s23^4*s34+6*s14*d^2*s24^2*s13^2*s23^3-60*s14^2*s13^4*s23^2-360*s14^2*s13^2*s23^2*s34^2-12*s14^2*d*s13^2*s23^2*s12^2+6*s14^4*d*s13^2*s23^2-18*d^2*s24^2*s13^2*s23^2*s34^2+6*s14^3*d^2*s13^2*s23^3+144*s14*s13^3*s23^3*s34-3*d^2*s24*s23^2*s12^2*s34^3+48*s14*d*s13^4*s23^2*s12-24*s14*s24^3*s13*s23^2*s34-60*s14*s23^2*s12^2*s34^3-144*s14*d*s13^2*s23^3*s12*s34-72*s14^2*s13*s23^2*s12^2*s34-12*s14^2*d^2*s13^3*s23^2*s34-18*d^2*s13^2*s23^2*s12^2*s34^2+18*d*s23^2*s12^2*s34^4+3*s14^3*d^2*s24*s13^2*s23^2-12*s14^2*d*s24^2*s23^2*s34^2+18*s14*d^2*s24*s13*s23^2*s12^2*s34-360*s14*s24*s13*s23^2*s12*s34^2-288*s14^2*s24*s13^2*s23^2*s34-12*s14^2*d^2*s13*s23^3*s12^2+9*s14^2*d^2*s13*s23^2*s12*s34^2-48*s14*d*s24*s13^3*s23^3-24*s13^4*s23^2*s12^2+120*s14^2*s24*s13^2*s23^3-102*s14^3*d*s23^3*s34^2+24*s14*s24^2*s13*s23^3*s34+8*s14^3*d^2*s23^5+108*d*s24^2*s13^2*s23^2*s34^2+12*s14^2*d^2*s13^3*s23^3+3*s14^3*d^2*s13^2*s23^2*s12+12*s14*d^2*s23^3*s12*s34^3+24*s14*s24*s13^2*s23^3*s12+18*d*s24*s23^2*s12^2*s34^3+12*s14^2*d*s23^4*s12*s34+36*s14*d^2*s13^2*s23^3*s12*s34+9*s14*d^2*s24*s23^2*s12^2*s34^2+48*s14^4*d*s23^4-24*s14^4*s13*s23^2*s34-d^2*s24^3*s23^2*s34^3-120*s14*s24*s23^2*s12*s34^3-168*s14^2*d*s24*s13*s23^3*s34-d^2*s23^2*s12^3*s34^3+12*s14*d^2*s13^3*s23^3*s12+18*d*s24*s23^2*s34^5-3*s14^3*d^2*s24^2*s23^2*s34+204*s14^3*s13^2*s23^3+9*s14*d^2*s24^2*s13^2*s23^2*s12-36*s14^3*s23^2*s12*s34^2-504*s14*s13^2*s23^2*s12*s34^2-24*s13^5*s23^2*s12-72*s14^3*s13*s23^2*s12*s34-96*s24^2*s13*s23^2*s34^3+108*d*s13^2*s23^2*s12^2*s34^2-36*d^2*s24*s13^2*s23^2*s12*s34^2-24*s14^4*s24*s23^2*s12-180*s14*d*s13^2*s23^3*s34^2-d^2*s13^3*s23^2*s12^3-12*s14^4*s23^2*s12^2+90*s14^2*d*s13*s23^2*s12*s34^2-192*s24*s13*s23^2*s12*s34^3-72*s14*d*s24*s13*s23^3*s12*s34-12*s14^2*d*s23^3*s12^2*s34-72*s24^2*s13*s23^2*s12*s34^2+12*s14^3*d^2*s23^4*s12-3*d^2*s13^2*s23^2*s12^3*s34-15*d^2*s13^2*s23^2*s34^4-144*s14*d*s24*s13*s23^3*s34^2-12*s14^2*d*s24^2*s23^3*s34+144*s14*s13*s23^3*s34^3+54*d*s24*s13*s23^2*s12^2*s34^2-36*s14*s23^2*s34^5-8*s24^3*s13^3*s23^2-48*s24*s13^4*s23^2*s12-72*s14^3*s13*s23^4-3*s14^3*d^2*s24^2*s13*s23^2-9*s14^2*d^2*s24*s23^2*s12^2*s34+72*d*s13^3*s23^2*s12^2*s34+90*d*s13^4*s23^2*s12*s34+48*s14*d*s24*s13^3*s23^2*s12-24*d^2*s24*s13^3*s23^2*s12*s34-84*s14*s24*s13^4*s23^2-d^2*s23^2*s34^6+48*s14*d*s24*s23^2*s34^4+12*s14^2*d^2*s24*s13*s23^2*s12*s34-336*s14*s13^3*s23^2*s12*s34-72*s14^2*s24*s23^2*s12*s34^2+36*s14^2*d*s13^4*s23^2-84*s14^2*d*s13^2*s23^3*s12+432*s14^2*s13^2*s23^3*s34-30*d^2*s24*s13^3*s23^2*s34^2+90*d*s13^4*s23^2*s34^2-12*s14^2*d^2*s13*s23^2*s34^3+120*s14^4*s13*s23^3-360*s14*s13^3*s23^2*s34^2+9*s14^2*d^2*s24*s13*s23^2*s34^2+30*s14^2*d*s23^2*s12*s34^3+36*d*s24*s23^2*s12*s34^4+18*d*s24^3*s13^2*s23^2*s34-8*s23^2*s34^6-144*s13^2*s23^2*s12^2*s34^2+72*d*s24^2*s13*s23^2*s34^3+240*s14*d*s13^3*s23^2*s34^2-24*s14^2*d^2*s13*s23^4*s34-36*s14^2*s24^2*s13^2*s23^2-8*s13^3*s23^2*s12^3+3*s14^3*d^2*s24*s23^2*s12^2+9*s14*d^2*s24^2*s13*s23^2*s34^2+9*s14*d^2*s24*s13^2*s23^2*s12^2+84*s14^3*d*s13*s23^4-30*s14*d^2*s13^2*s23^2*s34^3-3*s14^3*d^2*s23^2*s12^2*s34+90*s14^2*d*s13^2*s23^2*s12*s34-12*s14^2*d^2*s24^2*s13*s23^3+144*s14^2*s13^3*s23^3-3*d^2*s13^5*s23^2*s12+48*s14^3*s24*s23^3*s34-6*s14^2*d*s24^3*s13*s23^2+36*s14^2*d*s23^2*s34^4-12*s14^3*d*s23^2*s12*s34^2+6*s14*d^2*s23^3*s34^4+144*s14*s24*s13*s23^3*s34^2-8*s24^3*s23^2*s34^3-3*s14^3*d^2*s13*s23^2*s34^2-84*s14*s24*s23^2*s34^4+48*s14*d*s24*s13^4*s23^2-144*s24^2*s13^2*s23^2*s34^2-8*s23^2*s12^3*s34^3-24*s14^3*d*s24*s13*s23^2*s34+6*s14^4*d*s23^2*s12^2-120*s14*d*s13*s23^3*s34^3+s14^3*d^2*s23^2*s12^3+192*s14*d*s13^3*s23^2*s12*s34+s14^3*d^2*s24^3*s23^2+48*s14^3*s13*s23^3*s12-24*s24*s23^2*s12^2*s34^3-120*s14*s24*s13^3*s23^2*s12+18*s14*d^2*s24^2*s13*s23^2*s12*s34+36*s14*d^2*s13*s23^3*s12*s34^2+204*s14^3*s23^3*s34^2+216*s14*s13^2*s23^3*s34^2+288*s14*d*s13^2*s23^2*s12*s34^2-12*s14^3*d^2*s24*s13*s23^3+24*s14^2*s13*s23^3*s12^2-288*s14^2*d*s13*s23^3*s34^2-30*d^2*s13^2*s23^2*s12*s34^3+6*s14^2*d^2*s24*s13^2*s23^2*s12-48*s24*s23^2*s12*s34^4-24*s24^3*s13^2*s23^2*s34-12*d^2*s24^2*s13^3*s23^2*s34+30*s14^2*d*s13^3*s23^2*s12+6*s14^2*d^2*s24^2*s13*s23^2*s34-240*s14^2*s13^3*s23^2*s34-102*s14^3*d*s13^2*s23^3+120*s14^2*s24*s23^3*s34^2+6*s14^3*d^2*s13*s23^2*s12*s34-36*s14^4*d*s13*s23^3+36*d*s24*s13^4*s23^2*s12-36*s14*d*s24*s13^2*s23^3*s12-15*s14*d^2*s13^4*s23^2*s34+48*s14*s24*s13*s23^3*s12*s34-3*d^2*s13*s23^2*s12^3*s34^2-72*s24^2*s13^2*s23^2*s12*s34-36*s14*d*s24^2*s13*s23^3*s34+54*d*s24*s13^2*s23^2*s12^2*s34-6*s14^2*d*s24^3*s23^2*s34+48*s14*d*s24*s23^2*s12*s34^3-120*s13^2*s23^2*s34^4+48*s14^2*s24*s13*s23^3*s12-6*s14^2*d*s23^2*s12^3*s34-18*s14^2*d^2*s13^2*s23^2*s34^2-120*s13^4*s23^2*s12*s34-d^2*s24^3*s13^3*s23^2-96*s13^3*s23^2*s12^2*s34+6*s14*d^2*s24^3*s13*s23^2*s34-18*s14*d^2*s13^2*s23^2*s12*s34^2+180*d*s13^2*s23^2*s12*s34^3-36*s14*s24^2*s13^2*s23^2*s12+48*s14*s24*s13^3*s23^3+6*s14*d^2*s13^2*s23^3*s12^2+120*d*s13^3*s23^2*s34^3+12*s14^3*d^2*s13*s23^3*s34+36*s14^4*d*s23^3*s12-240*s24*s13^3*s23^2*s34^2+72*d*s24^2*s13^3*s23^2*s34-72*s24*s13*s23^2*s12^2*s34^2+54*d*s24^2*s13*s23^2*s12*s34^2-24*s14^2*d*s24^2*s13*s23^2*s34-12*s14^3*s13*s23^2*s12^2-24*s14^2*d*s24*s13^2*s23^2*s12+12*s14^4*d*s24*s23^2*s12+18*d*s24*s13^5*s23^2-24*s13^2*s23^2*s12^3*s34+6*s14*d^2*s23^3*s12^2*s34^2-120*s14*d*s13^3*s23^3*s34+18*d*s13*s23^2*s12^3*s34^2+6*s14*d^2*s24^2*s23^3*s34^2+12*s14^3*d^2*s24*s23^3*s12+12*s14*d^2*s24^2*s13*s23^3*s34+144*s14*d*s24*s13*s23^2*s12*s34^2-6*d^2*s24*s13^4*s23^2*s12+12*s14*d^2*s24*s13^2*s23^3*s12-24*s14^3*d*s13*s23^2*s12*s34+24*s14*d*s23^2*s12^2*s34^3-84*s14*s13^4*s23^2*s12-168*s14^2*d*s13*s23^3*s12*s34+72*s14^3*d*s13^2*s23^2*s34-6*d^2*s13*s23^2*s34^5+6*s14^3*d^2*s23^3*s34^2+144*s14*s13^2*s23^3*s12*s34-36*s14*s24*s23^2*s12^2*s34^2-60*s14^2*s23^2*s34^4+12*s14^4*d*s13*s23^2*s34+48*s14^3*s23^3*s12*s34-36*s14^3*s24*s23^2*s34^2-12*s14*s24^3*s13^2*s23^2-96*s14^2*d*s13^3*s23^3+6*s14*d^2*s24*s23^2*s12*s34^3+18*d*s23^2*s12*s34^5-12*s14*s13^2*s23^2*s12^3+48*s14*d*s23^2*s12*s34^4-4*s14^3*s24^3*s23^2-4*s14^3*s23^2*s12^3+36*s14*s13^4*s23^3-12*d^2*s24^2*s13*s23^2*s34^3-15*s14*d^2*s13*s23^2*s34^4+72*s14*d*s24^2*s13*s23^2*s34^2+120*s14^2*s23^3*s12*s34^2-240*s14^2*s13*s23^2*s34^3-3*d^2*s13^4*s23^2*s12^2-6*s14^2*d*s13*s23^2*s12^3+18*d*s24^2*s23^2*s34^4+36*s14^2*d^2*s13^2*s23^3*s34-12*s14^2*d*s23^2*s12^2*s34^2-12*s14^2*d^2*s24*s13*s23^4-3*s14^2*d^2*s13^4*s23^2+9*s14^2*d^2*s13^2*s23^2*s12*s34-360*s14*s24*s13^2*s23^2*s12*s34-12*s14^4*s13^2*s23^2+30*s14^2*d*s24*s23^2*s34^3+6*s14^3*d^2*s24*s13*s23^2*s34+144*d*s24*s13*s23^2*s12*s34^3+6*d*s23^2*s34^6-60*s14*s24^2*s23^2*s34^3+12*s14^3*d*s23^4*s12-144*s14*d*s13*s23^3*s12*s34^2+48*s14^2*s24*s23^3*s12*s34-12*s14*d^2*s13^3*s23^2*s12*s34-36*s14*s13^5*s23^2+24*s14*d*s24^2*s13^3*s23^2-12*s14^3*d*s24*s13^2*s23^2+18*d*s24^3*s13*s23^2*s34^2-3*d^2*s24^2*s13^3*s23^2*s12-24*s24^2*s23^2*s34^4-3*d^2*s23^2*s12^2*s34^4-9*d^2*s24^2*s13*s23^2*s12*s34^2+24*s14*d*s13^5*s23^2+3*s14^2*d^2*s24^2*s23^2*s34^2-9*s14^2*d^2*s24^2*s13*s23^2*s12-96*s14^2*s13^3*s23^2*s12+144*s14^2*d*s13^3*s23^2*s34+9*s14^2*d^2*s24*s13^2*s23^2*s34-288*s14^2*s13*s23^2*s12*s34^2-3*s14*d^2*s23^2*s34^5+90*d*s13*s23^2*s12*s34^4-12*s14^2*d*s13*s23^3*s12^2+432*s14^2*s13*s23^3*s34^2-192*s24*s13^3*s23^2*s12*s34-12*s14^2*d^2*s13^2*s23^4-12*s14^3*s23^3*s12^2-12*s14^3*s24^2*s23^3+12*s14*s13^2*s23^3*s12^2+12*s14*d^2*s24*s13^3*s23^3-18*s14*d*s24^2*s13^2*s23^3+24*s14^5*s23^3+6*s14^2*d^2*s13*s23^2*s12^2*s34-72*s14*s24*s13*s23^2*s12^2*s34+3*s14*d^2*s24^3*s13^2*s23^2+3*s14^2*d^2*s13^2*s23^2*s12^2+240*s14^2*s24*s13*s23^3*s34+12*s14*s23^3*s12^2*s34^2+12*s14*s24^2*s23^3*s34^2-84*s14^2*d*s24*s23^3*s34^2-30*s14*d*s13^4*s23^3-144*s14*d*s24*s13^2*s23^3*s34+90*d*s24*s13^4*s23^2*s34+18*s14*d^2*s24*s13*s23^2*s12*s34^2-3*s14*d^2*s13^4*s23^2*s12-6*d^2*s13^5*s23^2*s34-24*s14^3*s24*s23^3*s12-24*s14^3*s24*s23^2*s12*s34-3*d^2*s24^2*s13^4*s23^2-48*s14*d*s24*s23^3*s34^3-24*s24*s13^5*s23^2-36*s14*s24^2*s23^2*s12*s34^2-24*s14^4*s24*s23^3-30*d^2*s13^3*s23^2*s12*s34^2+24*s14*s13*s23^3*s12^2*s34-18*s14*d^2*s24*s13^2*s23^2*s34^2-24*s14^2*d*s24*s23^2*s12*s34^2-12*s14^3*d^2*s23^3*s12*s34+3*s14*d^2*s13^2*s23^2*s12^3+180*d*s24*s13^2*s23^2*s34^3-180*s14*s13*s23^2*s34^4-12*s14^2*d^2*s13*s23^4*s12+24*s14*d*s13^3*s23^2*s12^2-160*s13^3*s23^2*s34^3-15*d^2*s24*s13*s23^2*s34^4-12*s14^2*d*s24^2*s13^2*s23^2+3*s14^3*d^2*s24*s23^2*s34^2-336*s14*s24*s13^3*s23^2*s34+3*s14^2*d^2*s24*s13^3*s23^2-s14^3*d^2*s23^2*s34^3-288*s24*s13^2*s23^2*s12*s34^2+408*s14^3*s13*s23^3*s34-24*s23^2*s12*s34^5-24*s14^3*s24*s23^4-3*s14^3*d^2*s13*s23^2*s12^2-336*s14*s13*s23^2*s12*s34^3-24*s14^3*d*s24*s13*s23^2*s12+6*s14^4*d*s23^2*s34^2-12*s14^2*d^2*s24*s23^4*s34+72*d*s13*s23^2*s12^2*s34^3-24*s14^2*s23^4*s34^2+9*s14*d^2*s13*s23^2*s12^2*s34^2+3*s14*d^2*s24^2*s23^2*s34^3-24*d^2*s24*s13*s23^2*s12*s34^3+12*s14^3*d^2*s24*s23^4+180*d*s13^3*s23^2*s12*s34^2-288*s14^2*s24*s13*s23^2*s34^2-36*s14^2*s23^2*s12^2*s34^2-84*s14^2*d*s23^3*s12*s34^2+144*s14^2*d*s13*s23^2*s34^3+90*d*s24*s13*s23^2*s34^4-15*d^2*s13^4*s23^2*s34^2-360*s14*s13^2*s23^2*s34^3+6*s14^2*d^2*s24*s23^2*s12*s34^2-44*s14^3*s23^2*s34^3+288*s14*d*s24*s13^2*s23^2*s34^2+3*s14^2*d^2*s23^2*s12*s34^3-30*d^2*s24*s13^2*s23^2*s34^3+90*d*s13^2*s23^2*s34^4-12*s14^2*d^2*s24^2*s23^3*s34-12*s14^2*d^2*s23^3*s12^2*s34+84*s14^3*d*s23^4*s34-12*s14^3*d*s24^2*s13*s23^2+48*s14^3*s24*s13*s23^3-12*s14^4*d*s24*s13*s23^2-12*d^2*s13*s23^2*s12^2*s34^3+12*s14^2*d^2*s23^3*s34^3+72*s14*d*s13*s23^2*s12^2*s34^2+24*s14^3*d*s13^3*s23^2-96*s14^2*s24*s23^2*s34^3-d^2*s13^6*s23^2-6*s14^3*d^2*s24*s13*s23^2*s12-3*s14*d^2*s24*s23^2*s34^4-12*s14^4*d*s24*s23^2*s34+90*s14^2*d*s24*s13^2*s23^2*s34-24*s24^2*s23^2*s12*s34^3-3*d^2*s24*s23^2*s34^5-12*s14^3*d*s24^2*s23^2*s34-24*s24*s13^3*s23^2*s12^2-3*d^2*s24^3*s13*s23^2*s34^2+18*d*s24^2*s13^3*s23^2*s12-18*s14^2*d*s24^2*s13*s23^2*s12-132*s14^3*s13*s23^2*s34^2+6*d*s13^3*s23^2*s12^3+36*s14^2*d*s23^4*s34^2+36*s14*d^2*s13^2*s23^3*s34^2-12*s14^3*d^2*s13*s23^3*s12-36*s14^4*d*s23^3*s34-15*d^2*s13*s23^2*s12*s34^4-180*s14*s24^2*s13^2*s23^2*s34+6*s14*d^2*s13*s23^2*s12^3*s34-12*s14^3*s24*s23^2*s12^2-48*s14*d*s23^3*s12*s34^3+6*s14^3*d^2*s24^2*s23^3-12*s14^3*d*s13^2*s23^2*s12+6*s14^3*d^2*s23^3*s12^2-12*s14^4*d*s13*s23^2*s12-24*s14^2*d*s13*s23^2*s12^2*s34+24*s14*s24*s23^3*s12*s34^2-180*s14*s13^2*s23^2*s12^2*s34-12*s14^2*d^2*s23^4*s12*s34+36*s14*d^2*s24*s13^2*s23^3*s34-15*d^2*s24*s13^4*s23^2*s34-336*s14*s24*s13*s23^2*s34^3-12*s14^3*s23^2*s12^2*s34-180*s14*s13^4*s23^2*s34+6*s14^4*d*s24^2*s23^2-9*d^2*s24*s13^2*s23^2*s12^2*s34-48*s14*d*s13^3*s23^3*s12+6*d*s23^2*s12^3*s34^3+6*d*s24^3*s23^2*s34^3-8*s14^3*s23^5-12*s14^3*d^2*s24*s23^3*s34))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (1/2*Den(s14)*Den(-2+d)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(s14*d*s12^6-8*s14*d*s24^3*s34^3-36*s14*d*s24*s13^2*s23*s34^2+18*s14^2*s13*s12^2*s34^2+18*s14*s24*s23^3*s34^2+120*s14*s24^3*s23*s12*s34-66*s14*d*s24*s13*s23^3*s34-9*s14*d^2*s13*s23*s12^4-24*s14*d*s24^2*s13^3*s12-18*s14*d*s24^2*s13*s23*s12^2-18*s14*d^2*s24*s13*s23*s12*s34^2-9*s14*d^2*s23*s12^4*s34-36*s14^2*s13*s23*s12^3-33*s14*d*s24*s13^2*s23^3+24*s14*s24^3*s23^2*s12-90*s14^2*s23^2*s12*s34^2+252*s14*s24*s13*s23*s12^2*s34-36*s14^2*s24*s13*s23*s34^2+6*s14*d*s24*s12^5-30*s14^2*s23^2*s12^3-30*s14^2*s24^3*s23^2-36*s14^2*s23*s12^3*s34+18*s14^2*d^2*s13*s23^2*s12^2+18*s14^2*s24^4*s13+60*s14*s24^4*s13*s12+144*s14*s24^2*s12^2*s34^2-12*s14^2*s24*s23*s34^3-64*s14^2*d*s24*s23*s12^3-42*s14*d*s13*s23*s12^3*s34-3*s14*d^2*s24^4*s13^2+6*s14*s13*s23^3*s12^2-16*d^2*s13*s23^2*s12*s34^3+60*s14*s24^2*s23*s12^3+90*s14*d*s13*s23^2*s12*s34^2-252*s14^2*s24*s23^2*s12*s34+18*s14^2*s13*s12^4-72*s14*d*s24*s13^2*s12^2*s34-27*s14^2*d*s24*s12^2*s34^2+12*s14^2*d^2*s24*s23^2*s34^2-24*s24*s23^2*s34^4-126*s14^2*d*s23^3*s34^2+24*s14^2*d^2*s24*s13*s23^2*s34-216*s14*s13^3*s23^2*s34+108*s14^2*s24*s13*s12^2*s34-36*s14^2*s13*s23*s12*s34^2-6*s14*d*s24*s12*s34^4-16*d^2*s24*s13^3*s23^2*s34+50*d*s13^4*s23^2*s34+30*s14*s24^4*s23*s12-21*s14*d*s23*s12^3*s34^2+18*s14^2*s13^2*s12^3+54*s14*s24^2*s13^2*s23*s34+30*d*s24^2*s13^2*s23^2*s34-144*s24*s13^2*s23^2*s34^2-8*s14*d*s24^3*s13^3+96*s14*s24^3*s13^2*s12-9*s14*d^2*s13*s23*s12^2*s34^2-144*s14^3*d*s23^3*s34-3*s14*d^2*s24*s23^2*s34^3+s14*d*s24^6+100*d*s13^2*s23^2*s34^3-24*s14*d*s24*s12^2*s34^3+18*s14^2*s24^4*s34+3*s14*d*s24^2*s23^3*s12+60*s14*s24*s12^4*s34-30*s14^2*d*s24^2*s13*s23*s12-18*s14^2*d*s24*s13^2*s23*s34-27*s14*d^2*s24*s23^2*s12^2*s34-20*d^2*s13^3*s23^2*s34^2+24*s14^3*d*s24^2*s23*s34-12*d^2*s24*s13^2*s23^2*s12*s34-9*s14*d^2*s13*s23^2*s12^3-9*s14*d^2*s24*s13*s23^2*s34^2-3*s14*d^2*s24^4*s34^2+80*d*s24*s13*s23^2*s34^3-36*s13*s23^2*s12^2*s34^2-9*s14^2*d*s12^4*s34-3*s14*d^2*s13^2*s12^3*s34+30*d*s13^2*s23^2*s12^2*s34-216*s14*s13^2*s23^2*s12*s34+82*s14^3*d*s24^2*s23^2+48*s14^3*s23^2*s12*s34+27*s14^2*d*s24*s13^2*s23^2-36*s14^4*d*s24*s23^2-120*s14^3*s24*s23*s12*s34-36*s14^3*d^2*s24*s23^3+120*s14*s24^2*s13*s12^3+3*s14*d*s24^5*s23+84*s14^4*s23^2*s12+8*s14^2*d^2*s23^4*s12+54*s14^2*d*s13*s23^2*s12*s34-4*d^2*s24*s13^4*s23^2-12*s14*d*s24^3*s13*s23*s12-135*s14*d*s13^2*s23^3*s34-3*s14*d^2*s23^2*s12^2*s34^2+39*s14*d*s23^2*s34^4-144*s14^3*s24*s23*s12^2-6*s14*d^2*s24^5*s12+126*s14*s24^2*s23*s12*s34^2-36*s14^2*d*s24*s13*s12^3-9*s14^2*d*s13*s12^4+120*s14*s24^2*s12^3*s34-21*s14*d*s24^3*s13^2*s23-3*s14*d^2*s24^3*s13^2*s34-6*d^2*s24^2*s13^2*s23^2*s34-24*s14^3*s24*s23^3-27*s14^2*d*s24^2*s12*s34^2-270*s14^2*s13^2*s23^2*s34-63*s14*d*s13*s23*s12^2*s34^2-108*s14^2*s24*s23*s12^2*s34+24*s14*s24*s23^2*s12^3+24*s14*s13^2*s12^4+27*s14^2*d*s13^2*s23^2*s12-9*s14*d^2*s24^4*s23*s34-s14*d^2*s23^3*s12^3-36*s14^2*d*s24*s12^3*s34-16*s14^2*d^2*s13*s23^4-3*s14*d^2*s24*s13^3*s12^2+36*s14^2*s24*s13^2*s12*s34-18*s14*d*s24*s23^2*s12^2*s34+50*d*s13*s23^2*s34^4-4*d^2*s23^2*s12*s34^4-16*s14^3*d*s24*s13*s23^2+180*s14^2*s23^3*s34^2+24*s14^2*d^2*s24^2*s13*s23*s12-12*s14^2*s13^3*s23*s12-126*s14*d*s24^2*s13*s23*s12*s34-8*s14*d*s12^3*s34^3+36*s14^2*s13*s12^3*s34-2*d^2*s24^2*s13^3*s23^2+40*s14*s24^3*s12^3+18*s14*s23^3*s12*s34^2+90*s14*d*s24*s13*s23^2*s34^2-36*s14*d*s24^2*s13^2*s12^2-90*s14^2*s24^2*s23^2*s12-216*s14*s13*s23^2*s34^3+33*s14^2*d*s24^2*s23^2*s34-6*d^2*s13^2*s23^2*s12^2*s34-16*d^2*s24*s13*s23^2*s34^3-64*s14^2*d*s24^3*s23*s12-9*s14*d^2*s24^3*s13*s23^2-24*s14*d*s24^3*s13*s34^2-36*s14^2*s24^3*s23*s34+60*s14*s24*s13*s12^4-6*s14*d^2*s13*s12^4*s34-24*s13^4*s23^2*s12-3*s14*d*s13^4*s12^2-9*s14^2*d*s24^4*s13-27*s14^2*d*s23^2*s12^3-27*s14^2*d*s24^3*s23^2-3*s14*d*s24^2*s13*s23^3+192*s14*s24^3*s13*s12*s34-36*s14*d^2*s24^3*s13*s23*s12+24*s14^2*d^2*s13*s23^2*s12*s34-48*s14^2*s23*s12^2*s34^2-6*s14*d^2*s13^4*s23^2+18*s14*s24^2*s13^3*s23+54*s14*s13^2*s23*s12^2*s34-21*s14*d*s13^3*s23*s12^2+180*s14*s24^2*s13*s12*s34^2+18*s14*d^2*s24*s13*s23^3*s34+33*s14^2*d*s24^2*s13*s23^2-60*s14^3*s23*s12^2*s34-54*s14*d^2*s24^2*s13*s23*s12^2+18*s14^2*s12^4*s34-9*s14*d^2*s13^2*s23*s12^3+24*s14^3*d*s24^3*s23+6*s14*s24^4*s23^2-6*s14^2*d*s24*s13^3*s23-3*s14*d^2*s24*s23^3*s12^2-s14*d^2*s13^3*s12^3-3*s14*d*s24^4*s13*s23-6*s14*d^2*s24^4*s13*s34+36*s14*s13*s23^3*s12*s34+96*s14*s24*s13^2*s12^3+6*s14*s23^2*s12^4-9*s14*d^2*s23^2*s12^3*s34+234*s14*d*s13^2*s23^2*s34^2-16*s14^3*d*s13*s23^2*s12-18*s14^2*d*s24*s13*s12*s34^2-9*s14*d^2*s24^3*s23^2*s34-45*s14*d*s13^3*s23^3-6*s14*d*s24*s13^4*s12-16*s14^2*d*s23*s12^4+80*d*s13*s23^2*s12*s34^3+33*s14*d^2*s13*s23^3*s34^2+24*s14^2*d^2*s13^2*s23^3-3*s14*d^2*s24^2*s23*s34^3-9*s14*d^2*s13*s23^2*s12*s34^2-9*s14*d^2*s24*s13^2*s12^2*s34-9*s14^2*d*s13^2*s12^3+46*s14^3*d*s23^2*s34^2+30*s14*s24*s23*s12^4-18*s14*d^2*s13*s23*s12^3*s34-21*s14*d*s24^3*s23*s34^2+36*s14^2*s24^3*s13*s34-36*s14^2*d*s24^3*s13*s12+48*s14^3*d*s24*s13*s23*s12-12*s14*d^2*s24^3*s12*s34^2-3*s14*d^2*s13^3*s23^2*s12-12*s24^2*s23^2*s34^3-2*d^2*s23^2*s12^2*s34^3+54*s14^2*d*s24*s13*s23^2*s34-15*s14*d^2*s24^2*s12^4-9*s14^2*d*s24^2*s13^2*s34+18*s14*d*s24^2*s23^2*s12^2+54*s14^2*s24^2*s13^2*s12+80*d*s24*s13^3*s23^2*s34-16*s14^3*d*s24*s23^2*s34-24*s14*d*s24^2*s12*s34^3-9*s14^2*d*s24^4*s34-24*s14*d*s13*s12^3*s34^2-3*s14*d^2*s12^4*s34^2-24*s14*d*s13^3*s23*s12*s34+60*s14*s24*s13^3*s12^2-2*d^2*s13^3*s23^2*s12^2+72*s14^3*d*s24^2*s23*s12-4*s14^2*d*s24*s23^4-3*s14*d*s23^3*s12^2*s34-54*s14*d^2*s24^2*s13*s23*s12*s34-72*s24*s13*s23^2*s12*s34^2-3*s14*d*s24^2*s23^3*s34+30*s14^2*s24^4*s12-54*s14*d^2*s24^2*s23*s12^2*s34-60*s14^3*s13*s23*s12^2-2*d^2*s23^2*s34^5+60*s14*s24^3*s13^2*s34-30*s14*d^2*s24^2*s12^3*s34-12*s14*d^2*s24*s23^2*s12^3+96*s14^3*d*s23^3*s12-60*s14^3*s13^2*s23^2+30*s14*s24^4*s23*s34-6*s14*d^2*s24*s23^3*s12*s34-9*s14*d^2*s24^2*s13^2*s12*s34+10*d*s13^5*s23^2-36*s24^2*s13*s23^2*s34^2+126*s14*s24^2*s13^2*s23*s12+48*s14*s13*s12^4*s34-18*s14^2*d*s13^2*s23*s12*s34-33*s14*d*s13^2*s23^3*s12-15*s14*d^2*s24*s13*s12^4+120*s14*s24*s23*s12^3*s34-3*s14*d^2*s24^5*s34+24*s14*s24^3*s13*s23^2-12*s14^3*s24*s23*s34^2+3*s14*d*s23^2*s12^4+46*s14*s13^3*s23^3+72*s14^2*s24*s13*s12^3-12*s14*d*s13*s12^2*s34^3+10*d*s24^2*s23^2*s34^3+24*s14*s24^2*s13*s34^3-12*s14^4*s23^2*s34-42*s14*d*s24^3*s13*s23*s34-16*s14^2*d^2*s23^4*s34-3*s14^2*d*s13^3*s12^2+30*s14*d*s23^2*s12*s34^3+120*s14*s24*s13*s23*s12^3+3*s14*d*s24^4*s23^2-90*s14^2*s24*s13^2*s23^2-24*s14*d^2*s13*s23^2*s34^3-15*s14*d^2*s24^4*s12^2+9*s14*d^2*s23^3*s12*s34^2-27*s14*d^2*s24*s13*s23^2*s12^2+180*s14*s24*s13*s12^2*s34^2-6*s14^2*d^2*s13^3*s23^2-90*s14^2*s23^2*s34^3-12*s14^4*s13*s23^2-42*s14*d*s24*s23*s12*s34^3-10*s14^2*d*s23*s12^3*s34-18*s14^2*d^2*s13*s23^2*s34^2-60*s13*s23^2*s34^4+48*s14*s24^4*s13*s34+6*s14*s13^4*s12^2+24*s14*s23^2*s12^3*s34-12*s14*d^2*s24*s13^2*s12^3-12*s14^3*s24*s13^2*s23+24*s14*s24^3*s23^2*s34-108*s14^2*s24*s13*s23*s12^2+27*s14^2*d*s23^2*s12*s34^2-6*s14*d*s24*s13*s23^3*s12-12*s14*d*s24^2*s13^3*s34-3*s14*d^2*s24^2*s13^3*s23+36*s14*s13^2*s12^2*s34^2-63*s14*d*s24^2*s13*s23*s34^2-10*s14^2*d*s13*s23*s12^3-s14*d^2*s24^3*s23^3+20*s14*d*s24^3*s12^3+42*s14*s13^2*s23*s12^3-48*s14^3*s23*s12^3-63*s14*d*s24*s13^2*s23*s12^2-9*s14^2*d*s13*s12^2*s34^2+6*s14*s24*s23^3*s12^2+36*s14^2*d^2*s24*s13*s23^2*s12-72*s14*s13^3*s23^2*s12+96*s14*s24^3*s12*s34^2+20*s14*s12^3*s34^3-4*d^2*s24*s13^3*s23^2*s12+20*d*s13^4*s23^2*s12+72*s14^2*d^2*s24*s23^2*s12^2-3*s14*d^2*s24^5*s13-18*s14^2*d*s24^2*s23^3-18*s14*d*s24^2*s23^2*s12*s34-24*s14*d*s24*s13^3*s12*s34-18*s14^2*d*s23^3*s12^2+138*s14*s13*s23^3*s34^2+18*s14*s24^2*s23*s34^3+54*s14^2*s24*s12^2*s34^2-6*s14^2*d*s24*s23*s34^3-72*s14*d*s24^2*s13*s12^2*s34-36*s14*d*s13^2*s23*s12*s34^2-108*s14^2*s24^2*s23*s12*s34-6*s14*d*s13^2*s12^4+18*s14^2*d^2*s23^2*s12^2*s34-15*s14*d^2*s24*s23*s12^4+126*s14*s24*s23*s12^2*s34^2-18*s14*d*s13^2*s23^2*s12^2-54*s14*s23^2*s34^4+92*s14^3*d*s13*s23^2*s34-12*s14*d^2*s24^3*s23^2*s12-120*s13^2*s23^2*s34^3-6*s14*d^2*s24*s23*s12*s34^3-24*s14*d*s24*s12^3*s34^2+8*s14^3*d^2*s23^2*s12*s34-15*s14*d^2*s24^4*s13*s12+6*s14*s24^5*s23-27*s14*d^2*s24*s13^2*s23*s12^2-3*s14*d^2*s13*s12^5+72*s14*s24*s13^2*s12*s34^2+9*s14*d^2*s24*s23^3*s34^2-12*s14^2*s24*s13^3*s23-21*s14*d*s23*s12^2*s34^3-144*s13^2*s23^2*s12*s34^2+30*s14*s13*s23*s12^4-6*s14*d^2*s24*s13*s23^3*s12-126*s14*d*s24*s13*s23*s12*s34^2-126*s14^2*s24^2*s13*s23^2+6*s14^2*s13^3*s12^2-9*s14*d^2*s24^2*s13*s23*s34^2+30*s14*s23*s12^4*s34+192*s14*s24*s13*s12^3*s34-24*s24*s23^2*s12*s34^3+36*s14*s24*s13^3*s23*s12-15*s14^2*d*s24^4*s12-27*s14*d^2*s24^2*s23^2*s12*s34+66*s14^2*d*s24*s13*s23^2*s12-24*s14*d^2*s13^3*s23^2*s34-12*s14^2*s24*s23^4+18*s14^2*s24^2*s13^2*s34-18*s14*d*s24^2*s23^2*s34^2+6*s14^2*s12^5-27*s14^2*d*s24^2*s13^2*s12+8*s14^2*d^2*s24^4*s23+164*s14^3*d*s24*s23^2*s12+20*d*s24*s13^3*s23^2*s12-36*s14*d^2*s24^2*s13*s12^2*s34+20*s14*s24^3*s13^3-18*s14*d^2*s24^2*s12^2*s34^2+82*s14^3*d*s23^2*s12^2-12*s14*d*s13^3*s12^2*s34+72*s14*s24^2*s13*s23^2*s12-18*s14^2*d*s24^3*s13*s34+8*s14^2*d^2*s24^3*s13*s23+72*s14^2*s24^3*s13*s12+30*s14*d*s24^3*s23*s12^2-3*s14*d^2*s13*s23^3*s12^2-216*s14*s24*s13^2*s23^2*s34-3*s14*d^2*s12^5*s34-30*s14*d^2*s24^2*s23*s12^3-36*s14^2*s24^2*s23^3-24*s14^3*d^2*s23^4-36*s14^2*s23^3*s12^2+48*s14^2*d^2*s24^2*s23*s12^2-6*s14^2*d*s13^3*s23*s12-18*s14*d*s24^2*s23*s12^2*s34+108*s14^2*s24^2*s13*s12*s34-15*s14*d^2*s24*s12^4*s34+48*s14^2*d^2*s24*s23^3*s12+30*s14*d*s24*s13^3*s23^2-3*s14*d^2*s23*s12^5-6*s14*d*s24*s23^3*s12*s34-72*s14*d*s24^2*s13^2*s12*s34-15*s14*d^2*s24^4*s23*s12+11*s14*d^2*s23^3*s34^3+72*s14^2*s24*s12^3*s34-12*s14*d^2*s24^3*s13^2*s12+54*s14^2*s24^2*s12*s34^2+189*s14^2*d*s13^2*s23^2*s34-72*s14*s24*s23^2*s34^3-90*s14^2*s13^2*s23^2*s12-30*s14*d^2*s24^2*s13*s12^3+12*s14*s24*s12^5+6*s14^2*s24^5-96*s13^3*s23^2*s12*s34-2*s14^3*d^2*s13^2*s23^2+48*s14^2*d^2*s13*s23^3*s34-18*s14*d^2*s24^3*s13*s23*s34-60*s14^3*s24^2*s13*s23+20*d*s24*s23^2*s34^4-10*s14^2*d*s24^3*s23*s34-60*s13^4*s23^2*s34+108*s14*s24*s13^2*s23*s12*s34+63*s14^2*d*s23^2*s34^3-18*s14*d*s24*s13*s23^2*s12^2-6*s14*d*s23*s12*s34^4-3*s14*d^2*s24^2*s13^2*s23^2-81*s14^2*d*s24^2*s23^2*s12+24*s14*s13*s23^2*s12^3-126*s14^2*s24^2*s23^2*s34-18*s14*d*s24^2*s13^2*s34^2+60*s14*s13^2*s12^3*s34-12*s13^5*s23^2+60*d*s24*s13^2*s23^2*s12*s34-144*s14^3*d*s13*s23^3+20*s14*s24^3*s34^3-18*s14^2*d*s13*s12^3*s34-24*s14*d*s24*s13*s12*s34^3-3*s14*d*s12^2*s34^4-120*s14^3*s13*s23^2*s34-24*s14*d*s13^2*s12^3*s34-24*s24*s13^3*s23^2*s12-6*s14*d*s13*s23^2*s12^3+36*s14*s24^2*s13^2*s34^2-36*s14*d^2*s24*s23*s12^3*s34-3*s14*d^2*s24^4*s23^2+15*s14*d*s24^4*s12^2+20*d*s24*s23^2*s12*s34^3+54*s14^2*s24*s13^2*s12^2+12*s14^2*d^2*s24*s13^2*s23^2-6*s14*d^2*s24*s23^2*s12*s34^2+63*s14^2*d*s13^3*s23^2+48*s14*s24*s13*s12*s34^3-3*s14*d^2*s23^2*s12^4+20*d*s24*s13^4*s23^2-36*s14*d^2*s24*s13*s23*s12^3-192*s14^2*s24*s13*s23*s12*s34-48*s14^2*s24*s13*s23^3-9*s14*d^2*s24*s13*s12^2*s34^2+20*s14*s13^3*s12^3-18*s14*d*s23^2*s12^2*s34^2+72*s14*s24*s13*s23^2*s12^2+33*s14*d^2*s13^2*s23^3*s34+44*s14^2*d*s23^4*s34+120*s14*s24^3*s13*s12^2+10*d*s23^2*s34^5-18*s14^2*d*s24*s13^2*s12*s34-9*s14*d^2*s23*s12^3*s34^2-36*s14^3*d^2*s23^3*s12+30*s14*d*s24*s23^2*s34^3+180*s14*s24^2*s23*s12^2*s34-2*d^2*s13^5*s23^2-168*s14^3*s24*s23^2*s12-3*s14*d^2*s24^2*s23^3*s12+120*d*s13^2*s23^2*s12*s34^2-126*s14*d*s24*s13^2*s23*s12*s34+24*s14*s12^4*s34^2+18*s14^2*s24^3*s13^2+8*s14^2*d^2*s24*s23^4-30*s14^2*d*s24*s23*s12^2*s34-3*s14*d^2*s24*s12^2*s34^3-20*d^2*s13^2*s23^2*s34^3+264*s14^3*s13*s23^3-27*s14*d^2*s24^2*s13^2*s23*s12-15*s14^2*d*s24*s12^4+180*s14*s24^2*s13^2*s12*s34+12*s14*s24*s23^3*s12*s34+30*s14*s24^2*s12^4-72*s14*s24*s13^3*s23^2+100*d*s13^3*s23^2*s34^2+60*s14*s24^3*s23*s12^2-6*s14*d*s24*s23*s34^4-180*s14^2*s24*s13*s23^2*s34+108*s14*s24*s13*s23*s12*s34^2-126*s14^2*s23^2*s12^2*s34+24*s14*s13^3*s12^2*s34+2*s14*s23^3*s12^3+32*s14^2*d^2*s24*s23*s12^3+80*d*s13^3*s23^2*s12*s34-9*s14^2*d*s12^3*s34^2-42*s14*d*s24*s13^3*s23*s12-3*s14*d^2*s13^2*s12^4-30*s14^2*d*s24^2*s12^3-90*s14^2*s24*s23^2*s12^2+27*s14^2*d*s24*s23^2*s34^2+36*s14^2*d^2*s24*s23^2*s12*s34+90*s14*d*s24*s13^2*s23^2*s34+12*s14^2*s24*s12*s34^3-18*s14*d*s24^2*s13*s23^2*s12+48*s14^2*d*s23^3*s12*s34-54*s14*d^2*s24*s13*s23*s12^2*s34-10*d^2*s13^4*s23^2*s34+48*s14^3*d*s23^4+24*s14^2*d^2*s23^3*s12^2+24*s14^2*d^2*s24^2*s23^3+60*d*s24*s13*s23^2*s12*s34^2-64*s14^4*d*s23^3+s14*d*s24^3*s23^3+24*s14^3*d*s24^2*s13*s23-3*s14*d*s23*s12^4*s34-20*s14*d^2*s24^3*s12^3-96*s14^2*s13*s23*s12^2*s34-63*s14*d*s24*s23*s12^2*s34^2+36*s14^2*s24*s13*s12*s34^2+18*s14*s23*s12^2*s34^3-3*s14*d*s13*s23*s12^4-3*s14*d^2*s24^2*s13^3*s12-48*s14*d*s24*s13*s12^3*s34-54*s14*s13^4*s23^2-84*s14^3*s23^2*s12^2+9*s14*d^2*s24*s13^2*s23^3-270*s14^2*s13*s23^2*s34^2+33*s14^2*d*s13*s23^2*s12^2-36*s14*d*s24*s13^2*s12*s34^2-36*s14*d*s13*s23^2*s12^2*s34-6*d^2*s24^2*s13*s23^2*s34^2+18*s14^2*s24^3*s34^2+96*s14*s24*s12^3*s34^2+48*s14*s24*s13^3*s12*s34+72*s14*s24^2*s23^2*s12*s34-16*d^2*s13^3*s23^2*s12*s34-21*s14*d*s24^2*s23*s34^3-144*s14^3*s24^2*s23*s12-135*s14*d*s13*s23^3*s34^2-14*s14^3*d^2*s23^2*s12^2-6*s14*d^2*s24*s13^3*s23*s12-54*s14^2*d*s24*s13*s12^2*s34-18*s14^2*d*s13*s23*s12*s34^2-36*s14^2*s24^3*s13*s23-9*s14*d^2*s24^3*s23*s34^2+24*s14^3*d*s13*s23*s12^2-18*s14*d^2*s24^2*s23^2*s12^2-27*s14*d^2*s24^2*s13*s23^2*s12+8*s14^3*d^2*s24*s23^2*s34-12*s14^3*s23*s12*s34^2-24*s14*d*s24^3*s12*s34^2+30*s14^2*s24*s12^4+10*d*s23^2*s12^2*s34^3+288*s14*s24^2*s13*s12^2*s34+30*s14*d*s13^3*s23^2*s12-3*s14*d^2*s13*s12^3*s34^2-9*s14^2*d*s24^3*s13^2-24*s14^3*s13*s23*s12*s34+24*s14^3*d*s23*s12^3-9*s14*d^2*s24*s13^2*s23^2*s34-16*s14^2*d*s24^4*s23+66*s14^2*d*s24*s23^2*s12*s34-3*s14*d^2*s24^2*s12*s34^3-3*s14*d*s24^2*s34^4+18*s14^2*d^2*s24^2*s13*s23^2-90*s14^2*s13^3*s23^2+108*s14^2*s24^2*s13*s12^2-9*s14^2*d*s24^2*s13*s34^2-18*s14*d*s13^2*s12^2*s34^2-72*s24*s13^2*s23^2*s12*s34+24*s14*s24^2*s13^3*s34-30*s14*d^2*s24^3*s12^2*s34-18*s14^2*d*s24*s13*s23*s34^2-27*s14*d^2*s24*s23*s12^2*s34^2-3*s14*d^2*s13^3*s23*s12^2+3*s14*d*s24*s23^3*s12^2+12*s14^2*s24*s13^3*s12+24*s14*s24^4*s34^2+36*s14*s24*s23*s12*s34^3-21*s14*d*s13^2*s23*s12^3-12*s14*d*s24^4*s13*s34-9*s14*d^2*s24^4*s13*s23-12*s14^2*s23^4*s34+2*s14*s24^6+12*s14*s24^5*s12-6*s14*d^2*s13*s23^2*s12^2*s34-12*s13^3*s23^2*s12^2-24*s14^3*s24*s13*s23*s34+30*d*s24^2*s13*s23^2*s34^2+126*s14*s24*s13^2*s23*s12^2-24*s14*d^2*s24*s13*s12^3*s34+54*s14*s24^2*s13*s23*s34^2+12*s14^4*d*s23^2*s34-6*s14*d*s24^3*s23^2*s34-36*s14*d^2*s13^2*s23^2*s34^2+12*s14*s24*s13*s23^3*s12-6*s14*d*s23^2*s12^3*s34+8*s14^3*d^2*s13*s23^2*s12-4*d^2*s24*s23^2*s12*s34^3+84*s14*s24^3*s13*s23*s34-6*s14*d*s13^4*s23*s12-72*s14*s23^2*s12*s34^3-180*s14^2*s13*s23^2*s12*s34-36*s14*d*s24*s23^2*s12*s34^2+10*d*s24^2*s13^3*s23^2-12*s23^2*s34^5+72*s14^2*s24^3*s12*s34-6*s14^2*d*s23*s12*s34^3+12*s14^3*d^2*s13*s23^3-12*s14*d*s24*s23*s12^3*s34+18*s14^2*d^2*s24^2*s23^2*s34-18*s14*d^2*s24^2*s13^2*s12^2+24*s14*s13*s12^2*s34^3-54*s14^2*d*s24^2*s12^2*s34-9*s14^2*d*s24^3*s34^2-72*s14*d*s24*s13*s12^2*s34^2-96*s14^2*s24*s23*s12*s34^2-3*s14*d^2*s24^3*s13*s34^2+12*s14^4*d*s13*s23^2-3*s14*d*s24^2*s13^4-6*s14*d*s24^3*s13*s23^2+32*s14^2*d^2*s24^3*s23*s12-24*s14^3*s23^3*s12+46*s14^3*d*s13^2*s23^2-12*s14*d*s13*s12^4*s34+18*s14*s13^2*s23^3*s12+48*s14^2*d*s13*s23^3*s12+360*s14^2*s13*s23^3*s34-12*s14*d*s24^2*s13*s34^3-3*s14*d^2*s24^2*s13*s23^3-6*s14^2*d^2*s23^2*s34^3-12*s14*d*s24*s13*s23*s12^3+18*s14^2*s12^3*s34^2+24*s14*s24^4*s13^2+12*s14^2*d^2*s13^2*s23^2*s12-24*s14*d*s24^3*s13^2*s34-45*s14*d*s23^3*s34^3-9*s14*d^2*s24^3*s13^2*s23-108*s14^2*s24^2*s13*s23*s12-36*s14^2*s24*s13^2*s23*s34-3*s14*d*s24^4*s23*s34-15*s14*d^2*s24^4*s12*s34-12*s14*d^2*s24*s13*s23^2*s12*s34-63*s14*d*s24^2*s13^2*s23*s12+48*s14^2*d*s24*s23^3*s34-24*s14*d*s24*s13^3*s12^2-72*s14^2*s24*s23^3*s12-10*d^2*s13*s23^2*s34^4-24*d^2*s13^2*s23^2*s12*s34^2+6*s14*s24^2*s23^3*s34+60*s14^2*s24^2*s12^3+8*s14^3*d^2*s24*s13*s23^2+3*s14*d*s23*s12^5+6*s14*s23^3*s12^2*s34+24*s14^2*d^2*s24*s23*s12^2*s34+2*s14*s12^6+20*d*s23^2*s12*s34^4+18*s14^2*s13^2*s12^2*s34-36*s14*d*s24^2*s13*s23^2*s34-6*s14^2*d*s24*s12*s34^3-48*s14^2*s23^3*s12*s34+24*s14^2*d^2*s24^2*s23*s12*s34-4*d^2*s13^4*s23^2*s12+36*s14*s24^2*s23^2*s12^2+24*s14^2*d^2*s23^3*s34^2-6*d^2*s13*s23^2*s12^2*s34^2+6*s14*s23*s12^5-3*s14^2*d*s24^2*s34^3+60*s14*s13*s12^3*s34^2-81*s14^2*d*s24*s23^2*s12^2-90*s14^2*s24*s23^2*s34^2-48*s14^3*s24^3*s23-36*s14*d*s24*s13^2*s23^2*s12+60*s14*s24^2*s12*s34^3-12*s14^2*s13*s23^4-12*s24^2*s13^3*s23^2-24*s14*d*s24*s13^3*s23*s34+42*s14*s24^3*s23*s34^2+48*s14^3*s24*s13*s23^2-6*s14*d*s24^4*s13^2+15*s14*d*s24*s23*s12^4+33*s14^2*d*s23^2*s12^2*s34-252*s14^2*s24*s13*s23^2*s12+46*s14*s23^3*s34^3+189*s14^2*d*s13*s23^2*s34^2-36*s14*d^2*s24^3*s23*s12*s34+8*s14^2*d^2*s23*s12^3*s34-126*s14^2*s13*s23^2*s12^2+30*s14*s24^4*s13*s23+60*s14^2*s24^3*s12^2-24*s23^2*s12*s34^4+12*s14*s24*s13^4*s12-24*d^2*s24*s13^2*s23^2*s34^2+12*s14^2*d^2*s23^2*s12*s34^2-6*s14*d^2*s24*s12^5-60*s14^3*s23^2*s34^2-24*s14*d*s24*s13^2*s12^3-63*s14*d*s13^2*s23*s12^2*s34-72*s14*d*s24^2*s13*s12*s34^2-324*s14*s13^2*s23^2*s34^2+6*s14*s24^2*s13^4+8*s14^2*d^2*s13*s23*s12^3-s14*d^2*s24^3*s34^3+18*s14*s13^3*s23*s12^2+24*s14^2*d^2*s24*s13*s23*s12^2-21*s14*d*s24^2*s13^3*s23+120*s14*s24^3*s12^2*s34+6*s14^2*s12^2*s34^3-66*s14*d*s13*s23^3*s12*s34+48*s14^2*d*s24*s13*s23^3-3*s14^2*d*s24^2*s13^3-12*s23^2*s12^2*s34^3-2*d^2*s24^2*s23^2*s34^3+96*s14^3*d*s24*s23^3+9*s14*d^2*s13^2*s23^3*s12-4*s14^2*d*s23^4*s12-216*s14*s24*s13*s23^2*s34^2+252*s14*s24^2*s13*s23*s12*s34-3*s14*d^2*s24^5*s23+24*s14^3*d*s23*s12^2*s34+60*s14*s24^3*s13*s34^2-6*s14*d^2*s23^2*s34^4+6*s14*d*s24^5*s12-96*s13*s23^2*s12*s34^3+6*s14*s24^2*s13*s23^3-9*s14*d^2*s13^2*s23^2*s12*s34-6*s14*d*s24^4*s34^2-27*s14^2*d*s24*s13^2*s12^2-48*s14*d*s24^3*s13*s12*s34-3*s14*d^2*s23^2*s12*s34^3+12*s14*s13*s12^5+48*s14^3*s13*s23^2*s12-27*s14*d^2*s24^2*s23*s12*s34^2+144*s14*s24^2*s13^2*s12^2-96*s24*s13^3*s23^2*s34+156*s14*d*s13*s23^2*s34^3-14*s14^3*d^2*s24^2*s23^2-33*s14*d*s23^3*s12*s34^2-9*s14*d^2*s24^2*s13^2*s23*s34+60*s14*s24^4*s12*s34+6*s14*s24^2*s34^4-72*s14*d*s24*s13*s23^2*s12*s34+10*d*s13^3*s23^2*s12^2-3*s14*d^2*s24^2*s23^3*s34+54*s14*s13*s23*s12^2*s34^2-3*s14*d^2*s23^3*s12^2*s34+12*s14*d*s24*s23^2*s12^3+48*s14^3*d*s24*s23*s12*s34-54*s14^2*d*s24^2*s13*s12*s34+12*s14*s12^5*s34+48*s14^3*s24*s23^2*s34+42*s14*s24^3*s13^2*s23-s14*d^2*s24^3*s13^3+180*s14^2*s13^2*s23^3+12*s14^3*d^2*s23^3*s34+72*s14*s24*s23^2*s12^2*s34-48*s14^2*s13*s23^3*s12-252*s14^2*d*s13*s23^3*s34-4*d^2*s24*s23^2*s34^4+24*s14^2*d^2*s24^3*s23^2+90*s14*d*s13^2*s23^2*s12*s34-24*s14*d*s24*s13*s23*s34^3+24*s14^2*d^2*s23^2*s12^3+108*s14^2*s24^2*s12^2*s34-48*s14^2*s13^2*s23*s12^2-30*s14^2*d*s24^3*s12^2+264*s14^3*s23^3*s34+8*s14^2*d^2*s24^3*s23*s34-30*s14*d^2*s24^3*s13*s12^2+138*s14*s13^2*s23^3*s34+39*s14*d*s13^4*s23^2-36*s14^2*s13^2*s23*s12*s34-63*s14*d*s24^2*s23*s12*s34^2-36*s14^2*d*s24^3*s12*s34-12*s14^2*s23*s12*s34^3+72*s14^2*d^2*s24^2*s23^2*s12-3*s14^2*d*s12^2*s34^3-18*s14*d*s24^2*s13^2*s23^2-s14*d^2*s12^6+120*s14*s24^3*s13*s23*s12+2*s14*s24^3*s23^3-24*s14*d^2*s24^3*s13*s12*s34+12*s14*s24^5*s13+6*s14*s24^2*s23^3*s12+6*s14^2*s24^2*s34^3-18*s14*d^2*s24*s13^2*s23*s12*s34-9*s14^2*d*s13^2*s12^2*s34+60*s14*s24*s12^2*s34^3-48*s14^2*s24^2*s23*s34^2-96*s14^2*d*s24^2*s23*s12^2-24*s14*d*s13*s23*s12*s34^3-63*s14*d*s24^2*s13^2*s23*s34-48*s14^2*s24*s23^3*s34-84*s14^3*s24^2*s23^2-3*s14*d^2*s24*s13^3*s23^2-36*s14^2*d*s24*s23^3*s12-s14*d^2*s12^3*s34^3+128*s14^4*s23^3-96*s14^2*s24*s13^2*s23*s12-3*s14^2*d*s24^5+42*s14*s23*s12^3*s34^2+15*s14*d*s24^4*s23*s12-18*s14^2*d^2*s13^2*s23^2*s34-24*s14*d*s24^3*s13^2*s12+44*s14^2*d*s13*s23^4+s14*d*s23^3*s12^3-96*s14^2*s24^2*s13*s23*s34-216*s14*s13*s23^2*s12*s34^2+180*s14*s24*s13^2*s12^2*s34-6*s14*d^2*s24*s13^2*s23^2*s12+15*s14*d*s24^2*s12^4-24*s24*s13^4*s23^2-48*s14^2*s24^2*s13^2*s23-12*d^2*s24*s13*s23^2*s12*s34^2-3*s14*d^2*s24^2*s23^2*s34^2+84*s14*s13*s23*s12^3*s34-30*s14^2*d*s24^2*s23*s12*s34-6*s14*d^2*s24^2*s13*s23^2*s34-28*s14^3*d^2*s24*s23^2*s12-36*s13^2*s23^2*s12^2*s34+30*d*s13*s23^2*s12^2*s34^2-96*s24*s13*s23^2*s34^3+156*s14*d*s13^3*s23^2*s34-6*s14*d*s12^4*s34^2-126*s14*d*s24*s13*s23*s12^2*s34+12*s14*s24*s12*s34^4-30*s14*d^2*s24^3*s23*s12^2-10*s14^2*d*s24^3*s13*s23-s14*d^2*s24^6-126*s14^2*d*s13^2*s23^3-36*s14*d*s24^2*s12^2*s34^2+30*s14*d*s24^2*s23*s12^3-60*s14^3*s24^2*s23*s34-2*s14^3*d^2*s23^2*s34^2-3*s14*d*s13*s23^3*s12^2+120*d*s24*s13^2*s23^2*s34^2+180*s14*s24^2*s13*s23*s12^2+12*s14*d*s24^3*s23^2*s12-6*s14*d*s24*s13^4*s23-8*s14*d*s13^3*s12^3-36*s24^2*s13^2*s23^2*s34-36*s14^4*d*s23^2*s12+36*s14*s24*s13*s23^3*s34-9*s14*d^2*s13^2*s23*s12^2*s34-9*s14*d^2*s24^2*s13*s12*s34^2-3*s14*d^2*s13^2*s23^2*s12^2+18*s14*s24*s13^2*s23^3-4*s14^3*d^2*s13*s23^2*s34-12*s14^2*s23^4*s12-120*s13^3*s23^2*s34^2+12*s14*s24^5*s34-12*s14*d*s24^3*s23*s12*s34-120*s14^3*s24*s13*s23*s12-16*s14^3*d*s23^2*s12*s34+8*s14^2*d^2*s23*s12^4-12*s14*d^2*s24*s12^3*s34^2+11*s14*d^2*s13^3*s23^3+6*s14^2*s24^2*s13^3+18*s14*d^2*s13*s23^3*s12*s34-12*s14^3*s13^2*s23*s12-6*s14^2*d*s24*s13^3*s12+30*s14*s24^4*s12^2-33*s14*d*s24*s23^3*s34^2+84*s14^4*s24*s23^2-54*s14^2*d*s24^2*s13*s12^2+18*s14^2*s24^2*s13*s34^2+6*s14*s12^2*s34^4-3*s14^2*d*s12^5+72*s14^3*d*s24*s23*s12^2+60*s14*s24^2*s13^3*s12-3*s14*d^2*s23*s12^2*s34^3-30*s14^2*d*s24*s13*s23*s12^2))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (1/2*Den(s14)*Den(-2+d)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(540*s14*s13^2*s23*s34^3+16*s14*d*s24^3*s34^3+48*s14^3*s23*s34^3-618*s14*d*s24*s13^2*s23*s34^2-54*s14^2*s13*s12^2*s34^2-24*d^2*s24*s13*s34^5+30*d^2*s24*s13^2*s23*s34^3+8*s24^3*s13^3*s23-18*d^2*s24^2*s13*s12^2*s34^2-36*s14*s13^5*s12+48*s14*d*s24^2*s13^3*s12+60*s14*d^2*s24*s13*s23*s12*s34^2-12*s13^2*s12^4*s34-90*d*s24*s13*s23*s34^4+12*s14^2*s13*s23*s12^3+15*d^2*s13^4*s23*s34^2-256*s14^2*d*s13*s23*s34^3-150*s14*s13^4*s34^2+240*d*s13^4*s12*s34^2-120*d^2*s24*s13^3*s12*s34^2-30*s14*d^2*s24*s13^2*s34^3+126*s14*s24*s13^4*s23-7*d^2*s13^6*s34-132*s14^2*s23^2*s12*s34^2-360*s14*s13^3*s12*s34^2+108*s14*s24*s13*s23*s12^2*s34+540*s14^2*s24*s13*s23*s34^2-4*d^2*s24*s13^3*s12^3+12*s14^2*s23*s12^3*s34+6*s14^2*d^2*s13*s23^2*s12^2+48*d*s24^3*s13^2*s12*s34-90*d*s13*s23*s12*s34^4-30*d^2*s13^4*s12^2*s34-36*s14*s24^2*s12^2*s34^2+180*s14^2*s24*s23*s34^3+105*s14*d*s13^2*s34^4-36*s14*s12*s34^5-64*s14^2*d*s13^4*s23-18*s14*d*s13*s23*s12^3*s34-60*d^2*s13^2*s12*s34^4+192*s24*s13^3*s23*s12*s34+20*s14*d^2*s24*s23*s34^4+144*s14*d*s13*s23^2*s12*s34^2-48*s14^2*s24*s23^2*s12*s34+144*s14*d*s24*s13^2*s12^2*s34-24*s24^2*s34^5+9*s14^2*d*s24*s12^2*s34^2-24*s24^2*s13^3*s12^2-12*s14^2*d^2*s24*s23^2*s34^2+9*d^2*s24^2*s13*s23*s12*s34^2+3*d^2*s23*s12^2*s34^4-36*s14^2*d*s23^3*s34^2-24*s14^2*d^2*s24*s13*s23^2*s34-144*s14*s13^3*s23^2*s34-90*d*s13^2*s23*s34^4-36*s14^2*s24*s13*s12^2*s34+540*s14^2*s13*s23*s12*s34^2+60*s14*d*s24*s12*s34^4+64*d*s24^3*s13*s34^3-4*d^2*s12*s34^6+12*s14^2*d^2*s23^3*s12*s34+48*d*s24*s12*s34^5-9*s14*d*s23*s12^3*s34^2+240*d*s13^3*s12^2*s34^2+504*s14*s13*s23*s12*s34^3-6*s14^2*s13^2*s12^3+270*s14*s24^2*s13^2*s23*s34-6*d*s13^3*s23*s12^3-192*s24^2*s13*s12*s34^3-72*d*s13*s23*s12^2*s34^3-21*d^2*s13^5*s34^2+16*s14*d*s24^3*s13^3-24*s14*s24^3*s13^2*s12+30*s14*d^2*s13*s23*s12^2*s34^2-84*s14^3*d*s23^3*s34-60*d^2*s13^2*s12^2*s34^3+24*d^2*s24*s13*s23*s12*s34^3-12*s14*d^2*s24*s23^2*s34^3+24*s24*s13^3*s23*s12^2+3*d^2*s24^3*s13*s23*s34^2-18*d*s24^2*s13^3*s23*s12+48*s14*d*s24*s12^2*s34^3+144*s14^3*s13*s23*s34^2-300*s14^2*d*s24*s13^2*s23*s34+24*d*s12^2*s34^5-360*s14*s24*s13^3*s34^2+24*s23*s12*s34^5+288*s24*s13^2*s23*s12*s34^2+3*d^2*s24*s23*s34^5-12*s14*s24^2*s13^2*s23^2-36*s14*d^2*s24*s13*s23^2*s34^2-72*s14^2*d*s24*s23*s12*s34^2-35*d^2*s13^3*s34^4-6*d*s24^3*s23*s34^3-24*s24^2*s13^5-3*s14*d^2*s13^2*s12^3*s34+288*d*s24^2*s13^2*s12*s34^2+15*d^2*s24*s13^4*s23*s34+30*s14^2*d*s13^3*s34^2-144*s14*s13^2*s23^2*s12*s34+504*s14*s24*s13*s23*s34^3+270*s14*s13^4*s23*s34-2*s14^3*d*s24^2*s23^2-240*s24*s13^2*s34^4-96*s14^3*s23^2*s12*s34+108*s14^2*d*s24*s13^2*s23^2-12*s14^4*d*s24*s23^2-48*s24*s13*s12^3*s34^2+48*d*s24*s13^5*s12-24*s14^3*d*s13^2*s23*s12+24*s14^3*s24*s23*s12*s34-8*s14^3*d^2*s24*s23^3-35*d^2*s13^4*s34^3+12*s14^4*s23^2*s12+64*d*s13*s12^3*s34^3+216*s14^2*d*s13*s23^2*s12*s34+240*d*s24*s13^4*s34^2-15*s14*d^2*s24*s13*s34^4-6*s14*d^2*s23^2*s12^2*s34^2+30*s14*d*s23^2*s34^4-4*d^2*s24^3*s12*s34^3+30*d^2*s13^3*s23*s12*s34^2+54*s14*s24^2*s23*s12*s34^2-72*s14^2*s24*s13*s34^3-9*s14*d*s24^3*s13^2*s23+12*d^2*s13*s23*s12^2*s34^3-3*s14*d^2*s24^3*s13^2*s34+20*s14^3*s24*s23^3+9*s14^2*d*s24^2*s12*s34^2-468*s14^2*s13^2*s23^2*s34-195*s14*d*s13*s23*s12^2*s34^2+36*s14^2*s24*s23*s12^2*s34-6*s14*s13^2*s12^4+108*s14^2*d*s13^2*s23^2*s12-4*d^2*s24^3*s13^3*s12+96*s14^2*s13^4*s23+24*d*s24^2*s13^5-30*d^2*s13*s12^2*s34^4-3*s14*d^2*s24*s13^3*s12^2+12*s14^2*d^2*s24*s23^3*s34-108*s14^2*s24*s13^2*s12*s34+24*s14^2*d^2*s24*s13^2*s23*s34+10*s14*d^2*s23*s34^5+24*s24^2*s23*s34^4-18*d*s24^3*s13*s23*s34^2+32*s14^3*d*s24*s13*s23^2+3*d^2*s24^2*s13^3*s23*s12+24*s14^2*s23^3*s34^2-256*s14^2*d*s13^3*s23*s34+180*s14^2*s13^3*s23*s12-54*s14*d*s24^2*s13*s23*s12*s34+16*s14*d*s12^3*s34^3-12*s14^2*s13*s12^3*s34+240*d*s24^2*s13^3*s34^2-90*d*s24*s13^4*s23*s34-4*d^2*s24*s34^6+20*s14*d^2*s13^4*s23*s12-108*s14^2*s13^2*s12*s34^2+144*s14*d*s24*s13*s23^2*s34^2+18*s14*d*s24^2*s13^2*s12^2+42*s14*d*s13^5*s34-144*s14*s13*s23^2*s34^3+18*s14^2*d*s24^2*s23^2*s34-72*d^2*s24^2*s13^2*s12*s34^2-240*s24^2*s13^2*s34^3+8*s14^2*d^2*s23*s12*s34^3+48*s14*d*s24^3*s13*s34^2+12*s14^2*s24^3*s23*s34+30*s14*d*s13^4*s12^2-24*s12^2*s34^5-180*d*s13^3*s23*s12*s34^2-12*s14*d^2*s24^2*s13*s34^3-48*s14*s24^3*s13*s12*s34-36*s14*s24*s34^5-48*s14*s24*s13*s23^2*s12*s34-24*s14^2*d^2*s13*s23^2*s12*s34+96*s14^2*s23*s12^2*s34^2-6*s14*d^2*s13^4*s23^2+12*s14^2*d^2*s13*s23^3*s12-6*s14^2*s13^5+90*s14*s24^2*s13^3*s23-12*s24^4*s13^2*s34+270*s14*s13*s23*s34^4+270*s14*s13^2*s23*s12^2*s34-65*s14*d*s13^3*s23*s12^2-252*s14*s24^2*s13*s12*s34^2-60*s14^2*s13^3*s34^2+15*d^2*s24*s13*s23*s34^4+160*s13^3*s23*s34^3+18*s14^2*d*s24^2*s13*s23^2+12*s14^3*s23*s12^2*s34-120*s24^2*s13*s34^4-18*s14*d^2*s13^2*s12^2*s34^2+96*d*s13^5*s12*s34+24*d*s24^2*s34^5-6*d*s23*s12^3*s34^3-6*s14*d^2*s13*s34^5+120*s14*d^2*s24*s13^2*s23*s34^2+9*d^2*s24*s13^2*s23*s12^2*s34+72*d*s24^2*s13*s12^2*s34^2-100*s14^2*d*s24*s13^3*s23-180*d*s24*s13^2*s23*s34^3-s14*d^2*s13^3*s12^3-16*s24*s12^3*s34^3-12*d^2*s24^3*s13^2*s12*s34-24*s14*s24*s13^2*s12^3+480*d*s24*s13^3*s12*s34^2+6*d^2*s13^5*s23*s34+180*s14*d*s13^2*s23^2*s34^2-192*s24^2*s13^3*s12*s34+32*s14^3*d*s13*s23^2*s12-72*s14^2*d*s13*s23*s12^2*s34+54*s14^2*d*s24*s13*s12*s34^2+60*s14*d*s24*s13^4*s12-24*s14*s24*s13^2*s23^2*s12-96*s13*s12*s34^5-96*s24*s13^5*s34+64*d*s13^3*s12^3*s34+12*s14^2*d^2*s13^2*s23^3+10*s14*d^2*s24^2*s23*s34^3-36*s14*d^2*s13*s23^2*s12*s34^2-9*s14*d^2*s24*s13^2*s12^2*s34+3*s14^2*d*s13^2*s12^3+15*d^2*s13*s23*s12*s34^4-24*s14*s24^2*s13*s23^2*s34-30*d^2*s24^2*s13^4*s34+130*s14^3*d*s23^2*s34^2-18*d*s24^2*s13^4*s23-4*d^2*s24*s13^6-9*s14*d*s24^3*s23*s34^2-12*s14^2*s24^3*s13*s34-36*s14*s24*s13^5-12*s14*d^2*s13^3*s23^2*s12+216*s14^2*d*s24*s13*s23^2*s34-6*s14^2*s34^5+27*s14^2*d*s24^2*s13^2*s34-18*s14^2*s24^2*s13^2*s12+32*s14^3*d*s24*s23^2*s34+24*s24^2*s23*s12*s34^3+48*s14*d*s24^2*s12*s34^3+504*s14*s24*s13^3*s23*s34-48*s24*s13^4*s12^2+48*s14*d*s13*s12^3*s34^2-412*s14*d*s13^3*s23*s12*s34-72*s14^2*d*s24*s13^2*s23*s12-84*s14*s24*s13^3*s12^2+16*d*s24*s12^3*s34^3-16*s24^3*s34^4+240*s24*s13^3*s23*s34^2+24*s14*d*s24*s13^5+24*s24*s23*s12^2*s34^3-72*d*s24^2*s13^3*s23*s34-80*d^2*s13^3*s12*s34^3-72*s14^2*d*s24^2*s13*s23*s34+12*s14^3*s13*s23*s12^2-120*d*s13^3*s23*s34^3-84*s14*s24^3*s13^2*s34+120*d*s24^2*s13*s34^4-96*s13^5*s12*s34-24*s14^3*d*s23*s12*s34^2+7*s14*d*s13^6-6*d^2*s13^5*s12^2-4*s24^4*s34^3+12*d*s24^4*s13^2*s34-12*s14^3*d*s23^3*s12-216*s14^3*s13^2*s23^2-9*s14*d^2*s24^2*s13^2*s12*s34+8*s23*s12^3*s34^3-480*s24*s13^2*s12*s34^3+54*s14*s24^2*s13^2*s23*s12-60*s14^2*s13^2*s34^3-12*s14*s13*s12^4*s34-300*s14^2*d*s13^2*s23*s12*s34+60*s14^3*s24*s23*s34^2+12*s14^2*d^2*s24*s13*s23^3-3*d^2*s24^4*s13*s34^2+36*s14^2*d*s24*s13*s34^3+120*s14*d*s13*s12^2*s34^3-192*s24*s13^3*s12^2*s34-4*d^2*s13^4*s12^3+6*d^2*s13*s23*s34^5-72*s14^3*d*s13^2*s23*s34+96*s14^2*s23*s34^4-192*s14*s24^2*s13*s34^3-24*s14*s24*s23^2*s12*s34^2-84*s14^4*s23^2*s34+28*d*s13*s34^6+48*d*s24*s13^4*s12^2-18*s14*d*s24^3*s13*s23*s34-64*s13^3*s12^3*s34+9*s14^2*d*s13^3*s12^2+6*d^2*s24*s13^4*s23*s12+144*s13^2*s23*s12^2*s34^2-3*s14*d^2*s12^2*s34^4+48*s14*d*s23^2*s12*s34^3+126*s14*s13^4*s23*s12+96*d*s24*s13^5*s34-24*s14*d^2*s24*s13*s12*s34^3-132*s14^2*s24*s13^2*s23^2+3*d^2*s24*s13^5*s23+96*d*s13*s12*s34^5-24*s14*d^2*s13*s23^2*s34^3+24*s24^2*s13^4*s23-6*d^2*s24^2*s12^2*s34^3+48*d*s24*s13^2*s12^3*s34-d^2*s13^3*s12^4-252*s14*s24*s13*s12^2*s34^2-26*s14^2*d^2*s13^3*s23^2+24*s14*d*s24*s34^5-156*s14^2*s23^2*s34^3-6*d*s13^6*s23-84*s14^4*s13*s23^2-80*d^2*s24*s13^3*s34^3-130*s14*d*s24*s23*s12*s34^3-3*d^2*s13*s12^4*s34^2-78*s14^2*d^2*s13*s23^2*s34^2-12*s14*s24^4*s13*s34-48*s24^3*s13*s12*s34^2+96*s13^3*s23*s12^2*s34-48*s14*s13^4*s12^2+120*s13^4*s23*s12*s34+120*s14*d*s13*s12*s34^4+60*s14^3*s24*s13^2*s23-16*s24^3*s13^4-18*d*s24^2*s23*s34^4-4*d^2*s13^6*s12+36*s14^2*s24*s13*s23*s12^2+108*s14^2*d*s23^2*s12*s34^2-21*d^2*s13^2*s34^5-72*d^2*s24*s13^2*s12^2*s34^2-60*s14*s13^5*s34+50*s14*d^2*s13*s23*s34^4+120*s14*d*s24^2*s13^3*s34+10*s14*d^2*s24^2*s13^3*s23-12*d^2*s24^2*s12*s34^4+12*d^2*s24^2*s13*s23*s34^3-288*s14*s13^2*s12^2*s34^2-195*s14*d*s24^2*s13*s23*s34^2+384*s14^2*s13*s23*s34^3+3*d^2*s13^4*s23*s12^2-4*s24^4*s13^3+18*s14*s13^2*s23*s12^3+7*s14*d*s34^6+3*d^2*s13*s23*s12^3*s34^2+72*s24^2*s13^2*s23*s12*s34-27*s14*d*s24*s13^2*s23*s12^2+27*s14^2*d*s13*s12^2*s34^2-54*d*s24*s13^2*s23*s12^2*s34+48*s24*s23*s12*s34^4+12*s14^2*d^2*s24*s13*s23^2*s12-48*s14*s13^3*s23^2*s12-24*s14*s24^3*s12*s34^2-28*s14*s12^3*s34^3+4*d*s12^4*s34^3+240*s14*d*s24*s13^3*s12*s34-24*d^2*s24^3*s13^2*s34^2-240*s24*s13^4*s12*s34-6*d*s23*s34^6+16*d*s12^3*s34^4-30*s14^2*s13*s34^4+90*s14*s24^2*s23*s34^3-240*s24^2*s13^3*s34^2-18*s14^2*s24*s12^2*s34^2+240*d*s24^2*s13^2*s34^3-100*s14^2*d*s24*s23*s34^3+36*s14*d*s24^2*s13*s12^2*s34-618*s14*d*s13^2*s23*s12*s34^2+36*s14^2*s24^2*s23*s12*s34+3*s14*d*s13^2*s12^4+30*d^2*s13^2*s23*s12*s34^3+6*s14^2*d^2*s23^2*s12^2*s34+54*s14*s24*s23*s12^2*s34^2+18*s14*d*s13^2*s23^2*s12^2+3*d^2*s13^5*s23*s12-36*s14*s23^2*s34^4-360*s14*s24*s13^2*s34^3+260*s14^3*d*s13*s23^2*s34-30*s14*d^2*s13^3*s12*s34^2+120*s14*d*s24*s13^4*s34-64*s14^2*d*s23*s34^4+20*s14*d^2*s24*s13^4*s23+20*s14*d^2*s24*s23*s12*s34^3+12*s14*d*s24*s12^3*s34^2-18*d*s23*s12*s34^5+8*s14^3*d^2*s23^2*s12*s34-20*s14*d^2*s13^3*s34^3+240*s14*d*s13^2*s12*s34^3-4*s12^4*s34^3-18*d*s13*s23*s12^3*s34^2-240*s13^3*s12^2*s34^2+24*s13^2*s23*s12^3*s34+100*s14*d^2*s13^2*s23*s34^3-576*s14*s24*s13^2*s12*s34^2-24*s14*s13*s23^2*s12^2*s34-24*d^2*s13^2*s12^3*s34^2+180*s14^2*s24*s13^3*s23-48*s24*s12*s34^5-16*s12^3*s34^4-65*s14*d*s23*s12^2*s34^3-72*s24^2*s13^2*s12^2*s34-48*s14^3*d*s13*s23*s12*s34+8*s23*s34^6-72*d*s24^2*s13*s23*s34^3-390*s14*d*s24*s13*s23*s12*s34^2-470*s14*d*s13^3*s23*s34^2+288*d*s24*s13^2*s12^2*s34^2+8*s13^3*s23*s12^3-24*s14^2*s24^2*s13*s23^2-18*s14^2*s13^3*s12^2+30*s14*d^2*s24^2*s13*s23*s34^2-48*s14*s24*s13*s12^3*s34+72*s24*s13*s23*s12^2*s34^2+180*s14*s24*s13^3*s23*s12-240*s24*s13^4*s34^2-64*s13*s12^3*s34^3-24*s14*d^2*s24*s13^3*s12*s34-54*d*s24^2*s13*s23*s12*s34^2+16*d*s24^3*s13^4+8*s13^6*s23+36*s14^2*d*s24*s13*s23^2*s12-24*s14*d^2*s13^3*s23^2*s34-54*s14^2*s24^2*s13^2*s34+18*s14*d*s24^2*s23^2*s34^2-3*s14*d^2*s24^2*s34^4+9*s14^2*d*s24^2*s13^2*s12-4*s14^3*d*s24*s23^2*s12+8*s24^3*s23*s34^3+120*s14*d^2*s13^2*s23*s12*s34^2-28*s14*s24^3*s13^3+4*d*s24^4*s13^3+30*s14^2*d*s13^2*s34^3+126*s14*s24*s23*s34^4-2*s14^3*d*s23^2*s12^2-d^2*s34^7+120*s14*d*s13^3*s12^2*s34-192*s24*s13*s12^2*s34^3-12*d^2*s24^2*s13^4*s12+6*s14^2*d*s24^3*s13*s34-48*s14^3*d*s24*s13*s23*s34+144*s24^2*s13^2*s23*s34^2-180*d*s13^2*s23*s12*s34^3+48*s14^3*s13^3*s23+240*d*s24*s13^2*s34^4-48*s24*s13^5*s12-144*s14*s24*s13^2*s23^2*s34+12*d^2*s24^2*s13^3*s23*s34-8*s14^3*d^2*s23^4+384*s14^2*s13^3*s23*s34-100*s14^2*d*s13^3*s23*s12-36*s14^2*s24^2*s13*s12*s34-240*s13^4*s12*s34^2-28*s13*s34^6+48*s14*d*s24*s13^3*s23^2-30*s14*d^2*s24*s13^3*s34^2+80*s14*d^2*s13^3*s23*s12*s34+24*s24^3*s13^2*s23*s34+144*s14*d*s24^2*s13^2*s12*s34-6*d*s24^3*s13^3*s23-16*d^2*s24^3*s13^3*s34+12*d*s13^2*s12^4*s34+15*s14^2*d*s13*s34^4-144*d*s24*s13*s23*s12*s34^3-18*s14^2*s24^2*s12*s34^2-150*s14*s13^2*s34^4+390*s14^2*d*s13^2*s23^2*s34+24*s14*d*s12*s34^5-48*s14*s24*s23^2*s34^3-240*s24*s13*s12*s34^4-132*s14^2*s13^2*s23^2*s12+120*s14*d*s13^4*s12*s34-14*s14^3*d^2*s13^2*s23^2+24*s14^2*d^2*s13*s23^3*s34-36*s14^2*d*s23*s12^2*s34^2-3*s14*d^2*s24^2*s13^4+12*s14^3*s24^2*s13*s23-12*s14*s23^2*s12^2*s34^2+24*s14^2*d^2*s13^2*s23*s12*s34-180*s14*s24*s13*s34^4+105*s14*d*s13^4*s34^2+540*s14*s24*s13^2*s23*s12*s34+16*d*s24^3*s34^4+130*s14^2*d*s23^2*s34^3+120*s13^2*s23*s34^4+48*s14^2*d^2*s13^2*s23*s34^2-64*s24^3*s13*s34^3+54*s14^2*d*s13^2*s12*s34^2-12*d^2*s24*s13^2*s12^3*s34-103*s14*d*s23*s12*s34^4-6*s14*d^2*s24^2*s13^2*s23^2-24*s14^2*s24^2*s23^2*s34+180*s14*d*s24^2*s13^2*s34^2+24*s14*d*s13^5*s12-84*s14*s13^2*s12^3*s34-12*d^2*s24*s12^2*s34^4-84*s14^3*d*s13*s23^3+4*d*s24^4*s34^3+24*d*s24^2*s13^3*s12^2-28*s14*s24^3*s34^3+6*s14^2*d*s13*s12^3*s34-36*d*s24*s13^4*s23*s12+10*s14*d^2*s13^5*s23+240*s14*d*s24*s13*s12*s34^3+50*s14*d^2*s13^4*s23*s34-d^2*s13^7+d^2*s24^3*s23*s34^3+6*d^2*s24*s23*s12*s34^4-60*s14*s13*s34^5+30*s14*d*s12^2*s34^4-432*s14^3*s13*s23^2*s34+48*s14*d*s13^2*s12^3*s34+126*s14*s23*s12*s34^4-48*s24^2*s13^4*s12-288*s14*s24^2*s13^2*s34^2+72*s24*s13^2*s23*s12^2*s34+54*s14^2*d*s24*s13^2*s34^2-12*d^2*s24*s13^5*s12-18*s14^2*s24*s13^2*s12^2-12*s14^2*d^2*s24*s13^2*s23^2-12*s14*d^2*s24*s23^2*s12*s34^2+130*s14^2*d*s13^3*s23^2-54*d*s24^2*s13^2*s23*s12*s34+4*d*s13^3*s12^4-384*s14*s24*s13*s12*s34^3-60*d^2*s24*s13^4*s34^2-60*d^2*s24*s13^4*s12*s34-16*d^2*s13*s12^3*s34^3-180*s14*s13^4*s12*s34+384*s14^2*s24*s13*s23*s12*s34-9*s14*d^2*s24*s13*s12^2*s34^2-28*s14*s13^3*s12^3+16*d*s13^4*s12^3+18*s14*d*s23^2*s12^2*s34^2+240*s13^2*s23*s12*s34^3-108*d*s24^2*s13^2*s23*s34^2+120*s14*d*s24*s13*s34^4+16*d*s24^3*s12*s34^3-7*d^2*s13*s34^6+192*d*s24*s13*s12^2*s34^3+24*d*s13^5*s12^2-60*d^2*s13^3*s12^2*s34^2+54*s14^2*d*s24*s13^2*s12*s34-96*s13^2*s12^3*s34^2-12*d^2*s24*s12*s34^5-8*s14^3*d^2*s23^3*s12+48*s14*d*s24*s23^2*s34^3+240*d*s13^2*s12^2*s34^3-12*d^2*s24^3*s13*s12*s34^2+12*d^2*s13^3*s23*s12^2*s34+15*d^2*s13^4*s23*s12*s34+d^2*s13^3*s23*s12^3+4*d*s34^7+24*s13^5*s23*s12-288*s24*s13^2*s12^2*s34^2+72*d*s24^2*s13^2*s12^2*s34+96*s24^2*s13*s23*s34^3-390*s14*d*s24*s13^2*s23*s12*s34-6*s14*s12^4*s34^2-6*s14^2*s24^3*s13^2-3*s14*d^2*s24*s12^2*s34^3-18*d*s13^2*s23*s12^3*s34-18*d*s24*s23*s34^5-3*s14*d^2*s24*s13^5+68*s14^3*s13*s23^3+24*s13*s23*s12^3*s34^2-252*s14*s24^2*s13^2*s12*s34-48*s14*s24*s13^3*s23^2-4*d^2*s12^3*s34^4+d^2*s23*s34^6-103*s14*d*s24*s23*s34^4+15*s14^2*d*s13^4*s34-264*s14^2*s24*s13*s23^2*s34+540*s14*s24*s13*s23*s12*s34^2-24*s14^2*s23^2*s12^2*s34+240*d*s13^2*s12*s34^4-192*s14*s13^3*s12^2*s34+24*s14^2*d^2*s13*s23*s12*s34^2+120*d*s13^4*s12^2*s34-48*d^2*s24*s13^3*s12^2*s34-48*s24*s12^2*s34^4+3*s14^2*d*s12^3*s34^2-130*s14*d*s24*s13^3*s23*s12+48*s24*s13^4*s23*s12+18*d^2*s13^2*s23*s12^2*s34^2+108*s14^2*d*s24*s23^2*s34^2-d^2*s12^4*s34^3-18*d*s23*s12^2*s34^4+12*s14^2*d^2*s24*s23^2*s12*s34+144*s14*d*s24*s13^2*s23^2*s34-36*s14^2*s24*s12*s34^3-12*s14^2*d*s23^3*s12*s34-12*s14*s24^2*s23^2*s34^2-6*s14*d^2*s24*s12*s34^4+15*d^2*s13^2*s23*s34^4+54*s14*s23*s34^5-16*d^2*s24^3*s13*s34^3-64*s24^3*s13^3*s34-40*s14^4*d*s23^3+96*d*s24*s13*s34^5+4*d*s13^7-18*d*s24^3*s13^2*s23*s34+30*d^2*s24*s13^3*s23*s34^2+32*s14^2*d^2*s13*s23*s34^3+3*d^2*s24*s23*s12^2*s34^3-90*d*s13^4*s23*s34^2+192*s14^2*s13*s23*s12^2*s34-27*s14*d*s24*s23*s12^2*s34^2-108*s14^2*s24*s13*s12*s34^2+540*s14*s13^3*s23*s34^2+24*s14^2*d^2*s24*s13*s23*s34^2+90*s14*s23*s12^2*s34^3-3*s14*d^2*s24^2*s13^3*s12-180*s14*s24*s13^4*s34+d^2*s13^6*s23-3*s14*d^2*s24*s34^5+24*s14*d*s24*s13*s12^3*s34-36*s14*s13^4*s23^2+36*s14^2*d*s13*s12*s34^3-60*d^2*s13^4*s12*s34^2+240*d*s24*s13*s12*s34^4-12*s14*s13^2*s23^2*s12^2+240*s14*d*s24*s13^2*s34^3-24*s14^3*d*s13^3*s23-468*s14^2*s13*s23^2*s34^2+18*s14^2*d*s13*s23^2*s12^2+360*s14*d*s24*s13^2*s12*s34^2+36*s14*d*s13*s23^2*s12^2*s34-360*s14*s13^2*s12*s34^3+84*d*s13^2*s34^5+16*d*s24*s13^3*s12^3-6*s14^2*s24^3*s34^2-24*s14*s24*s12^3*s34^2-120*d^2*s24*s13^2*s12*s34^3+16*d*s13^6*s12-16*d^2*s13^3*s12^3*s34-d^2*s24^4*s13^3-384*s14*s24*s13^3*s12*s34-65*s14*d*s24^2*s23*s34^3-2*s14^3*d^2*s23^2*s12^2+24*s24*s13^5*s23+20*s14*d^2*s24*s13^3*s23*s12+18*s14^2*d*s24*s13*s12^2*s34+3*d^2*s24^2*s13^4*s23-300*s14^2*d*s13*s23*s12*s34^2+120*d*s24^2*s13^4*s34-24*s24^2*s12^2*s34^3+12*s14^2*s24^3*s13*s23-s14*d^2*s13^6+192*d*s24*s13^3*s12^2*s34+192*s24*s13*s23*s12*s34^3-36*s14^2*d*s24^2*s13^2*s23-48*s24*s13^2*s12^3*s34+8*s14^3*d^2*s24*s23^2*s34+60*s14^3*s23*s12*s34^2-12*s24^4*s13*s34^2-4*d^2*s24^3*s13^4+12*s14*d*s24^3*s12*s34^2-16*s13^6*s12-84*s13^2*s34^5-72*s14*s24^2*s13*s12^2*s34+756*s14*s13^2*s23*s12*s34^2+48*s14*d*s13^3*s23^2*s12-3*s14*d^2*s13*s12^3*s34^2+3*s14^2*d*s24^3*s13^2-108*d*s13^2*s23*s12^2*s34^2+48*s13*s23*s34^5+120*s14^3*s13*s23*s12*s34-36*s14*d^2*s24*s13^2*s23^2*s34+36*s14^2*d*s24*s23^2*s12*s34-3*s14*d^2*s24^2*s12*s34^3+36*d^2*s24*s13^2*s23*s12*s34^2+30*s14*d*s24^2*s34^4+6*s14^2*d^2*s24^2*s13*s23^2-156*s14^2*s13^3*s23^2+27*s14^2*d*s24^2*s13*s34^2-18*d*s24*s23*s12^2*s34^3+96*s24^2*s13^3*s23*s34+180*s14*d*s13^2*s12^2*s34^2+3*s14^2*d*s34^5-24*d^2*s13^5*s12*s34-180*d*s24*s13^3*s23*s34^2-24*s14^3*d*s24*s23*s34^2-192*s14*s24^2*s13^3*s34-300*s14^2*d*s24*s13*s23*s34^2+10*s14*d^2*s13^3*s23*s12^2+144*s14^3*s13^2*s23*s34-36*s14^2*s24*s13^3*s12-6*s14*s24^4*s34^2+8*s14^2*d^2*s24*s13^3*s23+36*s14^2*d*s24*s13^3*s34+3*d^2*s24^3*s13^2*s23*s34+d^2*s23*s12^3*s34^3+180*s14*s24*s23*s12*s34^3-9*s14*d*s13^2*s23*s12^3+6*s14*d*s24^4*s13*s34-36*s14*d^2*s24*s13^2*s12*s34^2-12*s14*d^2*s13*s23^2*s12^2*s34+480*d*s24*s13^2*s12*s34^3+8*s14^2*d^2*s23*s34^4+120*s14^3*s24*s13*s23*s34+54*s14*s24*s13^2*s23*s12^2+270*s14*s24^2*s13*s23*s34^2+36*s14^4*d*s23^2*s34-180*s14*s13*s12*s34^4-6*s14*d^2*s24*s13^4*s12+140*s14*d*s13^3*s34^3-36*d*s13^5*s23*s34-36*s14*d^2*s13^2*s23^2*s34^2+8*s14^3*d^2*s13*s23^2*s12-60*d^2*s24*s13*s12*s34^4-320*s13^3*s12*s34^3-96*s24^3*s13^2*s34^2-s14*d^2*s34^6-3*s14*d^2*s13^5*s12+36*s14*s24^3*s13*s23*s34-103*s14*d*s13^4*s23*s12-48*s14*s23^2*s12*s34^3-60*d^2*s24^2*s13^3*s34^2-264*s14^2*s13*s23^2*s12*s34+36*s14*d*s24*s23^2*s12*s34^2-100*s14^2*d*s23*s12*s34^3-24*s13^5*s12^2-d^2*s24^4*s34^3-36*d*s24*s23*s12*s34^4+16*s14^3*d^2*s13*s23^3-24*s14^3*d*s24*s13^2*s23+6*s14^2*d^2*s24^2*s23^2*s34-47*s14*d*s13^5*s23-192*s14*s13*s12^2*s34^3+3*s14^2*d*s24^3*s34^2+144*s14*d*s24*s13*s12^2*s34^2-36*s14^2*d*s13^2*s23*s12^2+192*s14^2*s24*s23*s12*s34^2+576*s14^2*s13^2*s23*s34^2-3*s14*d^2*s24^3*s13*s34^2+36*s14^4*d*s13*s23^2-48*d^2*s24*s13*s12^2*s34^3+30*s14*d*s24^2*s13^4+20*s14^3*s23^3*s12+130*s14^3*d*s13^2*s23^2+6*s14*d*s13*s12^4*s34+18*d^2*s24^2*s13^2*s23*s34^2+240*d*s24*s13^4*s12*s34-12*s14^2*d*s13*s23^3*s12-15*s14*d^2*s13^4*s34^2+48*s14^2*s13*s23^3*s34+120*s14*d*s24^2*s13*s34^3-4*d^2*s24^3*s34^4-26*s14^2*d^2*s23^2*s34^3-6*s14^2*s12^3*s34^2-90*d*s13^4*s23*s12*s34-6*s14*s24^4*s13^2+48*d*s24^3*s13*s12*s34^2-72*d*s13^3*s23*s12^2*s34-12*s14^2*d^2*s13^2*s23^2*s12-48*s24^2*s12*s34^4+48*s14*d*s24^3*s13^2*s34+24*d^2*s24*s13^3*s23*s12*s34-4*s13^3*s12^4+36*s14^2*s24^2*s13*s23*s12+24*s13^4*s23*s12^2+36*s14^2*d*s13^3*s12*s34+120*d*s13*s12^2*s34^4+3*s14^2*d*s13^5+540*s14^2*s24*s13^2*s23*s34+504*s14*s13^3*s23*s12*s34-3*s14*d^2*s12*s34^5+16*d*s24^3*s13^3*s12-30*s14^2*s13^4*s34-16*s13^4*s12^3+72*s24^2*s13*s23*s12*s34^2-320*s24*s13^3*s34^3-24*s14*d^2*s24*s13*s23^2*s12*s34-27*s14*d*s24^2*s13^2*s23*s12+3*d^2*s13^2*s23*s12^3*s34-12*s13*s12^4*s34^2-54*d*s24*s13*s23*s12^2*s34^2-12*s14^2*d*s24*s23^3*s34+48*s14*d*s24*s13^3*s12^2+32*s14^2*d^2*s13^3*s23*s34-18*d^2*s24^2*s13^2*s12^2*s34+8*s14^3*d^2*s24*s13*s23^2-54*s14^2*s13^2*s12^2*s34-36*s14^2*d*s24^2*s23*s34^2+36*s14*d*s24^2*s13*s23^2*s34+18*s14^2*d*s24*s12*s34^3+12*s14^2*d^2*s23^3*s34^2-216*d*s24*s13^2*s23*s12*s34^2+9*s14^2*d*s24^2*s34^3+120*s24*s13^4*s23*s34+16*d*s12*s34^6-84*s14*s13*s12^3*s34^2-132*s14^2*s24*s23^2*s34^2+36*s14*d*s24*s13^2*s23^2*s12-84*s14*s24^2*s12*s34^3-12*d^2*s24*s13*s12^3*s34^2+8*s14^2*d^2*s13^4*s23+96*d*s24^3*s13^2*s34^2-412*s14*d*s24*s13^3*s23*s34-15*s14*d^2*s13^2*s34^4+18*s14*s24^3*s23*s34^2-96*s14^3*s24*s13*s23^2+3*s14*d*s24^4*s13^2+18*s14^2*d*s23^2*s12^2*s34+9*s14^2*d*s13^4*s12-48*s14^2*s24*s13*s23^2*s12+240*s13^3*s23*s12*s34^2-60*d^2*s24^2*s13^2*s34^3+8*s14^2*d^2*s24*s23*s34^3+390*s14^2*d*s13*s23^2*s34^2-24*s14^2*s13*s23^2*s12^2+12*d*s13*s12^4*s34^2+28*d*s13^6*s34+320*d*s24*s13^3*s34^3+9*s14^2*d*s24*s13^4-48*d^2*s24^2*s13*s12*s34^3+3*d^2*s24^2*s23*s34^4-96*s14*s24*s13^4*s12-15*s14*d^2*s13*s12*s34^4-12*s14^2*d^2*s23^2*s12*s34^2-72*s14^2*s13*s12*s34^3-216*s14^3*s23^2*s34^2+12*s14*d*s24*s13^2*s12^3-195*s14*d*s13^2*s23*s12^2*s34+144*s14*d*s24^2*s13*s12*s34^2-216*s14*s13^2*s23^2*s34^2-48*s14*s24^2*s13^4+3*d^2*s24*s13^3*s23*s12^2-18*d*s13^4*s23*s12^2+24*s24^3*s13*s23*s34^2-s14*d^2*s24^3*s34^3+90*s14*s13^3*s23*s12^2+54*s14*s13^5*s23-16*s24*s13^6-65*s14*d*s24^2*s13^3*s23+48*d*s24^2*s12*s34^4-235*s14*d*s13*s23*s34^4-12*s14*d^2*s24^2*s13^3*s34-16*s24^3*s13^3*s12-18*s14^2*s12^2*s34^3-120*s13*s12^2*s34^4-200*s14*s13^3*s34^3-12*s14^2*d*s24*s13*s23^3+12*d*s24^4*s13*s34^2+9*s14^2*d*s24^2*s13^3+140*d*s13^4*s34^3-12*s14*d^2*s13*s12^2*s34^3-12*s14^3*d*s24*s23^3-144*s14*s24*s13*s23^2*s34^2+108*s14*s24^2*s13*s23*s12*s34-84*s14*s24^3*s13*s34^2-6*s14*d^2*s23^2*s34^4-12*d^2*s24*s13^4*s12^2-36*d*s13*s23*s34^5+80*s14*d^2*s24*s13*s23*s34^3-36*s14*d^2*s13^2*s23^2*s12*s34-18*s14^2*s12*s34^4+3*s14*d*s24^4*s34^2-108*s14^2*s24*s13^2*s34^2-18*d*s24*s13^5*s23-24*d^2*s13*s12*s34^5-24*d^2*s24*s13^5*s34+9*s14^2*d*s24*s13^2*s12^2+24*s14*d*s24^3*s13*s12*s34-12*s14*d^2*s23^2*s12*s34^3+140*d*s13^3*s34^4-96*s14^3*s13*s23^2*s12-36*s14*s24^2*s13^2*s12^2-120*s24^2*s13^4*s34+24*d*s24^2*s12^2*s34^3-18*d*s24^2*s23*s12*s34^3+120*s14*d*s13*s23^2*s34^3-2*s14^3*d^2*s24^2*s23^2+30*s14*d^2*s24^2*s13^2*s23*s34+9*d^2*s24*s13*s23*s12^2*s34^2+9*s14^2*d*s24*s34^4+80*s14*d^2*s13*s23*s12*s34^3-48*s14*s24^2*s34^4+72*s14*d*s24*s13*s23^2*s12*s34+240*s24*s13^2*s23*s34^3-4*d^2*s24*s12^3*s34^3-72*s24^2*s13*s12^2*s34^2+48*s13^5*s23*s34+270*s14*s13*s23*s12^2*s34^2-6*d^2*s12^2*s34^5+320*d*s13^3*s12*s34^3+192*d*s24^2*s13^3*s12*s34-3*d^2*s24^4*s13^2*s34-144*d*s24*s13^3*s23*s12*s34-480*s24*s13^3*s12*s34^2+18*s14^2*d*s24^2*s13*s12*s34+20*d^2*s13^3*s23*s34^3-96*s14^3*s24*s23^2*s34+18*s14*s24^3*s13^2*s23-30*d^2*s24^2*s13*s34^4+84*d*s13^5*s34^2-s14*d^2*s24^3*s13^3-144*s14^2*d*s24*s13*s23*s12*s34+24*s14^2*s13^2*s23^3-16*s24*s34^6+16*s14^3*d^2*s23^3*s34-3*s14*d^2*s13^4*s12^2-72*s14^2*d*s13*s23^3*s34+24*s23*s12^2*s34^4-15*s14*d^2*s13^4*s12*s34-18*s14^2*s24*s13^4+144*s14*d*s13^2*s23^2*s12*s34-412*s14*d*s24*s13*s23*s34^3+96*s14^2*s13^2*s23*s12^2+120*s13*s23*s12*s34^4-384*s14^2*d*s13^2*s23*s34^2+68*s14^3*s23^3*s34+30*s14*d*s13^4*s23^2-120*s13^4*s12^2*s34+540*s14^2*s13^2*s23*s12*s34-27*s14*d*s24^2*s23*s12*s34^2-84*s13^5*s34^2+180*s14^2*s23*s12*s34^3-4*s34^7-240*s13^2*s12*s34^4+3*d^2*s24^2*s23*s12*s34^3-18*s14*d^2*s24^2*s13^2*s34^2+9*s14^2*d*s12^2*s34^3+20*s14*d^2*s23*s12*s34^4+16*d*s24*s34^6+18*s14*d*s24^2*s13^2*s23^2-6*s14*d^2*s13^5*s34+9*d^2*s24^2*s13^2*s23*s12*s34-235*s14*d*s13^4*s23*s34+48*d*s24*s12^2*s34^4-6*d^2*s24^2*s13^3*s12^2+8*s14^2*d^2*s13^3*s23*s12+120*s24*s13*s23*s34^4-10*s14*s34^6-18*s14^2*s24^2*s34^3-47*s14*d*s23*s34^5+60*s14*d^2*s24*s13^2*s23*s12*s34+27*s14^2*d*s13^2*s12^2*s34-84*s14*s24*s12^2*s34^3+96*s14^2*s24^2*s23*s34^2-412*s14*d*s13*s23*s12*s34^3-140*s13^4*s34^3-16*s24*s13^3*s12^3-195*s14*d*s24^2*s13^2*s23*s34+240*s14*d*s24*s13^3*s34^2-12*s14*d^2*s24*s13^3*s23^2-s14*d^2*s12^3*s34^3+56*s14^4*s23^3+192*s14^2*s24*s13^2*s23*s12-96*s24*s13*s34^5+64*d*s24^3*s13^3*s34+18*s14*s23*s12^3*s34^2+d^2*s24^3*s13^3*s23-48*s24^3*s13^2*s12*s34-18*s14^2*s13^4*s12-48*d^2*s24^2*s13^3*s12*s34+8*s14^3*s23^4-78*s14^2*d^2*s13^2*s23^2*s34-140*s13^3*s34^4+12*s14*d*s24^3*s13^2*s12-3*d^2*s13^2*s12^4*s34-6*d^2*s24^2*s13^5+192*s14^2*s24^2*s13*s23*s34+120*s13^4*s23*s34^2-72*s14^2*s13^3*s12*s34-144*s14*s13*s23^2*s12*s34^2-252*s14*s24*s13^2*s12^2*s34-24*s14^3*d*s23*s34^3+48*d*s24*s13*s12^3*s34^2-12*s14*d^2*s24*s13^2*s23^2*s12+96*s14^2*s24^2*s13^2*s23-6*s14*d^2*s24^2*s23^2*s34^2+36*s14*s13*s23*s12^3*s34-12*s14*d^2*s24^2*s13*s23^2*s34-16*s24^3*s12*s34^3-4*s14^3*d^2*s24*s23^2*s12-28*s13^6*s34-288*s24^2*s13^2*s12*s34^2+120*s14*d*s13^3*s23^2*s34+3*s14*d*s12^4*s34^2-54*s14*d*s24*s13*s23*s12^2*s34-18*s14^2*s24*s34^4-96*s14*s24*s12*s34^4+48*d*s24^2*s13^4*s12-12*s14*d^2*s13^3*s12^2*s34-72*s14^3*d*s13*s23*s34^2-36*s14^2*d*s13^2*s23^3+18*s14*d*s24^2*s12^2*s34^2-60*d^2*s24*s13^2*s34^4+16*d*s24*s13^6+12*s14^3*s24^2*s23*s34+80*s14*d^2*s24*s13^3*s23*s34-14*s14^3*d^2*s23^2*s34^2-4*s13^7+96*s13*s23*s12^2*s34^3+240*s14*d*s13^3*s12*s34^2-103*s14*d*s24*s13^4*s23+16*s14*d*s13^3*s12^3-16*s12*s34^6-12*s14^4*d*s23^2*s12+192*d*s24^2*s13*s12*s34^3-15*s14*d^2*s24*s13^4*s34+30*s14*d^2*s13^2*s23*s12^2*s34-9*s14*d^2*s24^2*s13*s12*s34^2-6*s14*d^2*s13^2*s23^2*s12^2-18*d*s13^5*s23*s12-28*s14^3*d^2*s13*s23^2*s34-30*s14*d^2*s13^2*s12*s34^3+24*s24*s23*s34^5+3*d^2*s23*s12*s34^5+24*s14^3*s24*s13*s23*s12+32*s14^3*d*s23^2*s12*s34-18*s14^2*s24^2*s13^3+756*s14*s24*s13^2*s23*s34^2-10*s14*s13^6+60*s14^3*s13^2*s23*s12+96*d*s13^2*s12^3*s34^2+18*s14^2*d*s24*s13^3*s12-72*s14^2*s24*s13^3*s34-6*d^2*s24^2*s34^5-470*s14*d*s13^2*s23*s34^3+12*s14^4*s24*s23^2+24*s24^2*s13^3*s23*s12-54*s14^2*s24^2*s13*s34^2+42*s14*d*s13*s34^5-48*s14*s12^2*s34^4-18*d*s24*s13^3*s23*s12^2-240*s13^2*s12^2*s34^3+9*s14^2*d*s12*s34^4-84*s14*s24^2*s13^3*s12+10*s14*d^2*s23*s12^2*s34^3+100*s14*d^2*s13^3*s23*s34^2))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (1/2*Den(s14)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(4*s24*s12+2*s34^2+2*s13^2-d*s24^2-d*s12^2-2*d*s24*s12-2*d*s12*s34+4*s24*s13+2*s24^2+4*s14*d*s23+4*s24*s34+2*s12^2-2*d*s24*s34-d*s34^2-d*s13^2-2*d*s24*s13+4*s12*s34-2*d*s13*s12+4*s13*s12-2*d*s13*s34+4*s13*s34-8*s14*s23)*Den(s14+s24+s13+s23+s12+s34)*(18*s14*s24*s23^3*s34^2-66*s14*d*s24*s13*s23^3*s34-33*s14*d*s24*s13^2*s23^3+8*s14*s24^3*s23^2*s12-30*s14^2*s23^2*s12*s34^2+2*s14^2*s23^2*s12^3+2*s14^2*s24^3*s23^2-3*s14^2*d^2*s13*s23^2*s12^2+6*s14*s13*s23^3*s12^2-16*d^2*s13*s23^2*s12*s34^3+66*s14*d*s13*s23^2*s12*s34^2-12*s14^2*s24*s23^2*s12*s34+3*s14^2*d^2*s24*s23^2*s34^2-24*s24*s23^2*s34^4-80*s14^2*d*s23^3*s34^2+6*s14^2*d^2*s24*s13*s23^2*s34-152*s14*s13^3*s23^2*s34-16*d^2*s24*s13^3*s23^2*s34-4*s14^2*d^2*s23^3*s12*s34+50*d*s13^4*s23^2*s34+30*d*s24^2*s13^2*s23^2*s34-144*s24*s13^2*s23^2*s34^2-36*s14^3*d*s23^3*s34+100*d*s13^2*s23^2*s34^3+3*s14*d*s24^2*s23^3*s12-12*s14*d^2*s24*s23^2*s12^2*s34-20*d^2*s13^3*s23^2*s34^2-12*d^2*s24*s13^2*s23^2*s12*s34-4*s14*d^2*s13*s23^2*s12^3-12*s14*s24^2*s13^2*s23^2+80*d*s24*s13*s23^2*s34^3-36*s13*s23^2*s12^2*s34^2+30*d*s13^2*s23^2*s12^2*s34-168*s14*s13^2*s23^2*s12*s34+6*s14^3*d*s24^2*s23^2-9*s14^2*d*s24*s13^2*s23^2+8*s14^2*d^2*s23^4*s12-18*s14^2*d*s13*s23^2*s12*s34-4*d^2*s24*s13^4*s23^2-135*s14*d*s13^2*s23^3*s34+25*s14*d*s23^2*s34^4-6*d^2*s24^2*s13^2*s23^2*s34-36*s14^3*s24*s23^3-114*s14^2*s13^2*s23^2*s34+8*s14*s24*s23^2*s12^3-9*s14^2*d*s13^2*s23^2*s12-s14*d^2*s23^3*s12^3-16*s14^2*d^2*s13*s23^4-4*s14^2*d^2*s24*s23^3*s34-6*s14*d*s24*s23^2*s12^2*s34+50*d*s13*s23^2*s34^4-4*d^2*s23^2*s12*s34^4-12*s14^3*d*s24*s13*s23^2+132*s14^2*s23^3*s34^2-2*d^2*s24^2*s13^3*s23^2+18*s14*s23^3*s12*s34^2+66*s14*d*s24*s13*s23^2*s34^2+6*s14^2*s24^2*s23^2*s12-152*s14*s13*s23^2*s34^3-9*s14^2*d*s24^2*s23^2*s34-6*d^2*s13^2*s23^2*s12^2*s34-16*d^2*s24*s13*s23^2*s34^3-4*s14*d^2*s24^3*s13*s23^2-24*s13^4*s23^2*s12-3*s14^2*d*s23^2*s12^3-3*s14^2*d*s24^3*s23^2-3*s14*d*s24^2*s13*s23^3-48*s14*s24*s13*s23^2*s12*s34+6*s14^2*d^2*s13*s23^2*s12*s34-3*s14*d^2*s13^4*s23^2-4*s14^2*d^2*s13*s23^3*s12+18*s14*d^2*s24*s13*s23^3*s34-9*s14^2*d*s24^2*s13*s23^2+2*s14*s24^4*s23^2-3*s14*d^2*s24*s23^3*s12^2+36*s14*s13*s23^3*s12*s34+2*s14*s23^2*s12^4-4*s14*d^2*s23^2*s12^3*s34+150*s14*d*s13^2*s23^2*s34^2-12*s14^3*d*s13*s23^2*s12-4*s14*d^2*s24^3*s23^2*s34-45*s14*d*s13^3*s23^3+80*d*s13*s23^2*s12*s34^3-24*s14*s24*s13^2*s23^2*s12+33*s14*d^2*s13*s23^3*s34^2+10*s14^2*d^2*s13^2*s23^3-24*s14*s24^2*s13*s23^2*s34+6*s14^3*d*s23^2*s34^2-12*s24^2*s23^2*s34^3-2*d^2*s23^2*s12^2*s34^3-18*s14^2*d*s24*s13*s23^2*s34+6*s14*d*s24^2*s23^2*s12^2+80*d*s24*s13^3*s23^2*s34-12*s14^3*d*s24*s23^2*s34-2*d^2*s13^3*s23^2*s12^2-4*s14^2*d*s24*s23^4-3*s14*d*s23^3*s12^2*s34-72*s24*s13*s23^2*s12*s34^2-3*s14*d*s24^2*s23^3*s34-2*d^2*s23^2*s34^5-4*s14*d^2*s24*s23^2*s12^3+36*s14^3*d*s23^3*s12-12*s14^3*s13^2*s23^2-6*s14*d^2*s24*s23^3*s12*s34+10*d*s13^5*s23^2-36*s24^2*s13*s23^2*s34^2-33*s14*d*s13^2*s23^3*s12+8*s14*s24^3*s13*s23^2+s14*d*s23^2*s12^4-4*s14^2*d^2*s24*s13*s23^3+46*s14*s13^3*s23^3+10*d*s24^2*s23^2*s34^3-24*s14*s24*s23^2*s12*s34^2-16*s14^2*d^2*s23^4*s34+22*s14*d*s23^2*s12*s34^3+s14*d*s24^4*s23^2-30*s14^2*s24*s13^2*s23^2-12*s14*d^2*s13*s23^2*s34^3+9*s14*d^2*s23^3*s12*s34^2-12*s14*d^2*s24*s13*s23^2*s12^2-s14^2*d^2*s13^3*s23^2-38*s14^2*s23^2*s34^3-3*s14^2*d^2*s13*s23^2*s34^2-60*s13*s23^2*s34^4+8*s14*s23^2*s12^3*s34+8*s14*s24^3*s23^2*s34-9*s14^2*d*s23^2*s12*s34^2-6*s14*d*s24*s13*s23^3*s12-s14*d^2*s24^3*s23^3+6*s14*s24*s23^3*s12^2-6*s14^2*d^2*s24*s13*s23^2*s12-56*s14*s13^3*s23^2*s12-4*d^2*s24*s13^3*s23^2*s12+20*d*s13^4*s23^2*s12+3*s14^2*d^2*s24*s23^2*s12^2-8*s14^2*d*s24^2*s23^3-6*s14*d*s24^2*s23^2*s12*s34-8*s14^2*d*s23^3*s12^2+138*s14*s13*s23^3*s34^2-3*s14^2*d^2*s23^2*s12^2*s34-6*s14*d*s13^2*s23^2*s12^2-38*s14*s23^2*s34^4+12*s14^3*d*s13*s23^2*s34-4*s14*d^2*s24^3*s23^2*s12-120*s13^2*s23^2*s34^3-24*s14*s13*s23^2*s12^2*s34+9*s14*d^2*s24*s23^3*s34^2-144*s13^2*s23^2*s12*s34^2-6*s14*d^2*s24*s13*s23^3*s12-6*s14^2*s24^2*s13*s23^2-24*s24*s23^2*s12*s34^3-12*s14*d^2*s24^2*s23^2*s12*s34-18*s14^2*d*s24*s13*s23^2*s12-12*s14*d^2*s13^3*s23^2*s34-12*s14^2*s24*s23^4-6*s14*d*s24^2*s23^2*s34^2+12*s14^3*d*s24*s23^2*s12+20*d*s24*s13^3*s23^2*s12+6*s14^3*d*s23^2*s12^2+24*s14*s24^2*s13*s23^2*s12-3*s14*d^2*s13*s23^3*s12^2-168*s14*s24*s13^2*s23^2*s34-12*s14^2*s24^2*s23^3-8*s14^3*d^2*s23^4-12*s14^2*s23^3*s12^2+20*s14^2*d^2*s24*s23^3*s12+22*s14*d*s24*s13^3*s23^2-6*s14*d*s24*s23^3*s12*s34+11*s14*d^2*s23^3*s34^3+63*s14^2*d*s13^2*s23^2*s34-56*s14*s24*s23^2*s34^3-30*s14^2*s13^2*s23^2*s12-96*s13^3*s23^2*s12*s34+20*s14^2*d^2*s13*s23^3*s34+20*d*s24*s23^2*s34^4-12*s14*s23^2*s12^2*s34^2-60*s13^4*s23^2*s34+21*s14^2*d*s23^2*s34^3-6*s14*d*s24*s13*s23^2*s12^2-9*s14^2*d*s24^2*s23^2*s12+8*s14*s13*s23^2*s12^3-6*s14^2*s24^2*s23^2*s34-12*s13^5*s23^2+60*d*s24*s13^2*s23^2*s12*s34-36*s14^3*d*s13*s23^3-24*s14^3*s13*s23^2*s34-24*s24*s13^3*s23^2*s12-2*s14*d*s13*s23^2*s12^3-s14*d^2*s24^4*s23^2+20*d*s24*s23^2*s12*s34^3+3*s14^2*d^2*s24*s13^2*s23^2+21*s14^2*d*s13^3*s23^2-s14*d^2*s23^2*s12^4+20*d*s24*s13^4*s23^2-6*s14*d*s23^2*s12^2*s34^2+24*s14*s24*s13*s23^2*s12^2+33*s14*d^2*s13^2*s23^3*s34+44*s14^2*d*s23^4*s34+10*d*s23^2*s34^5+22*s14*d*s24*s23^2*s34^3-2*d^2*s13^5*s23^2-24*s14^3*s24*s23^2*s12-3*s14*d^2*s24^2*s23^3*s12+120*d*s13^2*s23^2*s12*s34^2+8*s14^2*d^2*s24*s23^4-20*d^2*s13^2*s23^2*s34^3+108*s14^3*s13*s23^3+12*s14*s24*s23^3*s12*s34-56*s14*s24*s13^3*s23^2+100*d*s13^3*s23^2*s34^2-60*s14^2*s24*s13*s23^2*s34-6*s14^2*s23^2*s12^2*s34+2*s14*s23^3*s12^3+80*d*s13^3*s23^2*s12*s34+6*s14^2*s24*s23^2*s12^2-9*s14^2*d*s24*s23^2*s34^2-6*s14^2*d^2*s24*s23^2*s12*s34+66*s14*d*s24*s13^2*s23^2*s34-6*s14*d*s24^2*s13*s23^2*s12+8*s14^2*d*s23^3*s12*s34-12*s14*s24^2*s23^2*s34^2-10*d^2*s13^4*s23^2*s34+40*s14^3*d*s23^4+10*s14^2*d^2*s23^3*s12^2+10*s14^2*d^2*s24^2*s23^3+60*d*s24*s13*s23^2*s12*s34^2+s14*d*s24^3*s23^3-38*s14*s13^4*s23^2-12*s14^3*s23^2*s12^2+9*s14*d^2*s24*s13^2*s23^3-12*s14*s13^2*s23^2*s12^2-114*s14^2*s13*s23^2*s34^2-9*s14^2*d*s13*s23^2*s12^2-12*s14*d*s13*s23^2*s12^2*s34-6*d^2*s24^2*s13*s23^2*s34^2+24*s14*s24^2*s23^2*s12*s34-16*d^2*s13^3*s23^2*s12*s34-135*s14*d*s13*s23^3*s34^2-6*s14*d^2*s24^2*s23^2*s12^2-12*s14*d^2*s24^2*s13*s23^2*s12+10*d*s23^2*s12^2*s34^3+22*s14*d*s13^3*s23^2*s12-18*s14^2*d*s24*s23^2*s12*s34-3*s14^2*d^2*s24^2*s13*s23^2-38*s14^2*s13^3*s23^2-72*s24*s13^2*s23^2*s12*s34+3*s14*d*s24*s23^3*s12^2-12*s14^2*s23^4*s34-12*s13^3*s23^2*s12^2+30*d*s24^2*s13*s23^2*s34^2-2*s14*d*s24^3*s23^2*s34-18*s14*d^2*s13^2*s23^2*s34^2+12*s14*s24*s13*s23^3*s12-2*s14*d*s23^2*s12^3*s34-4*d^2*s24*s23^2*s12*s34^3-56*s14*s23^2*s12*s34^3-60*s14^2*s13*s23^2*s12*s34-12*s14*d*s24*s23^2*s12*s34^2+10*d*s24^2*s13^3*s23^2-12*s23^2*s34^5-3*s14^2*d^2*s24^2*s23^2*s34-2*s14*d*s24^3*s13*s23^2-36*s14^3*s23^3*s12+6*s14^3*d*s13^2*s23^2+18*s14*s13^2*s23^3*s12+8*s14^2*d*s13*s23^3*s12+264*s14^2*s13*s23^3*s34-3*s14*d^2*s24^2*s13*s23^3-s14^2*d^2*s23^2*s34^3+3*s14^2*d^2*s13^2*s23^2*s12-45*s14*d*s23^3*s34^3+8*s14^2*d*s24*s23^3*s34-24*s14^2*s24*s23^3*s12-10*d^2*s13*s23^2*s34^4-24*d^2*s13^2*s23^2*s12*s34^2+6*s14*s24^2*s23^3*s34+6*s14*s23^3*s12^2*s34+20*d*s23^2*s12*s34^4-12*s14*d*s24^2*s13*s23^2*s34-4*d^2*s13^4*s23^2*s12+12*s14*s24^2*s23^2*s12^2+10*s14^2*d^2*s23^3*s34^2-6*d^2*s13*s23^2*s12^2*s34^2-9*s14^2*d*s24*s23^2*s12^2-30*s14^2*s24*s23^2*s34^2-12*s14*d*s24*s13^2*s23^2*s12-12*s14^2*s13*s23^4-12*s24^2*s13^3*s23^2-9*s14^2*d*s23^2*s12^2*s34-12*s14^2*s24*s13*s23^2*s12+46*s14*s23^3*s34^3+63*s14^2*d*s13*s23^2*s34^2-6*s14^2*s13*s23^2*s12^2-24*s23^2*s12*s34^4-24*d^2*s24*s13^2*s23^2*s34^2+3*s14^2*d^2*s23^2*s12*s34^2-12*s14^3*s23^2*s34^2-228*s14*s13^2*s23^2*s34^2-66*s14*d*s13*s23^3*s12*s34+8*s14^2*d*s24*s13*s23^3-12*s23^2*s12^2*s34^3-2*d^2*s24^2*s23^2*s34^3+36*s14^3*d*s24*s23^3+9*s14*d^2*s13^2*s23^3*s12-4*s14^2*d*s23^4*s12-168*s14*s24*s13*s23^2*s34^2-3*s14*d^2*s23^2*s34^4-96*s13*s23^2*s12*s34^3+6*s14*s24^2*s13*s23^3-96*s24*s13^3*s23^2*s34+100*s14*d*s13*s23^2*s34^3-33*s14*d*s23^3*s12*s34^2-24*s14*d*s24*s13*s23^2*s12*s34+10*d*s13^3*s23^2*s12^2-3*s14*d^2*s24^2*s23^3*s34-3*s14*d^2*s23^3*s12^2*s34+4*s14*d*s24*s23^2*s12^3+132*s14^2*s13^2*s23^3+24*s14*s24*s23^2*s12^2*s34-160*s14^2*d*s13*s23^3*s34-4*d^2*s24*s23^2*s34^4+s14^2*d^2*s24^3*s23^2+66*s14*d*s13^2*s23^2*s12*s34+s14^2*d^2*s23^2*s12^3+108*s14^3*s23^3*s34+138*s14*s13^2*s23^3*s34+25*s14*d*s13^4*s23^2+3*s14^2*d^2*s24^2*s23^2*s12-6*s14*d*s24^2*s13^2*s23^2+2*s14*s24^3*s23^3+6*s14*s24^2*s23^3*s12-12*s14^3*s24^2*s23^2-16*s14^2*d*s24*s23^3*s12+24*s14^4*s23^3-24*s14^3*s23^4-3*s14^2*d^2*s13^2*s23^2*s34+44*s14^2*d*s13*s23^4+s14*d*s23^3*s12^3-168*s14*s13*s23^2*s12*s34^2-24*s24*s13^4*s23^2-12*d^2*s24*s13*s23^2*s12*s34^2-36*s13^2*s23^2*s12^2*s34+30*d*s13*s23^2*s12^2*s34^2-96*s24*s13*s23^2*s34^3+100*s14*d*s13^3*s23^2*s34-80*s14^2*d*s13^2*s23^3-3*s14*d*s13*s23^3*s12^2+120*d*s24*s13^2*s23^2*s34^2+4*s14*d*s24^3*s23^2*s12-36*s24^2*s13^2*s23^2*s34+36*s14*s24*s13*s23^3*s34+18*s14*s24*s13^2*s23^3-12*s14^2*s23^4*s12-120*s13^3*s23^2*s34^2-12*s14^3*d*s23^2*s12*s34+11*s14*d^2*s13^3*s23^3+18*s14*d^2*s13*s23^3*s12*s34-33*s14*d*s24*s23^3*s34^2));

id INT(pentagon1x123,3,21,4,3,[],1,-2,1,-1,2) = 
  + INT(pentagon1x123,3,21,4,3,[],1,-2,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,4,3,[],2,-2,1,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-1/2*(96*s14*s13^2*s23*s34^3-108*s14*d*s24*s13^2*s23*s34^2+12*d^2*s24*s13^2*s23*s34^3+24*s14*s24*s23^3*s34^2+32*s24^3*s13^3*s23+8*s14*d*s24*s13*s23^3*s34-20*d*s24*s13*s23^2*s12^2*s34-2*s14*d^2*s13*s23*s12^4+16*s24^2*s13*s23^2*s12*s34+24*s14*d*s24^2*s13*s23*s12^2+2*s14*d^2*s24*s13*s23*s12*s34^2-2*s14*d^2*s23*s12^4*s34-22*d*s24*s13*s23*s34^4+10*d^2*s13^4*s23*s34^2-14*s14^2*d*s13*s23*s34^3+8*s13*s23*s12^4*s34-d^2*s24^2*s23^2*s12*s34^2+28*s14*d*s24*s13^2*s23^3+72*s14*s24*s13^4*s23-3*s14^2*d^2*s13*s23*s12^2*s34-12*s14^2*s23^2*s12*s34^2+72*s14*s24*s13*s23*s12^2*s34+48*s14^2*s24*s13*s23*s34^2+4*s14^2*s23^2*s12^3+4*s14^2*s24^3*s23^2-8*s14^2*s23*s12^3*s34+7*s14^2*d^2*s13*s23^2*s12^2-32*d*s13*s23*s12*s34^4-6*s14^2*d*s24*s23*s12^3-14*s14^2*d*s13^4*s23-12*s14*d*s13*s23*s12^3*s34+288*s24*s13^3*s23*s12*s34-16*s14*s13*s23^3*s12^2+80*s14*d*s13*s23^2*s12*s34^2-40*s14^2*s24*s23^2*s12*s34+s14^2*d^2*s24*s23^2*s34^2+12*d^2*s24^2*s13*s23*s12*s34^2+3*d^2*s23*s12^2*s34^4-12*s24*s23^2*s34^4-54*s14^2*d*s23^3*s34^2-2*s14^2*d^2*s24*s13*s23^2*s34-56*s14*s13^3*s23^2*s34-30*d*s13^2*s23*s34^4+48*s14^2*s13*s23*s12*s34^2+4*s14^2*d^2*s23^3*s12*s34-28*d*s13^4*s23^2*s34-8*s14*d*s23*s12^3*s34^2+72*s14*s13*s23*s12*s34^3+144*s14*s24^2*s13^2*s23*s34-4*d*s24^2*s13^2*s23^2*s34-24*d*s13^3*s23*s12^3-54*d*s13*s23*s12^2*s34^3+48*s24*s13^2*s23^2*s34^2+4*s14*d^2*s13*s23*s12^2*s34^2-60*s14^3*d*s23^3*s34+18*d^2*s24*s13*s23*s12*s34^3-6*s14*d^2*s24*s23^2*s34^3-16*s14*s23^4*s34^2+32*s24^3*s13*s23*s12*s34+96*s24*s13^3*s23*s12^2+d^2*s24^3*s13*s23*s34^2-60*d*s24^2*s13^3*s23*s12-8*d*s13^2*s23^2*s34^3+4*s14^2*d*s24^2*s13*s23*s12+8*s14^3*s13*s23*s34^2-28*s14^2*d*s24*s13^2*s23*s34-10*s14*d^2*s24*s23^2*s12^2*s34+2*d^2*s13^3*s23^2*s34^2+24*s13^2*s23^3*s34^2+288*s24*s13^2*s23*s12*s34^2+2*d^2*s24*s13^2*s23^2*s12*s34-6*s14*d^2*s13*s23^2*s12^3-68*s14*s24^2*s13^2*s23^2-26*s14*d^2*s24*s13*s23^2*s34^2-10*s14^2*d*s24*s23*s12*s34^2+20*d*s24*s13*s23^2*s34^3+44*s13*s23^2*s12^2*s34^2-52*d*s13^2*s23^2*s12^2*s34-4*d*s24*s23^3*s12*s34^2+12*d^2*s24*s13^4*s23*s34-80*s14*s13^2*s23^2*s12*s34+72*s14*s24*s13*s23*s34^3+96*s14*s13^4*s23*s34-6*s14^3*d*s24^2*s23^2+24*s14^3*s23^2*s12*s34+88*s14^2*d*s24*s13^2*s23^2-8*s14^4*d*s24*s23^2-4*s14^3*d*s13^2*s23*s12-8*s14^3*s24*s23*s12*s34-8*s14^3*d^2*s24*s23^3-6*d*s24^2*s23*s12^2*s34^2+24*s14^4*s23^2*s12+4*s14^2*d^2*s23^4*s12+88*s14^2*d*s13*s23^2*s12*s34+d^2*s24*s13^4*s23^2+16*s14*d*s24^3*s13*s23*s12+36*s14*d*s13^2*s23^3*s34-8*s14*d^2*s23^2*s12^2*s34^2+8*s14*d*s24*s13*s23^4+18*s14*d*s23^2*s34^4-16*s14^3*s24*s23*s12^2+28*d^2*s13^3*s23*s12*s34^2+4*s14*d*s24^3*s13^2*s23+15*d^2*s13*s23*s12^2*s34^3-5*d^2*s24^2*s13^2*s23^2*s34+24*s14^3*s24*s23^3-204*s14^2*s13^2*s23^2*s34-68*s14*d*s13*s23*s12^2*s34^2-16*s14^2*s24*s23*s12^2*s34+68*s14^2*d*s13^2*s23^2*s12+24*s14^2*s13^4*s23+4*s14^2*d^2*s13*s23^4+8*s14^2*d^2*s24*s23^3*s34+20*s14*d*s24*s23^2*s12^2*s34+8*d*s13*s23^2*s34^4-2*s14^2*d^2*s24*s13^2*s23*s34+32*s24^3*s13^2*s23*s12+8*s24*s13^3*s23^3-d^2*s23^2*s12*s34^4-18*d*s24^3*s13*s23*s34^2+16*s14^3*d*s24*s13*s23^2+6*d^2*s24^2*s13^3*s23*s12+68*s14^2*s23^3*s34^2-42*s14^2*d*s13^3*s23*s34+2*s14^2*d^2*s24^2*s13*s23*s12+48*s14^2*s13^3*s23*s12-4*s14*d*s24^2*s13*s23*s12*s34-d^2*s24^2*s13^3*s23^2-88*d*s24*s13^4*s23*s34+4*s24^3*s13^2*s23^2+4*s14*d^2*s13^4*s23*s12+48*s24^2*s13*s23*s12^2*s34-s14^2*d^2*s24*s23*s12*s34^2+152*s14*d*s24*s13*s23^2*s34^2+12*s14^2*s24^2*s23^2*s12-72*s14*s13*s23^2*s34^3+4*s14^2*d*s24^2*s23^2*s34+7*d^2*s13^2*s23^2*s12^2*s34+16*s14*d*s13*s23^4*s34-8*d^2*s24*s13*s23^2*s34^3+s14^2*d^2*s23*s12*s34^3-2*s14^2*d*s24^3*s23*s12+2*s14*d^2*s24^3*s13*s23^2+36*s13^4*s23^2*s12+8*s13^2*s23*s12^4-8*s14^2*d*s23^2*s12^3-4*s14^2*d*s24^3*s23^2-152*d*s13^3*s23*s12*s34^2-2*s14^2*d^2*s13^2*s23*s12^2+8*s14*d*s24^2*s13*s23^3+3*d^2*s24^2*s23*s12^2*s34^2-2*s14*d^2*s24^3*s13*s23*s12-128*s14*s24*s13*s23^2*s12*s34-6*s14^2*d^2*s13*s23^2*s12*s34-8*s14^2*s23*s12^2*s34^2-4*s14*d^2*s13^4*s23^2+16*s14^2*d^2*s13*s23^3*s12+72*s14*s24^2*s13^3*s23+24*s14*s13*s23*s34^4+144*s14*s13^2*s23*s12^2*s34-36*s14*d*s13^3*s23*s12^2+8*s14*d^2*s24*s13*s23^3*s34+3*d^2*s24*s13*s23*s34^4+80*s13^3*s23*s34^3+16*s13*s23^2*s12^3*s34-8*s14^2*d*s24^2*s13*s23^2-8*s14^2*d*s23^5-8*s14^3*s23*s12^2*s34-6*s14*d^2*s24^2*s13*s23*s12^2-6*d*s23*s12^3*s34^3+6*s14*d^2*s24*s13^2*s23*s34^2-4*s14*d^2*s13^2*s23*s12^3+24*d^2*s24*s13^2*s23*s12^2*s34-14*s14^2*d*s24*s13^3*s23-88*d*s24*s13^2*s23*s34^3-2*d*s13^2*s23^3*s12^2+4*s14*d*s24^4*s13*s23-56*s14*s13*s23^3*s12*s34-6*s14*d^2*s23^2*s12^3*s34-4*d*s13*s23^3*s12^2*s34+4*d*s24^2*s23^2*s12*s34^2+5*d^2*s13^5*s23*s34+96*s14*d*s13^2*s23^2*s34^2+12*s14^3*d*s13*s23^2*s12-18*s14^2*d*s13*s23*s12^2*s34+2*s14*d^2*s24^3*s23^2*s34+12*s13^2*s23^2*s12^3+28*s14*d*s13^3*s23^3-2*s14^2*d*s23*s12^4-12*d*s13*s23^2*s12*s34^3-96*s14*s24*s13^2*s23^2*s12+4*s14*d^2*s13*s23^3*s34^2+8*s14^2*d^2*s13^2*s23^3-26*s14*d^2*s13*s23^2*s12*s34^2+8*d^2*s13*s23*s12*s34^4+24*s24*s13^2*s23^3*s34-104*s14*s24^2*s13*s23^2*s34+26*s14^3*d*s23^2*s34^2-6*s14*d^2*s13*s23*s12^3*s34-30*d*s24^2*s13^4*s23+48*s24^2*s13^2*s23*s12^2+8*s14^3*d*s24*s13*s23*s12-14*s14*d^2*s13^3*s23^2*s12-12*s24^2*s23^2*s34^3+d^2*s23^2*s12^2*s34^3+128*s14^2*d*s24*s13*s23^2*s34-s14^2*d^2*s24^2*s13^2*s23-36*d*s24*s13^3*s23^2*s34+4*s14^3*d*s24*s23^2*s34+216*s14*s24*s13^3*s23*s34-2*d*s23^3*s12^2*s34^2-2*d*s24^2*s23^3*s34^2-140*s14*d*s13^3*s23*s12*s34+32*s24*s13*s23*s12^3*s34-6*s14^2*d*s24*s13^2*s23*s12+3*d^2*s13^3*s23^2*s12^2+4*s14^3*d*s24^2*s23*s12+4*s13^2*s23^3*s12^2-12*s14^2*d*s24*s23^4+192*s24*s13^3*s23*s34^2+16*s14*d*s23^3*s12^2*s34-10*s14*d^2*s24^2*s13*s23*s12*s34-8*d*s13^2*s23^2*s12^3-90*d*s24^2*s13^3*s23*s34+40*s24*s13*s23^2*s12*s34^2-6*s14*d^2*s24^2*s23*s12^2*s34+2*s14^2*d*s24^2*s13*s23*s34-8*s14^3*s13*s23*s12^2-60*d*s13^3*s23*s34^3-8*d*s24^2*s13^2*s23^2*s12-d^2*s23^2*s34^5-4*s14^3*d*s23*s12*s34^2+28*s24*s13^2*s23^2*s12^2+28*s14^3*d*s23^3*s12-84*s14^3*s13^2*s23^2-8*d*s13^5*s23^2-4*s24^2*s13*s23^2*s34^2+72*s14*s24^2*s13^2*s23*s12-58*s14^2*d*s13^2*s23*s12*s34+52*s14*d*s13^2*s23^3*s12-16*s14*s24^3*s13*s23^2+20*s14^2*d^2*s24*s13*s23^3-40*s14*s13^3*s23^3-4*d*s24*s23^2*s12^2*s34^2-12*d*s13^2*s23^3*s12*s34+24*s13*s23^3*s12*s34^2-2*d*s13^4*s23^3+12*d*s24^2*s23^2*s34^3+d^2*s13*s23*s34^5-8*s14^3*d*s13^2*s23*s34+4*s24^2*s23^3*s34^2+d^2*s23^2*s12^3*s34^2-32*s14*s24*s23^2*s12*s34^2-8*s14^4*s23^2*s34+4*s14*d*s24^3*s13*s23*s34+4*s23^3*s12^2*s34^2-4*s14^2*d^2*s23^4*s34-d^2*s24^3*s23^2*s34^2+9*d^2*s24*s13^4*s23*s12+144*s13^2*s23*s12^2*s34^2+16*s14*d*s23^2*s12*s34^3+72*s14*s13^4*s23*s12-156*s14^2*s24*s13^2*s23^2+3*d^2*s24*s13^5*s23-16*s14*d^2*s13*s23^2*s34^3+48*s24^2*s13^4*s23-10*s14*d^2*s24*s13*s23^2*s12^2-7*s14^2*d^2*s13^3*s23^2-36*s14^2*s23^2*s34^3-6*d*s13^6*s23-24*s14^4*s13*s23^2-16*s14*d*s24*s23*s12*s34^3-4*d*s24*s13^3*s23^3-2*s14^2*d*s23*s12^3*s34-17*s14^2*d^2*s13*s23^2*s34^2-4*s13*s23^2*s34^4-8*d*s24*s13*s23^3*s12*s34+144*s13^3*s23*s12^2*s34+128*s13^4*s23*s12*s34+8*s14^3*s24*s13^2*s23-8*s14*s24^3*s23^2*s34+8*s14^2*s24*s13*s23*s12^2+20*s14^2*d*s23^2*s12*s34^2+32*s14*d*s24*s13*s23^3*s12+2*s14*d^2*s13*s23*s34^4-2*s14*d^2*s24^2*s13^3*s23+3*d^2*s24^2*s13*s23*s34^3-20*s14*d*s24^2*s13*s23*s34^2+24*s14^2*s13*s23*s34^3+6*d^2*s13^4*s23*s12^2+24*s14*s13^2*s23*s12^3+10*d^2*s13*s23*s12^3*s34^2+192*s24^2*s13^2*s23*s12*s34-8*s14^3*s23*s12^3-4*s14*d*s24*s13^2*s23*s12^2-144*d*s24*s13^2*s23*s12^2*s34+3*d^2*s24*s13^2*s23*s12^3+8*s14*d*s23^4*s12*s34-6*d*s13^2*s23*s12^4+18*s14^2*d^2*s24*s13*s23^2*s12-32*s14*s13^3*s23^2*s12+8*s24^4*s13*s23*s34+2*d^2*s24*s13^3*s23^2*s12-24*d*s13^4*s23^2*s12+9*s14^2*d^2*s24*s23^2*s12^2-14*s14^2*d*s24^2*s23^3+16*s14*d*s24^2*s23^2*s12*s34-18*s14^2*d*s23^3*s12^2+8*s14*s13*s23^3*s34^2-156*s14*d*s13^2*s23*s12*s34^2-8*s14^2*s24^2*s23*s12*s34+22*d^2*s13^2*s23*s12*s34^3+s14^2*d^2*s23^2*s12^2*s34+54*s14*d*s13^2*s23^2*s12^2+4*d^2*s13^5*s23*s12-20*s14*s23^2*s34^4+64*s14^3*d*s13*s23^2*s34+2*s14*d^2*s24*s13^4*s23+24*s13^2*s23^2*s34^3+2*s14*d^2*s24*s23*s12*s34^3-2*d*s23*s12*s34^5+4*s14^3*d^2*s23^2*s12*s34-12*d*s13^2*s23^3*s34^2-10*s14*d^2*s24*s13^2*s23*s12^2-36*d*s13*s23*s12^3*s34^2+64*s13^2*s23*s12^3*s34+8*s14*d^2*s13^2*s23*s34^3-24*s14*s13*s23^2*s12^2*s34-22*d*s24*s13^2*s23*s12^3+8*s14*d^2*s24*s23^3*s34^2+48*s14^2*s24*s13^3*s23-16*s14*d*s23*s12^2*s34^3-8*s14^3*d*s13*s23*s12*s34+96*s13^2*s23^2*s12*s34^2-30*d*s24^2*s13*s23*s34^3-88*s14*d*s24*s13*s23*s12*s34^2-96*s14*d*s13^3*s23*s34^2+32*s13^3*s23*s12^3+2*d^2*s24*s13*s23^2*s12^2*s34-20*s14^2*s24^2*s13*s23^2-2*s14*d^2*s24^2*s13*s23*s34^2-8*s24*s23^2*s12*s34^3+96*s24*s13*s23*s12^2*s34^2+144*s14*s24*s13^3*s23*s12-2*s14*d^2*s24^2*s23^2*s12*s34-72*d*s24^2*s13*s23*s12*s34^2+8*s13^6*s23-16*s14*d^2*s13^3*s23^2*s34+16*s14^2*s24*s23^4+26*s14*d*s24^2*s23^2*s34^2+16*s14^3*d*s24*s23^2*s12-32*d*s24*s13^3*s23^2*s12+18*s14*d^2*s13^2*s23*s12*s34^2+8*s24*s13^2*s23^3*s12+22*s14^3*d*s23^2*s12^2+8*s14*d*s23^4*s34^2-40*s14*s24^2*s13*s23^2*s12+144*s24^2*s13^2*s23*s34^2-108*d*s13^2*s23*s12*s34^3+8*s14^3*s13^3*s23+s14^2*d^2*s24^3*s13*s23-4*s14*d^2*s13*s23^3*s12^2-176*s14*s24*s13^2*s23^2*s34+8*s24^2*s13*s23^3*s34-12*d*s24*s13*s23^3*s34^2+9*d^2*s24^2*s13^3*s23*s34+20*s14^2*s24^2*s23^3-8*s14^3*d^2*s23^4+12*s14^2*s23^3*s12^2+3*s14^2*d^2*s24^2*s23*s12^2-s14^2*d^2*s24^2*s13*s23*s34+72*s14^2*s13^3*s23*s34-24*s14^2*d*s13^3*s23*s12+4*s14^2*d^2*s24*s23^3*s12+72*s14*d*s24*s13^3*s23^2-3*s14^2*d^2*s24*s13^2*s23*s12+14*s14*d^2*s13^3*s23*s12*s34+64*s24^3*s13^2*s23*s34+4*s13^4*s23^3+16*s14*d*s24*s23^3*s12*s34-18*d*s24^3*s13^3*s23+4*s14*d^2*s23^3*s34^3+8*s14*d*s24*s23^4*s34-d^2*s24^2*s13^2*s23^2*s12-84*d*s24*s13*s23*s12*s34^3+136*s14^2*d*s13^2*s23^2*s34-48*s14*s24*s23^2*s34^3-108*s14^2*s13^2*s23^2*s12+104*s13^3*s23^2*s12*s34-2*s14^3*d^2*s13^2*s23^2+20*s14^2*d^2*s13*s23^3*s34-2*s14*d^2*s24^3*s13*s23*s34-10*s14^2*d*s23*s12^2*s34^2+12*d*s24*s23^2*s34^4+4*s14*s23^2*s12^2*s34^2+s14^2*d^2*s13^2*s23*s12*s34+44*s13^4*s23^2*s34+288*s14*s24*s13^2*s23*s12*s34+32*s14^2*d*s23^2*s34^3+40*s13^2*s23*s34^4+3*s14^2*d^2*s13^2*s23*s34^2+d^2*s24*s23^2*s12^2*s34^2+56*s14*d*s24*s13*s23^2*s12^2-8*s14*d*s23*s12*s34^4-8*s14*d^2*s24^2*s13^2*s23^2-16*s14^2*d*s24^2*s23^2*s12-8*s14*s13*s23^2*s12^3-20*s14^2*s24^2*s23^2*s34+8*s14*d*s13*s23^4*s12+12*s13^5*s23^2-56*d*s24*s13^2*s23^2*s12*s34-52*s14^3*d*s13*s23^3-66*d*s24*s13^4*s23*s12+2*s14*d^2*s13^5*s23+d^2*s23*s12^4*s34^2+8*s14*d^2*s13^4*s23*s34+3*d^2*s24*s23*s12*s34^4+8*s23^3*s12*s34^3-112*s14^3*s13*s23^2*s34-8*s14*s13*s23^4*s12+56*s24*s13^3*s23^2*s12+20*s14*d*s13*s23^2*s12^3-6*s14*d^2*s24*s23*s12^3*s34-2*d^2*s24^3*s13*s23^2*s34+192*s24*s13^2*s23*s12^2*s34+8*d*s24*s23^2*s12*s34^3-3*s14^2*d^2*s24*s13^2*s23^2-8*s14*d^2*s24*s23^2*s12*s34^2+52*s14^2*d*s13^3*s23^2-8*d*s13*s23^3*s34^3-126*d*s24^2*s13^2*s23*s12*s34+8*s13^3*s23^3*s12-16*d*s24*s13^4*s23^2-6*s14*d^2*s24*s13*s23*s12^3+24*s24*s13*s23^3*s34^2-4*d*s24^2*s13*s23^3*s34-4*d*s24*s13^2*s23^3*s12+48*s14^2*s24*s13*s23*s12*s34+64*s14^2*s24*s13*s23^3+6*s14*d*s23^2*s12^2*s34^2-32*s14*s24*s13*s23^2*s12^2+16*s24*s13*s23^3*s12*s34+128*s13^2*s23*s12*s34^3-90*d*s24^2*s13^2*s23*s34^2-4*s14*d^2*s13^2*s23^3*s34+20*s14^2*d*s23^4*s34+4*d*s23^2*s34^5-2*s14*d^2*s23*s12^3*s34^2-8*s14^3*d^2*s23^3*s12+40*s14*d*s24*s23^2*s34^3+21*d^2*s13^3*s23*s12^2*s34+17*d^2*s13^4*s23*s12*s34+4*d^2*s13^3*s23*s12^3+d^2*s13^5*s23^2-8*s14*s24*s23^4*s34-16*s14^3*s24*s23^2*s12+32*s13^5*s23*s12+48*s24^2*s13*s23*s34^3-60*d*s13^2*s23^2*s12*s34^2-128*s14*d*s24*s13^2*s23*s12*s34-4*s14^2*d^2*s24*s23^4-4*s14^2*d*s24*s23*s12^2*s34-2*d^2*s13^2*s23^2*s34^3-54*d*s13^2*s23*s12^3*s34+40*s14^3*s13*s23^3-8*s14*d^2*s24^2*s13^2*s23*s12+32*s13*s23*s12^3*s34^2-8*s14*s24*s23^3*s12*s34+32*s24*s13^2*s23*s12^3-64*s14*s24*s13^3*s23^2-32*d*s13^3*s23^2*s34^2+8*s14*d*s13^2*s23^4-216*s14^2*s24*s13*s23^2*s34+144*s14*s24*s13*s23*s12*s34^2-20*s14^2*s23^2*s12^2*s34+2*s14^2*d^2*s13*s23*s12*s34^2+3*s14^2*d^2*s24*s23*s12^3-68*d*s13^3*s23^2*s12*s34-56*s14*d*s24*s13^3*s23*s12+96*s24*s13^4*s23*s12+27*d^2*s13^2*s23*s12^2*s34^2+12*s14^2*s24*s23^2*s12^2-28*d*s24*s13*s23*s12^3*s34+40*s14^2*d*s24*s23^2*s34^2-6*d*s23*s12^2*s34^4+6*s14^2*d^2*s24*s23^2*s12*s34+184*s14*d*s24*s13^2*s23^2*s34+52*s14*d*s24^2*s13*s23^2*s12+24*s14^2*d*s23^3*s12*s34-14*s14*d^2*s24*s13*s23*s12^2*s34-36*s14*s24^2*s23^2*s34^2+3*d^2*s13^4*s23^2*s34+16*s14^3*d*s23^4+8*s14^2*d^2*s23^3*s12^2-2*d*s24^3*s23*s12*s34^2+5*d^2*s13^2*s23*s34^4-4*s14^2*d^2*s24^2*s23^3-16*d*s24*s13*s23^2*s12*s34^2-24*s14^4*d*s23^3+6*d^2*s24^2*s13*s23*s12^2*s34+4*s14^3*d*s24^2*s13*s23-36*d*s24^3*s13^2*s23*s34+18*d^2*s24*s13^3*s23*s34^2+s14^2*d^2*s13*s23*s34^3+6*d^2*s24*s23*s12^2*s34^3-60*d*s13^4*s23*s34^2+16*s14^2*s13*s23*s12^2*s34-16*s14*d*s24*s23*s12^2*s34^2+144*s14*s13^3*s23*s34^2-s14^2*d^2*s24*s13*s23*s34^2+4*s14*d*s13*s23*s12^4+d^2*s13^6*s23+d^2*s24*s13^2*s23^2*s12^2-12*s14*s13^4*s23^2-20*s14^3*s23^2*s12^2-28*s14*s13^2*s23^2*s12^2-4*s14^3*d*s13^3*s23-156*s14^2*s13*s23^2*s34^2+8*s14^2*d*s13*s23^2*s12^2+60*s14*d*s13*s23^2*s12^2*s34-7*d^2*s24^2*s13*s23^2*s34^2-16*s14*s24^2*s23^2*s12*s34+8*d^2*s13^3*s23^2*s12*s34-8*s14^3*s24^2*s23*s12-12*s14*d*s13*s23^3*s34^2-2*s14^3*d^2*s23^2*s12^2+32*s24*s13^5*s23-2*s14*d^2*s24*s13^3*s23*s12+3*d^2*s24^2*s13^4*s23-44*s14^2*d*s13*s23*s12*s34^2+8*s14^2*s24^3*s13*s23-12*d*s13*s23^3*s12*s34^2+4*s14^3*d*s13*s23*s12^2+4*s24*s23^2*s12^2*s34^2+24*s13^2*s23^3*s12*s34+96*s24*s13*s23*s12*s34^3+2*s14^2*d*s24^2*s13^2*s23+8*s14^2*s23^5-2*s14*d^2*s24^2*s13*s23^2*s12+4*s14^3*d^2*s24*s23^2*s34+2*d^2*s24^3*s13*s23*s12*s34-4*d*s23^2*s12^2*s34^3+d^2*s24^3*s23*s12*s34^2+216*s14*s13^2*s23*s12*s34^2+48*s14*d*s13^3*s23^2*s12+4*s23^2*s12^3*s34^2-126*d*s13^2*s23*s12^2*s34^2+8*s13*s23*s34^5+8*s14^3*s13*s23*s12*s34+4*s14^3*d*s23*s12^3-34*s14*d^2*s24*s13^2*s23^2*s34+24*s14^2*d*s24*s23^2*s12*s34-8*d*s13^3*s23^3*s34+36*d^2*s24*s13^2*s23*s12*s34^2-4*s24^3*s23^2*s34^2+11*s14^2*d^2*s24^2*s13*s23^2-84*s14^2*s13^3*s23^2-12*d*s24*s23*s12^2*s34^3+144*s24^2*s13^3*s23*s34+104*s24*s13^2*s23^2*s12*s34-132*d*s24*s13^3*s23*s34^2+8*s24^4*s13^2*s23-14*s14^2*d*s24*s13*s23*s34^2-4*s14*d^2*s24*s23*s12^2*s34^2+16*s14^3*s13^2*s23*s34-8*s14*s23^4*s12*s34-s14^2*d^2*s24*s13^3*s23+2*d^2*s24^3*s13^2*s23*s34+8*s24*s23^3*s34^3+3*d^2*s23*s12^3*s34^3-4*s14*d*s13^2*s23*s12^3-32*s14^2*s23^4*s34-24*s14*d^2*s13*s23^2*s12^2*s34+36*s13^3*s23^2*s12^2+8*s14^3*s24*s13*s23*s34+16*d*s24^2*s13*s23^2*s34^2+72*s14*s24*s13^2*s23*s12^2-16*d*s24*s13^2*s23^2*s12^2+72*s14*s24^2*s13*s23*s34^2+8*s14^4*d*s23^2*s34+20*s24^2*s13^2*s23^2*s12+4*s14*d*s24^3*s23^2*s34-30*d*s13^5*s23*s34-24*s14*d^2*s13^2*s23^2*s34^2-24*s14*s24*s13*s23^3*s12+8*s14*d*s23^2*s12^3*s34+4*s14^3*d^2*s13*s23^2*s12-2*d^2*s24*s23^2*s12*s34^3+24*s14*s24^3*s13*s23*s34-44*s14*d*s13^4*s23*s12-16*s14*s23^2*s12*s34^3-120*s14^2*s13*s23^2*s12*s34+32*s14*d*s24*s23^2*s12*s34^2-8*d*s24^2*s13^3*s23^2-4*s23^2*s34^5+4*s24^2*s13^2*s23^3-10*s14^2*d*s23*s12*s34^3-6*d*s24*s23*s12*s34^4+8*s14^3*d^2*s13*s23^3+4*d*s24^3*s13*s23^2*s34-2*d^2*s24^2*s13*s23^2*s12*s34-4*d*s24^4*s13*s23*s34+5*s14^2*d^2*s24^2*s23^2*s34-16*s14*d*s13^5*s23-8*s14^2*d*s13^2*s23*s12^2-8*s14^2*s24*s23*s12*s34^2+72*s14^2*s13^2*s23*s34^2+8*s14^4*d*s13*s23^2+16*s14*d*s24^3*s13*s23^2+s14^2*d^2*s24^3*s23*s12-24*s14^3*s23^3*s12+38*s14^3*d*s13^2*s23^2-56*s14*s13^2*s23^3*s12+9*d^2*s24^2*s13^2*s23*s34^2-28*s14^2*d*s13*s23^3*s12+32*s14^2*s13*s23^3*s34+4*s14*d^2*s24^2*s13*s23^3-5*s14^2*d^2*s23^2*s34^3+16*s14*d*s24*s13*s23*s12^3-98*d*s13^4*s23*s12*s34-114*d*s13^3*s23*s12^2*s34-5*s14^2*d^2*s13^2*s23^2*s12-20*s14*d*s23^3*s34^3-2*s14*d^2*s24^3*s13^2*s23+30*d^2*s24*s13^3*s23*s12*s34+16*s14^2*s24^2*s13*s23*s12+48*s13^4*s23*s12^2+96*s14^2*s24*s13^2*s23*s34-4*s14^2*d^2*s24*s13*s23*s12*s34+216*s14*s13^3*s23*s12*s34+96*s24^2*s13*s23*s12*s34^2-32*s14*d^2*s24*s13*s23^2*s12*s34+4*s14*d*s24^2*s13^2*s23*s12+11*d^2*s13^2*s23*s12^3*s34-90*d*s24*s13*s23*s12^2*s34^2-36*s14^2*d*s24*s23^3*s34+32*s14^2*s24*s23^3*s12-3*d^2*s13*s23^2*s34^4+3*s14^2*d^2*s13^3*s23*s34+6*d^2*s13^2*s23^2*s12*s34^2+4*s14^3*d^2*s24*s13*s23^2-8*s14*s23^3*s12^2*s34-2*s14^2*d^2*s24*s23*s12^2*s34+4*d*s23^2*s12*s34^4+100*s14*d*s24^2*s13*s23^2*s34-32*s14^2*s23^3*s12*s34-s14^2*d^2*s24^2*s23*s12*s34+3*d^2*s13^4*s23^2*s12+d^2*s13^2*s23*s12^4-20*d*s24^3*s13*s23*s12*s34+12*s14^2*d^2*s23^3*s34^2+5*d^2*s13*s23^2*s12^2*s34^2-216*d*s24*s13^2*s23*s12*s34^2-2*d*s23^3*s34^4+128*s24*s13^4*s23*s34-20*s14^2*d*s24*s23^2*s12^2-60*s14^2*s24*s23^2*s34^2+128*s14*d*s24*s13^2*s23^2*s12+20*s24^2*s13^3*s23^2-d^2*s24^3*s13^2*s23^2+s14^2*d^2*s13^4*s23-108*s14*d*s24*s13^3*s23*s34-72*s14^3*s24*s13*s23^2+20*s14^2*d*s23^2*s12^2*s34-40*s14^2*s24*s13*s23^2*s12-2*d*s24^2*s13^2*s23^3+192*s13^3*s23*s12*s34^2+24*s14*s23^3*s34^3+116*s14^2*d*s13*s23^2*s34^2-2*s14*d^2*s24^3*s23*s12*s34-s14^2*d^2*s23*s12^3*s34-20*s14^2*s13*s23^2*s12^2-4*s23^2*s12*s34^4-6*d^2*s24*s13^2*s23^2*s34^2-s14^2*d^2*s23^2*s12*s34^2-28*s14^3*s23^2*s34^2-88*s14*d*s13^2*s23*s12^2*s34-96*s14*s13^2*s23^2*s34^2+9*d^2*s24*s13^3*s23*s12^2-36*d*s13^4*s23*s12^2+32*s24^3*s13*s23*s34^2+72*s14*s13^3*s23*s12^2+s14^2*d^2*s24*s13*s23*s12^2+24*s14*s13^5*s23-20*s14*d*s24^2*s13^3*s23-16*s14*d*s13*s23*s34^4+56*s14*d*s13*s23^3*s12*s34-18*d*s24^3*s13^2*s23*s12-12*d*s24*s13^2*s23^3*s34-88*s14^2*d*s24*s13*s23^3+4*s23^2*s12^2*s34^3-3*d^2*s24^2*s23^2*s34^3-12*s14^3*d*s24*s23^3-8*s14*d^2*s13^2*s23^3*s12-20*s14^2*d*s23^4*s12-160*s14*s24*s13*s23^2*s34^2+72*s14*s24^2*s13*s23*s12*s34-30*d*s24^2*s13^2*s23*s12^2-4*s14*d^2*s23^2*s34^4+4*d*s24^3*s23^2*s34^2+24*s13*s23^2*s12*s34^3+16*s13^3*s23^3*s34-4*d*s23^2*s12^3*s34^2-6*d*s13*s23*s34^5+2*s14*d^2*s24*s13*s23*s34^3-8*s14*s24^2*s13*s23^3-34*s14*d^2*s13^2*s23^2*s12*s34-22*d*s24*s13^5*s23-6*s14*d^2*s23^2*s12*s34^3-4*d*s24^2*s13*s23^2*s12*s34-32*s14^3*s13*s23^2*s12-32*s14*s13*s23^4*s34-2*s14*d^2*s24^2*s23*s12*s34^2+72*s24*s13^3*s23^2*s34-6*d*s24^2*s23*s12*s34^3+68*s14*d*s13*s23^2*s34^3+32*s24*s13*s23^2*s12^2*s34-2*s14^3*d^2*s24^2*s23^2+4*s14*d*s23^3*s12*s34^2-4*s14*d^2*s24^2*s13^2*s23*s34+21*d^2*s24*s13*s23*s12^2*s34^2+10*s14*d^2*s13*s23*s12*s34^3+160*s14*d*s24*s13*s23^2*s12*s34+128*s24*s13^2*s23*s34^3-24*d*s13^3*s23^2*s12^2+4*s14*d^2*s24^2*s23^3*s34+40*s13^5*s23*s34+72*s14*s13*s23*s12^2*s34^2+d^2*s13^2*s23^2*s12^3-4*s14*d^2*s23^3*s12^2*s34-12*d*s13*s23^2*s12^3*s34+2*d^2*s13*s23*s12^4*s34-4*d*s24^4*s13^2*s23+8*s13*s23^3*s12^2*s34-204*d*s24*s13^3*s23*s12*s34-4*s24^2*s23^2*s12*s34^2+10*d^2*s13^3*s23*s34^3-16*s14^3*s24*s23^2*s34+24*s14*s24^3*s13^2*s23-4*d*s24*s23^3*s34^3-16*s14^2*d*s24*s13*s23*s12*s34-6*d*s24*s23*s12^3*s34^2-36*s14^2*s13^2*s23^3+8*s14^3*d^2*s23^3*s34-8*s14*s24*s23^2*s12^2*s34-s14^2*d^2*s23*s12^2*s34^2-8*s14^2*s13*s23^3*s12-64*s14^2*d*s13*s23^3*s34-3*d^2*s24*s23^2*s34^4-s14^2*d^2*s24^3*s23^2+112*s14*d*s13^2*s23^2*s12*s34-36*s14*d*s24*s13*s23*s34^3+5*s14^2*d^2*s23^2*s12^3+24*s14^2*s13^2*s23*s12^2+32*s13*s23*s12*s34^4-42*s14^2*d*s13^2*s23*s34^2+88*s14^3*s23^3*s34+3*d^2*s24^2*s13^2*s23*s12^2-56*s14*s13^2*s23^3*s34+14*s14*d*s13^4*s23^2-8*s14*s24*s13*s23^4+96*s14^2*s13^2*s23*s12*s34-8*s14*d*s24^2*s23*s12*s34^2+3*d^2*s24^2*s23*s12*s34^3+3*s14^2*d^2*s24^2*s23^2*s12+2*s14*d^2*s23*s12*s34^4+74*s14*d*s24^2*s13^2*s23^2-2*d*s23*s12^4*s34^2+15*d^2*s24^2*s13^2*s23*s12*s34-64*s14*d*s13^4*s23*s34+32*s24*s13*s23*s34^4+2*d^2*s13*s23^2*s12^3*s34-2*s14*d^2*s24*s13^2*s23*s12*s34-6*s14^2*d*s24^2*s23*s12^2-68*s14*d*s13*s23*s12*s34^3-40*s14*d*s24^2*s13^2*s23*s34+40*s14^2*s24*s23^3*s34+4*s14^3*s24^2*s23^2-14*s14*d^2*s24*s13^3*s23^2-32*s14^2*d*s24*s23^3*s12+40*s14^4*s23^3+56*s14^2*s24*s13^2*s23*s12+3*d^2*s24*s23*s12^3*s34^2+d^2*s24^3*s13^3*s23-16*s14*s13^2*s23^4-8*d*s13*s23*s12^4*s34-16*s14^3*s23^4-19*s14^2*d^2*s13^2*s23^2*s34-20*s14^2*d*s13*s23^4+32*s14^2*s24^2*s13*s23*s34+80*s13^4*s23*s34^2-64*s14*s13*s23^2*s12*s34^2+6*d^2*s24*s13*s23*s12^3*s34-24*s14*d^2*s24*s13^2*s23^2*s12+28*s24*s13^4*s23^2-4*d*s13^3*s23^3*s12+32*s14^2*s24^2*s13^2*s23-2*d^2*s24*s13*s23^2*s12*s34^2+24*s14*s13*s23*s12^3*s34-2*s14^2*d*s24^2*s23*s12*s34-8*s14*d^2*s24^2*s13*s23^2*s34-4*s14^3*d^2*s24*s23^2*s12+76*s13^2*s23^2*s12^2*s34+8*s24*s23^3*s12*s34^2-32*d*s13*s23^2*s12^2*s34^2-8*s24*s13*s23^2*s34^3+60*s14*d*s13^3*s23^2*s34-20*s14*d*s24*s13*s23*s12^2*s34+2*s14^2*d*s24^3*s13*s23-4*d*s23^3*s12*s34^3-4*s14^3*d*s13*s23*s34^2-10*s14^2*d*s13^2*s23^3+16*s13*s23^3*s34^3+6*s14*d^2*s24*s13^3*s23*s34-2*s14^3*d^2*s23^2*s34^2+24*s14*d*s13*s23^3*s12^2-12*d*s24*s13^2*s23^2*s34^2+48*s13*s23*s12^2*s34^3-36*s14*d*s24*s13^4*s23+28*s24^2*s13^2*s23^2*s34-8*s14^4*d*s23^2*s12+4*s23^3*s34^4-8*s14*s24*s13*s23^3*s34+2*s14*d^2*s13^2*s23*s12^2*s34-16*s14*d^2*s13^2*s23^2*s12^2-24*d*s13^5*s23*s12-32*s14*s24*s13^2*s23^3-4*s14^3*d^2*s13*s23^2*s34+16*s14^2*s23^4*s12+56*s13^3*s23^2*s34^2+d^2*s23*s12*s34^5-8*s14^3*s24*s13*s23*s12+s14^2*d^2*s23*s12^4-4*s14*d^2*s13^3*s23^3+216*s14*s24*s13^2*s23*s34^2-8*s14*d^2*s13*s23^3*s12*s34+8*s14^3*s13^2*s23*s12-20*s14*d*s24*s23^3*s34^2-36*d*s24^2*s13*s23*s12^2*s34+d^2*s24^3*s13^2*s23*s12-64*s14*d*s13^2*s23*s34^3+8*s14^4*s24*s23^2+96*s24^2*s13^3*s23*s12+8*s14^3*d*s24*s23*s12^2-66*d*s24*s13^3*s23*s12^2+2*s14*d^2*s23*s12^2*s34^3+12*s14*d^2*s13^3*s23*s34^2+2*s14^2*d*s24*s13*s23*s12^2)*Den(-2+d)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (-1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(4*s24*s12+2*s34^2+2*s13^2-d*s24^2-d*s12^2-2*d*s24*s12-2*d*s12*s34+4*s24*s13+2*s24^2+4*s14*d*s23+4*s24*s34+2*s12^2-2*d*s24*s34-d*s34^2-d*s13^2-2*d*s24*s13+4*s12*s34-2*d*s13*s12+4*s13*s12-2*d*s13*s34+4*s13*s34-8*s14*s23)*Den(s14+s24+s13+s23+s12+s34)*(128*s24^3*s13*s12^2-38*s14^2*d*s23^2*s12^2-8*d*s24*s12*s34^4+30*s14*d*s24*s13^3*s23+6*s23*s12^5+8*s13^4*s12*s34+42*s14*s12^2*s34^3-38*d*s24^3*s13*s23*s12-2*s14^2*d*s12*s34^3+72*s14^2*s23^3*s12+22*s14^2*d^2*s24^2*s23*s12+53*s14*d*s24^2*s13*s23^2+2*d*s24^5*s34-3*s14*d^2*s24^2*s13*s34^2-6*s23^3*s34^3+40*s14^2*s24^2*s12*s34+28*s14*s24^3*s12^2+5*d*s24^4*s12^2-2*s14^2*d^2*s23*s12*s34^2-d^2*s24^4*s23^2-d^2*s24*s13*s23^2*s34^2-2*d^2*s24*s23*s34^4+16*s23*s12*s34^4+48*s24^2*s13^2*s34^2+6*s14*s13*s23^2*s34^2+6*s14^2*d^2*s23*s12^3-d*s12^2*s34^4-24*s24*s13^3*s23^2-2*s24^2*s13^4-6*d^2*s24*s23^2*s12^2*s34-4*s14^2*d^2*s13^2*s23*s34+20*s14*s13*s23^4-14*s14*d*s24^3*s13*s12-6*s14*s23^2*s12^2*s34-14*s14^2*d*s23*s12^2*s34+s14*d*s12^3*s34^2+d*s24*s13^2*s23^3-2*d^2*s23*s12^4*s34-134*s14*s24*s23^2*s12^2+20*s14^3*s24*s23^2+14*s14*d*s24^2*s12^3-44*d*s24^2*s13^3*s12-26*d^2*s13*s23*s12^2*s34^2+76*s24^3*s23*s12*s34-12*s13^5*s23+8*s14*d^2*s24^2*s23^3+4*s14^2*s24*s34^3+72*s14*s24*s12*s34^3-6*s14^2*d*s13^2*s12*s34+62*s14*d*s24*s13*s23^2*s12-2*s14*d^2*s24^2*s13^2*s23-31*s14*d*s24^2*s13^2*s34+78*s24^2*s23*s12*s34^2-5*d^2*s23^2*s12^2*s34^2+14*s14*d*s24*s12^3*s34+12*s24^2*s23^2*s34^2+9*d*s13^2*s23^3*s34-4*d*s24^5*s13+48*s14*s13^2*s23^3-40*s14*s24*s23*s12^2*s34-27*s14*d*s13^2*s23^2*s12-16*s14^2*d*s13*s23^3-29*s14*d*s24^2*s12*s34^2+2*s14*d^2*s24^2*s23*s34^2+4*s14^2*s13^3*s12-52*s14^2*s24^2*s13*s23+14*s14^2*d^2*s13^2*s23^2-72*s13^2*s23^2*s12*s34+72*s14*d*s24*s13*s23*s12*s34-48*d*s24*s13^2*s12^2*s34+30*d*s13*s23^2*s12*s34^2+12*s24*s13*s23*s34^3+8*s13*s12^5+74*s14*d*s13^3*s23*s34+88*s14*s24*s13^2*s12*s34+8*s14*d^2*s24*s23^3*s34-3*d^2*s13^2*s12^3*s34-4*s14*d^2*s24*s13^2*s23*s12-6*s14^2*d*s13^2*s12^2+12*d*s13*s23*s12^3*s34+28*s13^3*s12^2*s34+60*s24^3*s23*s12^2+11*s14*d*s24*s12^4+52*s24*s12^3*s34^2-13*s14*d*s24^2*s23^2*s34+16*s14*s12*s34^4-6*s14*d^2*s23*s12*s34^3+48*s13^2*s12*s34^3-s14*d^2*s13^3*s12^2-12*s13^2*s23^2*s12^2-3*d*s24^2*s23^3*s12-13*s14*d*s13^3*s23^2-28*d*s24^2*s13*s23*s12*s34+18*s24^2*s34^4+96*s24*s13*s23*s12^2*s34+8*d*s24*s12^2*s34^3+26*s14*s24*s13^2*s12^2-12*s24*s13^4*s34+18*s23*s12^2*s34^3+2*d*s24*s13*s23^3*s34-56*s13^3*s23*s34^2-10*d^2*s24^3*s12^3+8*s14*d^2*s13*s23^3*s12-60*d*s24^2*s13*s23*s12^2-8*s14*d*s23^4*s34+32*s14^3*d*s23^2*s12+42*d*s24*s13^2*s23*s34^2+12*s13*s23*s12*s34^3+4*s12^5*s34-6*s24^2*s13^2*s23*s34-d*s24^3*s23^3-6*s14*d*s24^3*s23*s12-2*s14*d^2*s13^2*s23*s12^2-18*s14*d^2*s13^2*s23*s12*s34-24*s14*s24*s13*s23^3+17*d*s23*s12^3*s34^2-18*s14*d^2*s24^2*s12^2*s34-7*d*s24^2*s34^4-64*s14^2*s24*s13*s23*s12+16*s14^2*d*s23^2*s12*s34+200*s24^3*s13*s12*s34-3*d^2*s24^2*s13*s34^3+4*s14*s13^4*s12-3*d*s24^2*s13*s23^3-s14*d*s24^5+24*s14^2*d^2*s13*s23^2*s34-36*d*s24^3*s13*s34^2-3*d^2*s24^3*s13*s23^2-3*d^2*s13*s12^4*s34-2*s14^2*d*s24*s34^3+2*d*s12^5*s34-80*s14*s24*s23^3*s12+2*s24^3*s23^3-56*s14^2*s24*s23*s34^2-42*s14^2*d*s24*s23*s12^2-10*d^2*s13*s23*s12^3*s34+74*s14*d*s24*s13^2*s23*s12-12*s14^2*d*s13*s12^2*s34+30*s14*s24^2*s34^3-72*d*s24^2*s13^2*s12^2+62*s14*s13^2*s12^2*s34+50*s14*d*s24^2*s13*s23*s34-84*s14*s24^2*s23*s12^2-6*d^2*s13^4*s23*s12-12*d^2*s24*s13^2*s12^2*s34-10*d^2*s13*s23^2*s12*s34^2-16*s14^2*d*s23^3*s12+8*s14^2*s12*s34^3+32*s13*s12*s34^4-37*s14*d*s24*s13^2*s23^2+8*s14^2*d^2*s24*s23^2*s12+10*d*s24^4*s12*s34-d^2*s24*s13^3*s12^2+52*s14^2*s23^2*s12^2+16*s24^5*s13+84*s14*s24^3*s12*s34-18*d^2*s24*s13^2*s23*s34^2-4*s14^3*s23*s34^2-4*s14*s24*s13^4-84*s14*s13^2*s23*s34^2+14*s14*d*s24*s13*s12^3+114*s14*d*s13^2*s23*s12*s34-8*d^2*s24^4*s23*s34-15*s14*d*s24^3*s34^2-12*s14^2*s13*s23*s12^2+20*s14^2*d*s13*s23*s34^2+44*s14^2*s24*s12^2*s34+12*s24^2*s13^3*s34+7*s14*d^2*s23^2*s34^3+16*s14*s13*s23^3*s34-6*d^2*s24^3*s13^2*s34-18*d^2*s24^2*s13*s23*s12^2-4*d*s13*s12^5-21*d*s24^3*s13^2*s23+12*d*s13*s12^3*s34^2-32*s14^3*s13*s23*s12-92*s24*s13^3*s23*s34+14*s14*d*s13*s23*s34^3+48*s14*s24^2*s13*s12^2-8*d*s24^2*s12*s34^3-18*d^2*s24^3*s13*s23*s12-12*s14^3*d^2*s24*s23^2-12*d*s24^2*s23^2*s12^2-6*s13^2*s23^3*s12+3*s14*d*s12^5-7*d*s24^2*s13^4-18*s14^2*d*s24*s13*s12^2+8*s14^2*s24*s13*s34^2-21*d^2*s24^3*s12*s34^2+68*s13*s12^2*s34^3-4*d^2*s13^3*s23^2*s12+8*s14*s24*s13^3*s12+10*d*s13^5*s23+16*s24^2*s13*s23^2*s34-12*d*s24*s13*s23^2*s34^2+d*s24^3*s23*s34^2+9*s14*d^2*s13*s23^2*s12^2-d^2*s24^6-12*s14*s23^4*s12-12*s14^3*s13^2*s23-2*s14^2*d*s24*s13^3-8*d^2*s24^2*s23*s34^3-68*s14*s24*s13*s23*s34^2-2*s14*s24^2*s13^3+24*s14^3*d*s23*s12*s34-8*s24*s13^2*s23^2*s12-3*d*s23*s12^5+72*s14^2*s13*s23^3-8*d*s24*s13^4*s12-4*d^2*s24^3*s23^2*s34+2*s23^3*s12^2*s34+24*d*s13^2*s23^2*s34^2+12*s24^5*s34-13*s14*d*s24*s12^2*s34^2-d^2*s23^2*s12^3*s34+2*s24^2*s23^3*s34-68*s14*s24*s23^2*s12*s34+30*s14*d*s24*s23*s12^3-9*d^2*s24^4*s13*s34-10*d*s24*s23^2*s12^2*s34-9*d*s24^4*s13*s23-12*s13*s23^3*s12*s34-76*s14*s24^3*s13*s23-32*s14^3*s24*s23*s34+12*s14^2*s13^2*s12^2-2*s14^2*d^2*s13^3*s23+136*s14*s24*s13*s12^2*s34-128*s14*s13*s23*s12*s34^2+22*s12^2*s34^4-5*s14*d^2*s24^4*s12-2*d^2*s13^2*s23*s12^3+18*s14*d^2*s24*s13*s23^2*s12+16*s14*d^2*s23^3*s12*s34-6*s14*d*s24^4*s23-16*s14^2*s24*s13^2*s23+3*d*s23^3*s34^3-3*d^2*s13^2*s12^2*s34^2+17*s14*d^2*s24*s23^2*s34^2-46*d^2*s24*s13*s23*s12*s34^2+30*s24^4*s12^2-13*s14*d*s24^3*s13^2+55*d*s13*s23*s12^2*s34^2-2*s14^2*d*s13^3*s12+20*d*s24^3*s12^2*s34+8*s14*s24*s34^4+216*s24^2*s13*s12*s34^2+21*d*s13^3*s23*s12^2-42*s13^2*s23*s12^2*s34+90*d*s13^2*s23*s12*s34^2-48*d*s24^2*s13*s12^2*s34-8*s14*s24^4*s23+8*s14*d^2*s24*s23^3*s12+180*s24*s13*s12^2*s34^2-18*d*s24^4*s13^2-6*s14*d^2*s24*s13^2*s23*s34+d^2*s13*s23^2*s34^3+34*s24^3*s23*s34^2-4*s14*d*s24*s34^4+14*s14*s24^3*s13^2+24*s14^2*d*s24^2*s13*s23+12*s14*d^2*s24^2*s23*s12^2-3*s14*d^2*s13^2*s12^2*s34+2*s14*d^2*s24^2*s13*s23*s12+84*s24*s13*s23*s12^3+4*d*s23^2*s12*s34^3+48*s14*d*s13^3*s23*s12+152*s14*s24^2*s13*s12*s34+84*s24^2*s12*s34^3-24*s14^2*d*s24*s13*s12*s34-41*s14*d*s13^2*s23^2*s34-32*d*s24*s13^3*s12*s34-8*d*s24^2*s23^2*s12*s34+48*s13*s12^3*s34^2+8*s13^3*s12^3+8*s24*s23^2*s12*s34^2-4*d*s13*s12^2*s34^3+52*s24*s23*s12^3*s34-3*d^2*s24*s13*s12^4+d*s13^2*s23^3*s12+36*s24^2*s23^2*s12^2-31*d*s24*s13^2*s23*s12^2+8*s14*d*s23^4*s12-32*s14^3*d*s23^2*s34-4*s14*d*s24^3*s23*s34+66*s24^2*s13^2*s23*s12-12*s14*d^2*s13^2*s23*s34^2-9*s14*d*s24^2*s13^3+88*s24^3*s12^2*s34-d^2*s24*s23^2*s12^3-30*s13^3*s23*s12^2-6*d*s24*s13*s23^3*s12+34*s14*d^2*s13*s23^2*s12*s34-4*d^2*s24^3*s34^3-11*d*s24^2*s13*s23*s34^2-22*d^2*s24^2*s12^3*s34-8*s14*d*s23*s12^2*s34^2+8*s14*d^2*s13*s23^3*s34-3*d*s24^2*s23^3*s34-36*s13^2*s23^2*s34^2-3*s14*d^2*s12^4*s34+4*s14*d*s13*s12^3*s34+30*s24^2*s12^4-d^2*s24*s12^5-3*d*s23^3*s12^2*s34+12*s14*s24*s13^2*s34^2+12*d*s24*s23*s12*s34^3+17*s14*d*s24^2*s23^2*s12-18*s14*d*s13^2*s12*s34^2+8*s12^4*s34^2-12*s14*d^2*s24^3*s12*s34+30*s24^4*s13*s23+4*s14*d^2*s24*s23*s12*s34^2-3*d^2*s24*s13*s23^2*s12^2+132*s24^2*s13^2*s12^2-2*d^2*s24*s23*s12^4-58*s14*s13*s23^2*s12^2-18*s14^2*d*s24^2*s12*s34+52*s14*s13*s12*s34^3+2*s23^3*s12^3+22*s14*d*s13*s23*s12^2*s34-52*s14*d*s24*s13*s12*s34^2+42*s14*s24^3*s34^2-2*s14*d*s24*s13^4-6*d^2*s24*s13*s12*s34^3-2*d*s24^4*s34^2-48*s14^3*d*s13*s23^2+2*s24^2*s13*s23^3+4*s23*s34^5-20*d*s24^3*s13*s23*s34+8*s14^3*d*s24*s13*s23+d^2*s23^2*s34^4-18*s14*d^2*s24^2*s13*s12^2+8*s14^2*d^2*s24^2*s23*s34-24*s14^2*s23^3*s34+4*d*s24^5*s12-2*d^2*s24^5*s23+84*s24^3*s13*s34^2-26*s14^2*d*s23^2*s34^2-2*s14*d^2*s24*s13^3*s12-15*d^2*s24^2*s13^2*s12*s34+16*s14^2*s13^2*s12*s34+24*s14*s23^3*s12*s34+20*s14^2*d^2*s24*s23*s12*s34+16*s14^2*s24*s12^3-62*s14*d*s24*s13*s23^2*s34-d^2*s24^3*s13^3-23*s14*d*s24^2*s13^2*s12+30*s24^3*s13^2*s23-22*s14*s24*s23^2*s34^2-13*s14*d*s24^2*s34^3+44*d*s24*s13*s23*s12*s34^2-4*d^2*s24^2*s13^3*s23-28*d*s24^2*s13^3*s34-2*d^2*s13*s23*s34^4-4*s14*d^2*s13^4*s23-48*s14^2*s23*s12^2*s34-8*d*s13*s12*s34^4-30*d^2*s24^2*s23*s12^2*s34-3*d^2*s24*s13^2*s12^3-20*s14^2*s24^2*s23^2+6*s14^2*d*s24^3*s23-18*s13^4*s23^2+2*s14^2*d^2*s13^2*s23*s12+86*d*s13^3*s23*s12*s34+2*s14*d^2*s24^3*s13*s23+52*s24^4*s12*s34-28*s14*d*s24^3*s13*s34-2*s14*d*s13^4*s12-6*s14*d^2*s24*s13*s12*s34^2-8*d^2*s24^2*s23*s12^3+20*s14*s23^4*s34-172*s14*s24*s13*s23*s12^2-15*s14*d*s23^2*s12*s34^2-36*s24*s13^2*s23^2*s34-32*d*s24*s13*s12*s34^3+44*s24^2*s13*s23^2*s12-4*d*s13^3*s12^2*s34-2*s14*d^2*s23*s12^4-6*d*s24^3*s23*s12^2-28*d*s24*s13*s23^2*s12^2+21*s14*d^2*s13*s23^2*s34^2-18*s14*d*s23*s12^3*s34-27*d^2*s24^2*s12^2*s34^2-48*s24*s13^2*s23*s12*s34-18*s13^2*s23^3*s34-17*s14*d*s13*s12^2*s34^2-6*d*s24^2*s23^2*s34^2+13*d*s13^4*s23^2+32*s14^2*s24*s13*s12^2+8*s14^2*d^2*s24*s13*s23^2+10*s14*s13^3*s23^2-6*s14^2*d*s24*s13*s34^2-4*s14*s24*s13^3*s34-5*d^2*s13^3*s23^2*s34-4*s14*d*s12*s34^4-16*s14^3*s13*s23*s34+58*s14*s24^2*s13*s34^2-48*s24*s13^3*s23*s12+20*s14*d*s13*s23*s12^3-18*d^2*s24^3*s13*s23*s34+16*s14^3*d*s24^2*s23+120*s24*s13*s12^3*s34+13*s14*d^2*s24*s23^2*s12^2+10*s14^2*d*s24*s13^2*s23-d*s23^3*s12^3+4*s14^2*s24^4-2*s14*s24*s12^4+28*s24^4*s34^2+17*d*s23*s12^2*s34^3+52*d*s13^3*s23*s34^2+32*s14^3*d*s23^3-16*s13*s23^2*s12^2*s34+120*s24*s13^2*s12*s34^2+10*s23*s12^3*s34^2-96*d*s24^2*s13^2*s12*s34-6*d*s24*s23^3*s12*s34-88*s14*s24^2*s13^2*s23-8*d^2*s13^2*s23*s34^3+34*s14*d^2*s24*s13*s23^2*s34-2*s14*d^2*s24*s12*s34^3-3*s14*d^2*s24^4*s34+16*s14^2*d*s24*s23*s12*s34-12*d*s13^2*s12*s34^3-22*d^2*s13^3*s23*s12*s34-68*s14*s24^2*s23*s12*s34-12*d^2*s24^4*s13*s12-34*s14*d*s13^2*s23^3-3*d^2*s12^3*s34^3+25*s14*d^2*s23^2*s12^2*s34+28*d*s24*s12^3*s34^2-48*s14^3*s24*s23*s12-3*d^2*s24^3*s23^2*s12-4*d^2*s24*s13^4*s23+72*s24*s12^2*s34^3-2*d*s23*s34^5-2*d*s24*s13^4*s34+6*s24^2*s23^3*s12+12*s24^5*s12+2*d*s13^2*s23^2*s12^2+54*s24*s23*s12^2*s34^2-3*s14*d^2*s13^2*s12^3+12*d*s24^2*s23*s12^2*s34+88*s14*d*s24^2*s13*s23*s12-8*d^2*s13^4*s23*s34-36*s14*s24^2*s23*s34^2-16*s14^2*d^2*s24*s23^3-8*s14^2*d*s24*s12^3-8*s14*s24*s23^3*s34-30*d^2*s13^2*s23*s12*s34^2-36*d^2*s24^2*s13*s12^2*s34+22*s14^2*d*s24*s23*s34^2-4*s14^2*s24*s23*s12^2+60*s14*d*s24*s13^2*s23*s34-42*d*s24^2*s13^2*s34^2+12*s14*s24^2*s12^3-d^2*s24^2*s13^2*s23^2+2*d*s23*s12*s34^4+32*s14^2*s13*s12^2*s34+12*s14^2*d^2*s13*s23^2*s12+40*s24*s12*s34^4+10*d*s12^4*s34^2+34*s14*s12^3*s34^2-40*d*s24^3*s13*s12^2-36*s14^2*s24^3*s23-3*s14*d^2*s13*s12^4-5*d*s24^2*s12^4-8*s14*d*s13*s23^4+28*s14*s13^3*s12*s34-64*s14^2*s23^2*s12*s34+14*s14^2*d*s24^2*s23^2-72*s14^2*s24*s13*s23*s34-2*d*s13^4*s12*s34-12*d^2*s24^2*s13*s12^3-2*d^2*s24*s13^3*s12*s34-9*d^2*s24^2*s23^2*s12*s34-42*s14*d*s13*s23^2*s12*s34-20*s14^2*d*s13*s23*s12^2-40*s14^2*s13*s23*s34^2+15*s14*d^2*s24^3*s23^2-18*s14^2*d*s24*s12^2*s34-s14*d^2*s23^2*s12^3+48*s24^2*s13^3*s12-3*s14*d^2*s24^4*s13-20*d^2*s24^2*s13*s23*s34^2-9*d^2*s24^3*s13^2*s12+8*s14*s13*s23^3*s12-10*d^2*s24*s13^2*s23*s12^2+4*s14^2*s12^4+96*s14*s24^2*s12^2*s34-20*s14^3*s23*s12^2+32*s24^4*s13^2-14*s14*d*s24*s13*s34^3+6*s14*d*s24^3*s12^2-8*d^2*s24^4*s23*s12-68*s14*s13^2*s23*s12^2-7*s14*d*s12^2*s34^3-18*d^2*s24*s23*s12*s34^3+8*d*s24*s13^3*s23^2-160*s14^2*s13*s23*s12*s34-2*s14*d*s24*s23*s12*s34^2+12*s14^2*s23^2*s34^2-28*s14*s23*s12*s34^3-8*d^2*s24*s12^4*s34-6*s24*s13^2*s23^3+48*s14^2*d*s23^3*s34-4*d*s13^3*s12^3+4*s14^2*d^2*s24*s23^2*s34-46*d^2*s24^2*s13*s23*s12*s34-9*s14*d^2*s24*s13^2*s12^2+18*s14*d*s23*s12*s34^3+72*s24^4*s13*s12+4*s24*s23^3*s12*s34+180*s24^2*s13^2*s12*s34+10*d*s13*s23^2*s12^2*s34-48*d*s24*s13^2*s12*s34^2+7*s14*d*s12^4*s34-12*d^2*s24*s13*s23^2*s12*s34+25*s14*d^2*s24^2*s23^2*s34-4*d*s24*s12^5+32*s13^3*s12*s34^2-8*d*s24*s13*s12^3*s34-36*s24*s13^4*s23+24*s24^3*s23^2*s12-10*d^2*s24*s12^2*s34^3-60*s14*s13*s23^2*s12*s34+4*s14^3*d^2*s23^2*s34-12*s14*d*s13*s23^3*s12+96*s24^2*s23*s12^2*s34-s14*d^2*s24^2*s13^3-10*d*s24*s23^2*s34^3+35*d*s24*s23*s12^2*s34^2+20*s14*s24*s13*s34^3+4*s14*s23*s34^4+30*s14*d*s13^2*s23*s12^2-52*s14*s24*s23*s12*s34^2-8*d^2*s23*s12^3*s34^2+8*s14^3*d*s13*s23*s34-6*s24*s23^3*s34^2+16*s14*d^2*s24^3*s23*s12-24*s13^2*s23*s34^3-8*d*s24^3*s34^3-8*d*s24*s13*s34^4+40*s24*s13*s23^2*s12^2+8*d*s23^2*s12^2*s34^2-12*s14*d^2*s24*s12^3*s34-112*s14*s24*s13^2*s23*s34-26*d*s24^2*s13*s23^2*s12-48*s13^3*s23^2*s34-18*s14*d^2*s24^2*s13*s12*s34+17*s14*d^2*s13^2*s23^2*s12-9*s14*d^2*s24^2*s12*s34^2-6*s13^3*s23^3-200*s14*s24^2*s13*s23*s12-10*s14*d*s13^3*s12*s34+6*d*s24*s13^2*s23^2*s34+120*s24*s13*s12*s34^3+8*s14^3*d*s23*s12^2-16*s14^3*d^2*s23^3-12*s14*d^2*s13^3*s23*s34+60*s24^2*s23*s12^3+4*s14^2*d*s24*s13*s23*s12-2*s14*s12^5-18*s14^2*d*s24^2*s13*s12+6*s14*d*s24^2*s23*s34^2+16*s14^2*s24^2*s13*s34-3*d^2*s24^4*s13^2+20*d*s24*s13^3*s23*s12+24*s14^3*d*s24*s23*s12+2*s13*s23^3*s12^2-10*d*s13*s23^2*s12^3+48*s24*s13*s23*s12*s34^2+108*s24^2*s12^2*s34^2+22*s14*s24^4*s12-4*s14*d*s24*s23^3*s34-12*s14*d^2*s24^3*s13*s12-14*d^2*s24^2*s13^2*s23*s12+26*s14*d*s13^4*s23-8*s24*s13^3*s34^2-60*s14^2*s13^2*s23*s12+2*s13^4*s12^2-8*s14*s24*s23*s34^3+46*s14^2*d*s13^2*s23*s34-8*s14^2*d*s24^3*s12+8*s14^2*d^2*s24^3*s23+28*s24*s12^4*s34-12*d*s24*s13^2*s34^3+24*s14^2*s24^2*s12^2+12*s14^2*d^2*s23*s12^2*s34+18*s14*d*s23^3*s34^2-2*d^2*s24^2*s13^3*s12-11*d*s13*s23*s12^4+d*s23*s12^4*s34-20*d*s24^3*s13^3+108*s24^3*s13^2*s12+40*s14^2*s24*s23^3-3*s14*d^2*s24^2*s13^2*s34+44*s14*d*s24^2*s13^2*s23-26*s14*d*s24^2*s23*s12*s34-s14*d^2*s24^2*s34^3+30*s24^4*s23*s12-28*s14^3*s24^2*s23-10*s14*d*s24*s13^3*s34-2*d^2*s24*s12*s34^4-2*s14*d^2*s24*s13^3*s23-21*d^2*s24*s13*s12^2*s34^2-5*d*s23^2*s34^4-5*d^2*s24^5*s12+94*s14*s13*s12^2*s34^2+10*s14^2*d^2*s23^2*s34^2+74*s14*d*s24*s13*s23*s12^2-35*s14*d*s24^2*s13*s34^2-88*s14^2*s24^2*s23*s34+d*s24^5*s23+9*s14*d^2*s24^2*s13*s23^2+20*s12^3*s34^3-48*s14*s13*s23*s12^3-12*s14^2*d*s24^2*s23*s12+112*s24^2*s13*s12^3-6*d^2*s24*s13*s23*s12^3-2*s14*s23^2*s34^3-44*s13^4*s23*s34-58*s14*s23^2*s12*s34^2-2*s14^2*d*s23*s34^3-9*d^2*s24*s23^2*s12*s34^2-4*s14*s23*s12^3*s34+6*s14*s24^5+40*s14^2*d*s23*s12*s34^2-14*d^2*s24*s23*s12^3*s34+4*s14^3*d^2*s13*s23^2-6*d^2*s24^4*s34^2+4*s24^2*s13^2*s23^2-6*d*s24*s23*s34^4+8*s14*d^2*s13^2*s23^3-9*s14*d^2*s24*s12^2*s34^2-4*d*s23^2*s12^3*s34+6*s24^5*s23+4*s24*s13*s23^3*s12-3*d^2*s13^2*s23^2*s34^2+8*d*s12^3*s34^3+42*s24^2*s13*s23*s34^2-2*d*s24^3*s23^2*s34-47*d*s24^2*s13^2*s23*s12+12*s14*s24*s13*s23^2*s34+42*s24*s13^2*s23*s12^2+56*s14*s24^3*s13*s34-6*d^2*s24^4*s13*s23-20*d*s24^4*s13*s34+6*s23^2*s34^4+84*s14^3*s13*s23^2+3*s14*d*s13^2*s12^3+34*s14*s24^2*s13^2*s12-40*s14*d*s23^3*s12*s34-5*d*s13^2*s23*s12^3+48*s24*s23*s12*s34^3+26*s14*d^2*s24^2*s23*s12*s34-3*d*s24*s23^3*s12^2-28*d^2*s24^3*s12^2*s34-12*s14*s24*s23^4+24*s24*s23^2*s12^3-6*d^2*s13^3*s23*s12^2-7*s14*d*s24^4*s34+72*s24^2*s12^3*s34+4*s14^2*s24*s13^2*s34-25*s14*d*s24*s23^2*s34^2-12*s14^2*d*s24*s13^2*s12-6*d*s13^2*s12^2*s34^2-11*d^2*s24^2*s12*s34^3-4*s14*d^2*s13*s23*s34^3-2*s14*d^2*s24*s13*s23*s12^2-2*d^2*s13^4*s23^2-42*d*s24*s13*s23*s12^3-6*d^2*s13*s12^3*s34^2-84*s14*s13*s23*s12^2*s34+152*s14*s24*s13*s12*s34^2+4*d*s24^3*s12*s34^2-12*d*s24*s13*s12^2*s34^2+22*d*s13^3*s23^2*s12-60*s13^2*s23*s12*s34^2+240*s24^2*s13*s12^2*s34-d*s13^4*s12^2+48*s24*s13*s12^4-3*d^2*s24^2*s23^2*s12^2-38*d^2*s24*s13*s23*s12^2*s34+10*s14*s13^3*s12^2+128*s14^2*s24*s13*s23^2+9*s14*d*s13*s23^2*s12^2+6*d*s24*s23*s12^3*s34-6*s23^3*s12*s34^2+2*s12^6-12*d^2*s24^3*s23*s34^2+12*s14*d*s23*s12^4+9*d*s13*s23^3*s34^2+2*d*s24*s23^2*s12*s34^2-5*d*s24^2*s23*s34^3+20*s24^3*s13^3-14*s14*d*s13*s12*s34^3+32*s24^2*s23^2*s12*s34+40*s24*s13^3*s12*s34-s14*d^2*s12^2*s34^3-24*s14^2*d*s24*s23^2*s12+17*s14*d^2*s24*s13^2*s23^2-8*s14^2*s24*s23^2*s34-18*s14*d*s24*s13^2*s34^2+3*d*s13^3*s23^3-6*s14^2*d*s13*s12*s34^2-18*d^2*s24*s13*s12^3*s34+52*d*s24*s13^2*s23*s12*s34+68*s24*s13^2*s12^3+40*s14*s13*s12^3*s34-28*d*s24*s13^3*s12^2-7*d^2*s13*s23^2*s12^2*s34-16*s14^2*d^2*s23^3*s34-6*d^2*s24*s13^2*s12*s34^2-17*d^2*s24^4*s12*s34+60*s14*s13^2*s12*s34^2-130*s14*s24^2*s23^2*s12+23*s14*d*s23^2*s12^3-92*s13^3*s23*s12*s34+3*d*s24^4*s23*s34-12*s14*d^2*s24*s13*s12^3-3*s14*d*s24^3*s23^2-16*s14^4*d*s23^2-32*s14*s24^3*s23*s34-8*s14^3*s24*s13*s23+32*s14^2*s23^4-7*s14*d*s24^4*s13-6*d^2*s24^3*s13^2*s23-16*s14*s23*s12^2*s34^2-48*d*s24^3*s13^2*s34-4*s14^2*s23*s34^3-10*s14*d^2*s24^3*s12^2-28*d^2*s24*s23*s12^2*s34^2-2*s14^2*d^2*s13*s23*s34^2-18*s24^2*s13^3*s23+4*s13*s23*s34^4-28*d*s24^2*s13*s34^3+52*s14^3*s23^2*s34-52*s14*d*s24^2*s13*s12*s34+18*s14*s13^2*s23^2*s34-3*d^2*s12^4*s34^2+7*s14*d*s13*s12^4-12*s14^2*d*s24^2*s12^2+8*s14^2*d^2*s23^2*s12*s34-2*d^2*s24*s13^2*s23^2*s34-8*d*s24^3*s13*s23^2+2*s14^2*d^2*s24^2*s23^2-6*d^2*s24^2*s13*s23^2*s12-9*d^2*s24^3*s13*s34^2-5*d^2*s24^2*s12^4+4*d*s13*s12^4*s34+16*s14^2*s24^3*s12-88*s14^2*d*s13*s23^2*s34+72*s14^2*s13*s23^2*s12+12*s24*s12^5+32*s14^2*s24*s12*s34^2-40*s14*s23^3*s12^2+20*s14^2*d^2*s24*s23*s12^2-9*d^2*s24^2*s13^2*s12^2-40*s14*s24^2*s23^3+30*s24*s23*s12^4+16*s14^2*d*s24*s23^3+32*s24^3*s34^3+16*s14^2*d^2*s24*s13*s23*s12-72*s14*s13^3*s23*s12+2*s24^6-10*d^2*s24*s13^3*s23*s12+28*d*s13^4*s23*s12+64*s24^3*s13*s23*s34-9*s14*d^2*s24^2*s13^2*s12+22*s24^4*s23*s34-10*s14*d^2*s24^2*s12^3+10*s14*d*s24^2*s23^3-d^2*s24^2*s13^3*s34+2*d*s13*s23*s34^4+22*s14*d*s23^3*s12^2-d*s24^2*s13^3*s23-70*s14*d*s24*s23^2*s12*s34+72*s24^3*s13^2*s34-d*s12^6+110*s14*s24*s12^2*s34^2+12*s14^2*s24^2*s34^2-36*d*s24*s13^2*s12^3-18*d^2*s13*s23*s12*s34^3-6*s14*d^2*s24^3*s13*s34+32*s14^4*s23^2-8*s14^2*d^2*s23^4+34*s14*d*s24^3*s13*s23+8*s14^3*d*s13^2*s23-3*s14*d^2*s12^3*s34^2-16*d^2*s24^2*s13^2*s23*s34+36*s24*s13^3*s12^2-2*s14*s13*s12^4-20*s14*d*s24*s13*s12^2*s34+28*s14^2*d*s13^2*s23*s12-68*s14*s24*s23*s12^3+84*s14*d*s13*s23*s12*s34^2-136*s14^2*s24*s23*s12*s34-6*s14^2*d*s24^3*s34-s14*d^2*s24^5-68*s14^2*s13^2*s23*s34-32*d^2*s24^2*s23*s12*s34^2-6*s14^2*d*s12^2*s34^2-10*d^2*s24^4*s12^2-100*s14^2*s23*s12*s34^2-11*d*s24*s23*s12^4-42*s14*s24^3*s23^2+8*s12*s34^5-46*s14*s23^2*s12^3-d*s24^4*s23^2-36*s13^4*s23*s12+16*s14^2*s12^3*s34-24*s14^2*d*s23*s12^3-d^2*s12^2*s34^4+18*s14*s24^4*s13-56*d*s24^3*s13*s12*s34+30*s14*d*s24*s13*s23*s34^2+6*s14^2*d^2*s23^2*s12^2+30*s14^2*d*s24^2*s23*s34-20*s14*s13*s23*s34^3-56*s14^2*s24^2*s23*s12+52*s24^2*s13*s34^3-11*d^2*s13^2*s23^2*s12*s34-10*d^2*s24*s13*s23*s34^3+4*d*s24*s13*s23*s12^2*s34-12*s14*d*s24*s13^3*s12-4*d^2*s24^5*s34-3*d*s23^2*s12^4+16*s24^3*s13*s23^2+144*s24^2*s13*s23*s12*s34+20*s13*s12^4*s34+2*d*s13*s23^3*s12*s34+d*s24^6+66*s14*d*s13^2*s23*s34^2-20*s14*s23*s12^4+12*s14*s24*s13*s12^3+16*s14^3*d*s13*s23*s12+6*s24*s23^3*s12^2+28*s24*s23^2*s12^2*s34+68*s14^2*d*s13*s23*s12*s34+10*s14*d^2*s24^3*s23*s34+6*s13^2*s23*s12^3-16*s14*d*s13*s23^3*s34-12*s14^3*d^2*s23^2*s12+72*s13^2*s12^2*s34^2+20*d*s24^2*s12^3*s34+2*s14*d^2*s23*s12^2*s34^2-10*d*s24*s23^2*s12^3-s14*d^2*s12^5-38*d^2*s24*s13^2*s23*s12*s34+34*s14*s24*s13^2*s23^2+12*s24^3*s23^2*s34-6*s14*d^2*s13*s12^3*s34-3*s14*d*s13^3*s12^2+8*s23^2*s12^3*s34-6*s14^2*d*s24^3*s13-60*d*s24^2*s13*s12*s34^2+59*d*s13^2*s23*s12^2*s34+6*s13*s23*s12^2*s34^2+60*s24^4*s13*s34+4*s14^2*s24^2*s13^2-14*s14*d*s24^3*s12*s34+7*s14*d^2*s13^3*s23^2-26*d^2*s24^3*s23*s12*s34-172*s14*s13^2*s23*s12*s34+29*s14*d^2*s24^2*s23^2*s12-2*d*s24*s34^5-56*s14^3*s23*s12*s34-2*d*s13*s23^2*s34^3-62*s14^2*d*s13^2*s23^2+8*s14*d*s24*s23^4-6*d*s13^2*s12^4+d*s23^3*s12*s34^2+32*s14*d*s24*s23^3*s12+26*s14*s24^4*s34+32*s14^2*d*s24*s13*s23*s34-6*s14*d^2*s13^3*s23*s12+30*s24^2*s23*s34^3+22*s14*d^2*s24*s23*s12^2*s34-3*d^2*s23^2*s12*s34^3+28*s14^2*s24^2*s13*s12+18*s14*d*s24^2*s23*s12^2+6*s14^2*d^2*s24^2*s13*s23-32*s14^2*s13^3*s23-5*s14*d^2*s24*s12^4-12*s14^2*d*s24^2*s13*s34+16*s14^3*d*s24*s23*s34-18*s13*s23^3*s34^2+54*d*s24*s13^3*s23*s34-13*s14*d*s13^2*s12^2*s34+21*s14*d^2*s13^2*s23^2*s34-6*s14^2*d*s13*s12^3+6*s14*s13^2*s12^3-124*s14*s24^2*s13*s23*s34-10*d*s24*s13^2*s23^2*s12-3*d^2*s24^5*s13-20*d*s24*s13*s12^4-156*s14*s24*s13^2*s23*s12-18*d*s24^2*s13*s23^2*s34-8*s14^2*d^2*s13*s23^3+92*s24^3*s12*s34^2-3*d^2*s13*s12^2*s34^3-6*s14*d^2*s24*s13^2*s12*s34-36*s13^3*s23^2*s12+16*s14^2*s23*s12^3-60*d*s24^3*s13^2*s12-6*s14^2*d*s12^3*s34+10*s23*s12^4*s34-3*s14*d^2*s24^3*s34^2+10*s14^2*d^2*s13*s23*s12^2+18*s13*s23*s12^4+12*s13^2*s12^4-15*s14*d*s23^2*s34^3+24*s14*d*s24*s13*s23^3+d*s24^4*s23*s12-44*s14*s24^3*s23*s12+20*s14^2*s12^2*s34^2-208*s14*s24*s13*s23*s12*s34+10*d*s24^3*s23*s12*s34-d^2*s24*s13^3*s23^2-8*s14^2*d^2*s23^3*s12-8*d*s24*s13^3*s34^2-8*d*s24*s13*s23^2*s12*s34-62*s14*s24^2*s23^2*s34-7*s14*d*s24*s13^2*s12^2+32*s14^2*s24*s23^2*s12+4*s14^2*d*s24*s23^2*s34+20*s14^2*s13*s12*s34^2-24*d^2*s24^2*s13*s12*s34^2-22*d^2*s13^2*s23*s12^2*s34+10*d*s24*s12^4*s34+8*s24*s13^2*s34^3-40*s14*d*s24*s23*s12^2*s34+48*s14^2*s24*s13*s12*s34+4*s14^2*d^2*s24*s13*s23*s34-92*s14*s13^3*s23*s34-d^2*s12^5*s34-14*d^2*s24*s13^3*s23*s34+108*s24^3*s13*s23*s12+38*d*s13^4*s23*s34-32*s14*s23^3*s34^2-12*d*s24^2*s13^2*s23^2-4*d^2*s23*s12*s34^4+16*s24*s23*s34^4-3*d^2*s24^2*s13^2*s34^2+40*s24^3*s12^3-18*d^2*s24^3*s13*s12^2-5*d^2*s24^2*s13*s23^2*s34+44*s14*s24*s12^3*s34+12*s14^2*s24^3*s34-d^2*s24^2*s34^4+4*s24*s34^5+96*s14^2*s13*s23^2*s34-52*s14^2*d*s13*s23^2*s12-44*s14*d*s24*s13^2*s12*s34-12*s14^2*d*s24*s12*s34^2-12*s14^3*s23^2*s12-40*d*s24^2*s13*s12^3+118*s14*s24^2*s12*s34^2-32*s14*s13^4*s23-2*s14*s13^2*s23^2*s12-2*s14^2*d*s12^4-3*d^2*s24*s13^2*s23^2*s12-6*s14^2*d*s24^2*s34^2-10*d^2*s23*s12^2*s34^3+50*s14*d^2*s24*s23^2*s12*s34+12*s24*s23^2*s34^3-2*d*s12*s34^5+24*s14^2*d*s13^3*s23+6*s24^4*s23^2-12*d^2*s13^3*s23*s34^2-s14*d*s24^4*s12-6*s14^2*d*s24*s13^2*s34+4*s14^2*d^2*s24*s13^2*s23+43*s14*d*s24*s23^2*s12^2+16*s14^2*s24*s13^2*s12+26*s14*s24^2*s13^2*s34-20*s14*d*s24*s12*s34^3+6*s14*d^2*s24^4*s23+28*d*s13^2*s23*s34^3+84*s14^2*s13^2*s23^2-3*s14*d^2*s24^3*s13^2+d*s24*s23^3*s34^2-7*d*s24^2*s13^2*s23*s34-57*s14*d*s23^2*s12^2*s34-15*d^2*s24*s12^3*s34^2-172*s14*s24*s13*s23^2*s12+52*s14*s24^3*s13*s12+34*d*s13*s23*s12*s34^3-60*s24*s13^2*s23*s34^2-20*d*s24^4*s13*s12-2*s14*d^2*s24*s23*s34^3-18*s14*d^2*s24*s13*s12^2*s34-18*s14*d^2*s13*s23*s12*s34^2+6*s23^2*s12^4-2*d^2*s13^2*s23^2*s12^2-12*s24*s13*s23^3*s34-8*d*s13^3*s12*s34^2+144*s24^2*s13*s23*s12^2+20*d*s24*s13^4*s23+12*s14^2*s13*s12^3-6*d*s24^3*s23^2*s12+17*s14*d^2*s23^2*s12*s34^2-3*d*s13*s23^3*s12^2-2*d^2*s13^5*s23-4*s14*d*s23*s34^4-30*d^2*s24^3*s13*s12*s34-14*d*s24^2*s23*s12^3+6*s14*d^2*s23*s12^3*s34+24*d*s24^2*s12^2*s34^2-43*s14*d*s13*s23^2*s34^2+19*d*s24^2*s23*s12*s34^2+36*s13^2*s12^3*s34+12*s13*s23^2*s12^3-d^2*s13^3*s12^2*s34-12*d^2*s24^3*s23*s12^2-52*s14*s24*s13^3*s23-2*s14^2*d*s24^4+34*d*s13^3*s23^2*s34-4*d^2*s24^2*s23^2*s34^2-4*s23^2*s12^2*s34^2-6*s14^2*d*s24^2*s13^2+16*s14^3*d*s24*s23^2-3*s14*d^2*s13*s12^2*s34^2+12*s24*s13*s34^4-64*s14^2*d*s24*s13*s23^2+16*s13*s23*s12^3*s34-2*s14*d^2*s13*s23*s12^3-114*s14*s24^2*s13*s23^2+6*s14*s12^4*s34+8*s14^2*s24^3*s13-6*s14*d^2*s24*s13*s23*s34^2+144*s24*s13^2*s12^2*s34+2*d*s24*s13*s23*s34^3-36*s13*s23^2*s12*s34^2+48*d*s13^2*s23^2*s12*s34-4*s24*s13^5))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (1/2*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)*Den(4*s24*s12+2*s34^2+2*s13^2-d*s24^2-d*s12^2-2*d*s24*s12-2*d*s12*s34+4*s24*s13+2*s24^2+4*s14*d*s23+4*s24*s34+2*s12^2-2*d*s24*s34-d*s34^2-d*s13^2-2*d*s24*s13+4*s12*s34-2*d*s13*s12+4*s13*s12-2*d*s13*s34+4*s13*s34-8*s14*s23)*Den(s14+s24+s13+s23+s12+s34)*(10*s14^2*d*s23^2*s12^2+30*d*s24*s12*s34^4-90*s14*d*s24*s13^3*s23-12*s14*d^2*s24*s13^3*s34-100*s13^4*s12*s34-10*s14*s12^2*s34^3+6*s14^2*d*s12*s34^3-12*s14^2*s23^3*s12-2*s14^2*d^2*s24^2*s23*s12-4*s14*d*s24^2*s13*s23^2-9*s14*d^2*s24^2*s13*s34^2-8*s14^2*s24^2*s12*s34+6*s14^2*d^2*s23*s12*s34^2+3*d^2*s24*s23*s34^4+10*s23*s12*s34^4-180*s24^2*s13^2*s34^2-32*s14*s13*s23^2*s34^2-2*s14^2*d^2*s23*s12^3+12*d*s12^2*s34^4-8*s24*s13^3*s23^2-48*s24^2*s13^4+20*s14^2*d^2*s13^2*s23*s34+8*s14*d*s24^3*s13*s12+4*s14*s23^2*s12^2*s34+33*s14*d*s13^4*s34-4*d^2*s24*s13^5-20*s14^2*d*s23*s12^2*s34+9*s14*d*s12^3*s34^2-40*d^2*s24*s13^2*s34^3-36*s14^3*s24*s23^2+72*d*s24^2*s13^3*s12-5*d^2*s13*s23*s12^2*s34^2-10*s13^5*s23-12*s14^2*s24*s34^3-40*s14*s24*s12*s34^3+18*s14^2*d*s13^2*s12*s34-24*s14*d*s24*s13*s23^2*s12+14*s14*d^2*s24^2*s13^2*s23+83*s14*d*s24^2*s13^2*s34+10*s24^2*s23*s12*s34^2+8*s14*d*s24*s12^3*s34-4*s24^2*s23^2*s34^2-20*d^2*s24*s13*s34^4+8*s14^3*s23^3-12*s14*d^2*s13^3*s12*s34+16*s14*s13^2*s23^3-44*s14*d*s13^2*s23^2*s12+16*s14^2*d*s13*s23^3+31*s14*d*s24^2*s12*s34^2-80*s13^3*s34^3-d^2*s13^2*s12^4+10*s14*d^2*s24^2*s23*s34^2-12*s14^2*s13^3*s12+68*s14^2*s24^2*s13*s23+24*s14*d^2*s24^2*s13*s23*s34-14*s14^2*d^2*s13^2*s23^2-24*s13^2*s23^2*s12*s34-176*s14*d*s24*s13*s23*s12*s34+156*d*s24*s13^2*s12^2*s34+12*d*s13*s23^2*s12*s34^2+32*s24*s13*s23*s34^3-100*s14*d*s13^3*s23*s34-248*s14*s24*s13^2*s12*s34-12*d^2*s13^2*s12^3*s34+28*s14*d^2*s24*s13^2*s23*s12+6*s14^2*d*s13^2*s12^2+10*d*s13*s23*s12^3*s34-108*s13^3*s12^2*s34+4*s24*s12^3*s34^2+4*s14*d*s24^2*s23^2*s34-14*s14*s12*s34^4+16*s14*d^2*s23*s12*s34^3-120*s13^2*s12*s34^3-3*s14*d^2*s13^3*s12^2-4*s13^2*s23^2*s12^2-24*s14*d*s13^3*s23^2-2*d*s24^2*s13*s23*s12*s34-12*s24^2*s34^4-4*d^2*s24*s34^5-20*s24*s13*s23*s12^2*s34+24*d*s24*s12^2*s34^3-82*s14*s24*s13^2*s12^2-120*s24*s13^4*s34+2*s23*s12^2*s34^3-36*s13^3*s23*s34^2-16*s14^2*s24*s13^3-16*s14^3*d*s23^2*s12-6*d*s24*s13^2*s23*s34^2-10*s24^2*s13^2*s23*s34+14*s14*d^2*s13^2*s23*s12^2+48*s14*d^2*s13^2*s23*s12*s34+8*s14*s24*s13*s23^3+3*d*s23*s12^3*s34^2+8*s14^2*d*s23^4+18*d*s24^2*s34^4+104*s14^2*s24*s13*s23*s12-20*s14^2*d*s23^2*s12*s34-40*s24^3*s13*s12*s34-24*d^2*s24^2*s13*s34^3-34*s14*s13^4*s12-36*s14^2*d^2*s13*s23^2*s34+50*d*s24^3*s13*s34^2-5*s14*d^2*s13*s34^4-2*d^2*s13*s12^4*s34+6*s14^2*d*s24*s34^3+96*s14^2*s24*s23*s34^2+4*s14^2*d*s24*s23*s12^2-2*d^2*s13*s23*s12^3*s34-124*s14*d*s24*s13^2*s23*s12+12*s14^2*d*s13*s12^2*s34-30*s14*s24^2*s34^3+36*d*s24^2*s13^2*s12^2-94*s14*s13^2*s12^2*s34-128*s14*d*s24^2*s13*s23*s34-3*d^2*s13^4*s23*s12-36*d^2*s24*s13^2*s12^2*s34+16*s14^2*d*s23^3*s12-8*s14^2*s12*s34^3-18*s14*d^2*s24*s13^2*s34^2-40*s13*s12*s34^4-20*s14*d*s24*s13^2*s23^2+80*d*s13^3*s34^3-4*s14^2*d^2*s24*s23^2*s12-12*d^2*s24*s13^3*s12^2-4*s14^2*s23^2*s12^2-12*s14*s24^3*s12*s34+6*d^2*s24*s13^2*s23*s34^2-4*s14^2*s34^4+28*s14^3*s23*s34^2-42*s14*s24*s13^4+144*s14*s13^2*s23*s34^2+8*s14*d*s24*s13*s12^3-146*s14*d*s13^2*s23*s12*s34+11*s14*d*s24^3*s34^2+36*s14^2*s13*s23*s12^2-122*s14^2*d*s13*s23*s34^2-4*s14^2*s24*s12^2*s34-156*s24^2*s13^3*s34-4*s14*d^2*s23^2*s34^3+32*s14*s13*s23^3*s34-12*d^2*s24^3*s13^2*s34-d*s24^3*s13^2*s23+32*d*s13*s12^3*s34^2+32*s14^3*s13*s23*s12-48*s24*s13^3*s23*s34-124*s14*d*s13*s23*s34^3-36*s14*s24^2*s13*s12^2+30*d*s24^2*s12*s34^3-16*s24*s13*s23^2*s12*s34-15*d^2*s13^4*s34^2+4*s14^3*d^2*s24*s23^2+36*d*s24^2*s13^4+6*s14^2*d*s24*s13*s12^2-40*s14^2*s24*s13*s34^2-4*d^2*s24^3*s12*s34^2-36*s13*s12^2*s34^3-104*s14*s24*s13^3*s12+7*d*s13^5*s23+10*s14*d^2*s23*s34^4-8*s24^2*s13*s23^2*s34+12*d*s24*s13*s23^2*s34^2-5*d*s24^3*s23*s34^2+4*s14*d^2*s13*s23^2*s12^2+20*s14^3*s13^2*s23-12*s14*d^2*s13*s12*s34^3+6*s14^2*d*s24*s13^3-8*s23^2*s12*s34^3+3*d^2*s24^2*s23*s34^3+212*s14*s24*s13*s23*s34^2-62*s14*s24^2*s13^3-8*s14^3*d*s23*s12*s34-4*d^2*s13^5*s12-8*s24*s13^2*s23^2*s12+4*s14^2*s13*s23^3+66*d*s24*s13^4*s12+12*d*s13^2*s23^2*s34^2-10*s14*d^2*s13^2*s34^3+29*s14*d*s24*s12^2*s34^2-2*d^2*s24^4*s13*s34+12*s14*s24^3*s13*s23+32*s14^3*s24*s23*s34-12*s14^2*s13^2*s12^2-4*d^2*s12*s34^5+6*s14^2*d^2*s13^3*s23-104*s14*s24*s13*s12^2*s34+80*s14*s13*s23*s12*s34^2-d^2*s13^2*s23*s12^3-4*s14^2*s13^4+144*s14^2*s24*s13^2*s23-36*d^2*s13^2*s12^2*s34^2-8*s14*d^2*s24*s23^2*s34^2+2*d^2*s24*s13*s23*s12*s34^2+15*s14*d*s24^3*s13^2+23*d*s13*s23*s12^2*s34^2+6*s14^2*d*s13^3*s12-22*s14*s24*s34^4-120*s24^2*s13*s12*s34^2+21*d*s13^3*s23*s12^2-58*s13^2*s23*s12^2*s34+42*d*s13^2*s23*s12*s34^2+48*d*s24^2*s13*s12^2*s34-84*s24*s13*s12^2*s34^2+7*d*s24^4*s13^2+60*s14*d^2*s24*s13^2*s23*s34+12*s14^2*d*s13^2*s34^2+6*s24^3*s23*s34^2+17*s14*d*s24*s34^4-38*s14*s24^3*s13^2-16*s14^2*s13^3*s34-30*s14^2*d*s24^2*s13*s23-15*d^2*s13^2*s34^4-9*s14*d^2*s13^2*s12^2*s34+4*s14*d^2*s24^2*s13*s23*s12+4*d*s23^2*s12*s34^3-54*s14*d*s13^3*s23*s12-136*s14*s24^2*s13*s12*s34-16*s13*s34^5-12*s24^2*s12*s34^3+24*s14^2*d*s24*s13*s12*s34-24*s14*d*s13^2*s23^2*s34+228*d*s24*s13^3*s12*s34-16*s13*s12^3*s34^2-24*s13^3*s12^3-8*s24*s23^2*s12*s34^2+66*d*s13*s12^2*s34^3+13*d*s24*s13^2*s23*s12^2+64*s14^3*d*s23^2*s34-6*s14*d*s24^3*s23*s34-14*s24^2*s13^2*s23*s12+48*s14*d^2*s13^2*s23*s34^2+31*s14*d*s24^2*s13^3-30*s13^3*s23*s12^2+8*s14*d^2*s13*s23^2*s12*s34-4*d^2*s24^3*s34^3-25*d*s24^2*s13*s23*s34^2-6*s14*d*s23*s12^2*s34^2-24*s13^2*s23^2*s34^2+22*s14*d*s13*s12^3*s34-84*s24*s13^4*s12-192*s14*s24*s13^2*s34^2-14*d*s24*s23*s12*s34^3+114*s14*d*s13^2*s12*s34^2+2*s12^4*s34^2+20*s14*d^2*s24*s23*s12*s34^2-10*s14*d^2*s13^3*s34^2-48*s24^2*s13^2*s12^2+12*s14*s13*s23^2*s12^2+8*s14^2*d^2*s23*s34^3+6*s14^2*d*s24^2*s12*s34-76*s14*s13*s12*s34^3-48*s14*d*s13*s23*s12^2*s34+134*s14*d*s24*s13*s12*s34^2-18*s14*s24^3*s34^2+25*s14*d*s24*s13^4-48*d^2*s24*s13*s12*s34^3+3*d*s24^4*s34^2+64*s14^3*d*s13*s23^2+6*s23*s34^5-6*d*s24^3*s13*s23*s34-24*s14^3*d*s24*s13*s23+36*s14^2*s23^3*s34-52*s24^3*s13*s34^2+74*s14^2*d*s23^2*s34^2-6*s14*d^2*s24*s13^3*s12-36*d^2*s24^2*s13^2*s12*s34-32*s14^2*s13^2*s12*s34+8*s14*s23^3*s12*s34+4*s14^2*d^2*s24*s23*s12*s34+8*s14*d*s24*s13*s23^2*s34-4*d^2*s24^3*s13^3+43*s14*d*s24^2*s13^2*s12-2*s24^3*s13^2*s23-36*s14*s24*s23^2*s34^2+21*s14*d*s24^2*s34^3-2*d*s24*s13*s23*s12*s34^2+d^2*s24^2*s13^3*s23+126*d*s24^2*s13^3*s34+3*d^2*s13*s23*s34^4+6*s14*d^2*s13^4*s23+16*s14^2*s23*s12^2*s34+60*d*s13*s12*s34^4-4*d^2*s24*s13^2*s12^3-12*s14^2*s24^2*s23^2-4*s13^4*s23^2+10*s14^2*d^2*s13^2*s23*s12+56*d*s13^3*s23*s12*s34+26*s14*d*s24^3*s13*s34+23*s14*d*s13^4*s12+24*s14*d^2*s13*s23*s12^2*s34-18*s14*d^2*s24*s13*s12*s34^2-d^2*s13^6+12*s14*s24*s13*s23*s12^2+4*s14*d*s23^2*s12*s34^2-24*s24*s13^2*s23^2*s34-6*d^2*s13^5*s34+156*d*s24*s13*s12*s34^3+102*d*s13^3*s12^2*s34-4*s14*d^2*s13*s23^2*s34^2-2*s14*d*s23*s12^3*s34-6*d^2*s24^2*s12^2*s34^2-68*s24*s13^2*s23*s12*s34+61*s14*d*s13*s12^2*s34^2+5*s14*d*s34^5+2*d*s24^2*s23^2*s34^2+2*d*s13^4*s23^2-16*s14^2*s24*s13*s12^2-20*s14^2*d^2*s24*s13*s23^2+32*s14*s13^3*s23^2+18*s14^2*d*s24*s13*s34^2-148*s14*s24*s13^3*s34+15*s14*d*s12*s34^4+48*s14^3*s13*s23*s34-122*s14*s24^2*s13*s34^2-44*s24*s13^3*s23*s12-10*s14*d*s13*s23*s12^3+2*d^2*s24^3*s13*s23*s34-6*d^2*s13^4*s12^2-24*s24*s13*s12^3*s34-96*s14^2*d*s24*s13^2*s23+8*s14^2*d*s13^3*s34-2*s24^4*s34^2+d*s23*s12^2*s34^3+22*d*s13^3*s23*s34^2-16*s14^3*d*s23^3-8*s13*s23^2*s12^2*s34-288*s24*s13^2*s12*s34^2-24*s14^2*s13^2*s34^2-2*s23*s12^3*s34^2+174*d*s24^2*s13^2*s12*s34+76*s14*s24^2*s13^2*s23+2*d^2*s13^2*s23*s34^3-8*s14*d^2*s24*s13*s23^2*s34-6*s14*d^2*s24*s12*s34^3-44*s14^2*d*s24*s23*s12*s34+140*d*s13^2*s12*s34^3-8*d^2*s13^3*s23*s12*s34+12*s14*s24^2*s23*s12*s34-74*s14*d*s24*s23*s34^3-8*s14*d*s13^2*s23^3-4*d^2*s12^3*s34^3+4*s14*d^2*s23^2*s12^2*s34+6*d*s24*s12^3*s34^2+16*s14^3*s24*s23*s12-40*d^2*s13^3*s12*s34^2-d^2*s24*s13^4*s23-5*d*s23*s34^5+100*d*s24*s13^4*s34+2*d*s13^2*s23^2*s12^2+2*s24*s23*s12^2*s34^2-s14*d^2*s13^2*s12^3+48*s14*d^2*s24*s13*s23*s12*s34-38*s14*d*s24^2*s13*s23*s12-3*d^2*s13^4*s23*s34+44*s14*s24^2*s23*s34^2+4*s14^2*d^2*s24*s23^3+8*s14*s24*s23^3*s34-6*d^2*s13^2*s23*s12*s34^2-12*d^2*s24^2*s13*s12^2*s34-68*s14^2*d*s24*s23*s34^2+4*s14^2*s24*s23*s12^2-254*s14*d*s24*s13^2*s23*s34+162*d*s24^2*s13^2*s34^2-7*d*s23*s12*s34^4-d^2*s34^6-16*s14^2*s13*s12^2*s34-12*s14^2*d^2*s13*s23^2*s12-12*s24*s12*s34^4+d*s12^4*s34^2-2*s14*s12^3*s34^2+4*s14^2*s24^3*s23-116*s14*s13^3*s12*s34+32*s14^2*s23^2*s12*s34+10*s14^2*d*s24^2*s23^2+7*s14*d*s13^5+240*s14^2*s24*s13*s23*s34-46*s14*s13^4*s34+90*d*s13^4*s12*s34-48*d^2*s24*s13^3*s12*s34-40*s14*d*s13*s23^2*s12*s34-26*s14^2*d*s13*s23*s12^2+152*s14^2*s13*s23*s34^2+6*s14^2*d*s24*s12^2*s34-96*s24^2*s13^3*s12+20*d*s13*s34^5+7*d^2*s24^2*s13*s23*s34^2-4*d^2*s24^3*s13^2*s12+8*s14*s13*s23^3*s12-d^2*s24*s13^2*s23*s12^2-12*s14*s24^2*s12^2*s34+12*s14^3*s23*s12^2-10*s24^4*s13^2+76*s14*d*s24*s13*s34^3+20*s14*s13^2*s23*s12^2+17*s14*d*s12^2*s34^3+2*d^2*s24*s23*s12*s34^3-40*d^2*s24*s13^3*s34^2+4*d*s24*s13^3*s23^2+120*s14^2*s13*s23*s12*s34-52*s14*d*s24*s23*s12*s34^2-68*s14^2*s23^2*s34^2+20*s14*s23*s12*s34^3-24*s14^2*d*s23^3*s34+20*d*s13^3*s12^3-12*s14^2*d^2*s24*s23^2*s34+2*d^2*s24^2*s13*s23*s12*s34-3*s14*d^2*s24*s13^2*s12^2-38*s14*d*s23*s12*s34^3-204*s24^2*s13^2*s12*s34+4*d*s13*s23^2*s12^2*s34+288*d*s24*s13^2*s12*s34^2+2*s14*d*s12^4*s34-4*s14*d^2*s24^2*s23^2*s34-160*s13^3*s12*s34^2+28*d*s24*s13*s12^3*s34-s14*d^2*s34^5-22*s24*s13^4*s23-12*d^2*s24*s12^2*s34^3+32*s14*s13*s23^2*s12*s34+62*s14*d*s13^3*s34^2-12*s14^3*d^2*s23^2*s34-8*s14*d*s13*s23^3*s12-3*s14*d^2*s24^2*s13^3+4*d*s24*s23^2*s34^3+d*s24*s23*s12^2*s34^2-108*s14*s24*s13*s34^3+28*s14*s23*s34^4-42*s14*d*s13^2*s23*s12^2+32*s14*s24*s23*s12*s34^2-d^2*s23*s12^3*s34^2+12*s14*d*s24^2*s12^2*s34-24*s14^3*d*s13*s23*s34+5*d*s13^6-4*s13^2*s23*s34^3+12*d*s24^3*s34^3+70*d*s24*s13*s34^4+2*d*s23^2*s12^2*s34^2+232*s14*s24*s13^2*s23*s34-16*s13^3*s23^2*s34-6*s14*d^2*s24^2*s13*s12*s34+8*s14*d^2*s13^2*s23^2*s12+8*s14^2*d*s13*s34^3-3*s14*d^2*s24^2*s12*s34^2+24*s14*s24^2*s13*s23*s12+84*s14*d*s13^3*s12*s34+12*d*s24*s13^2*s23^2*s34-120*s24*s13*s12*s34^3-8*s14^3*d*s23*s12^2-76*s14*s13^2*s34^3+8*s14^3*d^2*s23^3+28*s14*d^2*s13^3*s23*s34-56*s14^2*d*s24*s13*s23*s12-3*s14*d^2*s24*s34^4+6*s14^2*d*s24^2*s13*s12-46*s14*d*s24^2*s23*s34^2-32*s14^2*s24^2*s13*s34-d^2*s24^4*s13^2+26*d*s24*s13^3*s23*s12-8*s14^3*d*s24*s23*s12-4*s24*s13*s23*s12*s34^2+55*d*s13^2*s34^4+46*d*s13^2*s12^3*s34-8*s14*d*s24*s23^3*s34+d^2*s24^2*s13^2*s23*s12-s14*d^2*s13^5-22*s14*d*s13^4*s23-200*s24*s13^3*s34^2+84*s14^2*s13^2*s23*s12-36*s13^4*s12^2+64*s14*s24*s23*s34^3-34*s14*s13*s34^4-112*s14^2*d*s13^2*s23*s34+160*d*s24*s13^2*s34^3-3*s14*d^2*s13^4*s12+4*s14^2*d^2*s23*s12^2*s34-8*s14*d*s23^3*s34^2-12*d^2*s24^2*s13^3*s12+26*d*s24^3*s13^3-36*s24^3*s13^2*s12+3*d*s34^6-12*s14^2*s24*s23^3-9*s14*d^2*s24^2*s13^2*s34-82*s14*d*s24^2*s13^2*s23-14*s14*d*s24^2*s23*s12*s34-3*s14*d^2*s24^2*s34^3-32*s13^5*s34+4*s14^3*s24^2*s23+92*s14*d*s24*s13^3*s34-12*d^2*s24*s12*s34^4+20*s14*d^2*s24*s13^3*s23-36*d^2*s24*s13*s12^2*s34^2+2*d*s23^2*s34^4-62*s14*s13*s12^2*s34^2-22*s14^2*d^2*s23^2*s34^2-34*s14*d*s24*s13*s23*s12^2+73*s14*d*s24^2*s13*s34^2+48*s14^2*s24^2*s23*s34-4*s14*d^2*s24^2*s13*s23^2+4*s12^3*s34^3+2*s14^2*d*s24^2*s23*s12-32*s14*s23^2*s34^3-34*s13^4*s23*s34-12*s14*s23^2*s12*s34^2-44*s14^2*d*s23*s34^3-4*s14*s23*s12^3*s34-34*s14^2*d*s23*s12*s34^2-12*s14^3*d^2*s13*s23^2-d^2*s24^4*s34^2-4*s24^2*s13^2*s23^2-3*s14*d^2*s24*s13^4-15*d*s24*s23*s34^4-3*s14*d^2*s24*s12^2*s34^2+6*d*s12^3*s34^3+22*s24^2*s13*s23*s34^2-16*s14^2*s13*s34^3-12*d^2*s24*s13^4*s12+5*d*s24^2*s13^2*s23*s12-16*s14*s24*s13*s23^2*s34+d^2*s23*s34^5-22*s24*s13^2*s23*s12^2-56*s14*s24^3*s13*s34+10*d*s24^4*s13*s34-4*s23^2*s34^4-68*s14^3*s13*s23^2+13*s14*d*s13^2*s12^3-98*s14*s24^2*s13^2*s12-8*s14*d*s23^3*s12*s34+7*d*s13^2*s23*s12^3+20*s24*s23*s12*s34^3+4*s14*d^2*s24^2*s23*s12*s34-3*d^2*s13^3*s23*s12^2+2*s14*d*s24^4*s34-44*s14^2*s24*s13^2*s34+28*s14*d*s24*s23^2*s34^2+12*s14^2*d*s24*s13^2*s12+126*d*s13^2*s12^2*s34^2-12*d^2*s24^2*s12*s34^3+36*s14*d^2*s13*s23*s34^3+8*s14*d^2*s24*s13*s23*s12^2-12*d^2*s13*s12^3*s34^2+8*s14*s13*s23*s12^2*s34-184*s14*s24*s13*s12*s34^2+10*d*s24^3*s12*s34^2+114*d*s24*s13*s12^2*s34^2-3*s14*d^2*s12*s34^4+4*d*s13^3*s23^2*s12-60*s13^2*s23*s12*s34^2-48*s24^2*s13*s12^2*s34+30*d*s13^4*s12^2-2*d^2*s24*s13*s23*s12^2*s34-42*s14*s13^3*s12^2-48*s14^2*s24*s13*s23^2+2*s14^2*d*s13^4-20*s14*d*s13*s23^2*s12^2+28*d*s13^5*s34-16*s13*s23^2*s34^3+d^2*s24^3*s23*s34^2+4*d*s24*s23^2*s12*s34^2-15*d*s24^2*s23*s34^3-36*s24^3*s13^3+68*s14*d*s13*s12*s34^3-264*s24*s13^3*s12*s34-3*s14*d^2*s12^2*s34^3+20*s14^2*d*s24*s23^2*s12-40*s14^2*s24*s23^2*s34+126*s14*d*s24*s13^2*s34^2+18*s14^2*d*s13*s12*s34^2-8*d^2*s24*s13*s12^3*s34+38*d*s24*s13^2*s23*s12*s34-28*s24*s13^2*s12^3-24*s14*s13*s12^3*s34+66*d*s24*s13^3*s12^2+4*s14^2*d^2*s23^3*s34-72*d^2*s24*s13^2*s12*s34^2-144*s14*s13^2*s12*s34^2-4*d^2*s13^3*s12^3-50*s13^2*s34^4-80*s13^3*s23*s12*s34+16*s14^4*d*s23^2+8*s14*s24^3*s23*s34+56*s14^3*s24*s13*s23-8*s14^2*s23^4-6*d^2*s13*s34^5+2*s14*d*s24^4*s13+d^2*s24^3*s13^2*s23-12*s14*s23*s12^2*s34^2+64*d*s24^3*s13^2*s34+52*s14^2*s23*s34^3-d^2*s24*s23*s12^2*s34^2+22*s14^2*d^2*s13*s23*s34^2-14*s24^2*s13^3*s23+14*s13*s23*s34^4+90*d*s24^2*s13*s34^3-84*s14^3*s23^2*s34+74*s14*d*s24^2*s13*s12*s34+32*s14*s13^2*s23^2*s34-d^2*s12^4*s34^2+2*s14^2*d*s34^4+2*s14*d*s13*s12^4-4*s14^2*d^2*s23^2*s12*s34+2*s14^2*d^2*s24^2*s23^2-12*d^2*s24^3*s13*s34^2+6*d*s13*s12^4*s34+116*s14^2*d*s13*s23^2*s34+24*s14^2*s13*s23^2*s12-16*s14^2*s24*s12*s34^2-4*s14^2*d^2*s24*s23*s12^2-6*d^2*s24^2*s13^2*s12^2+8*s14^2*d*s24*s23^3-8*s24^3*s34^3+40*s14*s13^3*s23*s12-2*d^2*s24*s13^3*s23*s12+21*d*s13^4*s23*s12+4*s24^3*s13*s23*s34-3*s14*d^2*s24^2*s13^2*s12-24*s13^5*s12-24*d^2*s24^2*s13^3*s34-13*d*s13*s23*s34^4+5*d*s24^2*s13^3*s23-8*s14*d*s24*s23^2*s12*s34-80*s24^3*s13^2*s34-22*s14*s24*s12^2*s34^2-12*s14^2*s24^2*s34^2+22*d*s24*s13^2*s12^3-20*d^2*s13*s12*s34^4+22*d*s24*s13^5-5*s14*d^2*s13^4*s34-2*s14*d^2*s24^3*s13*s34-32*s14^4*s23^2-14*s14*d*s24^3*s13*s23-8*s14^3*d*s13^2*s23-s14*d^2*s12^3*s34^2+5*d^2*s24^2*s13^2*s23*s34-84*s24*s13^3*s12^2-4*s14*s13*s12^4+70*s14*d*s24*s13*s12^2*s34-62*s14^2*d*s13^2*s23*s12-130*s14*d*s13*s23*s12*s34^2+64*s14^2*s24*s23*s12*s34+2*s14^2*d*s24^3*s34-70*s13^4*s34^2+148*s14^2*s13^2*s23*s34+d^2*s24^2*s23*s12*s34^2+6*s14^2*d*s12^2*s34^2+36*s14^2*s23*s12*s34^2-10*s14*s13^5-4*s12*s34^5-30*s13^4*s23*s12+2*s14^2*d*s23*s12^3-6*d^2*s12^2*s34^4-8*s14*s24^4*s13+36*d*s24^3*s13*s12*s34-238*s14*d*s24*s13*s23*s34^2-6*s14^2*d^2*s23^2*s12^2-24*s14^2*d*s24^2*s23*s34+104*s14*s13*s23*s34^3+8*s14^2*s24^2*s23*s12+12*s14*d*s24^2*s13*s12^2-84*s24^2*s13*s34^3+8*d^2*s24*s13*s23*s34^3+14*d*s24*s13*s23*s12^2*s34+58*s14*d*s24*s13^3*s12-4*s24^2*s13*s23*s12*s34-4*s13*s12^4*s34-168*s14*d*s13^2*s23*s34^2-20*s14*s24*s13*s12^3-16*s14^3*d*s13*s23*s12-96*s14^2*d*s13*s23*s12*s34-10*s13^2*s23*s12^3-16*s14*d*s13*s23^3*s34+4*s14^3*d^2*s23^2*s12-108*s13^2*s12^2*s34^2+10*s14*d^2*s23*s12^2*s34^2-2*d^2*s24*s13^2*s23*s12*s34+20*s14*s24*s13^2*s23^2-2*s14*d^2*s13*s12^3*s34+27*s14*d*s13^3*s12^2+2*s14^2*d*s24^3*s13+132*d*s24^2*s13*s12*s34^2+43*d*s13^2*s23*s12^2*s34-26*s13*s23*s12^2*s34^2-12*s24^4*s13*s34-20*s14^2*s24^2*s13^2+8*s14*d*s24^3*s12*s34+4*s14*d^2*s13^3*s23^2+100*s14*s13^2*s23*s12*s34+12*d*s24*s34^5-18*s14*d^2*s13^2*s12*s34^2+8*s14^3*s23*s12*s34+8*d*s13*s23^2*s34^3+42*s14^2*d*s13^2*s23^2+5*d*s13^2*s12^4-4*s14*s24^4*s34-164*s14^2*d*s24*s13*s23*s34+16*s14*d^2*s13^3*s23*s12+18*s24^2*s23*s34^3+8*s14*d^2*s24*s23*s12^2*s34-20*s14^2*s24^2*s13*s12-2*s14^2*d^2*s24^2*s13*s23+48*s14^2*s13^3*s23-6*s14*s34^5+12*s14^2*d*s24^2*s13*s34-16*s14^3*d*s24*s23*s34+24*d*s24*s13^3*s23*s34+71*s14*d*s13^2*s12^2*s34+4*s14*d^2*s13^2*s23^2*s34+2*s14^2*d*s13*s12^3-22*s14*s13^2*s12^3-16*s14^3*d*s23*s34^2+120*s14*s24^2*s13*s23*s34+4*d*s24*s13^2*s23^2*s12-24*s24*s13*s23^2*s34^2+96*s14*s24*s13^2*s23*s12+4*d*s24^2*s13*s23^2*s34-4*s14^2*d^2*s13*s23^3-4*s24^3*s12*s34^2-24*d^2*s13*s12^2*s34^3-18*s14*d^2*s24*s13^2*s12*s34-8*s13^3*s23^2*s12+26*d*s24^3*s13^2*s12+2*s14^2*d*s12^3*s34-s14*d^2*s24^3*s34^2+2*s14^2*d^2*s13*s23*s12^2-6*s13^2*s12^4+24*s14*d*s23^2*s34^3-8*s14*d*s24*s13*s23^3-12*s14*d^2*s24*s13*s34^3-4*s14^2*s12^2*s34^2+128*s14*s24*s13*s23*s12*s34+16*s14^2*d^2*s13*s23*s12*s34-4*s14^2*d^2*s23^3*s12+180*d*s24*s13^3*s34^2+8*d*s24*s13*s23^2*s12*s34-4*s14*s24^2*s23^2*s34-20*d^2*s13^3*s34^3+41*s14*d*s24*s13^2*s12^2-16*s14^2*s24*s23^2*s12+44*s14^2*d*s24*s23^2*s34-28*s14^2*s13*s12*s34^2-36*d^2*s24^2*s13*s12*s34^2-7*d^2*s13^2*s23*s12^2*s34-160*s24*s13^2*s34^3-10*s14*d*s24*s23*s12^2*s34-48*s14^2*s24*s13*s12*s34+20*s14^2*d^2*s24*s13*s23*s34+88*s14*s13^3*s23*s34-6*s13^6+23*d*s13^4*s23*s34+8*s14^2*d^2*s24*s23*s34^2+16*s14*s23^3*s34^2+2*d*s24^2*s13^2*s23^2+d^2*s23*s12*s34^4+18*s24*s23*s34^4-36*d^2*s24^2*s13^2*s34^2-4*s14*s24*s12^3*s34-4*s14^2*s24^3*s34-6*d^2*s24^2*s34^4-8*s24*s34^5-80*s14^2*s13*s23^2*s34+12*s14^2*d*s13*s23^2*s12+154*s14*d*s24*s13^2*s12*s34+12*s14^2*d*s24*s12*s34^2+12*s14^3*s23^2*s12-38*s14*s24^2*s12*s34^2+20*s14*s13^4*s23-20*d^2*s13^4*s12*s34+44*s14*s13^2*s23^2*s12+27*s14*d*s13*s34^4+6*s14^2*d*s24^2*s34^2-d^2*s23*s12^2*s34^3-8*s24*s23^2*s34^3+10*d*s12*s34^5-34*s14^2*d*s13^3*s23-2*d^2*s13^3*s23*s34^2+18*s14^2*d*s24*s13^2*s34+12*s14^2*d^2*s24*s13^2*s23-32*s14^2*s24*s13^2*s12-154*s14*s24^2*s13^2*s34+38*s14*d*s24*s12*s34^3-2*d*s13^2*s23*s34^3-12*s14^2*s13^2*s23^2-s14*d^2*s24^3*s13^2-5*d*s24^2*s13^2*s23*s34-12*s14*d*s23^2*s12^2*s34-4*d^2*s24*s12^3*s34^2+16*s14*s24*s13*s23^2*s12-28*s14*s24^3*s13*s12-12*s24*s13^2*s23*s34^2+20*s14*d^2*s24*s23*s34^3-6*s14*d^2*s24*s13*s12^2*s34+48*s14*d^2*s13*s23*s12*s34^2-40*d^2*s13^2*s12*s34^3+58*s14*d*s13^2*s34^3+160*d*s13^3*s12*s34^2-20*d^2*s24*s13^4*s34+13*d*s24*s13^4*s23-4*s14^2*s13*s12^3-d^2*s13^5*s23-34*s14*d*s23*s34^4-8*d^2*s24^3*s13*s12*s34+4*s14*d^2*s23*s12^3*s34+12*d*s24^2*s12^2*s34^2+24*s14*d*s13*s23^2*s34^2-7*d*s24^2*s23*s12*s34^2-44*s13^2*s12^3*s34-24*d^2*s13^3*s12^2*s34+20*d*s13^5*s12-2*s34^6+84*s14*s24*s13^3*s23+8*d*s13^3*s23^2*s34-4*s23^2*s12^2*s34^2+6*s14^2*d*s24^2*s13^2+16*s14^3*d*s24*s23^2+65*d*s13^4*s34^2-9*s14*d^2*s13*s12^2*s34^2-60*s24*s13*s34^4-84*s14*s13^3*s34^2+76*s14^2*d*s24*s13*s23^2-12*s13*s23*s12^3*s34+4*s14*d^2*s13*s23*s12^3+4*s14*s24^2*s13*s23^2-6*d^2*s24^2*s13^4-8*s14^2*s24^3*s13+60*s14*d^2*s24*s13*s23*s34^2-168*s24*s13^2*s12^2*s34-32*d*s24*s13*s23*s34^3-24*s13*s23^2*s12*s34^2+12*d*s13^2*s23^2*s12*s34-28*s24*s13^5))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (1/2*Den(-2+d)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(26*s14^2*d*s23^2*s12^2-12*s14*d*s24*s13^3*s23+28*d*s24^3*s13*s23*s12-20*s14^2*s23^3*s12-31*s14*d*s24^2*s13*s23^2-d^2*s23^2*s12^4+6*s23^3*s34^3-11*d^2*s24*s13*s23^2*s34^2-78*s14*s13*s23^2*s34^2+24*s24*s13^3*s23^2-6*d^2*s24*s23^2*s12^2*s34-20*s14*s13*s23^4-30*s14*s23^2*s12^2*s34-d*s24*s13^2*s23^3-4*d^2*s23*s12^4*s34+14*s14*s24*s23^2*s12^2+8*s14^3*s24*s23^2-5*d^2*s13*s23*s12^4-4*d^2*s13*s23*s12^2*s34^2+8*s14*d^2*s23^3*s12^2+4*s24^3*s23*s12*s34+12*s13^5*s23-58*s14*d*s24*s13*s23^2*s12-s14*d^2*s24^2*s13^2*s23+8*s24^2*s23*s12*s34^2-d^2*s23^2*s12^2*s34^2-8*s24^2*s23^2*s34^2-9*d*s13^2*s23^3*s34+40*s14^3*s23^3-56*s14*s13^2*s23^3+13*s14*d*s13^2*s23^2*s12-8*s14^2*d*s13*s23^3-s14*d^2*s24^2*s13*s23*s34-2*s14^2*d^2*s13^2*s23^2+72*s13^2*s23^2*s12*s34-16*s14*d*s24*s13*s23*s12*s34-12*d*s13*s23^2*s12*s34^2+36*s24*s13*s23*s34^3-36*s14*d*s13^3*s23*s34+8*s14*d^2*s24*s23^3*s34-3*s14*d^2*s24*s13^2*s23*s12-4*d^2*s13*s23^2*s12^3+8*d*s13*s23*s12^3*s34+3*s14*d*s24^2*s23^2*s34+s14*d^2*s23*s12*s34^3+16*s13^2*s23^2*s12^2+3*d*s24^2*s23^3*s12+19*s14*d*s13^3*s23^2+32*d*s24^2*s13*s23*s12*s34+44*s24*s13*s23*s12^2*s34-4*d^2*s24*s23^2*s34^3+4*s23*s12^2*s34^3-2*d*s24*s13*s23^3*s34+72*s13^3*s23*s34^2+8*s14*d^2*s13*s23^3*s12+48*d*s24^2*s13*s23*s12^2+8*s14*d*s23^4*s34-8*s14^3*d*s23^2*s12-48*d*s24*s13^2*s23*s34^2+36*s13*s23*s12*s34^3+64*s24^2*s13^2*s23*s34+d*s24^3*s23^3-4*s14*d*s24^3*s23*s12-2*s14*d^2*s13^2*s23*s12^2+s14*d^2*s13^2*s23*s12*s34+16*s14*s24*s13*s23^3-2*d*s23*s12^3*s34^2+16*s14^2*d*s23^4-8*s14^2*s24*s13*s23*s12+3*d*s24^2*s13*s23^3-4*s14^2*d^2*s13*s23^2*s34-d^2*s24^3*s13*s23^2+32*s14*s24*s23^3*s12-2*s24^3*s23^3+8*s14^2*d*s24*s23*s12^2-12*d^2*s13*s23*s12^3*s34-8*s14*d*s24*s13^2*s23*s12+12*s14*s24^2*s23*s12^2+d^2*s13^4*s23*s12-2*d^2*s13*s23^2*s12*s34^2+40*s14^2*d*s23^3*s12+31*s14*d*s24*s13^2*s23^2-4*s14^2*d^2*s24*s23^2*s12-32*s14^2*s23^2*s12^2+60*s14*s13^2*s23*s34^2-48*s14*d*s13^2*s23*s12*s34-8*s14^2*s13*s23*s12^2-4*s14^2*d*s13*s23*s34^2-4*s14*d^2*s23^2*s34^3-32*s14*s13*s23^3*s34-18*d^2*s24^2*s13*s23*s12^2+12*d*s24^3*s13^2*s23+108*s24*s13^3*s23*s34-12*s14*d*s13*s23*s34^3+16*s24*s13*s23^2*s12*s34-8*d^2*s24^3*s13*s23*s12+12*d*s24^2*s23^2*s12^2+6*s13^2*s23^3*s12-8*d*s13^5*s23-8*s24^2*s13*s23^2*s34+30*d*s24*s13*s23^2*s34^2+18*s14*d^2*s13*s23^2*s12^2+12*s14*s23^4*s12+40*s14*s24*s13*s23*s34^2+16*s24*s13^2*s23^2*s12+2*d*s23*s12^5-4*s14^2*s13*s23^3-2*s23^3*s12^2*s34-12*d*s13^2*s23^2*s34^2-3*d^2*s23^2*s12^3*s34-2*s24^2*s23^3*s34-44*s14*s24*s23^2*s12*s34-12*s14*d*s24*s23*s12^3+16*d*s24*s23^2*s12^2*s34+6*d*s24^4*s13*s23+12*s13*s23^3*s12*s34+8*s14*s24^3*s13*s23+40*s14*s13*s23*s12*s34^2-8*d^2*s13^2*s23*s12^3+32*s14*d^2*s24*s13*s23^2*s12+8*s14^2*s24*s13^2*s23-3*d*s23^3*s34^3-8*d^2*s24*s13*s23*s12*s34^2-26*d*s13*s23*s12^2*s34^2-10*d*s13^3*s23*s12^2+76*s13^2*s23*s12^2*s34-72*d*s13^2*s23*s12*s34^2+8*s14*d^2*s24*s23^3*s12-2*s14*d^2*s24*s13^2*s23*s34-5*d^2*s13*s23^2*s34^3+4*s14^2*d*s24^2*s13*s23+3*s14*d^2*s24^2*s23*s12^2+2*s14*d^2*s24^2*s13*s23*s12-4*s24*s13*s23*s12^3+2*d*s23^2*s12*s34^3-20*s14*d*s13^3*s23*s12+59*s14*d*s13^2*s23^2*s34+14*d*s24^2*s23^2*s12*s34+12*s24*s23*s12^3*s34-d*s13^2*s23^3*s12-12*s24^2*s23^2*s12^2+32*d*s24*s13^2*s23*s12^2-8*s14*d*s23^4*s12+8*s14^3*d*s23^2*s34+20*s24^2*s13^2*s23*s12+3*s14*d^2*s13^2*s23*s34^2-3*d^2*s24*s23^2*s12^3+36*s13^3*s23*s12^2+6*d*s24*s13*s23^3*s12+8*s14*d^2*s13*s23^2*s12*s34-2*d*s24^2*s13*s23*s34^2-8*s14*d*s23*s12^2*s34^2+8*s14*d^2*s13*s23^3*s34+3*d*s24^2*s23^3*s34+36*s13^2*s23^2*s34^2+3*d*s23^3*s12^2*s34-8*d*s24*s23*s12*s34^3-27*s14*d*s24^2*s23^2*s12-4*s24^4*s13*s23-s14*d^2*s24*s23*s12*s34^2-9*d^2*s24*s13*s23^2*s12^2-4*d^2*s24*s23*s12^4-2*s14*s13*s23^2*s12^2-2*s23^3*s12^3-16*s14*d*s13*s23*s12^2*s34+8*s14^3*d*s13*s23^2-2*s24^2*s13*s23^3+12*d*s24^3*s13*s23*s34-2*d^2*s23^2*s34^4+60*s14^2*s23^3*s34+22*s14^2*d*s23^2*s34^2+8*s14*d^2*s23^3*s34^2-32*s14*s23^3*s12*s34+58*s14*d*s24*s13*s23^2*s34+4*s24^3*s13^2*s23-38*s14*s24*s23^2*s34^2-28*d*s24*s13*s23*s12*s34^2-4*d^2*s24^2*s13^3*s23+d^2*s13*s23*s34^4+s14*d^2*s13^4*s23-8*s14^2*s23*s12^2*s34-12*d^2*s24^2*s23*s12^2*s34+18*s13^4*s23^2-64*d*s13^3*s23*s12*s34+s14*d^2*s24^3*s13*s23-3*s14*d^2*s13*s23*s12^2*s34-6*d^2*s24^2*s23*s12^3-20*s14*s23^4*s34+24*s14*s24*s13*s23*s12^2+9*s14*d*s23^2*s12*s34^2+36*s24*s13^2*s23^2*s34-20*s24^2*s13*s23^2*s12+s14*d^2*s23*s12^4+8*d*s24^3*s23*s12^2+34*d*s24*s13*s23^2*s12^2-10*s14*d^2*s13*s23^2*s34^2-4*s14*d*s23*s12^3*s34+140*s24*s13^2*s23*s12*s34+18*s13^2*s23^3*s34+12*d*s24^2*s23^2*s34^2-11*d*s13^4*s23^2+4*s14^2*d^2*s24*s13*s23^2-34*s14*s13^3*s23^2+d^2*s13^3*s23^2*s34+68*s24*s13^3*s23*s12-4*s14*d*s13*s23*s12^3-4*d^2*s24^3*s13*s23*s34+20*s14*d^2*s24*s23^2*s12^2+d*s23^3*s12^3-8*d*s23*s12^2*s34^3-48*d*s13^3*s23*s34^2-24*s14^3*d*s23^3+24*s13*s23^2*s12^2*s34+8*s23*s12^3*s34^2+6*d*s24*s23^3*s12*s34+28*s14*s24^2*s13^2*s23+4*d^2*s13^2*s23*s34^3+4*s14*d^2*s24*s13*s23^2*s34+4*d^2*s13^3*s23*s12*s34+24*s14*d*s13^2*s23^3+8*s14*d^2*s23^2*s12^2*s34-d^2*s24^3*s23^2*s12-6*s24^2*s23^3*s12+4*d*s13^2*s23^2*s12^2+16*s24*s23*s12^2*s34^2+12*d*s24^2*s23*s12^2*s34-4*s14*d^2*s24*s13*s23*s12*s34-4*s14*d*s24^2*s13*s23*s12+4*d^2*s13^4*s23*s34-8*s14^2*d^2*s24*s23^3+6*d^2*s13^2*s23*s12*s34^2-16*s14^2*s24*s23*s12^2-24*s14*d*s24*s13^2*s23*s34-5*d^2*s24^2*s13^2*s23^2-4*d*s23*s12*s34^4+4*s14^2*d^2*s13*s23^2*s12+8*s14*d*s13*s23^4+16*s14^2*s23^2*s12*s34-2*s14^2*d*s24^2*s23^2+8*s14^2*s24*s13*s23*s34-3*d^2*s24^2*s23^2*s12*s34+22*s14*d*s13*s23^2*s12*s34+4*s14^2*d*s13*s23*s12^2+8*s14^2*s13*s23*s34^2+10*s14*d^2*s23^2*s12^3-4*d^2*s24^2*s13*s23*s34^2-16*s14*s13*s23^3*s12-20*d^2*s24*s13^2*s23*s12^2-d^2*s24^4*s23*s12+16*s14*d^2*s24*s13*s23^3+24*s14*s13^2*s23*s12^2-2*d*s24*s13^3*s23^2+8*s14^2*s13*s23*s12*s34-8*s14*d*s24*s23*s12*s34^2-24*s14^2*s23^2*s34^2+6*s24*s13^2*s23^3-48*s14^2*d*s23^3*s34+4*s14^2*d^2*s24*s23^2*s34-20*d^2*s24^2*s13*s23*s12*s34-8*s14*d*s23*s12*s34^3-4*s24*s23^3*s12*s34+2*d*s13*s23^2*s12^2*s34-12*d^2*s24*s13*s23^2*s12*s34+4*s14*d^2*s24^2*s23^2*s34+36*s24*s13^4*s23-8*s24^3*s23^2*s12-52*s14*s13*s23^2*s12*s34-8*s14*d*s13*s23^3*s12+12*s24^2*s23*s12^2*s34+16*d*s24*s23^2*s34^3-4*d*s24*s23*s12^2*s34^2-8*s14*d*s13^2*s23*s12^2-4*s14*s24*s23*s12*s34^2-4*d^2*s23*s12^3*s34^2+6*s24*s23^3*s34^2+s14*d^2*s24^3*s23*s12+48*s13^2*s23*s34^3-16*s24*s13*s23^2*s12^2-2*d*s23^2*s12^2*s34^2+80*s14*s24*s13^2*s23*s34+32*d*s24^2*s13*s23^2*s12+48*s13^3*s23^2*s34+6*s14*d^2*s13^2*s23^2*s12+6*s13^3*s23^3+24*s14*s24^2*s13*s23*s12+12*d*s24*s13^2*s23^2*s34+3*s14*d^2*s13^3*s23*s34+8*s14^2*d*s24*s13*s23*s12-12*d*s24*s13^3*s23*s12-2*s13*s23^3*s12^2+12*d*s13*s23^2*s12^3+76*s24*s13*s23*s12*s34^2-16*s14*d*s24*s23^3*s34-16*d^2*s24^2*s13^2*s23*s12-12*s14*d*s13^4*s23+8*s14^2*s13^2*s23*s12-8*s14^2*d*s13^2*s23*s34-28*s14*d*s23^3*s34^2+10*d*s13*s23*s12^4+4*d*s23*s12^4*s34+12*s14^2*s24*s23^3-4*s14*d*s24^2*s23*s12*s34-s14*d^2*s24*s13^3*s23+7*d*s23^2*s34^4-2*s14^2*d^2*s23^2*s34^2-8*s14*d*s24*s13*s23*s12^2+14*s14*d^2*s24^2*s13*s23^2+8*s14*s13*s23*s12^3+4*s14^2*d*s24^2*s23*s12-16*d^2*s24*s13*s23*s12^3-22*s14*s23^2*s34^3+48*s13^4*s23*s34-10*s14*s23^2*s12*s34^2-3*d^2*s24*s23^2*s12*s34^2-4*s14^2*d*s23*s12*s34^2-12*d^2*s24*s23*s12^3*s34+6*d*s23^2*s12^3*s34-4*s24*s13*s23^3*s12-3*d^2*s13^2*s23^2*s34^2+32*s24^2*s13*s23*s34^2+4*d*s24^3*s23^2*s34+34*d*s24^2*s13^2*s23*s12-108*s14*s24*s13*s23^2*s34+28*s24*s13^2*s23*s12^2-d^2*s24^4*s13*s23+3*s14*d^2*s24*s23*s12^3-6*s23^2*s34^4-24*s14^3*s13*s23^2+20*s14*d*s23^3*s12*s34+10*d*s13^2*s23*s12^3+4*s24*s23*s12*s34^3-s14*d^2*s24^2*s23*s12*s34+3*d*s24*s23^3*s12^2+12*s14*s24*s23^4-8*s24*s23^2*s12^3-4*d^2*s13^3*s23*s12^2+27*s14*d*s24*s23^2*s34^2+s14*d^2*s13*s23*s34^3+s14*d^2*s24*s13*s23*s12^2+d^2*s13^4*s23^2+36*d*s24*s13*s23*s12^3+20*s14*s13*s23*s12^2*s34-16*d*s13^3*s23^2*s12+108*s13^2*s23*s12*s34^2-3*d^2*s24^2*s23^2*s12^2-28*d^2*s24*s13*s23*s12^2*s34-64*s14^2*s24*s13*s23^2-27*s14*d*s13*s23^2*s12^2+12*d*s24*s23*s12^3*s34+6*s23^3*s12*s34^2-4*s14*d*s23*s12^4-9*d*s13*s23^3*s34^2+10*d*s24*s23^2*s12*s34^2-8*s24^2*s23^2*s12*s34+24*s14^2*d*s24*s23^2*s12+4*s14*d^2*s24*s13^2*s23^2-16*s14^2*s24*s23^2*s34-3*d*s13^3*s23^3-32*d*s24*s13^2*s23*s12*s34-5*d^2*s13*s23^2*s12^2*s34+8*s14^2*d^2*s23^3*s34+10*s14*s24^2*s23^2*s12-21*s14*d*s23^2*s12^3+108*s13^3*s23*s12*s34-3*s14*d*s24^3*s23^2-8*s14^2*s23^4-4*d^2*s24^3*s13^2*s23-4*s14*s23*s12^2*s34^2-8*d^2*s24*s23*s12^2*s34^2+32*s24^2*s13^3*s23+12*s13*s23*s34^4-8*s14^3*s23^2*s34-90*s14*s13^2*s23^2*s34+4*s14^2*d^2*s23^2*s12*s34-10*d^2*s24*s13^2*s23^2*s34+10*d*s24^3*s13*s23^2-2*s14^2*d^2*s24^2*s23^2-6*d^2*s24^2*s13*s23^2*s12+56*s14^2*d*s13*s23^2*s34-32*s14^2*s13*s23^2*s12+16*s14*s23^3*s12^2+16*s14*s24^2*s23^3+40*s14*s13^3*s23*s12-8*d^2*s24*s13^3*s23*s12-20*d*s13^4*s23*s12+4*s24^3*s13*s23*s34-12*s14*d*s24^2*s23^3-8*d*s13*s23*s34^4-24*s14*d*s23^3*s12^2-2*d*s24^2*s13^3*s23+10*s14*d*s24*s23^2*s12*s34+4*d^2*s13*s23*s12*s34^3-8*s14^2*d^2*s23^4-8*d^2*s24^2*s13^2*s23*s34-4*s14^2*d*s13^2*s23*s12+12*s14*s24*s23*s12^3-36*s14*d*s13*s23*s12*s34^2-8*s14^2*s24*s23*s12*s34+16*s14^2*s13^2*s23*s34-4*d^2*s24^2*s23*s12*s34^2+8*d*s24*s23*s12^4+2*s14*s24^3*s23^2+6*s14*s23^2*s12^3+d*s24^4*s23^2+36*s13^4*s23*s12+4*s14^2*d*s23*s12^3-12*s14*d*s24*s13*s23*s34^2-2*s14^2*d^2*s23^2*s12^2+20*s14*s13*s23*s34^3-8*s14^2*s24^2*s23*s12-d^2*s13^2*s23^2*s12*s34+28*d*s24*s13*s23*s12^2*s34+3*d*s23^2*s12^4-8*s24^3*s13*s23^2+28*s24^2*s13*s23*s12*s34-2*d*s13*s23^3*s12*s34-36*s14*d*s13^2*s23*s34^2+4*s14*s23*s12^4-6*s24*s23^3*s12^2-4*s24*s23^2*s12^2*s34-8*s14^2*d*s13*s23*s12*s34+12*s13^2*s23*s12^3-4*s14*d*s13*s23^3*s34-s14*d^2*s23*s12^2*s34^2+10*d*s24*s23^2*s12^3-16*d^2*s24*s13^2*s23*s12*s34-70*s14*s24*s13^2*s23^2-4*s24^3*s23^2*s34-28*d*s13^2*s23*s12^2*s34+44*s13*s23*s12^2*s34^2-2*s14*d^2*s13^3*s23^2-4*d^2*s24^3*s23*s12*s34+80*s14*s13^2*s23*s12*s34+10*s14*d^2*s24^2*s23^2*s12+10*d*s13*s23^2*s34^3+34*s14^2*d*s13^2*s23^2-8*s14*d*s24*s23^4-d*s23^3*s12*s34^2-36*s14*d*s24*s23^3*s12-2*s14*d^2*s24*s23*s12^2*s34-d^2*s23^2*s12*s34^3-12*s14*d*s24^2*s23*s12^2+8*s14^2*s13^3*s23+18*s13*s23^3*s34^2-48*d*s24*s13^3*s23*s34-8*s14*d^2*s13^2*s23^2*s34+28*s14*s24^2*s13*s23*s34+22*d*s24*s13^2*s23^2*s12+52*s14*s24*s13^2*s23*s12+30*d*s24^2*s13*s23^2*s34+36*s13^3*s23^2*s12-8*s14^2*s23*s12^3+4*s23*s12^4*s34+21*s14*d*s23^2*s34^3-44*s14*d*s24*s13*s23^3+2*d*s24^4*s23*s12+4*s14*s24^3*s23*s12+48*s14*s24*s13*s23*s12*s34+4*d*s24^3*s23*s12*s34-3*d^2*s24*s13^3*s23^2-16*s14^2*d^2*s23^3*s12+32*d*s24*s13*s23^2*s12*s34-14*s14*s24^2*s23^2*s34-32*s14^2*s24*s23^2*s12+4*s14^2*d*s24*s23^2*s34-8*d^2*s13^2*s23*s12^2*s34-8*s14*d*s24*s23*s12^2*s34+60*s14*s13^3*s23*s34-12*s24^3*s13*s23*s12-32*d*s13^4*s23*s34+24*s14*s23^3*s34^2+18*d*s24^2*s13^2*s23^2+d^2*s23*s12*s34^4-7*d^2*s24^2*s13*s23^2*s34-96*s14^2*s13*s23^2*s34+12*s14^2*d*s13*s23^2*s12+24*s14^3*s23^2*s12+20*s14*s13^4*s23-42*s14*s13^2*s23^2*s12-9*d^2*s24*s13^2*s23^2*s12+12*s14*d^2*s24*s23^2*s12*s34-12*s24*s23^2*s34^3-4*s14^2*d*s13^3*s23-2*s24^4*s23^2+6*d^2*s13^3*s23*s34^2-45*s14*d*s24*s23^2*s12^2-32*d*s13^2*s23*s34^3-72*s14^2*s13^2*s23^2-d*s24*s23^3*s34^2-4*d*s24^2*s13^2*s23*s34+7*s14*d*s23^2*s12^2*s34-d^2*s23*s12^5+12*s14*s24*s13*s23^2*s12-32*d*s13*s23*s12*s34^3+108*s24*s13^2*s23*s34^2+2*s14*d^2*s13*s23*s12*s34^2-2*s23^2*s12^4-4*d^2*s13^2*s23^2*s12^2+12*s24*s13*s23^3*s34-12*s24^2*s13*s23*s12^2-16*d*s24*s13^4*s23+6*d*s24^3*s23^2*s12+2*s14*d^2*s23^2*s12*s34^2+3*d*s13*s23^3*s12^2+d^2*s13^5*s23+12*d*s24^2*s23*s12^3-s14*d^2*s23*s12^3*s34+61*s14*d*s13*s23^2*s34^2-2*d*s24^2*s23*s12*s34^2-4*s13*s23^2*s12^3-4*d^2*s24^3*s23*s12^2+40*s14*s24*s13^3*s23-26*d*s13^3*s23^2*s34-2*d^2*s24^2*s23^2*s34^2+8*s23^2*s12^2*s34^2-8*s14^3*d*s24*s23^2+16*s14^2*d*s24*s13*s23^2+20*s13*s23*s12^3*s34+14*s14*s24^2*s13*s23^2-s14*d^2*s24*s13*s23*s34^2-16*d*s24*s13*s23*s34^3+36*s13*s23^2*s12*s34^2-30*d*s13^2*s23^2*s12*s34));

id INT(pentagon1x123,3,21,4,3,[],1,-1,1,-2,2) = 
  + INT(pentagon1x123,3,21,4,3,[],1,-1,2,-2,1)
    * (-1)
  + INT(pentagon1x123,3,21,4,3,[],2,-1,1,-2,1)
    * (-1)
  + INT(pentagon1x123,3,21,3,2,[],1,0,1,-2,1)
    * (1)
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-1/2*Den(-2+d)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(24*s14*s13^2*s23*s34^3-4*s14*d*s24*s13^2*s23*s34^2+4*s14^3*d^2*s24^2*s13*s23+8*s14^2*s13*s12^2*s34^2-16*s14*s24*s23^3*s34^2+8*s14*d*s24*s13*s23^3*s34+40*s14*s13^5*s12+2*s14*d^2*s13*s23*s12^4-90*s14*d*s24^2*s13^3*s12-20*s14*d*s24^2*s13*s23*s12^2-14*s14*d^2*s24*s13*s23*s12*s34^2+2*s14*d^2*s23*s12^4*s34-120*s14^2*s13*s23*s12^3+16*s14^2*d*s13*s23*s34^3+48*s14*s13^4*s34^2+2*s14^2*d^2*s13*s12*s34^3+3*s14*d^2*s24*s13^2*s34^3+72*s14*s24*s13^4*s23-26*s14^2*d^2*s13*s23*s12^2*s34-24*s14^2*s23^2*s12*s34^2+144*s14*s13^3*s12*s34^2+2*s14^2*d^2*s24*s13*s12*s34^2+144*s14*s24*s13*s23*s12^2*s34-32*s14^2*s24*s13*s23*s34^2-48*s14^2*s23^2*s12^3+s14^2*d^2*s24*s13^4-40*s14^2*s23*s12^3*s34-17*s14^2*d^2*s13*s23^2*s12^2+8*s14*s24^4*s13*s12+48*s14^2*d*s24*s23*s12^3+8*s14^3*d^2*s24*s13*s23*s12-6*s14*d*s13^2*s34^4+20*s14^2*d*s13^4*s23-68*s14*d*s13*s23*s12^3*s34+3*s14^2*d^2*s13^4*s12+8*s14*s13*s23^3*s12^2-18*s14*d*s13*s23^2*s12*s34^2-48*s14^2*s24*s23^2*s12*s34-24*s14^2*s13*s12^4-216*s14*d*s24*s13^2*s12^2*s34+2*s14^2*d*s24*s12^2*s34^2+9*s14^2*d^2*s24*s23^2*s34^2+24*s14^2*d*s23^3*s34^2+18*s14^2*d^2*s24*s13*s23^2*s34+48*s14*s13^3*s23^2*s34-32*s14^2*s24*s13*s12^2*s34-48*s14^2*s13*s23*s12*s34^2+4*s14^2*d^2*s23^3*s12*s34-16*s14*d*s23*s12^3*s34^2+24*s14*s13*s23*s12*s34^3-16*s14^2*s13^2*s12^3+72*s14*s24^2*s13^2*s23*s34-18*s14*d*s24^3*s13^3+64*s14*s24^3*s13^2*s12+4*s14*d^2*s13*s23*s12^2*s34^2+36*s14^3*d*s23^3*s34+3*s14*d^2*s24*s23^2*s34^3-6*s14*d*s24*s12^2*s34^3+96*s14^2*d*s24^2*s13*s23*s12-8*s14^3*s13*s23*s34^2+124*s14^2*d*s24*s13^2*s23*s34-s14*d^2*s24*s23^2*s12^2*s34+96*s14*s24*s13^3*s34^2+s14*d^2*s13*s23^2*s12^3+32*s14*s24^2*s13^2*s23^2+s14*d^2*s24*s13*s23^2*s34^2-s14^2*d^2*s12^5+8*s14^2*d*s24*s23*s12*s34^2+10*s14^2*d*s12^4*s34+22*s14*d^2*s13^2*s12^3*s34-18*s14^2*d*s13^3*s34^2+96*s14*s13^2*s23^2*s12*s34+72*s14*s13^4*s23*s34-4*s14^3*d*s24^2*s23^2-8*s14^3*s23^2*s12*s34+86*s14^2*d*s24*s13^2*s23^2+4*s14^4*d*s24*s23^2+s14^2*d^2*s24*s13^2*s34^2+24*s14^3*d*s13^2*s23*s12+8*s14^3*s24*s23*s12*s34-s14^2*d^2*s24^2*s13^3-8*s14^3*d^2*s24*s23^3+48*s14*s24^2*s13*s12^3-32*s14^2*s23*s12^4-16*s14^4*s23^2*s12+84*s14^2*d*s13*s23^2*s12*s34+4*s14*d*s24^3*s13*s23*s12-4*s14*d*s13^2*s23^3*s34-s14*d^2*s23^2*s12^2*s34^2-2*s14*d*s23^2*s34^4+40*s14^3*s24*s23*s12^2+44*s14^2*d*s24*s13*s12^3+18*s14^2*d*s13*s12^4+4*s14*d*s24^3*s13^2*s23+s14*d^2*s24^3*s13^2*s34+8*s14^2*d^2*s13^3*s12*s34+24*s14^3*s24*s23^3-120*s14^2*s13^2*s23^2*s34-68*s14*d*s13*s23*s12^2*s34^2-56*s14^2*s24*s23*s12^2*s34+40*s14*s13^2*s12^4+154*s14^2*d*s13^2*s23^2*s12-24*s14^2*s13^4*s23+20*s14^2*d*s24*s12^3*s34+18*s14*d^2*s24*s13^3*s12^2-4*s14^2*d^2*s24*s23^3*s34+32*s14^2*s24*s13^2*s12*s34-10*s14*d*s24*s23^2*s12^2*s34-24*s14^2*d^2*s24*s13^2*s23*s34-100*s14^3*d*s24*s13*s23^2-24*s14^2*s23^3*s34^2+56*s14^2*d*s13^3*s23*s34-8*s14^2*d^2*s24^2*s13*s23*s12-104*s14^2*s13^3*s23*s12-4*s14*d*s24^2*s13*s23*s12*s34-6*s14*d*s12^3*s34^3-24*s14^2*s13*s12^3*s34+s14^2*d^2*s12^2*s34^3+8*s14*d^2*s13^4*s23*s12-10*s14^2*d^2*s24*s23*s12*s34^2-8*s14*s23^3*s12*s34^2+40*s14^2*s13^2*s12*s34^2+2*s14*d*s24*s13*s23^2*s34^2-90*s14*d*s24^2*s13^2*s12^2-24*s14^2*s24^2*s23^2*s12-24*s14*d*s13^5*s34-10*s14^2*d*s24^2*s23^2*s34-6*s14^2*d^2*s23*s12*s34^3+s14*d^2*s24^3*s13*s23^2+32*s14*s24*s13*s12^4+8*s14*d^2*s13*s12^4*s34-60*s14*d*s13^4*s12^2+38*s14^2*d*s23^2*s12^3-s14^2*d^2*s24^2*s12^2*s34-2*s14^2*d*s24^3*s23^2-24*s14^2*d^2*s13^2*s23*s12^2+4*s14*d*s24^2*s13*s23^3-s14^2*d^2*s24^3*s12^2+32*s14*s24^3*s13*s12*s34-2*s14*d^2*s24^3*s13*s23*s12+48*s14*s24*s13*s23^2*s12*s34-6*s14^2*d^2*s13*s23^2*s12*s34-8*s14^2*s23*s12^2*s34^2+s14*d^2*s13^4*s23^2-4*s14^2*d^2*s13*s23^3*s12+8*s14^2*s13^5+72*s14*s24^2*s13^3*s23-2*s14*d*s24^3*s12^2*s34+216*s14*s13^2*s23*s12^2*s34-96*s14*d*s13^3*s23*s12^2+48*s14*s24^2*s13*s12*s34^2+24*s14^2*s13^3*s34^2-14*s14^2*d*s24^2*s13*s23^2+16*s14^3*s23*s12^2*s34+27*s14*d^2*s13^2*s12^2*s34^2-2*s14*d^2*s24^2*s13*s23*s12^2-10*s14*d^2*s24*s13^2*s23*s34^2-16*s14^2*s12^4*s34+8*s14*d^2*s13^2*s23*s12^3+2*s14^2*d^2*s24*s13^3*s34+80*s14^2*d*s24*s13^3*s23+10*s14*d^2*s13^3*s12^3-4*s14^4*d^2*s23^2*s12+4*s14*d*s24^4*s13*s23+8*s14*s13*s23^3*s12*s34+128*s14*s24*s13^2*s12^3+s14*d^2*s23^2*s12^3*s34-8*s14*d*s13^2*s23^2*s34^2-92*s14^3*d*s13*s23^2*s12+104*s14^2*d*s13*s23*s12^2*s34-8*s14^2*d*s24*s13*s12*s34^2+s14*d^2*s24^3*s23^2*s34-4*s14*d*s13^3*s23^3-88*s14*d*s24*s13^4*s12+24*s14^2*d*s23*s12^4+96*s14*s24*s13^2*s23^2*s12-2*s14^2*d^2*s13^2*s23^3-3*s14*d^2*s13*s23^2*s12*s34^2+36*s14*d^2*s24*s13^2*s12^2*s34+12*s14^2*d*s13^2*s12^3+4*s14^3*d^2*s13*s23*s12^2+16*s14*s24^2*s13*s23^2*s34-8*s14^3*d*s23^2*s34^2+10*s14*d^2*s13*s23*s12^3*s34+8*s14^2*d*s24^3*s13*s12-24*s14^3*d*s24*s13*s23*s12+32*s14*s24*s13^5+3*s14*d^2*s13^3*s23^2*s12-12*s14^2*d*s24*s13*s23^2*s34-2*s14^2*d*s24^2*s13^2*s34-8*s14^2*s24^2*s13^2*s12-8*s14^2*d^2*s24^2*s13^2*s23-12*s14^3*d*s24*s23^2*s34+144*s14*s24*s13^3*s23*s34-54*s14*d*s13*s12^3*s34^2+3*s14*d^2*s12^4*s34^2-140*s14*d*s13^3*s23*s12*s34+208*s14^2*d*s24*s13^2*s23*s12+192*s14*s24*s13^3*s12^2-12*s14^3*d*s24^2*s23*s12-8*s14^2*d*s24*s23^4-3*s14^2*d^2*s24*s12^4-4*s14*d*s23^3*s12^2*s34-10*s14*d^2*s24^2*s13*s23*s12*s34-22*s14*d*s24*s13^5+4*s14*d*s24^2*s23^3*s34-2*s14*d^2*s24^2*s23*s12^2*s34+40*s14^2*d*s24^2*s13*s23*s34+32*s14^3*s13*s23*s12^2+32*s14*s24^3*s13^2*s34+4*s14^3*d*s23*s12*s34^2-6*s14*d*s13^6+3*s14*d^2*s24^2*s12^3*s34-68*s14^3*d*s23^3*s12+15*s14*d^2*s24^2*s13^2*s12*s34+144*s14*s24^2*s13^2*s23*s12+8*s14^2*s13^2*s34^3+32*s14*s13*s12^4*s34+136*s14^2*d*s13^2*s23*s12*s34-8*s14*d*s13^2*s23^3*s12+3*s14*d^2*s24*s13*s12^4+8*s14*s24^3*s13*s23^2+4*s14^2*d^2*s24*s13*s23^3+8*s14*s13^3*s23^3-56*s14^2*s24*s13*s12^3-36*s14*d*s13*s12^2*s34^3+36*s14^3*d*s13^2*s23*s34-16*s14*s24*s23^2*s12*s34^2+16*s14*d*s24^3*s13*s23*s34-12*s14^2*d*s13^3*s12^2+s14*d^2*s12^2*s34^4-2*s14*d*s23^2*s12*s34^3+72*s14*s24*s13*s23*s12^3+96*s14*s13^4*s23*s12+6*s14*d^2*s24*s13*s12*s34^3-6*s14^2*d^2*s24*s13^2*s12^2-168*s14^2*s24*s13^2*s23^2-s14*d^2*s24*s13*s23^2*s12^2+96*s14*s24*s13*s12^2*s34^2-7*s14^2*d^2*s13^3*s23^2+16*s14^4*s13*s23^2+24*s14^2*d*s23*s12^3*s34-4*s14^3*d^2*s13^3*s23+7*s14^2*d^2*s13*s23^2*s34^2+80*s14*s13^4*s12^2+12*s14*d^2*s24*s13^2*s12^3-8*s14*d*s13*s12*s34^4-16*s14^3*s24*s13^2*s23-232*s14^2*s24*s13*s23*s12^2+14*s14^2*d*s23^2*s12*s34^2+32*s14*s13^5*s34-2*s14*d^2*s13*s23*s34^4-60*s14*d*s24^2*s13^3*s34-2*s14*d^2*s24^2*s13^3*s23-8*s14^3*d^2*s13*s23*s12*s34+144*s14*s13^2*s12^2*s34^2+24*s14*d*s24^2*s13*s23*s34^2+92*s14^2*d*s13*s23*s12^3-8*s14^2*s13*s23*s34^3+96*s14*s13^2*s23*s12^3+32*s14^3*s23*s12^3-108*s14*d*s24*s13^2*s23*s12^2-14*s14^2*d*s13*s12^2*s34^2-2*s14^2*d^2*s24*s13*s23^2*s12+72*s14*s13^3*s23^2*s12-3*s14^2*d^2*s24^2*s12^3+s14^2*d^2*s24*s23^2*s12^2-4*s14^2*d*s24^2*s23^3-2*s14*d*s24^2*s23^2*s12*s34-204*s14*d*s24*s13^3*s12*s34+28*s14^2*d*s23^3*s12^2+3*s14^2*d^2*s13^4*s34+s14^2*d^2*s13^5-8*s14*s13*s23^3*s34^2-8*s14^2*s24*s12^2*s34^2-72*s14*d*s24^2*s13*s12^2*s34-72*s14^2*s24*s23*s12^3-88*s14*d*s13^2*s23*s12*s34^2-16*s14^2*s24^2*s23*s12*s34-30*s14*d*s13^2*s12^4-s14^2*d^2*s23^2*s12^2*s34+s14^2*d^2*s12^3*s34^2-42*s14*d*s13^2*s23^2*s12^2+32*s14*s24*s13^2*s34^3-40*s14^3*d*s13*s23^2*s34+21*s14*d^2*s13^3*s12*s34^2-66*s14*d*s24*s13^4*s34+2*s14*d^2*s24*s13^4*s23-6*s14*d^2*s24*s23*s12*s34^3-12*s14*d*s24*s12^3*s34^2+4*s14^4*d^2*s23^2*s34+4*s14^3*d^2*s23^2*s12*s34+4*s14*d^2*s13^3*s34^3-54*s14*d*s13^2*s12*s34^3+6*s14*d^2*s24*s13^2*s23*s12^2+s14*d^2*s13*s12^5-4*s14*d^2*s13^2*s23*s34^3+192*s14*s24*s13^2*s12*s34^2+48*s14*s13*s23^2*s12^2*s34-88*s14^2*s24*s13^3*s23-8*s14*d*s23*s12^2*s34^3+24*s14^3*d*s13*s23*s12*s34+24*s14*s13*s23*s12^4-20*s14*d*s24*s13*s23*s12*s34^2-36*s14*d*s13^3*s23*s34^2-24*s14^2*s24^2*s13*s23^2-7*s14^2*d^2*s24^2*s13*s12^2+16*s14^2*s13^3*s12^2+8*s14^3*d^2*s24*s23*s12^2-6*s14*d^2*s24^2*s13*s23*s34^2+96*s14*s24*s13*s12^3*s34+216*s14*s24*s13^3*s23*s12-s14*d^2*s24^2*s23^2*s12*s34+30*s14*d^2*s24*s13^3*s12*s34+4*s14^3*d^2*s23*s12^3+124*s14^2*d*s24*s13*s23^2*s12-s14^2*d^2*s24^3*s13^2+8*s14^2*s24*s23^4+8*s14^2*s24^2*s13^2*s34-6*s14*d*s24^2*s23^2*s34^2-8*s14^2*s12^5+14*s14^2*d*s24^2*s13^2*s12-48*s14^3*d*s24*s23^2*s12+12*s14*d^2*s24^2*s13*s12^2*s34+2*s14*d^2*s13^2*s23*s12*s34^2+32*s14*s24^3*s13^3+3*s14*d^2*s24^2*s12^2*s34^2-4*s14^3*d^2*s13*s23*s34^2-6*s14^2*d*s13^2*s34^3-68*s14^3*d*s23^2*s12^2-152*s14*d*s13^3*s12^2*s34+32*s14*s24^2*s13*s23^2*s12+8*s14^3*d*s24*s13*s23*s34-32*s14^3*s13^3*s23+2*s14^2*d^2*s24^3*s13*s23-8*s14^2*s24^3*s13*s12+56*s14*s24*s13^2*s23^2*s34+s14*d^2*s12^5*s34+6*s14^2*d^2*s13^2*s12^2*s34-32*s14^2*s23^3*s12^2-2*s14^2*d^2*s24^2*s13*s23*s34-56*s14^2*s13^3*s23*s34+84*s14^2*d*s13^3*s23*s12-8*s14*d*s24^2*s23*s12^2*s34-8*s14^2*s24^2*s13*s12*s34+3*s14*d^2*s24*s12^4*s34+4*s14^2*d^2*s24*s23^3*s12-14*s14*d*s24*s13^3*s23^2+9*s14*d^2*s24*s13^3*s34^2-34*s14^2*d^2*s24*s13^2*s23*s12+14*s14*d^2*s13^3*s23*s12*s34-126*s14*d*s24^2*s13^2*s12*s34-32*s14^2*s24*s12^3*s34+2*s14*d^2*s24^3*s13^2*s12+8*s14*s13^2*s34^4+66*s14^2*d*s13^2*s23^2*s34-240*s14^2*s13^2*s23^2*s12+3*s14*d^2*s24^2*s13*s12^3-98*s14*d*s13^4*s12*s34+8*s14^3*d^2*s13^2*s23^2+4*s14^2*d^2*s13*s23^3*s34-2*s14*d^2*s24^3*s13*s23*s34+4*s14^2*d*s23*s12^2*s34^2+3*s14*d^2*s24^2*s13^4+4*s14^4*d^2*s13*s23^2-8*s14^2*s24^3*s23*s12-18*s14*d*s24^3*s13*s12^2-8*s14*s23^2*s12^2*s34^2-34*s14^2*d^2*s13^2*s23*s12*s34-36*s14*d*s13^4*s34^2+288*s14*s24*s13^2*s23*s12*s34-6*s14^2*d*s23^2*s34^3-16*s14^2*d^2*s13^2*s23*s34^2-34*s14^2*d*s13^2*s12*s34^2-14*s14*d*s24*s13*s23^2*s12^2-s14*d^2*s24^2*s13^2*s23^2-2*s14^2*d*s24^2*s23^2*s12+24*s14*s13*s23^2*s12^3-30*s14*d*s24^2*s13^2*s34^2-30*s14*d*s13^5*s12+128*s14*s13^2*s12^3*s34-60*s14^3*d*s13*s23^3+12*s14^2*d*s13*s12^3*s34-8*s14^4*d^2*s23^3+2*s14*d^2*s13^5*s23-28*s14*d*s24*s13*s12*s34^3+4*s14*d^2*s13^4*s23*s34-2*s14*d*s12^2*s34^4+16*s14^3*s13*s23^2*s34-108*s14*d*s13^2*s12^3*s34+2*s14^2*d^2*s13^3*s12^2-14*s14*d*s13*s23^2*s12^3+48*s14*s24^2*s13^2*s34^2+2*s14*d^2*s24*s23*s12^3*s34-10*s14^2*d*s24*s13^2*s34^2-24*s14^2*s24*s13^2*s12^2-3*s14^2*d^2*s24*s13^2*s23^2-2*s14*d^2*s24*s23^2*s12*s34^2+58*s14^2*d*s13^3*s23^2+32*s14*s24*s13*s12*s34^3+2*s14*d^2*s24*s13*s23*s12^3-4*s14^3*d^2*s13^2*s23*s12+128*s14*s13^4*s12*s34-176*s14^2*s24*s13*s23*s12*s34-72*s14^2*s24*s13*s23^3+21*s14*d^2*s24*s13*s12^2*s34^2-8*s14^2*d^2*s24*s13*s12^3+80*s14*s13^3*s12^3-10*s14*d*s23^2*s12^2*s34^2+48*s14*s24*s13*s23^2*s12^2-8*s14^2*d*s23^4*s34+32*s14*s24^3*s13*s12^2-20*s14^2*d*s24*s13^2*s12*s34+2*s14*d^2*s23*s12^3*s34^2+8*s14^3*d^2*s23^3*s12-6*s14*d*s24*s23^2*s34^3+64*s14^3*s24*s23^2*s12-128*s14*d*s24*s13^2*s23*s12*s34+28*s14^2*d*s24*s23*s12^2*s34+3*s14*d^2*s24*s12^2*s34^3+3*s14*d^2*s24*s13^5+72*s14^3*s13*s23^3-4*s14*d^2*s24^2*s13^2*s23*s12+18*s14^2*d*s24*s12^4+192*s14*s24^2*s13^2*s12*s34-8*s14*s24*s23^3*s12*s34+48*s14*s24*s13^3*s23^2-18*s14^2*d*s13^4*s34-48*s14^2*s24*s13*s23^2*s34+72*s14*s24*s13*s23*s12*s34^2-24*s14^2*s23^2*s12^2*s34-2*s14^2*d^2*s24*s13*s12^2*s34+192*s14*s13^3*s12^2*s34-24*s14^2*d^2*s13*s23*s12*s34^2-6*s14^2*d^2*s24*s23*s12^3+s14^2*d^2*s24*s12^2*s34^2+2*s14^2*d*s12^3*s34^2-108*s14*d*s24*s13^3*s23*s12+5*s14*d^2*s13^2*s12^4+18*s14^2*d*s24^2*s12^3-72*s14^2*s24*s23^2*s12^2-14*s14^2*d*s24*s23^2*s34^2+6*s14^2*d^2*s24*s23^2*s12*s34-6*s14*d*s24*s13^2*s23^2*s34+2*s14*d*s24^2*s13*s23^2*s12-4*s14^2*d*s23^3*s12*s34+2*s14*d^2*s24*s13*s23*s12^2*s34-24*s14^3*d*s23^4-2*s14^2*d^2*s23^3*s12^2-2*s14^2*d^2*s24^2*s23^3+24*s14^4*d*s23^3-4*s14^3*d*s24^2*s13*s23-8*s14*d*s23*s12^4*s34-6*s14^2*d^2*s13*s23*s34^3-136*s14^2*s13*s23*s12^2*s34-16*s14*d*s24*s23*s12^2*s34^2+8*s14^2*s24*s13*s12*s34^2+72*s14*s13^3*s23*s34^2-10*s14^2*d^2*s24*s13*s23*s34^2-16*s14*d*s13*s23*s12^4+9*s14*d^2*s24^2*s13^3*s12+96*s14*s24*s13^4*s34-84*s14*d*s24*s13*s12^3*s34+24*s14*s13^4*s23^2-8*s14^2*d*s13*s12*s34^3+104*s14^3*s23^2*s12^2+72*s14*s13^2*s23^2*s12^2-22*s14*d*s24*s13^2*s34^3+24*s14^3*d*s13^3*s23-24*s14^2*s13*s23^2*s34^2+134*s14^2*d*s13*s23^2*s12^2-144*s14*d*s24*s13^2*s12*s34^2-44*s14*d*s13*s23^2*s12^2*s34+64*s14*s13^2*s12*s34^3+s14^2*d^2*s13^2*s34^3+288*s14*s24*s13^3*s12*s34-8*s14*s24^2*s23^2*s12*s34+8*s14^3*s24^2*s23*s12+4*s14*d*s13*s23^3*s34^2+12*s14^3*d^2*s23^2*s12^2+6*s14*d^2*s24*s13^3*s23*s12+20*s14^2*d*s24*s13*s12^2*s34+56*s14^2*d*s13*s23*s12*s34^2-16*s14^2*s24^3*s13*s23-2*s14^2*d^2*s24^3*s13*s12+s14*d^2*s13^6-2*s14*d*s12^5*s34-24*s14^3*d*s13*s23*s12^2+72*s14^2*d*s24^2*s13^2*s23-s14^2*d^2*s24^2*s13^2*s34-s14*d^2*s24^2*s13*s23^2*s12+4*s14^3*d^2*s24*s23^2*s34-24*s14^2*s24*s12^4+96*s14*s24^2*s13*s12^2*s34+144*s14*s13^2*s23*s12*s34^2-42*s14*d*s13^3*s23^2*s12+15*s14*d^2*s13*s12^3*s34^2+2*s14^2*d*s24^3*s13^2-24*s14^3*s13*s23*s12*s34-24*s14^3*d*s23*s12^3-3*s14*d^2*s24*s13^2*s23^2*s34+12*s14^2*d*s24*s23^2*s12*s34+11*s14^2*d^2*s24^2*s13*s23^2-96*s14^2*s13^3*s23^2-40*s14^2*s24^2*s13*s12^2-126*s14*d*s13^2*s12^2*s34^2-6*s14*d*s13*s12^5+96*s14*s24^2*s13^3*s34+s14*d^2*s24^3*s12^2*s34+44*s14^2*d*s24*s13*s23*s34^2-4*s14*d^2*s24*s23*s12^2*s34^2+12*s14*d^2*s13^3*s23*s12^2-40*s14^3*s13^2*s23*s34+24*s14^2*s24*s13^3*s12-14*s14^2*d^2*s24*s13^3*s23-20*s14^2*d*s24*s13^3*s34-64*s14*d*s13^2*s23*s12^3+24*s14^2*s23^4*s34+24*s14*d^2*s24*s13^2*s12*s34^2+2*s14*d^2*s13*s23^2*s12^2*s34-8*s14^3*s24*s13*s23*s34+216*s14*s24*s13^2*s23*s12^2+18*s14*d^2*s24*s13*s12^3*s34-4*s14^4*d*s23^2*s34+8*s14*s13*s12*s34^4+12*s14*d^2*s24*s13^4*s12-2*s14*d*s24^3*s23^2*s34-24*s14*d*s13^3*s34^3-2*s14*d^2*s13^2*s23^2*s34^2+8*s14*s24*s13*s23^3*s12-10*s14*d*s23^2*s12^3*s34+20*s14^3*d^2*s13*s23^2*s12+5*s14*d^2*s13^5*s12-64*s14*d*s13^4*s23*s12-8*s14*s23^2*s12*s34^3-144*s14^2*s13*s23^2*s12*s34-4*s14*d*s24*s23^2*s12*s34^2+4*s14^2*d*s23*s12*s34^3+8*s14^3*d^2*s13*s23^3+12*s14^3*d*s24*s13^2*s23-16*s14*d*s24*s23*s12^3*s34+3*s14^2*d^2*s24^2*s23^2*s34-16*s14*d*s13^5*s23+9*s14*d^2*s24^2*s13^2*s12^2+32*s14*s13*s12^2*s34^3+10*s14^2*d*s24^2*s12^2*s34-90*s14*d*s24*s13*s12^2*s34^2+132*s14^2*d*s13^2*s23*s12^2-8*s14^2*s24*s23*s12*s34^2-40*s14^2*s13^2*s23*s34^2-20*s14^4*d*s13*s23^2-30*s14*d*s24^2*s13^4+2*s14*d*s24^3*s13*s23^2+2*s14^2*d^2*s24^3*s23*s12+120*s14^3*s23^3*s12-24*s14^3*d*s13^2*s23^2-32*s14*d*s13*s12^4*s34+16*s14*s13^2*s23^3*s12+68*s14^2*d*s13*s23^3*s12+6*s14*d^2*s13^4*s34^2-32*s14^2*s13*s23^3*s34+5*s14^2*d^2*s23^2*s34^3-36*s14*d*s24*s13*s23*s12^3-8*s14^2*s12^3*s34^2+8*s14*s24^4*s13^2-19*s14^2*d^2*s13^2*s23^2*s12-18*s14*d*s24^3*s13^2*s34+4*s14*d*s23^3*s34^3-2*s14*d^2*s24^3*s13^2*s23-128*s14^2*s24^2*s13*s23*s12-44*s14^2*d*s13^3*s12*s34+2*s14^2*d^2*s24*s13^2*s12*s34-6*s14^2*d*s13^5-120*s14^2*s24*s13^2*s23*s34-2*s14^2*d^2*s24*s12^3*s34-32*s14^2*d^2*s24*s13*s23*s12*s34+216*s14*s13^3*s23*s12*s34+24*s14^2*s13^4*s34-4*s14*d^2*s24*s13*s23^2*s12*s34-40*s14*d*s24^2*s13^2*s23*s12+20*s14^2*d*s24*s23^3*s34-132*s14*d*s24*s13^3*s12^2-16*s14^2*s24*s23^3*s12-14*s14^2*d^2*s13^3*s23*s34-8*s14*s24^2*s23^3*s34-24*s14^2*s24^2*s12^3+20*s14^3*d^2*s24*s13*s23^2-8*s14^2*d^2*s24*s23*s12^2*s34+24*s14^2*s13^2*s12^2*s34-48*s14^2*s24^2*s23*s12^2+4*s14*d*s24^2*s13*s23^2*s34+24*s14^2*s23^3*s12*s34-2*s14^2*d^2*s24^2*s23*s12*s34-2*s14^2*d^2*s23^3*s34^2+48*s14*s13*s12^3*s34^2+38*s14^2*d*s24*s23^2*s12^2-28*s14*d*s24*s13^2*s23^2*s12-24*s14^2*s13*s23^4-4*s14^2*d^2*s13^4*s23-56*s14*d*s24*s13^3*s23*s34+s14*d^2*s13^2*s34^4+88*s14^3*s24*s13*s23^2-4*s14*d*s24^4*s13^2+18*s14^2*d*s23^2*s12^2*s34-18*s14^2*d*s13^4*s12-240*s14^2*s24*s13*s23^2*s12-8*s14*s23^3*s34^3+2*s14^2*d*s13*s23^2*s34^2-2*s14*d^2*s24^3*s23*s12*s34-6*s14^2*d^2*s23*s12^3*s34-192*s14^2*s13*s23^2*s12^2-8*s14^2*s24^3*s12^2-10*s14^2*d*s24*s13^4+128*s14*s24*s13^4*s12+2*s14*d^2*s13*s12*s34^4+s14^2*d^2*s23^2*s12*s34^2+8*s14^2*s13*s12*s34^3-88*s14*d*s24*s13^2*s12^3-156*s14*d*s13^2*s23*s12^2*s34-36*s14*d*s24^2*s13*s12*s34^2+24*s14*s13^2*s23^2*s34^2+48*s14*s24^2*s13^4-16*s14^2*d^2*s13*s23*s12^3+144*s14*s13^3*s23*s12^2-26*s14^2*d^2*s24*s13*s23*s12^2+24*s14*s13^5*s23-20*s14*d*s24^2*s13^3*s23+4*s14*d*s13*s23*s34^4+6*s14*d^2*s24^2*s13^3*s34-8*s14*d*s13*s23^3*s12*s34+5*s14^2*d^2*s13*s12^2*s34^2+32*s14*s13^3*s34^3+12*s14^2*d*s24*s13*s23^3-2*s14^2*d*s24^2*s13^3+10*s14*d^2*s13*s12^2*s34^3-4*s14^3*d*s24*s23^3-22*s14*d*s24*s13*s12^4+8*s14^2*d*s23^4*s12+8*s14*s24*s13*s23^2*s34^2+72*s14*s24^2*s13*s23*s12*s34-12*s14^3*d*s23*s12^2*s34+s14*d^2*s23^2*s34^4-8*s14^3*d^2*s13^2*s23*s34-6*s14*d^2*s24*s13*s23*s34^3+s14*d^2*s13^2*s23^2*s12*s34+16*s14^2*s24*s13^2*s34^2+24*s14^2*d*s24*s13^2*s12^2-s14^2*d^2*s12^4*s34-20*s14*d*s24^3*s13*s12*s34-s14*d^2*s23^2*s12*s34^3+8*s14*s13*s12^5+3*s14^2*d^2*s13^3*s34^2+104*s14^3*s13*s23^2*s12-6*s14*d^2*s24^2*s23*s12*s34^2+144*s14*s24^2*s13^2*s12^2-4*s14^4*d^2*s24*s23^2-4*s14^3*d^2*s24^2*s23^2+4*s14^3*d^2*s24^2*s23*s12-8*s14*d^2*s24^2*s13^2*s23*s34-6*s14*d^2*s13*s23*s12*s34^3-16*s14*d*s24*s13*s23^2*s12*s34+72*s14*s13*s23*s12^2*s34^2-8*s14^3*d*s24*s23*s12*s34+8*s14^2*d*s24^2*s13*s12*s34+8*s14^3*s24*s23^2*s34-6*s14*d*s24^2*s12^3*s34+24*s14*s24^3*s13^2*s23-4*s14^3*d^2*s23*s12*s34^2+s14*d^2*s24^3*s13^3+152*s14^2*d*s24*s13*s23*s12*s34-88*s14^2*s13^2*s23^3-8*s14^3*d^2*s23^3*s34-8*s14*s24*s23^2*s12^2*s34+10*s14*d^2*s13^4*s12^2-8*s14^2*d^2*s23*s12^2*s34^2-120*s14^2*s13*s23^3*s12+8*s14^2*d*s13*s23^3*s34+17*s14*d^2*s13^4*s12*s34-s14^2*d^2*s24^3*s23^2+16*s14^2*s24*s13^4-30*s14*d*s24^2*s13*s12^3-58*s14*d*s13^2*s23^2*s12*s34+16*s14*d*s24*s13*s23*s34^3-5*s14^2*d^2*s23^2*s12^3-16*s14^2*s24^2*s12^2*s34-168*s14^2*s13^2*s23*s12^2+6*s14^2*d*s24^3*s12^2+52*s14^2*d*s13^2*s23*s34^2-24*s14^3*s23^3*s34+s14*d^2*s24^3*s13*s12^2+8*s14*s13^2*s23^3*s34-14*s14*d*s13^4*s23^2-152*s14^2*s13^2*s23*s12*s34+7*s14^2*d^2*s13^2*s12*s34^2+3*s14*d^2*s24^2*s13^2*s34^2+5*s14^2*d^2*s24^2*s23^2*s12-2*s14^2*d*s12^2*s34^3-2*s14*d^2*s23*s12*s34^4+2*s14*d*s24^2*s13^2*s23^2+4*s14*d^2*s13^5*s34-44*s14*d*s13^4*s23*s34+24*s14*s24^3*s13*s23*s12+2*s14*d^2*s24^3*s13*s12*s34-16*s14^2*d^2*s13^3*s23*s12-6*s14*d*s24*s12^4*s34-2*s14*d^2*s24*s13^2*s23*s12*s34-24*s14^2*d*s13^2*s12^2*s34+24*s14^2*d*s24^2*s23*s12^2-12*s14*d*s13*s23*s12*s34^3+4*s14*d*s24^2*s13^2*s23*s34-24*s14^2*s24*s23^3*s34-66*s14*d*s24*s13^3*s34^2+8*s14^3*s24^2*s23^2-s14*d^2*s24*s13^3*s23^2+3*s14*d^2*s12^3*s34^3-16*s14^4*s23^3-248*s14^2*s24*s13^2*s23*s12-3*s14^2*d^2*s13*s12^4+24*s14^2*s13^4*s12+48*s14^3*s23^4-5*s14^2*d^2*s13^2*s23^2*s34-36*s14*d*s24^3*s13^2*s12+8*s14^2*d*s13*s23^4-40*s14^2*s24^2*s13*s23*s34-2*s14^2*d^2*s24^2*s13*s12*s34+56*s14^2*s13^3*s12*s34+16*s14*s13*s23^2*s12*s34^2+288*s14*s24*s13^2*s12^2*s34-2*s14*d^2*s24*s13^2*s23^2*s12-5*s14^2*d^2*s24^2*s13^2*s12-80*s14^2*s24^2*s13^2*s23+3*s14*d^2*s24^2*s23^2*s34^2+72*s14*s13*s23*s12^3*s34+4*s14^2*d*s24^2*s23*s12*s34+2*s14*d^2*s24^2*s13*s23^2*s34+8*s14^3*d^2*s24*s23^2*s12-24*s14*d*s13^3*s23^2*s34-6*s14*d*s12^4*s34^2-88*s14*d*s24*s13*s23*s12^2*s34+28*s14*d^2*s13^3*s12^2*s34+12*s14^2*d*s24^3*s13*s23+12*s14^3*d*s13*s23*s34^2+40*s14^2*d*s13^2*s23^3-6*s14*d*s24^2*s12^2*s34^2-2*s14^2*d^2*s13^2*s12^3-2*s14*d^2*s24*s13^3*s23*s34+8*s14^3*d^2*s23^2*s34^2-4*s14*d*s13*s23^3*s12^2+72*s14*s24^2*s13*s23*s12^2-114*s14*d*s13^3*s12*s34^2-36*s14*d*s24*s13^4*s23-60*s14*d*s13^3*s12^3+20*s14^4*d*s23^2*s12+9*s14*d^2*s24*s13^4*s34-8*s14*s24*s13*s23^3*s34+18*s14*d^2*s13^2*s23*s12^2*s34+6*s14*d^2*s24^2*s13*s12*s34^2+3*s14*d^2*s13^2*s23^2*s12^2+8*s14*s24*s13^2*s23^3+16*s14^3*d^2*s13*s23^2*s34+11*s14*d^2*s13^2*s12*s34^3-8*s14^2*s23^4*s12-4*s14*d*s24^4*s13*s12+24*s14^3*s24*s13*s23*s12+12*s14^3*d*s23^2*s12*s34-4*s14^2*d^2*s23*s12^4+6*s14*d^2*s24*s12^3*s34^2+8*s14^2*s24^2*s13^3+72*s14*s24*s13^2*s23*s34^2+8*s14*s13^6-32*s14^3*s13^2*s23*s12-12*s14^2*d*s24*s13^3*s12+32*s14^2*s24*s13^3*s34+8*s14*d*s24*s23^3*s34^2-4*s14*d*s13^2*s23*s34^3+34*s14^2*d*s24^2*s13*s12^2+6*s14^2*d*s12^5-36*s14^3*d*s24*s23*s12^2+144*s14*s24^2*s13^3*s12-2*s14*d^2*s23*s12^2*s34^3+176*s14^2*d*s24*s13*s23*s12^2))
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (1/2*(60*s24^3*s13*s12^2-38*s14^2*d*s23^2*s12^2+30*d*s24*s12*s34^4+32*s14*d*s24*s13^3*s23-10*s14*d^2*s24*s13^3*s34+8*s13^4*s12*s34-8*s14*s12^2*s34^3-22*d*s24^3*s13*s23*s12+6*s14^2*d*s12*s34^3+56*s14^2*s23^3*s12+25*s14^2*d^2*s24^2*s23*s12+16*s14*d*s24^2*s13*s23^2+10*d*s24^5*s34-18*s14*d^2*s24^2*s13*s34^2-4*s14^2*s24^2*s12*s34-5*s14^2*d^2*s12^2*s34^2+16*s14*s24^3*s12^2+4*d*s24^4*s12^2+25*s14^2*d^2*s23*s12*s34^2-5*d^2*s24*s23*s34^4+60*s24^2*s13^2*s34^2+8*s14*s13*s23^2*s34^2+7*s14^2*d^2*s23*s12^3+16*d*s12^2*s34^4-4*s24^2*s13^4+17*s14^2*d^2*s13^2*s23*s34+10*s14*d*s24^3*s13*s12+s14^2*d^2*s12^4-96*s14*s23^2*s12^2*s34+30*s14*d*s13^4*s34+8*s14^3*d^2*s13^2*s23-32*s14^2*d*s23*s12^2*s34+26*s14*d*s12^3*s34^2-3*s14^2*d^2*s24^3*s34-3*d^2*s24*s13^2*s34^3-52*s14*s24*s23^2*s12^2-8*s14^3*s24*s23^2+4*s14*d*s24^2*s12^3-24*d*s24^2*s13^3*s12-3*d^2*s13*s23*s12^2*s34^2+60*s24^3*s23*s12*s34-20*s14*s24*s12*s34^3+42*s14^2*d*s13^2*s12*s34+32*s14*d*s24*s13*s23^2*s12-2*s14*d^2*s24^2*s13^2*s23-2*s14*d*s24^2*s13^2*s34+s14^2*d^2*s13*s12^3+60*s24^2*s23*s12*s34^2+30*s14*d*s24*s12^3*s34+24*s24^2*s23^2*s34^2-3*d^2*s24*s13*s34^4-32*s14^3*s23^3-22*s14*d^2*s13^3*s12*s34-12*s14*s13^2*s23^3-12*s14*s24*s23*s12^2*s34+46*s14*d*s13^2*s23^2*s12-52*s14^2*d*s13*s23^3+78*s14*d*s24^2*s12*s34^2+12*s14*d^2*s24^2*s23*s34^2-5*s14^2*d^2*s24^2*s13*s12-24*s14^2*s13^3*s12-60*s14^2*s24^2*s13*s23+2*s14*d^2*s24^2*s13*s23*s34+8*s14^3*d^2*s24*s23*s12+14*s14^2*d^2*s13^2*s23^2+16*s13^2*s23^2*s12*s34+64*s14*d*s24*s13*s23*s12*s34-36*d*s24*s13^2*s12^2*s34-12*d*s13*s23^2*s12*s34^2-12*s24*s13*s23*s34^3+50*s14*d*s13^3*s23*s34-84*s14*s24*s13^2*s12*s34-6*s14*d^2*s24*s13^2*s23*s12+6*s14^2*d*s13^2*s12^2-14*d*s13*s23*s12^3*s34+32*s13^3*s12^2*s34+36*s24^3*s23*s12^2-4*s14*d*s24*s12^4+48*s24*s12^3*s34^2-36*s14*d*s24^2*s23^2*s34-8*s14*s12*s34^4+6*s14*d^2*s23*s12*s34^3+12*s13^2*s12*s34^3-12*s14*d^2*s13^3*s12^2-3*s14^2*d^2*s24^3*s13+24*s14*d*s13^3*s23^2-34*d*s24^2*s13*s23*s12*s34-s14^2*d^2*s24^4-d^2*s24*s34^5+140*s24*s13*s23*s12^2*s34+52*d*s24*s12^2*s34^3-60*s14*s24*s13^2*s12^2-4*s24*s13^4*s34+28*s23*s12^2*s34^3+8*s13^3*s23*s34^2-4*d^2*s24^3*s12^3-12*s14^2*s24*s13^3-32*d*s24^2*s13*s23*s12^2+68*s14^3*d*s23^2*s12+2*d*s24*s13^2*s23*s34^2+28*s13*s23*s12*s34^3+8*s12^5*s34+16*s24^2*s13^2*s23*s34-14*s14*d*s24^3*s23*s12-12*s14*d^2*s13^2*s23*s12^2-18*s14*d^2*s13^2*s23*s12*s34-8*s14*s24*s13*s23^3+8*s14^3*d^2*s13*s23*s34-6*d*s23*s12^3*s34^2-32*s14*d^2*s24^2*s12^2*s34-16*s14^2*d*s23^4+10*d*s24^2*s34^4+72*s14^2*s24*s13*s23*s12+16*s14^2*d*s23^2*s12*s34+104*s24^3*s13*s12*s34-12*d^2*s24^2*s13*s34^3-44*s14*s13^4*s12+4*s14*d*s24^5+12*s14^2*d^2*s13*s23^2*s34-3*s14^2*d^2*s24^2*s34^2+2*s14^2*d*s24*s34^3-2*d*s12^5*s34-32*s14*s24*s23^3*s12-8*s14^2*s24*s23*s34^2-42*s14^2*d*s24*s23*s12^2+66*s14*d*s24*s13^2*s23*s12+24*s14^2*d*s13*s12^2*s34-36*d*s24^2*s13^2*s12^2-60*s14*s13^2*s12^2*s34+58*s14*d*s24^2*s13*s23*s34-16*s14*s24^2*s23*s12^2-6*d^2*s24*s13^2*s12^2*s34-36*s14^2*d*s23^3*s12-4*s14^2*s12*s34^3-10*s14*d^2*s24*s13^2*s34^2-4*s13*s12*s34^4+10*s14*d*s24*s13^2*s23^2+4*s14^2*d^2*s24*s23^2*s12-7*s14^2*d^2*s13*s12*s34^2+30*d*s24^4*s12*s34+28*s14^2*s23^2*s12^2+8*s24^5*s13+4*s14*s24^3*s12*s34-3*s14^2*d^2*s12^3*s34-9*d^2*s24*s13^2*s23*s34^2-36*s14*s24*s13^4-48*s14*s13^2*s23*s34^2+10*s14*d*s24*s13*s12^3+120*s14*d*s13^2*s23*s12*s34-5*d^2*s24^4*s23*s34+24*s14*d*s24^3*s34^2+60*s14^2*s13*s23*s12^2-20*s14^2*d*s13*s23*s34^2+8*s14^2*s24*s12^2*s34+24*s24^2*s13^3*s34+6*s14*d^2*s23^2*s34^3-32*s14*s13*s23^3*s34-9*d^2*s24^3*s13^2*s34-3*d^2*s24^2*s13*s23*s12^2-10*d*s24^3*s13^2*s23+4*s24*s13^3*s23*s34+10*s14*d*s13*s23*s34^3+24*s14*s24^2*s13*s12^2+60*d*s24^2*s12*s34^3-s14^2*d^2*s24^2*s13^2+48*s24*s13*s23^2*s12*s34-6*d^2*s24^3*s13*s23*s12-16*s14^3*d^2*s24*s23^2-6*d*s24^2*s23^2*s12^2-2*s14*d*s12^5-6*d*s24^2*s13^4-18*s14^2*d*s24*s13*s12^2+4*s14^2*s24*s13*s34^2-28*d^2*s24^3*s12*s34^2+24*s13*s12^2*s34^3-92*s14*s24*s13^3*s12-2*s14*d^2*s23*s34^4+28*s24^2*s13*s23^2*s34-18*d*s24*s13*s23^2*s34^2+16*d*s24^3*s23*s34^2-2*s14*d^2*s13*s23^2*s12^2-d^2*s24^6+40*s14^3*s13^2*s23-10*s14*d^2*s13*s12*s34^3+6*s14^2*d*s24*s13^3+16*s23^2*s12*s34^3-10*d^2*s24^2*s23*s34^3-88*s14*s24*s13*s23*s34^2-24*s14*s24^2*s13^3-48*s14^3*d*s23*s12*s34+4*s24*s13^2*s23^2*s12+88*s14^2*s13*s23^3-2*d*s24*s13^4*s12-6*d*s13^2*s23^2*s34^2-2*s14*d^2*s13^2*s34^3+80*s14*d*s24*s12^2*s34^2-96*s14*s24*s23^2*s12*s34+2*s14*d*s24*s23*s12^3-12*d^2*s24^4*s13*s34-12*d*s24*s23^2*s12^2*s34-4*d*s24^4*s13*s23-48*s14*s24^3*s13*s23-d^2*s12*s34^5+7*s14^2*d^2*s13^3*s23+12*s14*s24*s13*s12^2*s34-44*s14*s13*s23*s12*s34^2-4*s12^2*s34^4-8*s14*d^2*s24^4*s12+4*s14*d^2*s24*s13*s23^2*s12-12*s14*d*s24^4*s23-12*s14^2*s13^4+64*s14^2*s24*s13^2*s23-3*d^2*s13^2*s12^2*s34^2-2*s14^2*d^2*s24*s13^2*s12+20*s14*d^2*s24*s23^2*s34^2-18*d^2*s24*s13*s23*s12*s34^2+16*s24^4*s12^2-6*s14*d*s24^3*s13^2-14*d*s13*s23*s12^2*s34^2+22*s14^2*d*s13^3*s12+28*d*s24^3*s12^2*s34+96*s24^2*s13*s12*s34^2+60*s13^2*s23*s12^2*s34-10*d*s13^2*s23*s12*s34^2-24*d*s24^2*s13*s12^2*s34+4*s14*s24^4*s23+108*s24*s13*s12^2*s34^2-12*d*s24^4*s13^2-4*s14*d^2*s24*s13^2*s23*s34+10*s14^2*d*s13^2*s34^2+8*s24^3*s23*s34^2+4*s14*d*s24*s34^4+12*s14*s24^3*s13^2-24*s14^2*s13^3*s34-6*s14^2*d^2*s24^2*s13*s34+24*s14^2*d*s24^2*s13*s23+2*s14*d^2*s24^2*s23*s12^2-30*s14*d^2*s13^2*s12^2*s34+8*s14^3*d^2*s24*s23*s34+20*s24*s13*s23*s12^3-6*d*s23^2*s12*s34^3+74*s14*d*s13^3*s23*s12+36*s14*s24^2*s13*s12*s34-8*s24^2*s12*s34^3+24*s14^2*d*s24*s13*s12*s34+28*s14*d*s13^2*s23^2*s34-24*d*s24*s13^3*s12*s34-18*d*s24^2*s23^2*s12*s34+60*s13*s12^3*s34^2+44*s24*s23^2*s12*s34^2+24*d*s13*s12^2*s34^3+68*s24*s23*s12^3*s34+12*s24^2*s23^2*s12^2-18*d*s24*s13^2*s23*s12^2+4*s14^3*d*s23^2*s34-30*s14*d*s24^3*s23*s34+20*s24^2*s13^2*s23*s12-2*s14*d^2*s13^2*s23*s34^2+8*s14^3*d^2*s13*s23*s12+8*s14*d*s24^2*s13^3+44*s24^3*s12^2*s34-10*d^2*s24^3*s34^3+18*d*s24^2*s13*s23*s34^2-11*d^2*s24^2*s12^3*s34-10*s14*d*s23*s12^2*s34^2+12*s13^2*s23^2*s34^2-4*s14*d^2*s12^4*s34+42*s14*d*s13*s12^3*s34+16*s24^2*s12^4-2*s14^2*d^2*s13^4-12*s24*s13^4*s12-12*s14*s24*s13^2*s34^2+26*d*s24*s23*s12*s34^3+22*s14*d*s24^2*s23^2*s12+86*s14*d*s13^2*s12*s34^2+20*s12^4*s34^2-26*s14*d^2*s24^3*s12*s34+12*s24^4*s13*s23+22*s14*d^2*s24*s23*s12*s34^2-6*s14*d^2*s13^3*s34^2+36*s24^2*s13^2*s12^2-40*s14*s13*s23^2*s12^2-s14^2*d^2*s23*s34^3+22*s14^2*d*s24^2*s12*s34-20*s14*s13*s12*s34^3-8*s14^4*d^2*s23^2+90*s14*d*s13*s23*s12^2*s34+94*s14*d*s24*s13*s12*s34^2+22*s14*d*s24*s13^4-18*d^2*s24*s13*s12*s34^3+20*d*s24^4*s34^2+4*s14^3*d*s13*s23^2-4*s23*s34^5-2*d*s24^3*s13*s23*s34+16*s14^3*d*s24*s13*s23-20*s14*d^2*s24^2*s13*s12^2+29*s14^2*d^2*s24^2*s23*s34-40*s14^2*s23^3*s34+6*d*s24^5*s12-d^2*s24^5*s23+48*s24^3*s13*s34^2-42*s14^2*d*s23^2*s34^2-14*s14*d^2*s24*s13^3*s12-15*d^2*s24^2*s13^2*s12*s34-36*s14^2*s13^2*s12*s34-56*s14*s23^3*s12*s34+50*s14^2*d^2*s24*s23*s12*s34+24*s14^2*s24*s12^3-12*s14*d*s24*s13*s23^2*s34-d^2*s24^3*s13^3+20*s14*d*s24^2*s13^2*s12+8*s24^3*s13^2*s23+44*s14*s24*s23^2*s34^2+16*s14*d*s24^2*s34^3-2*d*s24*s13*s23*s12*s34^2-d^2*s24^2*s13^3*s23-32*d*s24^2*s13^3*s34-3*d^2*s13*s23*s34^4-4*s14*d^2*s13^4*s23-28*s14^2*s23*s12^2*s34+16*d*s13*s12*s34^4-4*s14^2*d^2*s24^3*s12-9*d^2*s24^2*s23*s12^2*s34-20*s14^2*s24^2*s23^2-26*s14^2*d*s24^3*s23+21*s14^2*d^2*s13^2*s23*s12-10*d*s13^3*s23*s12*s34+2*s14*d^2*s24^3*s13*s23+12*s24^4*s12*s34+6*s14*d*s24^3*s13*s34+38*s14*d*s13^4*s12-18*s14*d^2*s13*s23*s12^2*s34-38*s14*d^2*s24*s13*s12*s34^2-d^2*s24^2*s23*s12^3-56*s14*s24*s13*s23*s12^2-22*s14*d*s23^2*s12*s34^2+16*s24*s13^2*s23^2*s34+40*d*s24*s13*s12*s34^3+16*s24^2*s13*s23^2*s12-8*d*s13^3*s12^2*s34-12*d*s24^3*s23*s12^2-6*d*s24*s13*s23^2*s12^2+10*s14*d^2*s13*s23^2*s34^2+20*s14*d*s23*s12^3*s34-27*d^2*s24^2*s12^2*s34^2+76*s24*s13^2*s23*s12*s34+82*s14*d*s13*s12^2*s34^2-12*d*s24^2*s23^2*s34^2+36*s14^2*s24*s13*s12^2+8*s14^2*d^2*s24*s13*s23^2-32*s14*s13^3*s23^2+2*s14^2*d*s24*s13*s34^2-60*s14*s24*s13^3*s34+12*s14*d*s12*s34^4+8*s14^3*s13*s23*s34+36*s14*s24^2*s13*s34^2-4*s24*s13^3*s23*s12+14*s14*d*s13*s23*s12^3-12*d^2*s24^3*s13*s23*s34-14*s14^3*d*s24^2*s23+104*s24*s13*s12^3*s34-54*s14^2*d*s24*s13^2*s23-3*s14^2*d^2*s24*s13^2*s34+20*s14^2*d*s13^3*s34+16*s14*s24*s12^4+4*d*s23*s12^2*s34^3-2*d*s13^3*s23*s34^2+48*s14^3*d*s23^3+20*s13*s23^2*s12^2*s34+72*s24*s13^2*s12*s34^2-12*s14^2*s13^2*s34^2+40*s23*s12^3*s34^2-60*d*s24^2*s13^2*s12*s34-68*s14*s24^2*s13^2*s23-3*d^2*s13^2*s23*s34^3+16*s14*d^2*s24*s13*s23^2*s34-14*s14*d^2*s24*s12*s34^3-8*s14*d^2*s24^4*s34-128*s14^2*d*s24*s23*s12*s34+12*d*s13^2*s12*s34^3+16*s14*s24^2*s23*s12*s34+6*s14*d*s24*s23*s34^3-9*d^2*s24^4*s13*s12+8*s14*d*s13^2*s23^3-3*d^2*s12^3*s34^3-2*s14*d^2*s23^2*s12^2*s34+20*d*s24*s12^3*s34^2-8*s14^3*s24*s23*s12-d^2*s13^3*s12*s34^2+4*s24*s12^2*s34^3+4*d*s23*s34^5-6*d*s24*s13^4*s34+4*s24^5*s12+92*s24*s23*s12^2*s34^2-8*s14*d^2*s13^2*s12^3-20*d*s24^2*s23*s12^2*s34+46*s14*d*s24^2*s13*s23*s12-12*s14*s24^2*s23*s34^2-12*s14^2*d^2*s24*s23^3-12*s14^2*d*s24*s12^3-48*s14*s24*s23^3*s34-3*d^2*s13^2*s23*s12*s34^2-24*d^2*s24^2*s13*s12^2*s34-26*s14^2*d*s24*s23*s34^2+8*s14^2*s24*s23*s12^2+70*s14*d*s24*s13^2*s23*s34-36*d*s24^2*s13^2*s34^2+24*s14*s24^2*s12^3+10*d*s23*s12*s34^4+24*s14^2*d^2*s13*s23^2*s12-12*s24*s12*s34^4-6*s14^2*d^2*s24*s12*s34^2+12*s14*s12^3*s34^2-4*s14^2*d^2*s24^2*s12^2-24*d*s24^3*s13*s12^2-2*s14*d^2*s13*s12^4-6*d*s24^2*s12^4-12*s14^2*d^2*s24*s13*s12*s34-92*s14*s13^3*s12*s34-80*s14^2*s23^2*s12*s34+10*s14^2*d*s24^2*s23^2+10*s14*d*s13^5-64*s14^2*s24*s13*s23*s34-36*s14*s13^4*s34-2*d*s13^4*s12*s34-3*d^2*s24^2*s13*s12^3-2*d^2*s24*s13^3*s12*s34+68*s14*d*s13*s23^2*s12*s34-76*s14^2*d*s13*s23*s12^2-4*s14^2*s13*s23*s34^2+8*s14*d^2*s24^3*s23^2+18*s14^2*d*s24*s12^2*s34+4*s24^2*s13^3*s12-6*s14*d^2*s24^4*s13-18*d^2*s24^2*s13*s23*s34^2-6*d^2*s24^3*s13^2*s12-16*s14*s13*s23^3*s12+12*s14^2*s12^4+24*s14*s24^2*s12^2*s34-40*s14^3*s23*s12^2+20*s24^4*s13^2+2*s14*d*s24*s13*s34^3+16*s14*d*s24^3*s12^2-3*d^2*s24^4*s23*s12-84*s14*s13^2*s23*s12^2+32*s14*d*s12^2*s34^3-12*d^2*s24*s23*s12*s34^3-d^2*s24*s13^3*s34^2-2*d*s24*s13^3*s23^2-70*s14*d*s24*s23*s12*s34^2+52*s14^2*s23^2*s34^2+24*s14*s23*s12*s34^3-2*d^2*s24*s12^4*s34+44*s14^2*d*s23^3*s34+8*s14^2*d^2*s24*s23^2*s34-18*d^2*s24^2*s13*s23*s12*s34-18*s14*d^2*s24*s13^2*s12^2-28*s14*d*s23*s12*s34^3+36*s24^4*s13*s12+108*s24^2*s13^2*s12*s34-6*d*s13*s23^2*s12^2*s34-12*d*s24*s13^2*s12*s34^2+4*s14*d*s12^4*s34+22*s14*d^2*s24^2*s23^2*s34-2*d*s24*s12^5+20*s13^3*s12*s34^2-24*d*s24*s13*s12^3*s34-4*s24*s13^4*s23+12*s24^3*s23^2*s12-15*d^2*s24*s12^2*s34^3-152*s14*s13*s23^2*s12*s34+30*s14*d*s13^3*s34^2-8*s14^3*d^2*s23^2*s34+8*s14*d*s13*s23^3*s12+100*s24^2*s23*s12^2*s34-4*s14*d^2*s24^2*s13^3-8*d*s24*s23^2*s34^3-4*d*s24*s23*s12^2*s34^2+12*s14*s24*s13*s34^3-8*s14*s23*s34^4+66*s14*d*s13^2*s23*s12^2+44*s14*s24*s23*s12*s34^2-d^2*s23*s12^3*s34^2+64*s14*d*s24^2*s12^2*s34-20*s14^3*d*s13*s23*s34+10*s14*d^2*s24^3*s23*s12+20*d*s24^3*s34^3+8*s24*s13*s23^2*s12^2-6*d*s23^2*s12^2*s34^2-18*s14*d^2*s24*s12^3*s34-116*s14*s24*s13^2*s23*s34-12*d*s24^2*s13*s23^2*s12+4*s13^3*s23^2*s34-46*s14*d^2*s24^2*s13*s12*s34-4*s14*d^2*s13^2*s23^2*s12-30*s14*d^2*s24^2*s12*s34^2-84*s14*s24^2*s13*s23*s12+94*s14*d*s13^3*s12*s34-12*d*s24*s13^2*s23^2*s34+24*s24*s13*s12*s34^3+18*s14^3*d*s23*s12^2-12*s14*s13^2*s34^3-16*s14^3*d^2*s23^3-6*s14*d^2*s13^3*s23*s34+28*s24^2*s23*s12^3-96*s14^2*d*s24*s13*s23*s12+4*s14*s12^5-2*s14*d^2*s24*s34^4-2*s14^2*d*s24^2*s13*s12-18*s14*d*s24^2*s23*s34^2+8*s14^2*s24^2*s13*s34-3*d^2*s24^4*s13^2-10*d*s24*s13^3*s23*s12-12*s14^3*d*s24*s23*s12-2*s14^2*d^2*s13^2*s34^2+100*s24*s13*s23*s12*s34^2-12*d*s13^2*s12^3*s34+36*s24^2*s12^2*s34^2+4*s14*s24^4*s12+24*s14*d*s24*s23^3*s34-18*s14*d^2*s24^3*s13*s12-3*d^2*s24^2*s13^2*s23*s12-2*s14*d^2*s13^5+26*s14*d*s13^4*s23+12*s24*s13^3*s34^2+72*s14^2*s13^2*s23*s12-20*s14*s24*s23*s34^3-44*s14^2*d*s13^2*s23*s34+8*s14^2*d*s24^3*s12+15*s14^2*d^2*s24^3*s23+36*s24*s12^4*s34-12*d*s24*s13^2*s34^3+12*s14^2*s24^2*s12^2-8*s14*d^2*s13^4*s12+17*s14^2*d^2*s23*s12^2*s34+8*s14*d*s23^3*s34^2-d^2*s24^2*s13^3*s12-4*d*s23*s12^4*s34-16*d*s24^3*s13^3+48*s24^3*s13^2*s12-8*s14^2*s24*s23^3-11*s14^2*d^2*s13^2*s12*s34-14*s14*d^2*s24^2*s13^2*s34+42*s14*d*s24^2*s13^2*s23-56*s14*d*s24^2*s23*s12*s34-8*s14*d^2*s24^2*s34^3+20*s24^4*s23*s12+38*s14*d*s24*s13^3*s34-8*d^2*s24*s12*s34^4-2*s14*d^2*s24*s13^3*s23-21*d^2*s24*s13*s12^2*s34^2-2*d*s23^2*s34^4-4*d^2*s24^5*s12-12*s14*s13*s12^2*s34^2+6*s14^2*d^2*s23^2*s34^2+36*s14*d*s24*s13*s23*s12^2+6*s14*d*s24^2*s13*s34^2-4*s14^2*s24^2*s23*s34+6*s14*d^2*s24^2*s13*s23^2+12*s12^3*s34^3-20*s14*s13*s23*s12^3-42*s14^2*d*s24^2*s23*s12+44*s24^2*s13*s12^3+32*s14*s23^2*s34^3+4*s13^4*s23*s34-28*s14*s23^2*s12*s34^2-24*s14*s23*s12^3*s34-86*s14^2*d*s23*s12*s34^2-2*d^2*s24*s23*s12^3*s34-8*s14^3*d^2*s13*s23^2-10*d^2*s24^4*s34^2+4*s24^2*s13^2*s23^2-4*s14*d^2*s24*s13^4+16*d*s24*s23*s34^4-28*s14*d^2*s24*s12^2*s34^2-2*d*s23^2*s12^3*s34+4*s24^5*s23+12*d*s12^3*s34^3+12*s24^2*s13*s23*s34^2-8*d*s24^3*s23^2*s34-28*d*s24^2*s13^2*s23*s12-24*s14*s24*s13*s23^2*s34-d^2*s23*s34^5+12*s24*s13^2*s23*s12^2+36*s14*s24^3*s13*s34-3*d^2*s24^4*s13*s23-2*s14*d^2*s24*s23*s12^3+4*s23^2*s34^4+24*s14^3*s13*s23^2+28*s14*d*s13^2*s12^3-24*s14*s24^2*s13^2*s12+8*s14^3*d^2*s24^2*s23+24*s14*d*s23^3*s12*s34+20*s24*s23*s12*s34^3-4*s14^2*d^2*s13^3*s34+26*s14*d^2*s24^2*s23*s12*s34-21*d^2*s24^3*s12^2*s34+4*s24*s23^2*s12^3+16*s14*d*s24^4*s34+60*s24^2*s12^3*s34-8*s14^2*s24*s13^2*s34-66*s14*d*s24*s23^2*s34^2-22*d^2*s24^2*s12*s34^3-2*s14*d^2*s13*s23*s34^3-6*s14*d^2*s24*s13*s23*s12^2-14*d*s24*s13*s23*s12^3-3*d^2*s13*s12^3*s34^2-116*s14*s13*s23*s12^2*s34-12*s14*s24*s13*s12*s34^2+60*d*s24^3*s12*s34^2+24*d*s24*s13*s12^2*s34^2-2*s14*d^2*s12*s34^4+56*s13^2*s23*s12*s34^2+144*s24^2*s13*s12^2*s34+12*s24*s13*s12^4-6*d^2*s24*s13*s23*s12^2*s34-s14^2*d^2*s24*s13*s12^2-56*s14*s13^3*s12^2+112*s14^2*s24*s13*s23^2+10*s14^2*d*s13^4+20*s14*d*s13*s23^2*s12^2+12*s13*s23^2*s34^3-18*d*s24*s23*s12^3*s34-10*d^2*s24^3*s23*s34^2-4*s14*d*s23*s12^4+16*s14^3*d^2*s23*s12*s34-18*d*s24*s23^2*s12*s34^2+24*d*s24^2*s23*s34^3+12*s24^3*s13^3+42*s14*d*s13*s12*s34^3+40*s24^2*s23^2*s12*s34+24*s24*s13^3*s12*s34-8*s14*d^2*s12^2*s34^3+4*s14^2*d*s24*s23^2*s12+4*s14*d^2*s24*s13^2*s23^2+32*s14^2*s24*s23^2*s34+14*s14*d*s24*s13^2*s34^2+26*s14^2*d*s13*s12*s34^2-6*d^2*s24*s13*s12^3*s34-38*d*s24*s13^2*s23*s12*s34+8*s24*s13^2*s12^3+12*s14*s13*s12^3*s34-8*d*s24*s13^3*s12^2-12*s14^2*d^2*s23^3*s34-12*d^2*s24*s13^2*s12*s34^2-17*d^2*s24^4*s12*s34-60*s14*s13^2*s12*s34^2-68*s14*s24^2*s23^2*s12-2*s14*d*s23^2*s12^3+28*s13^3*s23*s12*s34+4*d*s24^4*s23*s34-10*s14*d^2*s24*s13*s12^3-2*s14*d*s24^3*s23^2+16*s14^4*d*s23^2+4*s14*s24^3*s23*s34-24*s14^3*s24*s13*s23+32*s14^2*s23^4+2*s14*d*s24^4*s13-3*d^2*s24^3*s13^2*s23+4*s14*s23*s12^2*s34^2-36*d*s24^3*s13^2*s34-4*s14^2*s23*s34^3-12*s14*d^2*s24^3*s12^2-9*d^2*s24*s23*s12^2*s34^2+9*s14^2*d^2*s13*s23*s34^2-4*s24^2*s13^3*s23-8*s13*s23*s34^4+24*s14^3*s23^2*s34+62*s14*d*s24^2*s13*s12*s34-56*s14*s13^2*s23^2*s34-d^2*s12^4*s34^2+2*s14*d*s13*s12^4+2*s14^2*d*s24^2*s12^2+8*s14^2*d^2*s23^2*s12*s34-6*d*s24^3*s13*s23^2+2*s14^2*d^2*s24^2*s23^2-18*d^2*s24^3*s13*s34^2-d^2*s24^2*s12^4-8*d*s13*s12^4*s34-52*s14^2*d*s13*s23^2*s34+128*s14^2*s13*s23^2*s12+4*s24*s12^5-8*s14^2*s24*s12*s34^2-4*s14*s23^3*s12^2+17*s14^2*d^2*s24*s23*s12^2-3*d^2*s24^2*s13^2*s12^2-10*s14^2*d^2*s13*s12^2*s34-28*s14*s24^2*s23^3+8*s24*s23*s12^4+28*s14^2*d*s24*s23^3+34*s14^2*d^2*s24*s13*s23*s12-92*s14*s13^3*s23*s12+28*s24^3*s13*s23*s34-16*s14*d^2*s24^2*s13^2*s12+12*s24^4*s23*s34-8*s14*d^2*s24^2*s12^3+16*s14*d*s24^2*s23^3-2*d^2*s24^2*s13^3*s34+10*d*s13*s23*s34^4-8*d*s24^2*s13^3*s23+60*s24^3*s13^2*s34-12*d*s24*s13^2*s12^3-3*d^2*s13*s12*s34^4-6*s14*d^2*s13^4*s34-6*d^2*s13*s23*s12*s34^3-18*s14*d^2*s24^3*s13*s34+24*s14*d*s24^3*s13*s23-34*s14^3*d*s13^2*s23-10*s14*d^2*s12^3*s34^2-9*d^2*s24^2*s13^2*s23*s34-8*s24*s13^3*s12^2+4*s14*s13*s12^4+98*s14*d*s24*s13*s12^2*s34-74*s14^2*d*s13^2*s23*s12-4*s14*s24*s23*s12^3+18*s14*d*s13*s23*s12*s34^2+40*s14^2*s24*s23*s12*s34+6*s14^2*d*s24^3*s34-2*s14*d^2*s24^5+28*s14^2*s13^2*s23*s34-18*d^2*s24^2*s23*s12*s34^2+16*s14^2*d*s12^2*s34^2-6*d^2*s24^4*s12^2+48*s14^2*s23*s12*s34^2-12*s14*s13^5-4*d*s24*s23*s12^4-20*s14*s24^3*s23^2-4*s12*s34^5-4*s14*s23^2*s12^3-2*d*s24^4*s23^2-9*s14^2*d^2*s24^2*s12*s34+12*s14^2*s12^3*s34-26*s14^2*d*s23*s12^3-3*d^2*s12^2*s34^4+12*s14*s24^4*s13-8*d*s24^3*s13*s12*s34+44*s14*d*s24*s13*s23*s34^2+10*s14^2*d^2*s23^2*s12^2-52*s14^2*d*s24^2*s23*s34-20*s14*s13*s23*s34^3-8*s14^2*s24^2*s23*s12+16*s14*d*s24^2*s13*s12^2+32*s24^2*s13*s34^3-12*d^2*s24*s13*s23*s34^3-46*d*s24*s13*s23*s12^2*s34+62*s14*d*s24*s13^3*s12-5*d^2*s24^5*s34-s14^2*d^2*s12*s34^3+8*s24^3*s13*s23^2+116*s24^2*s13*s23*s12*s34+32*s13*s12^4*s34+2*d*s24^6+28*s14*d*s13^2*s23*s34^2+4*s14*s23*s12^4+12*s14*s24*s13*s12^3-16*s14^3*d*s13*s23*s12+32*s24*s23^2*s12^2*s34-76*s14^2*d*s13*s23*s12*s34-4*d*s24^3*s12^3+16*s14*d^2*s24^3*s23*s34+16*s14*d*s13*s23^3*s34-16*s14^3*d^2*s23^2*s12+60*s13^2*s12^2*s34^2+4*d*s24^2*s12^3*s34+2*s14*d^2*s23*s12^2*s34^2-2*d*s24*s23^2*s12^3-6*d^2*s24*s13^2*s23*s12*s34-12*s14*s24*s13^2*s23^2+16*s24^3*s23^2*s34-18*s14*d^2*s13*s12^3*s34+52*s14*d*s13^3*s12^2+8*s23^2*s12^3*s34+2*s14^2*d*s24^3*s13+24*d*s24^2*s13*s12*s34^2-18*d*s13^2*s23*s12^2*s34+88*s13*s23*s12^2*s34^2+32*s24^4*s13*s34+4*s14^2*s24^2*s13^2+54*s14*d*s24^3*s12*s34-2*s14*d^2*s13^3*s23^2-12*d^2*s24^3*s23*s12*s34-160*s14*s13^2*s23*s12*s34+8*s14*d^2*s24^2*s23^2*s12+2*d*s24*s34^5-22*s14*d^2*s13^2*s12*s34^2+24*s14^3*s23*s12*s34-6*d*s13*s23^2*s34^3-74*s14^2*d*s13^2*s23^2+16*s14*d*s24*s23^3*s12+4*s14^2*d*s24*s13*s23*s34-12*s14*d^2*s13^3*s23*s12-8*s24^2*s23*s34^3+4*s14*d^2*s24*s23*s12^2*s34+16*s14^2*s24^2*s13*s12+4*s14*d*s24^2*s23*s12^2+9*s14^2*d^2*s24^2*s13*s23+28*s14^2*s13^3*s23-2*s14*d^2*s24*s12^4+4*s14^2*d*s24^2*s13*s34-16*s14^3*d*s24*s23*s34-10*d*s24*s13^3*s23*s34+102*s14*d*s13^2*s12^2*s34-3*s14^2*d^2*s13^2*s12^2+2*s14*d^2*s13^2*s23^2*s34-14*s14^2*d*s13*s12^3-24*s14*s13^2*s12^3-2*s14^3*d*s23*s34^2-116*s14*s24^2*s13*s23*s34-6*d*s24*s13^2*s23^2*s12-3*d^2*s24^5*s13+32*s24*s13*s23^2*s34^2-8*d*s24*s13*s12^4-100*s14*s24*s13^2*s23*s12-18*d*s24^2*s13*s23^2*s34+4*s14^2*d^2*s13*s23^3+8*s24^3*s12*s34^2-6*d^2*s13*s12^2*s34^3-38*s14*d^2*s24*s13^2*s12*s34+16*s14^2*s23*s12^3-36*d*s24^3*s13^2*s12+2*s14^2*d*s12^3*s34+16*s23*s12^4*s34-12*s14*d^2*s24^3*s34^2+21*s14^2*d^2*s13*s23*s12^2-9*s14^2*d^2*s24*s12^2*s34-32*s14*d*s23^2*s34^3+8*s14*d*s24*s13*s23^3-4*d*s24^4*s23*s12-6*s14*d^2*s24*s13*s34^3-4*s14*s24^3*s23*s12-4*s14^2*s12^2*s34^2-128*s14*s24*s13*s23*s12*s34+34*s14^2*d^2*s13*s23*s12*s34-2*d*s24^3*s23*s12*s34+4*s14^2*d^2*s23^3*s12-16*d*s24*s13^3*s34^2-24*d*s24*s13*s23^2*s12*s34-8*s14*s24^2*s23^2*s34+54*s14*d*s24*s13^2*s12^2-24*s14^2*s24*s23^2*s12-32*s14^2*d*s24*s23^2*s34-16*s14^2*s13*s12*s34^2-36*d^2*s24^2*s13*s12*s34^2-6*d*s24*s12^4*s34+20*s24*s13^2*s34^3-6*s14*d*s24*s23*s12^2*s34+18*s14^2*d^2*s24*s13*s23*s34-68*s14*s13^3*s23*s34-s14^2*d^2*s24*s34^3-2*d^2*s24*s13^3*s23*s34+44*s24^3*s13*s23*s12-2*d*s13^4*s23*s34+13*s14^2*d^2*s24*s23*s34^2-20*s14*s23^3*s34^2-6*d*s24^2*s13^2*s23^2-3*d^2*s23*s12*s34^4-12*s24*s23*s34^4-9*d^2*s24^2*s13^2*s34^2+24*s24^3*s12^3-9*d^2*s24^3*s13*s12^2+36*s14*s24*s12^3*s34-5*d^2*s24^2*s34^4+56*s14^2*s13*s23^2*s34-112*s14^2*d*s13*s23^2*s12+106*s14*d*s24*s13^2*s12*s34+20*s14^2*d*s24*s12*s34^2-72*s14^3*s23^2*s12-24*d*s24^2*s13*s12^3-12*s14*s24^2*s12*s34^2-32*s14*s13^4*s23-68*s14*s13^2*s23^2*s12-8*s14^2*d*s12^4+6*s14^2*d*s24^2*s34^2-3*d^2*s23*s12^2*s34^3+20*s14*d^2*s24*s23^2*s12*s34+16*s24*s23^2*s34^3+6*d*s12*s34^5-24*s14^2*d*s13^3*s23+4*s24^4*s23^2-d^2*s13^3*s23*s34^2+14*s14*d*s24^4*s12+6*s14^2*d*s24*s13^2*s34+17*s14^2*d^2*s24*s13^2*s23+22*s14*d*s24*s23^2*s12^2+12*s14*s24^2*s13^2*s34+50*s14*d*s24*s12*s34^3+6*s14*d^2*s24^4*s23+6*d*s13^2*s23*s34^3+100*s14^2*s13^2*s23^2-6*s14*d^2*s24^3*s13^2-5*s14^2*d^2*s13^3*s12-14*d*s24^2*s13^2*s23*s34+40*s14*d*s23^2*s12^2*s34-10*d^2*s24*s12^3*s34^2-64*s14*s24*s13*s23^2*s12+28*s14*s24^3*s13*s12+10*d*s13*s23*s12*s34^3+8*s24*s13^2*s23*s34^2-8*d*s24^4*s13*s12-46*s14*d^2*s24*s13*s12^2*s34-3*d^2*s13^2*s12*s34^3+10*s14*d*s13^2*s34^3+52*s24^2*s13*s23*s12^2-2*d*s24*s13^4*s23+24*s14^2*s13*s12^3-6*d*s24^3*s23^2*s12+12*s14*d^2*s23^2*s12*s34^2+6*s14*d*s23*s34^4-30*d^2*s24^3*s13*s12*s34-12*d*s24^2*s23*s12^3-s14^2*d^2*s24*s13^3-6*s14*d^2*s23*s12^3*s34+60*d*s24^2*s12^2*s34^2-28*s14*d*s13*s23^2*s34^2+18*d*s24^2*s23*s12*s34^2+48*s13^2*s12^3*s34-3*d^2*s24^3*s23*s12^2-48*s14*s24*s13^3*s23+2*s14^2*d*s24^4-2*d*s13^3*s23^2*s34+20*s23^2*s12^2*s34^2-4*s14^2*d*s24^2*s13^2+36*s14^3*d*s24*s23^2-26*s14*d^2*s13*s12^2*s34^2+8*s24*s13*s34^4-36*s14*s13^3*s34^2-3*s14^2*d^2*s24*s13*s34^2-64*s14^2*d*s24*s13*s23^2+52*s13*s23*s12^3*s34-4*s14*d^2*s13*s23*s12^3-32*s14*s24^2*s13*s23^2+16*s14*s12^4*s34+4*s14^2*s24^3*s13-2*s14*d^2*s24*s13*s23*s34^2+96*s24*s13^2*s12^2*s34+26*d*s24*s13*s23*s34^3+32*s13*s23^2*s12*s34^2-6*d*s13^2*s23^2*s12*s34-4*s24*s13^5)*Den(-2+d)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (1/2*Den(-2+d)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(24*s14^2*d*s23^2*s12^2-12*s14*d*s24*s13^3*s23-8*s14*d^2*s24*s13^3*s34+8*s14*s12^2*s34^3+2*s14^2*d*s12*s34^3-8*s14^2*s23^3*s12+4*s14^2*d^2*s24^2*s23*s12+4*s14*d*s24^2*s13*s23^2-18*s14*d^2*s24^2*s13*s34^2+4*s14^2*s24^2*s12*s34-s14^2*d^2*s12^2*s34^2+8*s14^2*d^2*s23*s12*s34^2-8*s14*s13*s23^2*s34^2-4*s14^2*d^2*s23*s12^3+6*s14^2*d^2*s13^2*s23*s34+12*s14*d*s24^3*s13*s12-2*s14^2*d^2*s12^4-20*s14*d*s13^4*s34+8*s14^2*d*s23*s12^2*s34-8*s14*d*s12^3*s34^2-s14^2*d^2*s24^3*s34+8*s14^3*s24*s23^2+12*s14*s24*s12*s34^3-18*s14^2*d*s13^2*s12*s34-s14*d^2*s24^2*s13^2*s23+34*s14*d*s24^2*s13^2*s34-5*s14^2*d^2*s13*s12^3-8*s14*d*s24*s12^3*s34+8*s14^3*d^2*s23*s34^2+48*s14^3*s23^3+4*s14*d^2*s13^3*s12*s34-4*s14*s24*s23*s12^2*s34-8*s14*d*s13^2*s23^2*s12+8*s14^2*d*s13*s23^3+12*s14*d*s24^2*s12*s34^2+3*s14*d^2*s24^2*s23*s34^2-7*s14^2*d^2*s24^2*s13*s12+24*s14^2*s13^3*s12+12*s14^2*s24^2*s13*s23+2*s14*d^2*s24^2*s13*s23*s34+8*s14^3*d^2*s24*s23*s12-2*s14^2*d^2*s13^2*s23^2-16*s14*d*s24*s13*s23*s12*s34-20*s14*d*s13^3*s23*s34+140*s14*s24*s13^2*s12*s34-2*s14*d^2*s24*s13^2*s23*s12+6*s14^2*d*s13^2*s12^2+4*s14*d*s24^2*s23^2*s34+4*s14*s12*s34^4-s14*d^2*s23*s12*s34^3+6*s14*d^2*s13^3*s12^2-s14^2*d^2*s24^3*s13-4*s14*d*s13^3*s23^2+108*s14*s24*s13^2*s12^2+12*s14^2*s24*s13^3-56*s14^3*d*s23^2*s12+3*s14*d^2*s13^2*s23*s12^2+s14*d^2*s13^2*s23*s12*s34+8*s14^3*d^2*s13*s23*s34-4*s14*d^2*s24^2*s12^2*s34-128*s14^2*s24*s13*s23*s12-4*s14^2*d*s23^2*s12*s34+48*s14*s13^4*s12+4*s14^2*d^2*s13*s23^2*s34-3*s14^2*d^2*s24^2*s34^2-5*s14*d^2*s13*s34^4+6*s14^2*d*s24*s34^3+8*s14^2*s24*s23*s34^2+26*s14^2*d*s24*s23*s12^2-24*s14*d*s24*s13^2*s23*s12+108*s14*s13^2*s12^2*s34-4*s14*d*s24^2*s13*s23*s34+8*s14^2*d*s23^3*s12+4*s14^2*s12*s34^3-20*s14*d^2*s24*s13^2*s34^2+4*s14^2*d^2*s24*s23^2*s12-5*s14^2*d^2*s13*s12*s34^2-28*s14^2*s23^2*s12^2+4*s14*s24^3*s12*s34-s14^2*d^2*s12^3*s34+36*s14*s24*s13^4+24*s14*s13^2*s23*s34^2-16*s14*d*s24*s13*s12^3-48*s14*d*s13^2*s23*s12*s34+8*s14*d*s24^3*s34^2-108*s14^2*s13*s23*s12^2-32*s14^2*d*s13*s23*s34^2-8*s14^2*s24*s12^2*s34-4*s14*d*s13*s23*s34^3+32*s14*s24^2*s13*s12^2-5*s14^2*d^2*s24^2*s13^2-8*s14^3*d^2*s24*s23^2+42*s14^2*d*s24*s13*s12^2-4*s14^2*s24*s13*s34^2+108*s14*s24*s13^3*s12+s14*d^2*s23*s34^4-40*s14^3*s13^2*s23-12*s14*d^2*s13*s12*s34^3+2*s14^2*d*s24*s13^3+24*s14*s24*s13*s23*s34^2+32*s14*s24^2*s13^3+16*s14^3*d*s23*s12*s34-24*s14^2*s13*s23^3-8*s14*d^2*s13^2*s34^3-4*s14*d*s24*s12^2*s34^2-8*s14*s24*s23^2*s12*s34+8*s14*s24^3*s13*s23-2*s14^2*d^2*s13^3*s23+76*s14*s24*s13*s12^2*s34+20*s14*s13*s23*s12*s34^2+12*s14^2*s13^4-80*s14^2*s24*s13^2*s23-10*s14^2*d^2*s24*s13^2*s12+12*s14*d*s24^3*s13^2-14*s14^2*d*s13^3*s12-3*s14*d^2*s24*s13^2*s23*s34+2*s14^2*d*s13^2*s34^2+8*s14*d*s24*s34^4+4*s14*s24^3*s13^2+24*s14^2*s13^3*s34-6*s14^2*d^2*s24^2*s13*s34-36*s14^2*d*s24^2*s13*s23+6*s14*d^2*s13^2*s12^2*s34-s14*d^2*s24^2*s13*s23*s12+8*s14^3*d^2*s24*s23*s34-36*s14*d*s13^3*s23*s12+28*s14*s24^2*s13*s12*s34+24*s14^2*d*s24*s13*s12*s34-4*s14*d*s13^2*s23^2*s34-4*s14^2*d^2*s13*s34^3+8*s14^3*d^2*s23*s12^2+48*s14^3*d*s23^2*s34-4*s14*d*s24^3*s23*s34-2*s14*d^2*s13^2*s23*s34^2+8*s14^3*d^2*s13*s23*s12-2*s14*d*s24^2*s13^3-8*s14*d*s23*s12^2*s34^2+s14*d^2*s12^4*s34-32*s14*d*s13*s12^3*s34+s14^2*d^2*s13^4+28*s14*s24*s13^2*s34^2-28*s14*d*s13^2*s12*s34^2-4*s14*d^2*s24^3*s12*s34-2*s14*d^2*s24*s23*s12*s34^2-4*s14*d^2*s13^3*s34^2+8*s14*s13*s23^2*s12^2+10*s14^2*d^2*s23*s34^3+2*s14^2*d*s24^2*s12*s34+20*s14*s13*s12*s34^3-8*s14^4*d^2*s23^2-36*s14*d*s13*s23*s12^2*s34+28*s14*d*s24*s13*s12*s34^2-16*s14*d*s24*s13^4-16*s14^3*d*s13*s23^2-48*s14^3*d*s24*s13*s23-4*s14*d^2*s24^2*s13*s12^2+10*s14^2*d^2*s24^2*s23*s34+24*s14^2*s23^3*s34+28*s14^2*d*s23^2*s34^2+36*s14^2*s13^2*s12*s34+12*s14^2*d^2*s24*s23*s12*s34-24*s14^2*s24*s12^3+8*s14*d*s24*s13*s23^2*s34-4*s14*d*s24^2*s13^2*s12-16*s14*s24*s23^2*s34^2+12*s14*d*s24^2*s34^3+s14*d^2*s13^4*s23-20*s14^2*s23*s12^2*s34-4*s14^2*s24^2*s23^2-2*s14^2*d*s24^3*s23-8*s14^2*d^2*s13^2*s23*s12+s14*d^2*s24^3*s13*s23+28*s14*d*s24^3*s13*s34-s14^2*d^2*s34^4-32*s14*d*s13^4*s12+2*s14*d^2*s13*s23*s12^2*s34-28*s14*d^2*s24*s13*s12*s34^2+40*s14*s24*s13*s23*s12^2-8*s14*d*s23*s12^3*s34-26*s14*d*s13*s12^2*s34^2+2*s14*d*s34^5-36*s14^2*s24*s13*s12^2+4*s14^2*d^2*s24*s13*s23^2+8*s14*s13^3*s23^2+22*s14^2*d*s24*s13*s34^2+68*s14*s24*s13^3*s34+4*s14*d*s12*s34^4-8*s14^3*s13*s23*s34-12*s14*s24^2*s13*s34^2-12*s14*d*s13*s23*s12^3-2*s14^3*d*s24^2*s23+30*s14^2*d*s24*s13^2*s23-9*s14^2*d^2*s24*s13^2*s34-12*s14^2*d*s13^3*s34-24*s14^3*d*s23^3+12*s14^2*s13^2*s34^2+28*s14*s24^2*s13^2*s23-12*s14*d^2*s24*s12*s34^3-s14*d^2*s24^4*s34-12*s14*d*s24*s23*s34^3+8*s14^3*s24*s23*s12+4*s14*d^2*s13^2*s12^3-4*s14*d^2*s24*s13*s23*s12*s34+12*s14*s24^2*s23*s34^2+20*s14^2*d*s24*s12^3-42*s14^2*d*s24*s23*s34^2-48*s14^2*s24*s23*s12^2-8*s14*d*s24*s13^2*s23*s34-4*s14^2*d^2*s13*s23^2*s12-6*s14^2*d^2*s24*s12*s34^2+4*s14*s12^3*s34^2-2*s14^2*d^2*s24^2*s12^2+s14*d^2*s13*s12^4-12*s14^2*d^2*s24*s13*s12*s34+108*s14*s13^3*s12*s34+16*s14^2*s23^2*s12*s34-8*s14*d*s13^5+8*s14^2*s24*s13*s23*s34+36*s14*s13^4*s34-8*s14*d*s13*s23^2*s12*s34+76*s14^2*d*s13*s23*s12^2-4*s14^2*s13*s23*s34^2+6*s14^2*d*s24*s12^2*s34-s14*d^2*s24^4*s13-12*s14^2*s12^4+8*s14*s24^2*s12^2*s34+40*s14^3*s23*s12^2+36*s14*d*s24*s13*s34^3+60*s14*s13^2*s23*s12^2-2*s14*d*s12^2*s34^3-72*s14^2*s13*s23*s12*s34-8*s14*d*s24*s23*s12*s34^2-36*s14^2*s23^2*s34^2-8*s14^2*d*s23^3*s34-4*s14^2*d^2*s24*s23^2*s34-4*s14*d*s23*s12*s34^3-4*s14*d*s12^4*s34-s14*d^2*s34^5+8*s14*s13*s23^2*s12*s34-10*s14*d*s13^3*s34^2-16*s14^3*d^2*s23^2*s34-4*s14*d^2*s24^2*s13^3-4*s14*s24*s13*s34^3+4*s14*s23*s34^4-36*s14*d*s13^2*s23*s12^2-2*s14*d*s24^2*s12^2*s34-12*s14^3*d*s13*s23*s34+52*s14*s24*s13^2*s23*s34-20*s14*d^2*s24^2*s13*s12*s34+8*s14^2*d*s13*s34^3-12*s14*d^2*s24^2*s12*s34^2+28*s14*s24^2*s13*s23*s12-64*s14*d*s13^3*s12*s34-34*s14^3*d*s23*s12^2+12*s14*s13^2*s34^3+56*s14^2*d*s24*s13*s23*s12-4*s14*d^2*s24*s34^4+26*s14^2*d*s24^2*s13*s12-12*s14*d*s24^2*s23*s34^2-8*s14^2*s24^2*s13*s34-20*s14^3*d*s24*s23*s12-4*s14^2*d^2*s13^2*s34^2-4*s14*d^2*s24^3*s13*s12+s14*d^2*s13^5-12*s14*d*s13^4*s23-120*s14^2*s13^2*s23*s12+12*s14*s24*s23*s34^3+12*s14^2*d*s13^2*s23*s34-12*s14^2*s24^2*s12^2+4*s14*d^2*s13^4*s12+2*s14^2*d^2*s23*s12^2*s34+8*s14^2*s24*s23^3-s14^2*d^2*s13^2*s12*s34-16*s14*d^2*s24^2*s13^2*s34-4*s14*d*s24^2*s23*s12*s34-6*s14*d^2*s24^2*s34^3-12*s14*d*s24*s13^3*s34-s14*d^2*s24*s13^3*s23+44*s14*s13*s12^2*s34^2-2*s14^2*d^2*s23^2*s34^2-12*s14*d*s24*s13*s23*s12^2+48*s14*d*s24^2*s13*s34^2+4*s14^2*s24^2*s23*s34+20*s14*s13*s23*s12^3-2*s14^2*d*s24^2*s23*s12-8*s14*s23^2*s34^3-8*s14*s23^2*s12*s34^2-20*s14^2*d*s23*s34^3+2*s14^2*d*s23*s12*s34^2-8*s14*d^2*s24*s12^2*s34^2-8*s14*s24*s13*s23^2*s34-12*s14*s24^3*s13*s34+24*s14^3*s13*s23^2-32*s14*d*s13^2*s12^3+64*s14*s24^2*s13^2*s12-s14*d^2*s24^2*s23*s12*s34+2*s14*d*s24^4*s34+8*s14^2*s24*s13^2*s34+8*s14*d*s24*s23^2*s34^2+24*s14^2*d*s24*s13^2*s12-s14*d^2*s24*s13*s23*s12^2+40*s14*s13*s23*s12^2*s34+44*s14*s24*s13*s12*s34^2-4*s14*d^2*s12*s34^4-11*s14^2*d^2*s24*s13*s12^2+72*s14*s13^3*s12^2-64*s14^2*s24*s13*s23^2-8*s14^2*d*s13^4-4*s14*d*s13*s23^2*s12^2+8*s14*d*s13*s12*s34^3-4*s14*d^2*s12^2*s34^3-40*s14^2*s24*s23^2*s34+32*s14*d*s24*s13^2*s34^2-2*s14^2*d*s13*s12*s34^2+36*s14*s13*s12^3*s34+76*s14*s13^2*s12*s34^2+16*s14^4*d*s23^2+4*s14*s24^3*s23*s34+24*s14^3*s24*s13*s23+6*s14*d*s24^4*s13-4*s14*s23*s12^2*s34^2+4*s14^2*s23*s34^3+18*s14^2*d^2*s13*s23*s34^2-24*s14^3*s23^2*s34+32*s14*d*s24^2*s13*s12*s34+8*s14*s13^2*s23^2*s34+2*s14^2*d*s34^4-8*s14*d*s13*s12^4+10*s14^2*d*s24^2*s12^2+4*s14^2*d^2*s23^2*s12*s34-2*s14^2*d^2*s24^2*s23^2+8*s14^2*d*s13*s23^2*s34-104*s14^2*s13*s23^2*s12+8*s14^2*s24*s12*s34^2-2*s14^2*d^2*s13*s12^2*s34-8*s14^2*d*s24*s23^3+4*s14^2*d^2*s24*s13*s23*s12+60*s14*s13^3*s23*s12-4*s14^2*d^2*s24*s12^3-8*s14*d^2*s24^2*s13^2*s12+16*s14*s24*s12^2*s34^2+s14*d^2*s13^4*s34-8*s14*d^2*s24^3*s13*s34+18*s14^3*d*s13^2*s23+12*s14*s13*s12^4-28*s14*d*s24*s13*s12^2*s34+74*s14^2*d*s13^2*s23*s12-16*s14*d*s13*s23*s12*s34^2-48*s14^2*s24*s23*s12*s34+2*s14^2*d*s24^3*s34-52*s14^2*s13^2*s23*s34-4*s14^2*d*s12^2*s34^2-32*s14^2*s23*s12*s34^2+12*s14*s13^5-3*s14^2*d^2*s24^2*s12*s34-12*s14^2*s12^3*s34+26*s14^2*d*s23*s12^3-4*s14*s24^4*s13-8*s14*d*s24*s13*s23*s34^2+16*s14^3*d^2*s24*s13*s23-2*s14^2*d^2*s23^2*s12^2-24*s14^2*d*s24^2*s23*s34+8*s14*s13*s23*s34^3-16*s14^2*s24^2*s23*s12-2*s14*d*s24^2*s13*s12^2-48*s14*d*s24*s13^3*s12-3*s14^2*d^2*s12*s34^3-8*s14*d*s13^2*s23*s34^2+36*s14*s24*s13*s12^3-16*s14^3*d*s13*s23*s12+20*s14^2*d*s13*s23*s12*s34+s14*d^2*s24^3*s23*s34+8*s14^3*d^2*s23^2*s12-s14*d^2*s23*s12^2*s34^2+8*s14*s24*s13^2*s23^2+4*s14*d^2*s13*s12^3*s34-48*s14*d*s13^3*s12^2+6*s14^2*d*s24^3*s13-4*s14^2*s24^2*s13^2+4*s14*d*s24^3*s12*s34+80*s14*s13^2*s23*s12*s34-8*s14*d^2*s13^2*s12*s34^2-24*s14^3*s23*s12*s34+36*s14^2*d*s13^2*s23^2-68*s14^2*d*s24*s13*s23*s34+3*s14*d^2*s13^3*s23*s12-s14*d^2*s24*s23*s12^2*s34-16*s14^2*s24^2*s13*s12+14*s14^2*d^2*s24^2*s13*s23-44*s14^2*s13^3*s23+20*s14^2*d*s24^2*s13*s34-16*s14^3*d*s24*s23*s34-72*s14*d*s13^2*s12^2*s34-3*s14^2*d^2*s13^2*s12^2+22*s14^2*d*s13*s12^3+48*s14*s13^2*s12^3-14*s14^3*d*s23*s34^2+24*s14*s24^2*s13*s23*s34+80*s14*s24*s13^2*s23*s12-16*s14*d^2*s24*s13^2*s12*s34-32*s14^2*s23*s12^3+6*s14^2*d*s12^3*s34-4*s14*d^2*s24^3*s34^2-10*s14^2*d^2*s13*s23*s12^2-3*s14^2*d^2*s24*s12^2*s34+4*s14*d*s23^2*s34^3-16*s14*d^2*s24*s13*s34^3+4*s14^2*s12^2*s34^2+48*s14*s24*s13*s23*s12*s34+8*s14^2*d^2*s13*s23*s12*s34-8*s14*s24^2*s23^2*s34-48*s14*d*s24*s13^2*s12^2-16*s14^2*s24*s23^2*s12+28*s14^2*d*s24*s23^2*s34+16*s14^2*s13*s12*s34^2-8*s14*d*s24*s23*s12^2*s34+32*s14^2*d^2*s24*s13*s23*s34+40*s14*s13^3*s23*s34-3*s14^2*d^2*s24*s34^3+20*s14^2*d^2*s24*s23*s34^2+4*s14*s24*s12^3*s34-32*s14^2*s13*s23^2*s34+60*s14^2*d*s13*s23^2*s12-32*s14*d*s24*s13^2*s12*s34+4*s14^2*d*s24*s12*s34^2+88*s14^3*s23^2*s12+12*s14*s24^2*s12*s34^2+20*s14*s13^4*s23+16*s14*s13^2*s23^2*s12+10*s14*d*s13*s34^4+10*s14^2*d*s12^4+6*s14^2*d*s24^2*s34^2+24*s14^2*d*s13^3*s23+18*s14^2*d*s24*s13^2*s34+4*s14^2*d^2*s24*s13^2*s23+20*s14*s24^2*s13^2*s34+12*s14*d*s24*s12*s34^3-76*s14^2*s13^2*s23^2-4*s14*d^2*s24^3*s13^2+s14^2*d^2*s13^3*s12-4*s14*d*s23^2*s12^2*s34+8*s14*s24*s13*s23^2*s12+4*s14*s24^3*s13*s12+3*s14*d^2*s24*s23*s34^3-8*s14*d^2*s24*s13*s12^2*s34-3*s14*d^2*s13*s23*s12*s34^2+10*s14*d*s13^2*s34^3-24*s14^2*s13*s12^3-4*s14*d*s23*s34^4-3*s14^2*d^2*s24*s13^3+s14*d^2*s23*s12^3*s34+4*s14*d*s13*s23^2*s34^2+40*s14*s24*s13^3*s23+16*s14^2*d*s24^2*s13^2+8*s14^3*d*s24*s23^2-4*s14*d^2*s13*s12^2*s34^2+36*s14*s13^3*s34^2-9*s14^2*d^2*s24*s13*s34^2+12*s14^2*d*s24*s13*s23^2+s14*d^2*s13*s23*s12^3-4*s14^2*s24^3*s13+s14*d^2*s24*s13*s23*s34^2))
  + INT(pentagon1x123,2,5,2,0,[],1,0,1,0,0)
    * (1/2*Den(-2+d)*Den(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+2*s12*s34+2*s13*s12+2*s13*s34-4*s14*s23)^2*Den(s14+s24+s13+s23+s12+s34)*(76*s24^3*s13*s12^2-94*s14^2*d*s23^2*s12^2+110*s14*d*s24*s13^3*s23+2*s14*d^2*s24*s13^3*s34+8*s23*s12^5+140*s13^4*s12*s34-28*d*s24^3*s13*s23*s12+112*s14^2*s23^3*s12+4*s14^2*d^2*s24^2*s23*s12+30*s14*d*s24^2*s13*s23^2-8*s14*s24^3*s12^2-4*d*s24^4*s12^2-4*s14^2*d^2*s23*s12*s34^2+60*s24^2*s13^2*s34^2-40*s14*s13*s23^2*s34^2+4*s14^2*d^2*s23*s12^3-2*d*s12^2*s34^4+16*s24*s13^3*s23^2+60*s24^2*s13^4-8*s14^2*d^2*s13^2*s23*s34+8*s14*d*s24^3*s13*s12-56*s14*s23^2*s12^2*s34-18*s14*d*s13^4*s34+4*d^2*s24*s13^5-12*s14^2*d*s23*s12^2*s34+2*s14*d*s12^3*s34^2+4*d^2*s24*s13^2*s34^3+3*d^2*s23*s12^4*s34-116*s14*s24*s23^2*s12^2+18*s14*d*s24^2*s12^3-150*d*s24^2*s13^3*s12+5*d^2*s13*s23*s12^4+9*d^2*s13*s23*s12^2*s34^2+12*s24^3*s23*s12*s34+12*s13^5*s23+180*s14*d*s24*s13*s23^2*s12-14*s14*d^2*s24^2*s13^2*s23-2*s14*d*s24^2*s13^2*s34+12*s24^2*s23*s12*s34^2+20*s14*d*s24*s12^3*s34-16*s14^3*s23^3+8*s14*d^2*s13^3*s12*s34-20*s14*s13^2*s23^3-88*s14*s24*s23*s12^2*s34+136*s14*d*s13^2*s23^2*s12-76*s14^2*d*s13*s23^3+32*s13^3*s34^3+15*d^2*s13^2*s12^4-4*s14*d^2*s24^2*s13*s23*s34+14*s14^2*d^2*s13^2*s23^2+32*s13^2*s23^2*s12*s34+216*s14*d*s24*s13*s23*s12*s34-360*d*s24*s13^2*s12^2*s34-12*d*s13*s23^2*s12*s34^2+20*s24*s13*s23*s34^3+28*s13*s12^5+74*s14*d*s13^3*s23*s34+32*s14*s24*s13^2*s12*s34+40*d^2*s13^2*s12^3*s34-60*s14*d^2*s24*s13^2*s23*s12-80*d*s13*s23*s12^3*s34+240*s13^3*s12^2*s34+20*s24^3*s23*s12^2+18*s14*d*s24*s12^4+24*s24*s12^3*s34^2-2*s14*d*s24^2*s23^2*s34-4*s14*d^2*s23*s12*s34^3+68*s13^2*s12*s34^3+2*s14*d^2*s13^3*s12^2+24*s13^2*s23^2*s12^2+42*s14*d*s13^3*s23^2-80*d*s24^2*s13*s23*s12*s34+220*s24*s13*s23*s12^2*s34-10*d*s24*s12^2*s34^3-24*s14*s24*s13^2*s12^2+108*s24*s13^4*s34+4*s23*s12^2*s34^3+48*s13^3*s23*s34^2+4*d^2*s24^3*s12^3-82*d*s24^2*s13*s23*s12^2+20*s14^3*d*s23^2*s12-44*d*s24*s13^2*s23*s34^2+28*s13*s23*s12*s34^3+12*s12^5*s34+104*s24^2*s13^2*s23*s34+6*s14*d*s24^3*s23*s12-48*s14*d^2*s13^2*s23*s12^2-48*s14*d^2*s13^2*s23*s12*s34-56*s14*s24*s13*s23^3-20*d*s23*s12^3*s34^2-s14*d^2*s24^2*s12^2*s34-16*s14^2*d*s23^4+24*s14^2*s24*s13*s23*s12+4*s14^2*d*s23^2*s12*s34+56*s24^3*s13*s12*s34+24*s14*s13^4*s12+12*s14^2*d^2*s13*s23^2*s34+20*d^2*s13*s12^4*s34-14*d*s12^5*s34-32*s14*s24*s23^3*s12-36*s14^2*d*s24*s23*s12^2+d^2*s12^6+12*d^2*s13*s23*s12^3*s34+314*s14*d*s24*s13^2*s23*s12-198*d*s24^2*s13^2*s12^2+24*s14*s13^2*s12^2*s34+38*s14*d*s24^2*s13*s23*s34-72*s14*s24^2*s23*s12^2+5*d^2*s13^4*s23*s12+72*d^2*s24*s13^2*s12^2*s34-76*s14^2*d*s23^3*s12+s14*d^2*s24*s13^2*s34^2+8*s13*s12*s34^4+104*s14*d*s24*s13^2*s23^2-24*d*s13^3*s34^3+12*s14^2*d^2*s24*s23^2*s12+40*d^2*s24*s13^3*s12^2+112*s14^2*s23^2*s12^2+3*d^2*s24*s13^2*s23*s34^2+16*s14*s24*s13^4-48*s14*s13^2*s23*s34^2+44*s14*d*s24*s13*s12^3+206*s14*d*s13^2*s23*s12*s34+32*s14^2*s13*s23*s12^2+12*s14^2*d*s13*s23*s34^2+120*s24^2*s13^3*s34+2*s14*d^2*s23^2*s34^3-32*s14*s13*s23^3*s34+4*d^2*s24^3*s13^2*s34+9*d^2*s24^2*s13*s23*s12^2-26*d*s13*s12^5-16*d*s24^3*s13^2*s23-90*d*s13*s12^3*s34^2+116*s24*s13^3*s23*s34+10*s14*d*s13*s23*s34^3-40*s14*s24^2*s13*s12^2+48*s24*s13*s23^2*s12*s34+6*d^2*s13^4*s34^2+2*d^2*s24^3*s13*s23*s12-4*s14^3*d^2*s24*s23^2-6*d*s24^2*s23^2*s12^2+6*s14*d*s12^5-42*d*s24^2*s13^4+40*s13*s12^2*s34^3+24*s14*s24*s13^3*s12-8*d*s13^5*s23+20*s24^2*s13*s23^2*s34-6*d*s24*s13*s23^2*s34^2-22*s14*d^2*s13*s23^2*s12^2+2*s14*d^2*s13*s12*s34^3-24*s14*s24*s13*s23*s34^2+8*s14*s24^2*s13^3+6*d^2*s13^5*s12+44*s24*s13^2*s23^2*s12-6*d*s23*s12^5+96*s14^2*s13*s23^3-120*d*s24*s13^4*s12-6*d*s13^2*s23^2*s34^2+s14*d^2*s13^2*s34^3+2*s14*d*s24*s12^2*s34^2-72*s14*s24*s23^2*s12*s34+94*s14*d*s24*s23*s12^3-12*d*s24*s23^2*s12^2*s34-2*d*s24^4*s13*s23-16*s14*s24^3*s13*s23-4*s14^2*d^2*s13^3*s23-32*s14*s24*s13*s12^2*s34-64*s14*s13*s23*s12*s34^2+10*d^2*s13^2*s23*s12^3-20*s14*d^2*s24*s13*s23^2*s12-16*s14^2*s24*s13^2*s23+36*d^2*s13^2*s12^2*s34^2+4*s14*d^2*s24*s23^2*s34^2+6*d^2*s24*s13*s23*s12*s34^2+4*s24^4*s12^2+2*s14*d*s24^3*s13^2-70*d*s13*s23*s12^2*s34^2-14*d*s24^3*s12^2*s34+72*s24^2*s13*s12*s34^2-72*d*s13^3*s23*s12^2+180*s13^2*s23*s12^2*s34-80*d*s13^2*s23*s12*s34^2-168*d*s24^2*s13*s12^2*s34+156*s24*s13*s12^2*s34^2-8*d*s24^4*s13^2-28*s14*d^2*s24*s13^2*s23*s34-4*s14^2*d*s24^2*s13*s23+d^2*s13^2*s34^4-10*s14*d^2*s24^2*s23*s12^2+6*s14*d^2*s13^2*s12^2*s34-24*s14*d^2*s24^2*s13*s23*s12+132*s24*s13*s23*s12^3-2*d*s23^2*s12*s34^3+140*s14*d*s13^3*s23*s12-8*s14*s24^2*s13*s12*s34+70*s14*d*s13^2*s23^2*s34-276*d*s24*s13^3*s12*s34-6*d*s24^2*s23^2*s12*s34+84*s13*s12^3*s34^2+120*s13^3*s12^3+4*s24*s23^2*s12*s34^2-44*d*s13*s12^2*s34^3+52*s24*s23*s12^3*s34+20*d^2*s24*s13*s12^4+12*s24^2*s23^2*s12^2-144*d*s24*s13^2*s23*s12^2-4*s14^3*d*s23^2*s34+172*s24^2*s13^2*s23*s12-14*s14*d^2*s13^2*s23*s34^2-2*s14*d*s24^2*s13^3+12*s24^3*s12^2*s34+104*s13^3*s23*s12^2-16*s14*d^2*s13*s23^2*s12*s34-12*d*s24^2*s13*s23*s34^2+12*d^2*s24^2*s12^3*s34+16*s14*d*s23*s12^2*s34^2+12*s13^2*s23^2*s34^2-s14*d^2*s12^4*s34+12*s14*d*s13*s12^3*s34+24*s24^2*s12^4+4*d^2*s24*s12^5+160*s24*s13^4*s12+16*s14*s24*s13^2*s34^2-8*d*s24*s23*s12*s34^3+24*s14*d*s24^2*s23^2*s12-34*s14*d*s13^2*s12*s34^2+12*s12^4*s34^2+8*s24^4*s13*s23-8*s14*d^2*s24*s23*s12*s34^2+3*s14*d^2*s13^3*s34^2+252*s24^2*s13^2*s12^2+3*d^2*s24*s23*s12^4-200*s14*s13*s23^2*s12^2+8*s14*s13*s12*s34^3+190*s14*d*s13*s23*s12^2*s34-8*s14*d*s24*s13*s12*s34^2-10*s14*d*s24*s13^4+8*d^2*s24*s13*s12*s34^3-20*s14^3*d*s13*s23^2-8*d*s24^3*s13*s23*s34-7*s14*d^2*s24^2*s13*s12^2-16*s14^2*s23^3*s34-6*s14^2*d*s23^2*s34^2+36*d^2*s24^2*s13^2*s12*s34-8*s14*s23^3*s12*s34+56*s14*d*s24*s13*s23^2*s34+4*d^2*s24^3*s13^3+14*s14*d*s24^2*s13^2*s12+40*s24^3*s13^2*s23-4*s14*s24*s23^2*s34^2-76*d*s24*s13*s23*s12*s34^2+3*d^2*s24^2*s13^3*s23-84*d*s24^2*s13^3*s34-6*s14*d^2*s13^4*s23+16*s14^2*s23*s12^2*s34-8*d*s13*s12*s34^4+3*d^2*s24^2*s23*s12^2*s34+40*d^2*s24*s13^2*s12^3+8*s14^2*s24^2*s23^2+4*s13^4*s23^2-4*s14^2*d^2*s13^2*s23*s12-96*d*s13^3*s23*s12*s34-18*s14*d*s13^4*s12-48*s14*d^2*s13*s23*s12^2*s34+2*s14*d^2*s24*s13*s12*s34^2+3*d^2*s24^2*s23*s12^3+d^2*s13^6-344*s14*s24*s13*s23*s12^2+20*s14*d*s23^2*s12*s34^2+32*s24*s13^2*s23^2*s34+4*d^2*s13^5*s34-36*d*s24*s13*s12*s34^3+32*s24^2*s13*s23^2*s12-200*d*s13^3*s12^2*s34-10*s14*d^2*s23*s12^4-12*d*s24^3*s23*s12^2-18*d*s24*s13*s23^2*s12^2-2*s14*d^2*s13*s23^2*s34^2+58*s14*d*s23*s12^3*s34+6*d^2*s24^2*s12^2*s34^2+284*s24*s13^2*s23*s12*s34-14*s14*d*s13*s12^2*s34^2-2*d*s13^4*s23^2+20*s14^2*d^2*s24*s13*s23^2-64*s14*s13^3*s23^2+32*s14*s24*s13^3*s34+172*s24*s13^3*s23*s12+164*s14*d*s13*s23*s12^3+15*d^2*s13^4*s12^2+216*s24*s13*s12^3*s34-8*s14*d^2*s24*s23^2*s12^2+12*s14^2*d*s24*s13^2*s23-24*s14*s24*s12^4-10*d*s23*s12^2*s34^3-30*d*s13^3*s23*s34^2+24*s14^3*d*s23^3+28*s13*s23^2*s12^2*s34+240*s24*s13^2*s12*s34^2+16*s23*s12^3*s34^2-210*d*s24^2*s13^2*s12*s34-104*s14*s24^2*s13^2*s23+d^2*s13^2*s23*s34^3-8*s14^2*d*s24*s23*s12*s34-58*d*s13^2*s12*s34^3+12*d^2*s13^3*s23*s12*s34-24*s14*s24^2*s23*s12*s34+2*d^2*s24^4*s13*s12+8*s14*d*s13^2*s23^3+4*d^2*s12^3*s34^3-6*s14*d^2*s23^2*s12^2*s34-36*d*s24*s12^3*s34^2+24*d^2*s13^3*s12*s34^2+3*d^2*s24*s13^4*s23+4*s24*s12^2*s34^3-78*d*s24*s13^4*s34-12*d*s13^2*s23^2*s12^2+28*s24*s23*s12^2*s34^2-2*s14*d^2*s13^2*s12^3-34*d*s24^2*s23*s12^2*s34-48*s14*d^2*s24*s13*s23*s12*s34+148*s14*d*s24^2*s13*s23*s12+3*d^2*s13^4*s23*s34-4*s14^2*d^2*s24*s23^3-16*s14*s24*s23^3*s34+9*d^2*s13^2*s23*s12*s34^2+36*d^2*s24^2*s13*s12^2*s34+40*s14^2*s24*s23*s12^2+144*s14*d*s24*s13^2*s23*s34-42*d*s24^2*s13^2*s34^2-24*s14*s24^2*s12^3-2*d*s23*s12*s34^4+36*s14^2*d^2*s13*s23^2*s12-18*d*s12^4*s34^2-8*s14*s12^3*s34^2-62*d*s24^3*s13*s12^2-3*s14*d^2*s13*s12^4-24*d*s24^2*s12^4+56*s14*s13^3*s12*s34-6*s14^2*d*s24^2*s23^2-6*s14*d*s13^5-8*s14^2*s24*s13*s23*s34+24*s14*s13^4*s34-110*d*s13^4*s12*s34+24*d^2*s24^2*s13*s12^3+48*d^2*s24*s13^3*s12*s34+112*s14*d*s13*s23^2*s12*s34-24*s14^2*d*s13*s23*s12^2-8*s14^2*s13*s23*s34^2-8*s14*d^2*s23^2*s12^3+204*s24^2*s13^3*s12+12*d^2*s24^3*s13^2*s12-48*s14*s13*s23^3*s12+18*d^2*s24*s13^2*s23*s12^2-16*s14*s24^2*s12^2*s34+12*s24^4*s13^2+6*s14*d*s24^3*s12^2-264*s14*s13^2*s23*s12^2-2*s14*d*s12^2*s34^3+12*d^2*s24*s13^3*s34^2-6*d*s24*s13^3*s23^2-24*s14^2*s13*s23*s12*s34+10*s14*d*s24*s23*s12*s34^2+12*d^2*s24*s12^4*s34+20*s14^2*d*s23^3*s34-100*d*s13^3*s12^3+4*s14^2*d^2*s24*s23^2*s34+6*d^2*s24^2*s13*s23*s12*s34-6*s14*d^2*s24*s13^2*s12^2+2*s14*d*s23*s12*s34^3+16*s24^4*s13*s12+276*s24^2*s13^2*s12*s34-18*d*s13*s23^2*s12^2*s34-192*d*s24*s13^2*s12*s34^2+10*s14*d*s12^4*s34+2*s14*d^2*s24^2*s23^2*s34-16*d*s24*s12^5+156*s13^3*s12*s34^2-204*d*s24*s13*s12^3*s34+48*s24*s13^4*s23+4*s24^3*s23^2*s12+4*d^2*s24*s12^2*s34^3-160*s14*s13*s23^2*s12*s34-18*s14*d*s13^3*s34^2+4*s14^3*d^2*s23^2*s34+24*s14*d*s13*s23^3*s12+44*s24^2*s23*s12^2*s34-s14*d^2*s24^2*s13^3-32*d*s24*s23*s12^2*s34^2+228*s14*d*s13^2*s23*s12^2-12*s14*s24*s23*s12*s34^2+3*d^2*s23*s12^3*s34^2+10*s14*d*s24^2*s12^2*s34-6*d*s13^6+24*s13^2*s23*s34^3+40*s24*s13*s23^2*s12^2-6*d*s23^2*s12^2*s34^2-2*s14*d^2*s24*s12^3*s34-152*s14*s24*s13^2*s23*s34-12*d*s24^2*s13*s23^2*s12+12*s13^3*s23^2*s34-2*s14*d^2*s24^2*s13*s12*s34-20*s14*d^2*s13^2*s23^2*s12-176*s14*s24^2*s13*s23*s12-44*s14*d*s13^3*s12*s34-12*d*s24*s13^2*s23^2*s34+40*s24*s13*s12*s34^3+8*s14*s13^2*s34^3-8*s14^3*d^2*s23^3-16*s14*d^2*s13^3*s23*s34+36*s24^2*s23*s12^3-24*s14^2*d*s24*s13*s23*s12-8*s14*s12^5+d^2*s24^4*s13^2-104*d*s24*s13^3*s23*s12-8*d*s13*s23^2*s12^3+116*s24*s13*s23*s12*s34^2-6*d*s13^2*s34^4-180*d*s13^2*s12^3*s34+12*s24^2*s12^2*s34^2+8*s14*d*s24*s23^3*s34-2*s14*d^2*s24^3*s13*s12+9*d^2*s24^2*s13^2*s23*s12+s14*d^2*s13^5+32*s14*d*s13^4*s23+108*s24*s13^3*s34^2-32*s14^2*s13^2*s23*s12+100*s13^4*s12^2+36*s14^2*d*s13^2*s23*s34+36*s24*s12^4*s34-26*d*s24*s13^2*s34^3+3*s14*d^2*s13^4*s12+8*s14*d*s23^3*s34^2+24*d^2*s24^2*s13^3*s12-32*d*s13*s23*s12^4-18*d*s23*s12^4*s34-30*d*s24^3*s13^3+104*s24^3*s13^2*s12+32*s14^2*s24*s23^3-s14*d^2*s24^2*s13^2*s34+92*s14*d*s24^2*s13^2*s23+14*s14*d*s24^2*s23*s12*s34+4*s24^4*s23*s12+32*s13^5*s34-20*s14*d*s24*s13^3*s34-20*s14*d^2*s24*s13^3*s23+36*d^2*s24*s13*s12^2*s34^2+8*s14*s13*s12^2*s34^2+6*s14^2*d^2*s23^2*s34^2+298*s14*d*s24*s13*s23*s12^2+2*s14*d^2*s24^2*s13*s23^2+4*s12^3*s34^3-184*s14*s13*s23*s12^3-12*s14^2*d*s24^2*s23*s12+132*s24^2*s13*s12^3+12*d^2*s24*s13*s23*s12^3+40*s13^4*s23*s34-20*s14*s23^2*s12*s34^2-64*s14*s23*s12^3*s34+4*s14^2*d*s23*s12*s34^2+6*d^2*s24*s23*s12^3*s34+4*s14^3*d^2*s13*s23^2+20*s24^2*s13^2*s23^2+s14*d^2*s24*s13^4+s14*d^2*s24*s12^2*s34^2-6*d*s23^2*s12^3*s34-10*d*s12^3*s34^3+36*s24^2*s13*s23*s34^2+20*d^2*s24*s13^4*s12-92*d*s24^2*s13^2*s23*s12-112*s14*s24*s13*s23^2*s34+228*s24*s13^2*s23*s12^2-20*s14*d^2*s24*s23*s12^3+16*s14^3*s13*s23^2+12*s14*d*s13^2*s12^3-8*s14*s24^2*s13^2*s12+8*s14*d*s23^3*s12*s34-68*d*s13^2*s23*s12^3+4*s24*s23*s12*s34^3-4*s14*d^2*s24^2*s23*s12*s34+4*d^2*s24^3*s12^2*s34+12*s24*s23^2*s12^3+10*d^2*s13^3*s23*s12^2+36*s24^2*s12^3*s34-4*s14*d*s24*s23^2*s34^2-162*d*s13^2*s12^2*s34^2-4*s14*d^2*s13*s23*s34^3-60*s14*d^2*s24*s13*s23*s12^2-88*d*s24*s13*s23*s12^3+24*d^2*s13*s12^3*s34^2-212*s14*s13*s23*s12^2*s34+8*s14*s24*s13*s12*s34^2-150*d*s24*s13*s12^2*s34^2-8*d*s13^3*s23^2*s12+112*s13^2*s23*s12*s34^2+192*s24^2*s13*s12^2*s34-80*d*s13^4*s12^2+100*s24*s13*s12^4+18*d^2*s24*s13*s23*s12^2*s34+16*s14*s13^3*s12^2+80*s14^2*s24*s13*s23^2+146*s14*d*s13*s23^2*s12^2-24*d*s13^5*s34+4*s13*s23^2*s34^3-44*d*s24*s23*s12^3*s34+4*s12^6+44*s14*d*s23*s12^4-6*d*s24*s23^2*s12*s34^2+44*s24^3*s13^3-8*s14*d*s13*s12*s34^3+8*s24^2*s23^2*s12*s34+360*s24*s13^3*s12*s34+s14*d^2*s12^2*s34^3-60*s14^2*d*s24*s23^2*s12-12*s14*d^2*s24*s13^2*s23^2+8*s14^2*s24*s23^2*s34-10*s14*d*s24*s13^2*s34^2+48*d^2*s24*s13*s12^3*s34-172*d*s24*s13^2*s23*s12*s34+240*s24*s13^2*s12^3-24*s14*s13*s12^3*s34-220*d*s24*s13^3*s12^2-4*s14^2*d^2*s23^3*s34+36*d^2*s24*s13^2*s12*s34^2+40*s14*s13^2*s12*s34^2+20*d^2*s13^3*s12^3-52*s14*s24^2*s23^2*s12+52*s14*d*s23^2*s12^3+8*s13^2*s34^4+140*s13^3*s23*s12*s34-8*s14*d^2*s24*s13*s12^3+32*s14^2*s23^4+d^2*s24^3*s13^2*s23-16*s14*s23*s12^2*s34^2-30*d*s24^3*s13^2*s34-s14*d^2*s24^3*s12^2+3*d^2*s24*s23*s12^2*s34^2-4*s14^2*d^2*s13*s23*s34^2+68*s24^2*s13^3*s23+4*s13*s23*s34^4+8*s14*d*s24^2*s13*s12*s34-104*s14*s13^2*s23^2*s34+6*d^2*s12^4*s34^2+18*s14*d*s13*s12^4+4*s14^2*d^2*s23^2*s12*s34-2*d*s24^3*s13*s23^2-2*s14^2*d^2*s24^2*s23^2+6*d^2*s24^2*s12^4-80*d*s13*s12^4*s34-28*s14^2*d*s13*s23^2*s34+168*s14^2*s13*s23^2*s12+16*s24*s12^5-28*s14*s23^3*s12^2+8*s14^2*d^2*s24*s23*s12^2+36*d^2*s24^2*s13^2*s12^2-4*s14*s24^2*s23^3+28*s24*s23*s12^4-12*s14^2*d*s24*s23^3+8*s14^2*d^2*s24*s13*s23*s12-168*s14*s13^3*s23*s12+12*d^2*s24*s13^3*s23*s12-38*d*s13^4*s23*s12+28*s24^3*s13*s23*s34-5*s14*d^2*s24^2*s13^2*s12-3*s14*d^2*s24^2*s12^3+44*s13^5*s12+12*d^2*s24^2*s13^3*s34-2*d*s13*s23*s34^4+16*s14*d*s23^3*s12^2-34*d*s24^2*s13^3*s23+44*s14*d*s24*s23^2*s12*s34+44*s24^3*s13^2*s34-4*d*s12^6-8*s14*s24*s12^2*s34^2-200*d*s24*s13^2*s12^3+2*d^2*s13*s12*s34^4-26*d*s24*s13^5+3*s14*d^2*s13^4*s34+2*d^2*s13*s23*s12*s34^3+14*s14*d*s24^3*s13*s23+s14*d^2*s12^3*s34^2+3*d^2*s24^2*s13^2*s23*s34+280*s24*s13^3*s12^2-24*s14*s13*s12^4+20*s14*d*s24*s13*s12^2*s34+24*s14^2*d*s13^2*s23*s12-108*s14*s24*s23*s12^3+68*s14*d*s13*s23*s12*s34^2+8*s14^2*s24*s23*s12*s34+48*s13^4*s34^2-40*s14^2*s13^2*s23*s34+d^2*s24^4*s12^2+8*s14*s13^5-20*d*s24*s23*s12^4-4*s14*s24^3*s23^2-68*s14*s23^2*s12^3+56*s13^4*s23*s12-24*s14^2*d*s23*s12^3+d^2*s12^2*s34^4-44*d*s24^3*s13*s12*s34+34*s14*d*s24*s13*s23*s34^2+22*s14^2*d^2*s23^2*s12^2-4*s14*s13*s23*s34^3+8*s14^2*s24^2*s23*s12+34*s14*d*s24^2*s13*s12^2-152*d*s24*s13*s23*s12^2*s34-12*s14*d*s24*s13^3*s12-2*d*s23^2*s12^4+8*s24^3*s13*s23^2+148*s24^2*s13*s23*s12*s34+80*s13*s12^4*s34+52*s14*d*s13^2*s23*s34^2-48*s14*s23*s12^4-56*s14*s24*s13*s12^3+16*s24*s23^2*s12^2*s34+24*s14^2*d*s13*s23*s12*s34-16*d*s24^3*s12^3+96*s13^2*s23*s12^3+16*s14*d*s13*s23^3*s34-4*s14^3*d^2*s23^2*s12+180*s13^2*s12^2*s34^2-42*d*s24^2*s12^3*s34-10*s14*d^2*s23*s12^2*s34^2-6*d*s24*s23^2*s12^3-s14*d^2*s12^5+18*d^2*s24*s13^2*s23*s12*s34-164*s14*s24*s13^2*s23^2-12*s14*d*s13^3*s12^2+8*s23^2*s12^3*s34-60*d*s24^2*s13*s12*s34^2-132*d*s13^2*s23*s12^2*s34+80*s13*s23*s12^2*s34^2-6*s14*d^2*s13^3*s23^2-232*s14*s13^2*s23*s12*s34+7*s14*d^2*s13^2*s12*s34^2-2*d*s13*s23^2*s34^3-62*s14^2*d*s13^2*s23^2-70*d*s13^2*s12^4+16*s14*d*s24*s23^3*s12+8*s14^2*d*s24*s13*s23*s34-28*s14*d^2*s13^3*s23*s12-20*s14*d^2*s24*s23*s12^2*s34+56*s14*d*s24^2*s23*s12^2+4*s14^2*d^2*s24^2*s13*s23-32*s14^2*s13^3*s23-3*s14*d^2*s24*s12^4-64*d*s24*s13^3*s23*s34-24*s14*d*s13^2*s12^2*s34-10*s14*d^2*s13^2*s23^2*s34-16*s14*s13^2*s12^3-36*s14*s24^2*s13*s23*s34-18*d*s24*s13^2*s23^2*s12+16*s24*s13*s23^2*s34^2-90*d*s24*s13*s12^4-364*s14*s24*s13^2*s23*s12-6*d*s24^2*s13*s23^2*s34+12*s14^2*d^2*s13*s23^3+12*d^2*s13*s12^2*s34^3+2*s14*d^2*s24*s13^2*s12*s34+16*s13^3*s23^2*s12+32*s14^2*s23*s12^3-76*d*s24^3*s13^2*s12+20*s23*s12^4*s34+4*s14^2*d^2*s13*s23*s12^2+44*s13*s23*s12^4+80*s13^2*s12^4-2*s14*d*s23^2*s34^3+24*s14*d*s24*s13*s23^3-2*d*s24^4*s23*s12-12*s14*s24^3*s23*s12-240*s14*s24*s13*s23*s12*s34+6*d^2*s13*s12^5-8*s14^2*d^2*s13*s23*s12*s34-8*d*s24^3*s23*s12*s34+12*s14^2*d^2*s23^3*s12-78*d*s24*s13^3*s34^2-24*d*s24*s13*s23^2*s12*s34-8*s14*s24^2*s23^2*s34+4*d^2*s13^3*s34^3+24*s14*d*s24*s13^2*s12^2+72*s14^2*s24*s23^2*s12-12*s14^2*d*s24*s23^2*s34+12*d^2*s24^2*s13*s12*s34^2+18*d^2*s13^2*s23*s12^2*s34-42*d*s24*s12^4*s34+36*s24*s13^2*s34^3+72*s14*d*s24*s23*s12^2*s34-84*s14*s13^3*s23*s34+4*d^2*s12^5*s34+8*s13^6+6*d^2*s24*s13^3*s23*s34+60*s24^3*s13*s23*s12-26*d*s13^4*s23*s34-12*s14*s23^3*s34^2-6*d*s24^2*s13^2*s23^2+6*d^2*s24^2*s13^2*s34^2+16*s24^3*s12^3+12*d^2*s24^3*s13*s12^2-32*s14*s24*s12^3*s34+8*s14^2*s13*s23^2*s34-156*s14^2*d*s13*s23^2*s12-20*s14*d*s24*s13^2*s12*s34-16*s14^3*s23^2*s12-114*d*s24^2*s13*s12^3-40*s14*s13^4*s23+20*d^2*s13^4*s12*s34-196*s14*s13^2*s23^2*s12+d^2*s23*s12^2*s34^3-4*s14*d^2*s24*s23^2*s12*s34+24*s14^2*d*s13^3*s23+3*d^2*s13^3*s23*s34^2+76*s14*d*s24*s23^2*s12^2+8*s14*s24^2*s13^2*s34-14*d*s13^2*s23*s34^3+56*s14^2*s13^2*s23^2-s14*d^2*s24^3*s13^2-46*d*s24^2*s13^2*s23*s34+42*s14*d*s23^2*s12^2*s34+12*d^2*s24*s12^3*s34^2+d^2*s23*s12^5-280*s14*s24*s13*s23^2*s12-8*s14*s24^3*s13*s12-24*d*s13*s23*s12*s34^3+88*s24*s13^2*s23*s34^2-12*d*s24^4*s13*s12-2*s14*d^2*s24*s13*s12^2*s34-24*s14*d^2*s13*s23*s12*s34^2+12*d^2*s13^2*s12*s34^3-6*s14*d*s13^2*s34^3+4*s23^2*s12^4-126*d*s13^3*s12*s34^2+140*s24^2*s13*s23*s12^2+12*d^2*s24*s13^4*s34-28*d*s24*s13^4*s23-2*d*s24^3*s23^2*s12-4*s14*d^2*s23^2*s12*s34^2+d^2*s13^5*s23+8*d^2*s24^3*s13*s12*s34-24*d*s24^2*s23*s12^3-16*s14*d^2*s23*s12^3*s34-18*d*s24^2*s12^2*s34^2+26*s14*d*s13*s23^2*s34^2-12*d*s24^2*s23*s12*s34^2+200*s13^2*s12^3*s34+16*s13*s23^2*s12^3+40*d^2*s13^3*s12^2*s34-34*d*s13^5*s12+d^2*s24^3*s23*s12^2-128*s14*s24*s13^3*s23-6*d*s13^3*s23^2*s34+4*s23^2*s12^2*s34^2+4*s14^3*d*s24*s23^2-36*d*s13^4*s34^2+5*s14*d^2*s13*s12^2*s34^2+24*s14*s13^3*s34^2-92*s14^2*d*s24*s13*s23^2+100*s13*s23*s12^3*s34-36*s14*d^2*s13*s23*s12^3-72*s14*s24^2*s13*s23^2-16*s14*s12^4*s34+6*d^2*s24^2*s13^4-8*s14*d^2*s24*s13*s23*s34^2+432*s24*s13^2*s12^2*s34-8*d*s24*s13*s23*s34^3+16*s13*s23^2*s12*s34^2-18*d*s13^2*s23^2*s12*s34+36*s24*s13^5));

id INT(pentagon1x123,3,21,4,3,[],1,0,1,-3,2) = 
  + INT(pentagon1x123,3,21,4,3,[],1,0,2,-3,1)
    * (-1)
  + INT(pentagon1x123,3,21,4,3,[],2,0,1,-3,1)
    * (-1)
  + INT(pentagon1x123,3,21,4,2,[],1,0,2,-2,1)
    * (-s14)
  + INT(pentagon1x123,3,21,4,2,[],2,0,1,-2,1)
    * (-s14-s24-s34)
  + INT(pentagon1x123,3,21,3,2,[],1,0,1,-2,1)
    * (3)
  + INT(pentagon1x123,2,5,3,2,[],1,0,2,-2,0)
    * (1)
  + INT(pentagon1x123,2,5,3,2,[],2,0,1,-2,0)
    * (1)
  + INT(pentagon1x123,2,5,2,1,[],1,0,1,-1,0)
    * (-2);

id INT(pentagon1x123,3,21,4,3,[],1,0,1,-3,2) = 
  + INT(pentagon1x123,3,21,4,3,[],1,0,2,-3,1)
    * (-1)
  + INT(pentagon1x123,3,21,4,3,[],2,0,1,-3,1)
    * (-1)
  + INT(pentagon1x123,3,21,4,2,[],1,0,1,-2,2)
    * (-s14)
  + INT(pentagon1x123,3,21,4,2,[],2,0,1,-2,1)
    * (s13+s12)
  + INT(pentagon1x123,3,21,3,2,[],1,0,1,-2,1)
    * (3)
  + INT(pentagon1,2,17,3,2,[],1,0,0,-2,2)
    * (1)
  + INT(pentagon1,2,17,3,2,[],2,0,0,-2,1)
    * (1)
  + INT(pentagon1,2,17,3,1,[],1,0,0,-1,2)
    * (2*s14+2*s24+2*s34)
  + INT(pentagon1,2,17,3,1,[],2,0,0,-1,1)
    * (2*s14+2*s24+2*s34)
  + INT(pentagon1,2,17,3,0,[],1,0,0,0,2)
    * (s34^2+2*s14*s24+s24^2+2*s24*s34+2*s14*s34+s14^2)
  + INT(pentagon1,2,17,3,0,[],2,0,0,0,1)
    * (s34^2+2*s14*s24+s24^2+2*s24*s34+2*s14*s34+s14^2)
  + INT(pentagon1,2,17,2,1,[],1,0,0,-1,1)
    * (-2)
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (-2*s14-2*s24-2*s34);

id INT(pentagon1x123,3,21,5,0,[],2,0,1,0,2) = 
  + INT(pentagon1x123,3,21,5,0,[],2,0,2,0,1)
    * (-Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x123,3,21,4,0,[],1,0,1,0,2)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,4,0,[],1,0,2,0,1)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,4,0,[],2,0,1,0,1)
    * (-(-6+d)*Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,5,0,[],1,0,2,0,2) = 
  + INT(pentagon1x123,3,21,5,0,[],1,0,3,0,1)
    * (-2*Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x123,3,21,4,0,[],1,0,2,0,1)
    * (-(-5+d)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,0,[],3,0,1,0,0)
    * (2*Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,5,0,[],1,0,1,0,3) = 
  + INT(pentagon1x123,3,21,5,0,[],1,0,2,0,2)
    * (-1/2*Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x123,3,21,4,0,[],1,0,1,0,2)
    * (-1/2*(-5+d)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,0,[],1,0,3,0,0)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (1/2*Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,5,1,[],2,-1,1,0,2) = 
  + INT(pentagon1x123,3,21,5,1,[],2,-1,2,0,1)
    * (-Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,1,0,2)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,4,1,[],1,-1,2,0,1)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,4,1,[],2,-1,1,0,1)
    * (-(-5+d)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,5,1,[],2,-1,1,0,2) = 
  + INT(pentagon1x123,3,21,5,1,[],2,-1,2,0,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,1,[],3,-1,1,0,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,0,[],2,0,1,0,2)
    * (s13+s34)
  + INT(pentagon1x123,3,21,5,0,[],3,0,1,0,1)
    * (-2*s23)
  + INT(pentagon1x123,3,21,4,0,[],2,0,1,0,1)
    * (1)
  + INT(pentagon1,2,17,4,0,[],1,0,0,0,3)
    * (2)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (1);

id INT(pentagon1x123,3,21,5,1,[],2,-1,1,0,2) = 
  + INT(pentagon1x123,3,21,5,1,[],2,-1,2,0,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,1,[],3,-1,1,0,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,0,[],2,0,1,0,2)
    * (-s24-s23-s12)
  + INT(pentagon1x123,3,21,5,0,[],2,0,2,0,1)
    * (-s23)
  + INT(pentagon1x123,3,21,4,0,[],1,0,1,0,2)
    * (1)
  + INT(pentagon1x123,3,21,4,0,[],1,0,2,0,1)
    * (1)
  + INT(pentagon1x123,3,21,4,0,[],2,0,1,0,1)
    * (2);

id INT(pentagon1x123,3,21,5,1,[],2,0,1,-1,2) = 
  + INT(pentagon1x123,3,21,5,1,[],2,0,2,-1,1)
    * (-Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x123,3,21,4,1,[],1,0,1,-1,2)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,4,1,[],1,0,2,-1,1)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,4,1,[],2,0,1,-1,1)
    * (-(-5+d)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,4,0,[],2,0,1,0,1)
    * ((s13+s23+s12)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,5,1,[],2,0,1,-1,2) = 
  + INT(pentagon1x123,3,21,5,1,[],2,0,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,1,[],3,0,1,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,0,[],2,0,2,0,1)
    * (-s14)
  + INT(pentagon1x123,3,21,5,0,[],3,0,1,0,1)
    * (-2*s14-2*s24-2*s34)
  + INT(pentagon1x123,3,21,4,0,[],2,0,1,0,1)
    * (1)
  + INT(pentagon1x123,2,5,4,0,[],2,0,2,0,0)
    * (1)
  + INT(pentagon1x123,2,5,4,0,[],3,0,1,0,0)
    * (2);

id INT(pentagon1x123,3,21,5,1,[],2,0,1,-1,2) = 
  + INT(pentagon1x123,3,21,5,1,[],2,0,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,1,[],3,0,1,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,0,[],2,0,1,0,2)
    * (-s14)
  + INT(pentagon1x123,3,21,5,0,[],3,0,1,0,1)
    * (2*s13+2*s12)
  + INT(pentagon1x123,3,21,4,0,[],2,0,1,0,1)
    * (1)
  + INT(pentagon1,2,17,4,0,[],1,0,0,0,3)
    * (2)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (1);

id INT(pentagon1x123,3,21,5,1,[],1,-1,2,0,2) = 
  + INT(pentagon1x123,3,21,5,1,[],1,-1,3,0,1)
    * (-2*Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,2,0,1)
    * (-(-4+d)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],2,0,2,-1,0)
    * (-Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],3,0,1,-1,0)
    * (-2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (-Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)+Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)-Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x142,2,5,4,0,[],3,0,1,0,0)
    * (-2*Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)+2*Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)-2*Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (2*Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,5,1,[],1,-1,2,0,2) = 
  + INT(pentagon1x123,3,21,5,1,[],1,-1,3,0,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,1,[],2,-1,2,0,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,0,[],1,0,2,0,2)
    * (s13+s34)
  + INT(pentagon1x123,3,21,5,0,[],2,0,2,0,1)
    * (-s23)
  + INT(pentagon1x123,3,21,4,0,[],1,0,1,0,2)
    * (1)
  + INT(pentagon1x123,3,21,4,0,[],1,0,2,0,1)
    * (2)
  + INT(pentagon1x123,3,21,4,0,[],2,0,1,0,1)
    * (1);

id INT(pentagon1x123,3,21,5,1,[],1,-1,2,0,2) = 
  + INT(pentagon1x123,3,21,5,1,[],1,-1,3,0,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,1,[],2,-1,2,0,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,0,[],1,0,2,0,2)
    * (-s24-s23-s12)
  + INT(pentagon1x123,3,21,5,0,[],1,0,3,0,1)
    * (-2*s23)
  + INT(pentagon1x123,3,21,4,0,[],1,0,2,0,1)
    * (1)
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (1)
  + INT(pentagon1x142,2,5,4,0,[],3,0,1,0,0)
    * (2);

id INT(pentagon1x123,3,21,5,1,[],1,-1,1,0,3) = 
  + INT(pentagon1x123,3,21,5,1,[],1,-1,2,0,2)
    * (-1/2*Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,1,0,2)
    * (-1/2*(-4+d)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],1,0,3,-1,0)
    * (-Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],2,0,2,-1,0)
    * (-1/2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,0,[],1,0,3,0,0)
    * (-Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)+Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)-Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (-1/2*Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)+1/2*Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)-1/2*Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (1/2*Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,5,1,[],1,-1,1,0,3) = 
  + INT(pentagon1x123,3,21,5,1,[],1,-1,2,0,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,1,[],2,-1,1,0,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,0,[],1,0,1,0,3)
    * (s13+s34)
  + INT(pentagon1x123,3,21,5,0,[],2,0,1,0,2)
    * (-1/2*s23)
  + INT(pentagon1x123,3,21,4,0,[],1,0,1,0,2)
    * (1/2)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (1/2)
  + INT(pentagon1,2,17,4,0,[],3,0,0,0,1)
    * (1);

id INT(pentagon1x123,3,21,5,1,[],1,-1,1,0,3) = 
  + INT(pentagon1x123,3,21,5,1,[],1,-1,2,0,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,1,[],2,-1,1,0,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,0,[],1,0,1,0,3)
    * (-s24-s23-s12)
  + INT(pentagon1x123,3,21,5,0,[],1,0,2,0,2)
    * (-1/2*s23)
  + INT(pentagon1x123,3,21,4,0,[],1,0,1,0,2)
    * (1/2)
  + INT(pentagon1x142,2,5,4,0,[],1,0,3,0,0)
    * (1)
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (1/2);

id INT(pentagon1x123,3,21,5,1,[],1,0,2,-1,2) = 
  + INT(pentagon1x123,3,21,5,1,[],1,0,3,-1,1)
    * (-2*Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x123,3,21,4,1,[],1,0,2,-1,1)
    * (-(-4+d)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,4,0,[],1,0,2,0,1)
    * ((s13+s23+s12)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],2,-1,2,0,0)
    * (-Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],3,-1,1,0,0)
    * (-2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (-s14*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,0,[],3,0,1,0,0)
    * (-2*s14*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (2*Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,5,1,[],1,0,2,-1,2) = 
  + INT(pentagon1x123,3,21,5,1,[],1,0,3,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,1,[],2,0,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,0,[],1,0,3,0,1)
    * (-2*s14)
  + INT(pentagon1x123,3,21,5,0,[],2,0,2,0,1)
    * (-s14-s24-s34)
  + INT(pentagon1x123,3,21,4,0,[],1,0,2,0,1)
    * (1)
  + INT(pentagon1x123,2,5,4,0,[],1,0,3,0,0)
    * (2)
  + INT(pentagon1x123,2,5,4,0,[],2,0,2,0,0)
    * (1);

id INT(pentagon1x123,3,21,5,1,[],1,0,2,-1,2) = 
  + INT(pentagon1x123,3,21,5,1,[],1,0,3,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,1,[],2,0,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,0,[],1,0,2,0,2)
    * (-s14)
  + INT(pentagon1x123,3,21,5,0,[],2,0,2,0,1)
    * (s13+s12)
  + INT(pentagon1x123,3,21,4,0,[],1,0,1,0,2)
    * (1)
  + INT(pentagon1x123,3,21,4,0,[],1,0,2,0,1)
    * (2)
  + INT(pentagon1x123,3,21,4,0,[],2,0,1,0,1)
    * (1);

id INT(pentagon1x123,3,21,5,1,[],1,0,1,-1,3) = 
  + INT(pentagon1x123,3,21,5,1,[],1,0,2,-1,2)
    * (-1/2*Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x123,3,21,4,1,[],1,0,1,-1,2)
    * (-1/2*(-4+d)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,4,0,[],1,0,1,0,2)
    * (1/2*(s13+s23+s12)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],1,-1,3,0,0)
    * (-Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],2,-1,2,0,0)
    * (-1/2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,0,[],1,0,3,0,0)
    * (-s14*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (-1/2*s14*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (1/2*Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,5,1,[],1,0,1,-1,3) = 
  + INT(pentagon1x123,3,21,5,1,[],1,0,2,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,1,[],2,0,1,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,0,[],1,0,2,0,2)
    * (-1/2*s14)
  + INT(pentagon1x123,3,21,5,0,[],2,0,1,0,2)
    * (-1/2*s14-1/2*s24-1/2*s34)
  + INT(pentagon1x123,3,21,4,0,[],1,0,1,0,2)
    * (1)
  + INT(pentagon1x123,3,21,4,0,[],1,0,2,0,1)
    * (1/2)
  + INT(pentagon1x123,3,21,4,0,[],2,0,1,0,1)
    * (1/2);

id INT(pentagon1x123,3,21,5,1,[],1,0,1,-1,3) = 
  + INT(pentagon1x123,3,21,5,1,[],1,0,2,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,1,[],2,0,1,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,0,[],1,0,1,0,3)
    * (-s14)
  + INT(pentagon1x123,3,21,5,0,[],2,0,1,0,2)
    * (1/2*s13+1/2*s12)
  + INT(pentagon1x123,3,21,4,0,[],1,0,1,0,2)
    * (1/2)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (1/2)
  + INT(pentagon1,2,17,4,0,[],3,0,0,0,1)
    * (1);

id INT(pentagon1x123,3,21,5,2,[],2,-2,1,0,2) = 
  + INT(pentagon1x123,3,21,5,2,[],2,-2,2,0,1)
    * (-Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,1,0,2)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,4,2,[],1,-2,2,0,1)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,4,2,[],2,-2,1,0,1)
    * (-(-4+d)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,3,1,[],1,-1,1,0,1)
    * (-2*Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,5,2,[],2,-2,1,0,2) = 
  + INT(pentagon1x123,3,21,5,2,[],2,-2,2,0,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],3,-2,1,0,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,1,[],2,-1,1,0,2)
    * (s13+s34)
  + INT(pentagon1x123,3,21,5,1,[],3,-1,1,0,1)
    * (-2*s23)
  + INT(pentagon1x123,3,21,4,1,[],2,-1,1,0,1)
    * (2)
  + INT(pentagon1,2,17,4,1,[],1,0,-1,0,3)
    * (-2)
  + INT(pentagon1,2,17,4,1,[],1,-1,0,0,3)
    * (2)
  + INT(pentagon1,2,17,4,1,[],2,0,-1,0,2)
    * (-1)
  + INT(pentagon1,2,17,4,1,[],2,-1,0,0,2)
    * (1)
  + INT(pentagon1,2,17,4,0,[],1,0,0,0,3)
    * (-2*s24-2*s23)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (-s24-s23)
  + INT(pentagon1,2,17,3,0,[],1,0,0,0,2)
    * (1)
  + INT(pentagon1,2,17,3,0,[],2,0,0,0,1)
    * (1);

id INT(pentagon1x123,3,21,5,2,[],2,-2,1,0,2) = 
  + INT(pentagon1x123,3,21,5,2,[],2,-2,2,0,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],3,-2,1,0,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,1,[],2,-1,1,0,2)
    * (-s24-s23-s12)
  + INT(pentagon1x123,3,21,5,1,[],2,-1,2,0,1)
    * (-s23)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,1,0,2)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,2,0,1)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],2,-1,1,0,1)
    * (3)
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-1);

id INT(pentagon1x123,3,21,5,2,[],2,-1,1,-1,2) = 
  + INT(pentagon1x123,3,21,5,2,[],2,-1,2,-1,1)
    * (-Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,1,-1,2)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,4,2,[],1,-1,2,-1,1)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,4,2,[],2,-1,1,-1,1)
    * (-(-4+d)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,4,1,[],2,-1,1,0,1)
    * ((s13+s23+s12)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,3,1,[],1,0,1,-1,1)
    * (-Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,3,1,[],1,-1,1,0,1)
    * (-Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,5,2,[],2,-1,1,-1,2) = 
  + INT(pentagon1x123,3,21,5,2,[],2,-1,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],3,-1,1,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,1,[],2,-1,2,0,1)
    * (-s14)
  + INT(pentagon1x123,3,21,5,1,[],3,-1,1,0,1)
    * (-2*s14-2*s24-2*s34)
  + INT(pentagon1x123,3,21,4,1,[],2,0,1,-1,1)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],2,-1,1,0,1)
    * (1)
  + INT(pentagon1x123,3,21,4,0,[],2,0,1,0,1)
    * (s14+s34)
  + INT(pentagon1x123,2,5,4,1,[],2,-1,2,0,0)
    * (1)
  + INT(pentagon1x123,2,5,4,1,[],3,-1,1,0,0)
    * (2)
  + INT(pentagon1x123,2,5,3,0,[],2,0,1,0,0)
    * (-1);

id INT(pentagon1x123,3,21,5,2,[],2,-1,1,-1,2) = 
  + INT(pentagon1x123,3,21,5,2,[],2,-1,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],3,-1,1,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,1,[],2,-1,1,0,2)
    * (-s14)
  + INT(pentagon1x123,3,21,5,1,[],3,-1,1,0,1)
    * (2*s13+2*s12)
  + INT(pentagon1x123,3,21,4,1,[],2,0,1,-1,1)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],2,-1,1,0,1)
    * (1)
  + INT(pentagon1x123,3,21,4,0,[],2,0,1,0,1)
    * (-s13)
  + INT(pentagon1,2,17,4,1,[],1,0,-1,0,3)
    * (-2)
  + INT(pentagon1,2,17,4,1,[],1,-1,0,0,3)
    * (2)
  + INT(pentagon1,2,17,4,1,[],2,0,-1,0,2)
    * (-1)
  + INT(pentagon1,2,17,4,1,[],2,-1,0,0,2)
    * (1)
  + INT(pentagon1,2,17,4,0,[],1,0,0,0,3)
    * (-2*s24-2*s23)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (-s24-s23)
  + INT(pentagon1,2,17,3,0,[],1,0,0,0,2)
    * (1)
  + INT(pentagon1,2,17,3,0,[],2,0,0,0,1)
    * (1);

id INT(pentagon1x123,3,21,5,2,[],2,-1,1,-1,2) = 
  + INT(pentagon1x123,3,21,5,2,[],2,-1,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],3,-1,1,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,1,[],2,0,1,-1,2)
    * (s13+s34)
  + INT(pentagon1x123,3,21,5,1,[],3,0,1,-1,1)
    * (-2*s23)
  + INT(pentagon1x123,3,21,4,1,[],2,0,1,-1,1)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],2,-1,1,0,1)
    * (1)
  + INT(pentagon1x123,3,21,4,0,[],2,0,1,0,1)
    * (-s13)
  + INT(pentagon1,2,17,4,1,[],1,0,0,-1,3)
    * (-2)
  + INT(pentagon1,2,17,4,1,[],2,0,0,-1,2)
    * (-1)
  + INT(pentagon1,2,17,4,0,[],1,0,0,0,3)
    * (-2*s14-2*s24-2*s34)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (-s14-s24-s34)
  + INT(pentagon1,2,17,3,0,[],1,0,0,0,2)
    * (2)
  + INT(pentagon1,2,17,3,0,[],2,0,0,0,1)
    * (1);

id INT(pentagon1x123,3,21,5,2,[],2,-1,1,-1,2) = 
  + INT(pentagon1x123,3,21,5,2,[],2,-1,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],3,-1,1,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,1,[],2,0,1,-1,2)
    * (-s24-s23-s12)
  + INT(pentagon1x123,3,21,5,1,[],2,0,2,-1,1)
    * (-s23)
  + INT(pentagon1x123,3,21,4,1,[],1,0,1,-1,2)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],1,0,2,-1,1)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],2,0,1,-1,1)
    * (2)
  + INT(pentagon1x123,3,21,4,1,[],2,-1,1,0,1)
    * (1)
  + INT(pentagon1x123,3,21,4,0,[],2,0,1,0,1)
    * (s23+s12)
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-1);

id INT(pentagon1x123,3,21,5,2,[],2,0,1,-2,2) = 
  + INT(pentagon1x123,3,21,5,2,[],2,0,2,-2,1)
    * (-Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x123,3,21,4,2,[],1,0,1,-2,2)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,4,2,[],1,0,2,-2,1)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,4,2,[],2,0,1,-2,1)
    * (-(-4+d)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,4,1,[],2,0,1,-1,1)
    * (2*(s13+s23+s12)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x123,3,21,3,1,[],1,0,1,-1,1)
    * (-2*Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,5,2,[],2,0,1,-2,2) = 
  + INT(pentagon1x123,3,21,5,2,[],2,0,2,-2,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],3,0,1,-2,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,1,[],2,0,2,-1,1)
    * (-s14)
  + INT(pentagon1x123,3,21,5,1,[],3,0,1,-1,1)
    * (-2*s14-2*s24-2*s34)
  + INT(pentagon1x123,3,21,4,1,[],2,0,1,-1,1)
    * (2)
  + INT(pentagon1x123,2,5,4,1,[],2,0,2,-1,0)
    * (1)
  + INT(pentagon1x123,2,5,4,1,[],3,0,1,-1,0)
    * (2)
  + INT(pentagon1x123,2,5,3,0,[],2,0,1,0,0)
    * (-1);

id INT(pentagon1x123,3,21,5,2,[],2,0,1,-2,2) = 
  + INT(pentagon1x123,3,21,5,2,[],2,0,2,-2,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],3,0,1,-2,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,1,[],2,0,1,-1,2)
    * (-s14)
  + INT(pentagon1x123,3,21,5,1,[],3,0,1,-1,1)
    * (2*s13+2*s12)
  + INT(pentagon1x123,3,21,4,1,[],2,0,1,-1,1)
    * (2)
  + INT(pentagon1,2,17,4,1,[],1,0,0,-1,3)
    * (-2)
  + INT(pentagon1,2,17,4,1,[],2,0,0,-1,2)
    * (-1)
  + INT(pentagon1,2,17,4,0,[],1,0,0,0,3)
    * (-2*s14-2*s24-2*s34)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (-s14-s24-s34)
  + INT(pentagon1,2,17,3,0,[],1,0,0,0,2)
    * (2)
  + INT(pentagon1,2,17,3,0,[],2,0,0,0,1)
    * (1);

id INT(pentagon1x123,3,21,5,2,[],1,-2,2,0,2) = 
  + INT(pentagon1x123,3,21,5,2,[],1,-2,3,0,1)
    * (-2*Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,2,0,1)
    * (-Den(s14+s24+s13+s23+s12+s34)*(-3+d))
  + INT(pentagon1x142,2,5,4,2,[],2,0,2,-2,0)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,2,[],3,0,1,-2,0)
    * (2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],2,0,2,0,-1)
    * (-2*Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)-2*Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)+2*Den(s14+s24+s13+s23+s12+s34)*(2*s24+s13+3*s23+2*s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],2,0,2,-1,0)
    * (2*Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)-2*Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)+2*Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x142,2,5,4,1,[],3,0,1,0,-1)
    * (-4*Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)-4*Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)+4*Den(s14+s24+s13+s23+s12+s34)*(2*s24+s13+3*s23+2*s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],3,0,1,-1,0)
    * (4*Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)-4*Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)+4*Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (2*Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)*s23+Den(s14+s24+s13+s23+s12+s34)*(2*s24*s12+s24^2+s12^2+s23^2+2*s23*s12+2*s24*s23)-2*Den(s14+s24+s13+s23+s12+s34)*(2*s24*s12+s24*s13+s24^2+s24*s34+s12^2+s13*s23+s12*s34+2*s23^2+s13*s12+3*s23*s12+3*s24*s23+s23*s34)+Den(s14+s24+s13+s23+s12+s34)*(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+4*s13*s23+2*s12*s34+4*s23^2+2*s13*s12+4*s23*s12+4*s24*s23+4*s23*s34+2*s13*s34)-2*Den(s14+s24+s13+s23+s12+s34)*s23*(s24+s13+2*s23+s12+s34)+Den(s14+s24+s13+s23+s12+s34)*s23^2)
  + INT(pentagon1x142,2,5,4,0,[],3,0,1,0,0)
    * (4*Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)*s23+2*Den(s14+s24+s13+s23+s12+s34)*(2*s24*s12+s24^2+s12^2+s23^2+2*s23*s12+2*s24*s23)-4*Den(s14+s24+s13+s23+s12+s34)*(2*s24*s12+s24*s13+s24^2+s24*s34+s12^2+s13*s23+s12*s34+2*s23^2+s13*s12+3*s23*s12+3*s24*s23+s23*s34)+2*Den(s14+s24+s13+s23+s12+s34)*(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+4*s13*s23+2*s12*s34+4*s23^2+2*s13*s12+4*s23*s12+4*s24*s23+4*s23*s34+2*s13*s34)-4*Den(s14+s24+s13+s23+s12+s34)*s23*(s24+s13+2*s23+s12+s34)+2*Den(s14+s24+s13+s23+s12+s34)*s23^2)
  + INT(pentagon1x142,2,5,3,1,[],1,0,2,-1,0)
    * (-2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,1,[],2,0,1,-1,0)
    * (-4*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (4*Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)-2*Den(s14+s24+s13+s23+s12+s34)*s23-2*Den(s14+s24+s13+s23+s12+s34)*(2*s24+s13+3*s23+2*s12+s34))
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (8*Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)-4*Den(s14+s24+s13+s23+s12+s34)*s23-4*Den(s14+s24+s13+s23+s12+s34)*(2*s24+s13+3*s23+2*s12+s34))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (2*Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,5,2,[],1,-2,2,0,2) = 
  + INT(pentagon1x123,3,21,5,2,[],1,-2,3,0,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,-2,2,0,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,1,[],1,-1,2,0,2)
    * (s13+s34)
  + INT(pentagon1x123,3,21,5,1,[],2,-1,2,0,1)
    * (-s23)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,1,0,2)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,2,0,1)
    * (3)
  + INT(pentagon1x123,3,21,4,1,[],2,-1,1,0,1)
    * (1)
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-1);

id INT(pentagon1x123,3,21,5,2,[],1,-2,2,0,2) = 
  + INT(pentagon1x123,3,21,5,2,[],1,-2,3,0,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,-2,2,0,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,1,[],1,-1,2,0,2)
    * (-s24-s23-s12)
  + INT(pentagon1x123,3,21,5,1,[],1,-1,3,0,1)
    * (-2*s23)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,2,0,1)
    * (2)
  + INT(pentagon1x142,2,5,4,1,[],2,0,2,-1,0)
    * (-1)
  + INT(pentagon1x142,2,5,4,1,[],3,0,1,-1,0)
    * (-2)
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (s13+s34)
  + INT(pentagon1x142,2,5,4,0,[],3,0,1,0,0)
    * (2*s13+2*s34)
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (1)
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (2);

id INT(pentagon1x123,3,21,5,2,[],1,-2,1,0,3) = 
  + INT(pentagon1x123,3,21,5,2,[],1,-2,2,0,2)
    * (-1/2*Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,1,0,2)
    * (-1/2*Den(s14+s24+s13+s23+s12+s34)*(-3+d))
  + INT(pentagon1x142,2,5,4,2,[],1,0,3,-2,0)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,2,[],2,0,2,-2,0)
    * (1/2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],1,0,3,0,-1)
    * (-2*Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)-2*Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)+2*Den(s14+s24+s13+s23+s12+s34)*(2*s24+s13+3*s23+2*s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],1,0,3,-1,0)
    * (2*Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)-2*Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)+2*Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x142,2,5,4,1,[],2,0,2,0,-1)
    * (-Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)-Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)+Den(s14+s24+s13+s23+s12+s34)*(2*s24+s13+3*s23+2*s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],2,0,2,-1,0)
    * (Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)-Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)+Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x142,2,5,4,0,[],1,0,3,0,0)
    * (2*Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)*s23+Den(s14+s24+s13+s23+s12+s34)*(2*s24*s12+s24^2+s12^2+s23^2+2*s23*s12+2*s24*s23)-2*Den(s14+s24+s13+s23+s12+s34)*(2*s24*s12+s24*s13+s24^2+s24*s34+s12^2+s13*s23+s12*s34+2*s23^2+s13*s12+3*s23*s12+3*s24*s23+s23*s34)+Den(s14+s24+s13+s23+s12+s34)*(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+4*s13*s23+2*s12*s34+4*s23^2+2*s13*s12+4*s23*s12+4*s24*s23+4*s23*s34+2*s13*s34)-2*Den(s14+s24+s13+s23+s12+s34)*s23*(s24+s13+2*s23+s12+s34)+Den(s14+s24+s13+s23+s12+s34)*s23^2)
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)*s23+1/2*Den(s14+s24+s13+s23+s12+s34)*(2*s24*s12+s24^2+s12^2+s23^2+2*s23*s12+2*s24*s23)-Den(s14+s24+s13+s23+s12+s34)*(2*s24*s12+s24*s13+s24^2+s24*s34+s12^2+s13*s23+s12*s34+2*s23^2+s13*s12+3*s23*s12+3*s24*s23+s23*s34)+1/2*Den(s14+s24+s13+s23+s12+s34)*(2*s24*s12+s34^2+s13^2+2*s24*s13+s24^2+2*s24*s34+s12^2+4*s13*s23+2*s12*s34+4*s23^2+2*s13*s12+4*s23*s12+4*s24*s23+4*s23*s34+2*s13*s34)-Den(s14+s24+s13+s23+s12+s34)*s23*(s24+s13+2*s23+s12+s34)+1/2*Den(s14+s24+s13+s23+s12+s34)*s23^2)
  + INT(pentagon1x142,2,5,3,1,[],1,0,2,-1,0)
    * (-2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,1,[],2,0,1,-1,0)
    * (-Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (-Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)+3*Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)-2*Den(s14+s24+s13+s23+s12+s34)*s23-Den(s14+s24+s13+s23+s12+s34)*(2*s24+s13+3*s23+2*s12+s34))
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (-Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)+Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)-Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,5,2,[],1,-2,1,0,3) = 
  + INT(pentagon1x123,3,21,5,2,[],1,-2,2,0,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],2,-2,1,0,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,1,[],1,-1,1,0,3)
    * (s13+s34)
  + INT(pentagon1x123,3,21,5,1,[],2,-1,1,0,2)
    * (-1/2*s23)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,1,0,2)
    * (1)
  + INT(pentagon1,2,17,4,1,[],2,0,-1,0,2)
    * (-1/2)
  + INT(pentagon1,2,17,4,1,[],2,-1,0,0,2)
    * (1/2)
  + INT(pentagon1,2,17,4,1,[],3,0,-1,0,1)
    * (-1)
  + INT(pentagon1,2,17,4,1,[],3,-1,0,0,1)
    * (1)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (-1/2*s24-1/2*s23)
  + INT(pentagon1,2,17,4,0,[],3,0,0,0,1)
    * (-s24-s23);

id INT(pentagon1x123,3,21,5,2,[],1,-2,1,0,3) = 
  + INT(pentagon1x123,3,21,5,2,[],1,-2,2,0,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],2,-2,1,0,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,1,[],1,-1,1,0,3)
    * (-s24-s23-s12)
  + INT(pentagon1x123,3,21,5,1,[],1,-1,2,0,2)
    * (-1/2*s23)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,1,0,2)
    * (1)
  + INT(pentagon1x142,2,5,4,1,[],1,0,3,-1,0)
    * (-1)
  + INT(pentagon1x142,2,5,4,1,[],2,0,2,-1,0)
    * (-1/2)
  + INT(pentagon1x142,2,5,4,0,[],1,0,3,0,0)
    * (s13+s34)
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (1/2*s13+1/2*s34)
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (1)
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (1/2);

id INT(pentagon1x123,3,21,5,2,[],1,-1,2,-1,2) = 
  + INT(pentagon1x123,3,21,5,2,[],1,-1,3,-1,1)
    * (-2*Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,2,-1,1)
    * (-Den(s14+s24+s13+s23+s12+s34)*(-3+d))
  + INT(pentagon1x123,3,21,4,1,[],1,-1,2,0,1)
    * ((s13+s23+s12)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,2,[],2,-1,2,-1,0)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,2,[],3,-1,1,-1,0)
    * (2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],2,0,2,-1,0)
    * (s14*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],2,-1,2,0,0)
    * (Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)-Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)+Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x142,2,5,4,1,[],3,0,1,-1,0)
    * (2*s14*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],3,-1,1,0,0)
    * (2*Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)-2*Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)+2*Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (s14*Den(s14+s24+s13+s23+s12+s34)*s23+s14*Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)-s14*Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34))
  + INT(pentagon1x142,2,5,4,0,[],3,0,1,0,0)
    * (2*s14*Den(s14+s24+s13+s23+s12+s34)*s23+2*s14*Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)-2*s14*Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34))
  + INT(pentagon1x142,2,5,3,1,[],1,0,2,-1,0)
    * (-Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,1,[],1,-1,2,0,0)
    * (-Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,1,[],2,0,1,-1,0)
    * (-2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,1,[],2,-1,1,0,0)
    * (-2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (-Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)+Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)-Den(s14+s24+s13+s23+s12+s34)*(s14+s23))
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (-2*Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)+2*Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)-s14*Den(s14+s24+s13+s23+s12+s34)-Den(s14+s24+s13+s23+s12+s34)*(s14+2*s23))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (2*Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,5,2,[],1,-1,2,-1,2) = 
  + INT(pentagon1x123,3,21,5,2,[],1,-1,3,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,-1,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,1,[],1,-1,3,0,1)
    * (-2*s14)
  + INT(pentagon1x123,3,21,5,1,[],2,-1,2,0,1)
    * (-s14-s24-s34)
  + INT(pentagon1x123,3,21,4,1,[],1,0,2,-1,1)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,2,0,1)
    * (1)
  + INT(pentagon1x123,3,21,4,0,[],1,0,2,0,1)
    * (s14+s34)
  + INT(pentagon1x123,2,5,4,1,[],1,-1,3,0,0)
    * (2)
  + INT(pentagon1x123,2,5,4,1,[],2,-1,2,0,0)
    * (1)
  + INT(pentagon1x123,2,5,3,0,[],1,0,2,0,0)
    * (-1);

id INT(pentagon1x123,3,21,5,2,[],1,-1,2,-1,2) = 
  + INT(pentagon1x123,3,21,5,2,[],1,-1,3,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,-1,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,1,[],1,-1,2,0,2)
    * (-s14)
  + INT(pentagon1x123,3,21,5,1,[],2,-1,2,0,1)
    * (s13+s12)
  + INT(pentagon1x123,3,21,4,1,[],1,0,2,-1,1)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,1,0,2)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,2,0,1)
    * (2)
  + INT(pentagon1x123,3,21,4,1,[],2,-1,1,0,1)
    * (1)
  + INT(pentagon1x123,3,21,4,0,[],1,0,2,0,1)
    * (-s13)
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-1);

id INT(pentagon1x123,3,21,5,2,[],1,-1,2,-1,2) = 
  + INT(pentagon1x123,3,21,5,2,[],1,-1,3,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,-1,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,1,[],1,0,2,-1,2)
    * (s13+s34)
  + INT(pentagon1x123,3,21,5,1,[],2,0,2,-1,1)
    * (-s23)
  + INT(pentagon1x123,3,21,4,1,[],1,0,1,-1,2)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],1,0,2,-1,1)
    * (2)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,2,0,1)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],2,0,1,-1,1)
    * (1)
  + INT(pentagon1x123,3,21,4,0,[],1,0,2,0,1)
    * (-s13)
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-1);

id INT(pentagon1x123,3,21,5,2,[],1,-1,2,-1,2) = 
  + INT(pentagon1x123,3,21,5,2,[],1,-1,3,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,-1,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,1,[],1,0,2,-1,2)
    * (-s24-s23-s12)
  + INT(pentagon1x123,3,21,5,1,[],1,0,3,-1,1)
    * (-2*s23)
  + INT(pentagon1x123,3,21,4,1,[],1,0,2,-1,1)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,2,0,1)
    * (1)
  + INT(pentagon1x123,3,21,4,0,[],1,0,2,0,1)
    * (s23+s12)
  + INT(pentagon1x142,2,5,4,1,[],2,-1,2,0,0)
    * (-1)
  + INT(pentagon1x142,2,5,4,1,[],3,-1,1,0,0)
    * (-2)
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (-s14)
  + INT(pentagon1x142,2,5,4,0,[],3,0,1,0,0)
    * (-2*s14)
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (1)
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (2);

id INT(pentagon1x123,3,21,5,2,[],1,-1,1,-1,3) = 
  + INT(pentagon1x123,3,21,5,2,[],1,-1,2,-1,2)
    * (-1/2*Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,1,-1,2)
    * (-1/2*Den(s14+s24+s13+s23+s12+s34)*(-3+d))
  + INT(pentagon1x123,3,21,4,1,[],1,-1,1,0,2)
    * (1/2*(s13+s23+s12)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,2,[],1,-1,3,-1,0)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,2,[],2,-1,2,-1,0)
    * (1/2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],1,0,3,-1,0)
    * (s14*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],1,-1,3,0,0)
    * (Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)-Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)+Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x142,2,5,4,1,[],2,0,2,-1,0)
    * (1/2*s14*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],2,-1,2,0,0)
    * (1/2*Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)-1/2*Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)+1/2*Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x142,2,5,4,0,[],1,0,3,0,0)
    * (s14*Den(s14+s24+s13+s23+s12+s34)*s23+s14*Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)-s14*Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34))
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (1/2*s14*Den(s14+s24+s13+s23+s12+s34)*s23+1/2*s14*Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)-1/2*s14*Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34))
  + INT(pentagon1x142,2,5,3,1,[],1,0,2,-1,0)
    * (-Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,1,[],1,-1,2,0,0)
    * (-Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,1,[],2,0,1,-1,0)
    * (-1/2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,1,[],2,-1,1,0,0)
    * (-1/2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (-Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)+Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)-Den(s14+s24+s13+s23+s12+s34)*s23-s14*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (-1/2*Den(s14+s24+s13+s23+s12+s34)*(s24+s23+s12)+1/2*Den(s14+s24+s13+s23+s12+s34)*(s24+s13+2*s23+s12+s34)-1/2*Den(s14+s24+s13+s23+s12+s34)*s23-1/2*s14*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,5,2,[],1,-1,1,-1,3) = 
  + INT(pentagon1x123,3,21,5,2,[],1,-1,2,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],2,-1,1,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,1,[],1,-1,2,0,2)
    * (-1/2*s14)
  + INT(pentagon1x123,3,21,5,1,[],2,-1,1,0,2)
    * (-1/2*s14-1/2*s24-1/2*s34)
  + INT(pentagon1x123,3,21,4,1,[],1,0,1,-1,2)
    * (1/2)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,1,0,2)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,2,0,1)
    * (1/2)
  + INT(pentagon1x123,3,21,4,1,[],2,-1,1,0,1)
    * (1/2)
  + INT(pentagon1x123,3,21,4,0,[],1,0,1,0,2)
    * (1/2*s14+1/2*s34)
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-1/2);

id INT(pentagon1x123,3,21,5,2,[],1,-1,1,-1,3) = 
  + INT(pentagon1x123,3,21,5,2,[],1,-1,2,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],2,-1,1,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,1,[],1,-1,1,0,3)
    * (-s14)
  + INT(pentagon1x123,3,21,5,1,[],2,-1,1,0,2)
    * (1/2*s13+1/2*s12)
  + INT(pentagon1x123,3,21,4,1,[],1,0,1,-1,2)
    * (1/2)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,1,0,2)
    * (1/2)
  + INT(pentagon1x123,3,21,4,0,[],1,0,1,0,2)
    * (-1/2*s13)
  + INT(pentagon1,2,17,4,1,[],2,0,-1,0,2)
    * (-1/2)
  + INT(pentagon1,2,17,4,1,[],2,-1,0,0,2)
    * (1/2)
  + INT(pentagon1,2,17,4,1,[],3,0,-1,0,1)
    * (-1)
  + INT(pentagon1,2,17,4,1,[],3,-1,0,0,1)
    * (1)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (-1/2*s24-1/2*s23)
  + INT(pentagon1,2,17,4,0,[],3,0,0,0,1)
    * (-s24-s23);

id INT(pentagon1x123,3,21,5,2,[],1,-1,1,-1,3) = 
  + INT(pentagon1x123,3,21,5,2,[],1,-1,2,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],2,-1,1,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,1,[],1,0,1,-1,3)
    * (s13+s34)
  + INT(pentagon1x123,3,21,5,1,[],2,0,1,-1,2)
    * (-1/2*s23)
  + INT(pentagon1x123,3,21,4,1,[],1,0,1,-1,2)
    * (1/2)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,1,0,2)
    * (1/2)
  + INT(pentagon1x123,3,21,4,0,[],1,0,1,0,2)
    * (-1/2*s13)
  + INT(pentagon1,2,17,4,1,[],2,0,0,-1,2)
    * (-1/2)
  + INT(pentagon1,2,17,4,1,[],3,0,0,-1,1)
    * (-1)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (-1/2*s14-1/2*s24-1/2*s34)
  + INT(pentagon1,2,17,4,0,[],3,0,0,0,1)
    * (-s14-s24-s34)
  + INT(pentagon1,2,17,3,0,[],1,0,0,0,2)
    * (1/2)
  + INT(pentagon1,2,17,3,0,[],2,0,0,0,1)
    * (1);

id INT(pentagon1x123,3,21,5,2,[],1,-1,1,-1,3) = 
  + INT(pentagon1x123,3,21,5,2,[],1,-1,2,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],2,-1,1,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,1,[],1,0,1,-1,3)
    * (-s24-s23-s12)
  + INT(pentagon1x123,3,21,5,1,[],1,0,2,-1,2)
    * (-1/2*s23)
  + INT(pentagon1x123,3,21,4,1,[],1,0,1,-1,2)
    * (1/2)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,1,0,2)
    * (1/2)
  + INT(pentagon1x123,3,21,4,0,[],1,0,1,0,2)
    * (1/2*s23+1/2*s12)
  + INT(pentagon1x142,2,5,4,1,[],1,-1,3,0,0)
    * (-1)
  + INT(pentagon1x142,2,5,4,1,[],2,-1,2,0,0)
    * (-1/2)
  + INT(pentagon1x142,2,5,4,0,[],1,0,3,0,0)
    * (-s14)
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (-1/2*s14)
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (1)
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (1/2);

id INT(pentagon1x123,3,21,5,2,[],1,0,2,-2,2) = 
  + INT(pentagon1x123,3,21,5,2,[],1,0,3,-2,1)
    * (-2*Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x123,3,21,4,2,[],1,0,2,-2,1)
    * (-Den(s14+s24+s13+s23+s12+s34)*(-3+d))
  + INT(pentagon1x123,3,21,4,1,[],1,0,2,-1,1)
    * (2*(s13+s23+s12)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,2,[],2,-2,2,0,0)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,2,[],3,-2,1,0,0)
    * (2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],2,-1,2,0,0)
    * (2*s14*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],3,-1,1,0,0)
    * (4*s14*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (s14^2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,0,[],3,0,1,0,0)
    * (2*s14^2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,1,[],1,-1,2,0,0)
    * (-2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,1,[],2,-1,1,0,0)
    * (-4*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (-2*s14*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (-4*s14*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (2*Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,5,2,[],1,0,2,-2,2) = 
  + INT(pentagon1x123,3,21,5,2,[],1,0,3,-2,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,0,2,-2,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,1,[],1,0,3,-1,1)
    * (-2*s14)
  + INT(pentagon1x123,3,21,5,1,[],2,0,2,-1,1)
    * (-s14-s24-s34)
  + INT(pentagon1x123,3,21,4,1,[],1,0,2,-1,1)
    * (2)
  + INT(pentagon1x123,2,5,4,1,[],1,0,3,-1,0)
    * (2)
  + INT(pentagon1x123,2,5,4,1,[],2,0,2,-1,0)
    * (1)
  + INT(pentagon1x123,2,5,3,0,[],1,0,2,0,0)
    * (-1);

id INT(pentagon1x123,3,21,5,2,[],1,0,2,-2,2) = 
  + INT(pentagon1x123,3,21,5,2,[],1,0,3,-2,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,0,2,-2,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,1,[],1,0,2,-1,2)
    * (-s14)
  + INT(pentagon1x123,3,21,5,1,[],2,0,2,-1,1)
    * (s13+s12)
  + INT(pentagon1x123,3,21,4,1,[],1,0,1,-1,2)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],1,0,2,-1,1)
    * (3)
  + INT(pentagon1x123,3,21,4,1,[],2,0,1,-1,1)
    * (1)
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-1);

id INT(pentagon1x123,3,21,5,2,[],1,0,1,-2,3) = 
  + INT(pentagon1x123,3,21,5,2,[],1,0,2,-2,2)
    * (-1/2*Den(s14+s24+s13+s23+s12+s34)*s23)
  + INT(pentagon1x123,3,21,4,2,[],1,0,1,-2,2)
    * (-1/2*Den(s14+s24+s13+s23+s12+s34)*(-3+d))
  + INT(pentagon1x123,3,21,4,1,[],1,0,1,-1,2)
    * ((s13+s23+s12)*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,2,[],1,-2,3,0,0)
    * (Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,2,[],2,-2,2,0,0)
    * (1/2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],1,-1,3,0,0)
    * (2*s14*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,1,[],2,-1,2,0,0)
    * (s14*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,0,[],1,0,3,0,0)
    * (s14^2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (1/2*s14^2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,1,[],1,-1,2,0,0)
    * (-2*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,1,[],2,-1,1,0,0)
    * (-Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (-2*s14*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (-s14*Den(s14+s24+s13+s23+s12+s34))
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (Den(s14+s24+s13+s23+s12+s34));

id INT(pentagon1x123,3,21,5,2,[],1,0,1,-2,3) = 
  + INT(pentagon1x123,3,21,5,2,[],1,0,2,-2,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],2,0,1,-2,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,1,[],1,0,2,-1,2)
    * (-1/2*s14)
  + INT(pentagon1x123,3,21,5,1,[],2,0,1,-1,2)
    * (-1/2*s14-1/2*s24-1/2*s34)
  + INT(pentagon1x123,3,21,4,1,[],1,0,1,-1,2)
    * (3/2)
  + INT(pentagon1x123,3,21,4,1,[],1,0,2,-1,1)
    * (1/2)
  + INT(pentagon1x123,3,21,4,1,[],2,0,1,-1,1)
    * (1/2)
  + INT(pentagon1x123,3,21,3,0,[],1,0,1,0,1)
    * (-1/2);

id INT(pentagon1x123,3,21,5,2,[],1,0,1,-2,3) = 
  + INT(pentagon1x123,3,21,5,2,[],1,0,2,-2,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],2,0,1,-2,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,1,[],1,0,1,-1,3)
    * (-s14)
  + INT(pentagon1x123,3,21,5,1,[],2,0,1,-1,2)
    * (1/2*s13+1/2*s12)
  + INT(pentagon1x123,3,21,4,1,[],1,0,1,-1,2)
    * (1)
  + INT(pentagon1,2,17,4,1,[],2,0,0,-1,2)
    * (-1/2)
  + INT(pentagon1,2,17,4,1,[],3,0,0,-1,1)
    * (-1)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (-1/2*s14-1/2*s24-1/2*s34)
  + INT(pentagon1,2,17,4,0,[],3,0,0,0,1)
    * (-s14-s24-s34)
  + INT(pentagon1,2,17,3,0,[],1,0,0,0,2)
    * (1/2)
  + INT(pentagon1,2,17,3,0,[],2,0,0,0,1)
    * (1);

id INT(pentagon1x123,3,21,5,3,[],2,-3,1,0,2) = 
  + INT(pentagon1x123,3,21,5,3,[],2,-3,2,0,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,3,[],3,-3,1,0,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,-2,1,0,2)
    * (s13+s34)
  + INT(pentagon1x123,3,21,5,2,[],3,-2,1,0,1)
    * (-2*s23)
  + INT(pentagon1x123,3,21,4,2,[],2,-2,1,0,1)
    * (3)
  + INT(pentagon1,2,17,4,2,[],1,0,-2,0,3)
    * (2)
  + INT(pentagon1,2,17,4,2,[],1,-1,-1,0,3)
    * (-4)
  + INT(pentagon1,2,17,4,2,[],1,-2,0,0,3)
    * (2)
  + INT(pentagon1,2,17,4,2,[],2,0,-2,0,2)
    * (1)
  + INT(pentagon1,2,17,4,2,[],2,-1,-1,0,2)
    * (-2)
  + INT(pentagon1,2,17,4,2,[],2,-2,0,0,2)
    * (1)
  + INT(pentagon1,2,17,4,1,[],1,0,-1,0,3)
    * (4*s24+4*s23)
  + INT(pentagon1,2,17,4,1,[],1,-1,0,0,3)
    * (-4*s24-4*s23)
  + INT(pentagon1,2,17,4,1,[],2,0,-1,0,2)
    * (2*s24+2*s23)
  + INT(pentagon1,2,17,4,1,[],2,-1,0,0,2)
    * (-2*s24-2*s23)
  + INT(pentagon1,2,17,4,0,[],1,0,0,0,3)
    * (2*s24^2+2*s23^2+4*s24*s23)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (s24^2+s23^2+2*s24*s23)
  + INT(pentagon1,2,17,3,1,[],1,0,-1,0,2)
    * (-2)
  + INT(pentagon1,2,17,3,1,[],1,-1,0,0,2)
    * (2)
  + INT(pentagon1,2,17,3,1,[],2,0,-1,0,1)
    * (-2)
  + INT(pentagon1,2,17,3,1,[],2,-1,0,0,1)
    * (2)
  + INT(pentagon1,2,17,3,0,[],1,0,0,0,2)
    * (-2*s24-2*s23)
  + INT(pentagon1,2,17,3,0,[],2,0,0,0,1)
    * (-2*s24-2*s23);

id INT(pentagon1x123,3,21,5,3,[],2,-3,1,0,2) = 
  + INT(pentagon1x123,3,21,5,3,[],2,-3,2,0,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,3,[],3,-3,1,0,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,-2,1,0,2)
    * (-s24-s23-s12)
  + INT(pentagon1x123,3,21,5,2,[],2,-2,2,0,1)
    * (-s23)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,1,0,2)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,2,0,1)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],2,-2,1,0,1)
    * (4)
  + INT(pentagon1x123,3,21,3,1,[],1,-1,1,0,1)
    * (-2);

id INT(pentagon1x123,3,21,5,3,[],2,-2,1,-1,2) = 
  + INT(pentagon1x123,3,21,5,3,[],2,-2,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,3,[],3,-2,1,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,-2,2,0,1)
    * (-s14)
  + INT(pentagon1x123,3,21,5,2,[],3,-2,1,0,1)
    * (-2*s14-2*s24-2*s34)
  + INT(pentagon1x123,3,21,4,2,[],2,-1,1,-1,1)
    * (2)
  + INT(pentagon1x123,3,21,4,2,[],2,-2,1,0,1)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],2,-1,1,0,1)
    * (2*s14+2*s34)
  + INT(pentagon1x123,2,5,4,2,[],2,-2,2,0,0)
    * (1)
  + INT(pentagon1x123,2,5,4,2,[],3,-2,1,0,0)
    * (2)
  + INT(pentagon1x123,2,5,3,1,[],2,-1,1,0,0)
    * (-2);

id INT(pentagon1x123,3,21,5,3,[],2,-2,1,-1,2) = 
  + INT(pentagon1x123,3,21,5,3,[],2,-2,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,3,[],3,-2,1,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,-2,1,0,2)
    * (-s14)
  + INT(pentagon1x123,3,21,5,2,[],3,-2,1,0,1)
    * (2*s13+2*s12)
  + INT(pentagon1x123,3,21,4,2,[],2,-1,1,-1,1)
    * (2)
  + INT(pentagon1x123,3,21,4,2,[],2,-2,1,0,1)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],2,-1,1,0,1)
    * (-2*s13)
  + INT(pentagon1,2,17,4,2,[],1,0,-2,0,3)
    * (2)
  + INT(pentagon1,2,17,4,2,[],1,-1,-1,0,3)
    * (-4)
  + INT(pentagon1,2,17,4,2,[],1,-2,0,0,3)
    * (2)
  + INT(pentagon1,2,17,4,2,[],2,0,-2,0,2)
    * (1)
  + INT(pentagon1,2,17,4,2,[],2,-1,-1,0,2)
    * (-2)
  + INT(pentagon1,2,17,4,2,[],2,-2,0,0,2)
    * (1)
  + INT(pentagon1,2,17,4,1,[],1,0,-1,0,3)
    * (4*s24+4*s23)
  + INT(pentagon1,2,17,4,1,[],1,-1,0,0,3)
    * (-4*s24-4*s23)
  + INT(pentagon1,2,17,4,1,[],2,0,-1,0,2)
    * (2*s24+2*s23)
  + INT(pentagon1,2,17,4,1,[],2,-1,0,0,2)
    * (-2*s24-2*s23)
  + INT(pentagon1,2,17,4,0,[],1,0,0,0,3)
    * (2*s24^2+2*s23^2+4*s24*s23)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (s24^2+s23^2+2*s24*s23)
  + INT(pentagon1,2,17,3,1,[],1,0,-1,0,2)
    * (-2)
  + INT(pentagon1,2,17,3,1,[],1,-1,0,0,2)
    * (2)
  + INT(pentagon1,2,17,3,1,[],2,0,-1,0,1)
    * (-2)
  + INT(pentagon1,2,17,3,1,[],2,-1,0,0,1)
    * (2)
  + INT(pentagon1,2,17,3,0,[],1,0,0,0,2)
    * (-2*s24-2*s23)
  + INT(pentagon1,2,17,3,0,[],2,0,0,0,1)
    * (-2*s24-2*s23);

id INT(pentagon1x123,3,21,5,3,[],2,-2,1,-1,2) = 
  + INT(pentagon1x123,3,21,5,3,[],2,-2,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,3,[],3,-2,1,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,-1,1,-1,2)
    * (s13+s34)
  + INT(pentagon1x123,3,21,5,2,[],3,-1,1,-1,1)
    * (-2*s23)
  + INT(pentagon1x123,3,21,4,2,[],2,-1,1,-1,1)
    * (2)
  + INT(pentagon1x123,3,21,4,2,[],2,-2,1,0,1)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],2,-1,1,0,1)
    * (-s13)
  + INT(pentagon1,2,17,4,2,[],1,0,-1,-1,3)
    * (2)
  + INT(pentagon1,2,17,4,2,[],1,-1,0,-1,3)
    * (-2)
  + INT(pentagon1,2,17,4,2,[],2,0,-1,-1,2)
    * (1)
  + INT(pentagon1,2,17,4,2,[],2,-1,0,-1,2)
    * (-1)
  + INT(pentagon1,2,17,4,1,[],1,0,0,-1,3)
    * (2*s24+2*s23)
  + INT(pentagon1,2,17,4,1,[],1,0,-1,0,3)
    * (2*s14+2*s24+2*s34)
  + INT(pentagon1,2,17,4,1,[],1,-1,0,0,3)
    * (-2*s14-2*s24-2*s34)
  + INT(pentagon1,2,17,4,1,[],2,0,0,-1,2)
    * (s24+s23)
  + INT(pentagon1,2,17,4,1,[],2,0,-1,0,2)
    * (s14+s24+s34)
  + INT(pentagon1,2,17,4,1,[],2,-1,0,0,2)
    * (-s14-s24-s34)
  + INT(pentagon1,2,17,4,0,[],1,0,0,0,3)
    * (2*s14*s24+2*s24^2+2*s24*s34+2*s24*s23+2*s23*s34+2*s14*s23)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (s14*s24+s24^2+s24*s34+s24*s23+s23*s34+s14*s23)
  + INT(pentagon1,2,17,3,1,[],1,0,0,-1,2)
    * (-1)
  + INT(pentagon1,2,17,3,1,[],1,0,-1,0,2)
    * (-2)
  + INT(pentagon1,2,17,3,1,[],1,-1,0,0,2)
    * (2)
  + INT(pentagon1,2,17,3,1,[],2,0,0,-1,1)
    * (-1)
  + INT(pentagon1,2,17,3,1,[],2,0,-1,0,1)
    * (-1)
  + INT(pentagon1,2,17,3,1,[],2,-1,0,0,1)
    * (1)
  + INT(pentagon1,2,17,3,0,[],1,0,0,0,2)
    * (-s14-3*s24-2*s23-s34)
  + INT(pentagon1,2,17,3,0,[],2,0,0,0,1)
    * (-s14-2*s24-s23-s34)
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (1);

id INT(pentagon1x123,3,21,5,3,[],2,-2,1,-1,2) = 
  + INT(pentagon1x123,3,21,5,3,[],2,-2,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,3,[],3,-2,1,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,-1,1,-1,2)
    * (-s24-s23-s12)
  + INT(pentagon1x123,3,21,5,2,[],2,-1,2,-1,1)
    * (-s23)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,1,-1,2)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,2,-1,1)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],2,-1,1,-1,1)
    * (3)
  + INT(pentagon1x123,3,21,4,2,[],2,-2,1,0,1)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],2,-1,1,0,1)
    * (s23+s12)
  + INT(pentagon1x123,3,21,3,1,[],1,0,1,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,3,1,[],1,-1,1,0,1)
    * (-1);

id INT(pentagon1x123,3,21,5,3,[],2,-1,1,-2,2) = 
  + INT(pentagon1x123,3,21,5,3,[],2,-1,2,-2,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,3,[],3,-1,1,-2,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,-1,2,-1,1)
    * (-s14)
  + INT(pentagon1x123,3,21,5,2,[],3,-1,1,-1,1)
    * (-2*s14-2*s24-2*s34)
  + INT(pentagon1x123,3,21,4,2,[],2,0,1,-2,1)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],2,-1,1,-1,1)
    * (2)
  + INT(pentagon1x123,3,21,4,1,[],2,0,1,-1,1)
    * (s14+s34)
  + INT(pentagon1x123,2,5,4,2,[],2,-1,2,-1,0)
    * (1)
  + INT(pentagon1x123,2,5,4,2,[],3,-1,1,-1,0)
    * (2)
  + INT(pentagon1x123,2,5,3,1,[],2,0,1,-1,0)
    * (-1)
  + INT(pentagon1x123,2,5,3,1,[],2,-1,1,0,0)
    * (-1);

id INT(pentagon1x123,3,21,5,3,[],2,-1,1,-2,2) = 
  + INT(pentagon1x123,3,21,5,3,[],2,-1,2,-2,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,3,[],3,-1,1,-2,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,-1,1,-1,2)
    * (-s14)
  + INT(pentagon1x123,3,21,5,2,[],3,-1,1,-1,1)
    * (2*s13+2*s12)
  + INT(pentagon1x123,3,21,4,2,[],2,0,1,-2,1)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],2,-1,1,-1,1)
    * (2)
  + INT(pentagon1x123,3,21,4,1,[],2,0,1,-1,1)
    * (-s13)
  + INT(pentagon1,2,17,4,2,[],1,0,-1,-1,3)
    * (2)
  + INT(pentagon1,2,17,4,2,[],1,-1,0,-1,3)
    * (-2)
  + INT(pentagon1,2,17,4,2,[],2,0,-1,-1,2)
    * (1)
  + INT(pentagon1,2,17,4,2,[],2,-1,0,-1,2)
    * (-1)
  + INT(pentagon1,2,17,4,1,[],1,0,0,-1,3)
    * (2*s24+2*s23)
  + INT(pentagon1,2,17,4,1,[],1,0,-1,0,3)
    * (2*s14+2*s24+2*s34)
  + INT(pentagon1,2,17,4,1,[],1,-1,0,0,3)
    * (-2*s14-2*s24-2*s34)
  + INT(pentagon1,2,17,4,1,[],2,0,0,-1,2)
    * (s24+s23)
  + INT(pentagon1,2,17,4,1,[],2,0,-1,0,2)
    * (s14+s24+s34)
  + INT(pentagon1,2,17,4,1,[],2,-1,0,0,2)
    * (-s14-s24-s34)
  + INT(pentagon1,2,17,4,0,[],1,0,0,0,3)
    * (2*s14*s24+2*s24^2+2*s24*s34+2*s24*s23+2*s23*s34+2*s14*s23)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (s14*s24+s24^2+s24*s34+s24*s23+s23*s34+s14*s23)
  + INT(pentagon1,2,17,3,1,[],1,0,0,-1,2)
    * (-1)
  + INT(pentagon1,2,17,3,1,[],1,0,-1,0,2)
    * (-2)
  + INT(pentagon1,2,17,3,1,[],1,-1,0,0,2)
    * (2)
  + INT(pentagon1,2,17,3,1,[],2,0,0,-1,1)
    * (-1)
  + INT(pentagon1,2,17,3,1,[],2,0,-1,0,1)
    * (-1)
  + INT(pentagon1,2,17,3,1,[],2,-1,0,0,1)
    * (1)
  + INT(pentagon1,2,17,3,0,[],1,0,0,0,2)
    * (-s14-3*s24-2*s23-s34)
  + INT(pentagon1,2,17,3,0,[],2,0,0,0,1)
    * (-s14-2*s24-s23-s34)
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (1);

id INT(pentagon1x123,3,21,5,3,[],2,-1,1,-2,2) = 
  + INT(pentagon1x123,3,21,5,3,[],2,-1,2,-2,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,3,[],3,-1,1,-2,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,0,1,-2,2)
    * (s13+s34)
  + INT(pentagon1x123,3,21,5,2,[],3,0,1,-2,1)
    * (-2*s23)
  + INT(pentagon1x123,3,21,4,2,[],2,0,1,-2,1)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],2,-1,1,-1,1)
    * (2)
  + INT(pentagon1x123,3,21,4,1,[],2,0,1,-1,1)
    * (-2*s13)
  + INT(pentagon1,2,17,4,2,[],1,0,0,-2,3)
    * (2)
  + INT(pentagon1,2,17,4,2,[],2,0,0,-2,2)
    * (1)
  + INT(pentagon1,2,17,4,1,[],1,0,0,-1,3)
    * (4*s14+4*s24+4*s34)
  + INT(pentagon1,2,17,4,1,[],2,0,0,-1,2)
    * (2*s14+2*s24+2*s34)
  + INT(pentagon1,2,17,4,0,[],1,0,0,0,3)
    * (2*s34^2+4*s14*s24+2*s24^2+4*s24*s34+4*s14*s34+2*s14^2)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (s34^2+2*s14*s24+s24^2+2*s24*s34+2*s14*s34+s14^2)
  + INT(pentagon1,2,17,3,1,[],1,0,0,-1,2)
    * (-4)
  + INT(pentagon1,2,17,3,1,[],2,0,0,-1,1)
    * (-2)
  + INT(pentagon1,2,17,3,0,[],1,0,0,0,2)
    * (-4*s14-4*s24-4*s34)
  + INT(pentagon1,2,17,3,0,[],2,0,0,0,1)
    * (-2*s14-2*s24-2*s34)
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (2);

id INT(pentagon1x123,3,21,5,3,[],2,-1,1,-2,2) = 
  + INT(pentagon1x123,3,21,5,3,[],2,-1,2,-2,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,3,[],3,-1,1,-2,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,0,1,-2,2)
    * (-s24-s23-s12)
  + INT(pentagon1x123,3,21,5,2,[],2,0,2,-2,1)
    * (-s23)
  + INT(pentagon1x123,3,21,4,2,[],1,0,1,-2,2)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],1,0,2,-2,1)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],2,0,1,-2,1)
    * (2)
  + INT(pentagon1x123,3,21,4,2,[],2,-1,1,-1,1)
    * (2)
  + INT(pentagon1x123,3,21,4,1,[],2,0,1,-1,1)
    * (2*s23+2*s12)
  + INT(pentagon1x123,3,21,3,1,[],1,0,1,-1,1)
    * (-2);

id INT(pentagon1x123,3,21,5,3,[],2,0,1,-3,2) = 
  + INT(pentagon1x123,3,21,5,3,[],2,0,2,-3,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,3,[],3,0,1,-3,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,0,2,-2,1)
    * (-s14)
  + INT(pentagon1x123,3,21,5,2,[],3,0,1,-2,1)
    * (-2*s14-2*s24-2*s34)
  + INT(pentagon1x123,3,21,4,2,[],2,0,1,-2,1)
    * (3)
  + INT(pentagon1x123,2,5,4,2,[],2,0,2,-2,0)
    * (1)
  + INT(pentagon1x123,2,5,4,2,[],3,0,1,-2,0)
    * (2)
  + INT(pentagon1x123,2,5,3,1,[],2,0,1,-1,0)
    * (-2);

id INT(pentagon1x123,3,21,5,3,[],2,0,1,-3,2) = 
  + INT(pentagon1x123,3,21,5,3,[],2,0,2,-3,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,3,[],3,0,1,-3,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,2,[],2,0,1,-2,2)
    * (-s14)
  + INT(pentagon1x123,3,21,5,2,[],3,0,1,-2,1)
    * (2*s13+2*s12)
  + INT(pentagon1x123,3,21,4,2,[],2,0,1,-2,1)
    * (3)
  + INT(pentagon1,2,17,4,2,[],1,0,0,-2,3)
    * (2)
  + INT(pentagon1,2,17,4,2,[],2,0,0,-2,2)
    * (1)
  + INT(pentagon1,2,17,4,1,[],1,0,0,-1,3)
    * (4*s14+4*s24+4*s34)
  + INT(pentagon1,2,17,4,1,[],2,0,0,-1,2)
    * (2*s14+2*s24+2*s34)
  + INT(pentagon1,2,17,4,0,[],1,0,0,0,3)
    * (2*s34^2+4*s14*s24+2*s24^2+4*s24*s34+4*s14*s34+2*s14^2)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (s34^2+2*s14*s24+s24^2+2*s24*s34+2*s14*s34+s14^2)
  + INT(pentagon1,2,17,3,1,[],1,0,0,-1,2)
    * (-4)
  + INT(pentagon1,2,17,3,1,[],2,0,0,-1,1)
    * (-2)
  + INT(pentagon1,2,17,3,0,[],1,0,0,0,2)
    * (-4*s14-4*s24-4*s34)
  + INT(pentagon1,2,17,3,0,[],2,0,0,0,1)
    * (-2*s14-2*s24-2*s34)
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (2);

id INT(pentagon1x123,3,21,5,3,[],1,-3,2,0,2) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-3,3,0,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,3,[],2,-3,2,0,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],1,-2,2,0,2)
    * (s13+s34)
  + INT(pentagon1x123,3,21,5,2,[],2,-2,2,0,1)
    * (-s23)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,1,0,2)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,2,0,1)
    * (4)
  + INT(pentagon1x123,3,21,4,2,[],2,-2,1,0,1)
    * (1)
  + INT(pentagon1x123,3,21,3,1,[],1,-1,1,0,1)
    * (-2);

id INT(pentagon1x123,3,21,5,3,[],1,-3,2,0,2) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-3,3,0,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,3,[],2,-3,2,0,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],1,-2,2,0,2)
    * (-s24-s23-s12)
  + INT(pentagon1x123,3,21,5,2,[],1,-2,3,0,1)
    * (-2*s23)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,2,0,1)
    * (3)
  + INT(pentagon1x142,2,5,4,2,[],2,0,2,-2,0)
    * (1)
  + INT(pentagon1x142,2,5,4,2,[],3,0,1,-2,0)
    * (2)
  + INT(pentagon1x142,2,5,4,1,[],2,0,2,-1,0)
    * (-2*s13-2*s34)
  + INT(pentagon1x142,2,5,4,1,[],3,0,1,-1,0)
    * (-4*s13-4*s34)
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (s34^2+s13^2+2*s13*s23+2*(s24+s23+s12)*s23+2*s23^2-2*s23*(s24+s13+2*s23+s12+s34)+2*s23*s34+2*s13*s34)
  + INT(pentagon1x142,2,5,4,0,[],3,0,1,0,0)
    * (2*s34^2+2*s13^2+4*s13*s23+4*(s24+s23+s12)*s23+4*s23^2-4*s23*(s24+s13+2*s23+s12+s34)+4*s23*s34+4*s13*s34)
  + INT(pentagon1x142,2,5,3,1,[],1,0,2,-1,0)
    * (-2)
  + INT(pentagon1x142,2,5,3,1,[],2,0,1,-1,0)
    * (-4)
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (2*s13+2*s34)
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (4*s13+4*s34)
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (2);

id INT(pentagon1x123,3,21,5,3,[],1,-3,1,0,3) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-3,2,0,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,3,[],2,-3,1,0,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],1,-2,1,0,3)
    * (s13+s34)
  + INT(pentagon1x123,3,21,5,2,[],2,-2,1,0,2)
    * (-1/2*s23)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,1,0,2)
    * (3/2)
  + INT(pentagon1,2,17,4,2,[],2,0,-2,0,2)
    * (1/2)
  + INT(pentagon1,2,17,4,2,[],2,-1,-1,0,2)
    * (-1)
  + INT(pentagon1,2,17,4,2,[],2,-2,0,0,2)
    * (1/2)
  + INT(pentagon1,2,17,4,2,[],3,0,-2,0,1)
    * (1)
  + INT(pentagon1,2,17,4,2,[],3,-1,-1,0,1)
    * (-2)
  + INT(pentagon1,2,17,4,2,[],3,-2,0,0,1)
    * (1)
  + INT(pentagon1,2,17,4,1,[],2,0,-1,0,2)
    * (s24+s23)
  + INT(pentagon1,2,17,4,1,[],2,-1,0,0,2)
    * (-s24-s23)
  + INT(pentagon1,2,17,4,1,[],3,0,-1,0,1)
    * (2*s24+2*s23)
  + INT(pentagon1,2,17,4,1,[],3,-1,0,0,1)
    * (-2*s24-2*s23)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (1/2*s24^2+1/2*s23^2+s24*s23)
  + INT(pentagon1,2,17,4,0,[],3,0,0,0,1)
    * (s24^2+s23^2+2*s24*s23);

id INT(pentagon1x123,3,21,5,3,[],1,-3,1,0,3) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-3,2,0,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,3,[],2,-3,1,0,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],1,-2,1,0,3)
    * (-s24-s23-s12)
  + INT(pentagon1x123,3,21,5,2,[],1,-2,2,0,2)
    * (-1/2*s23)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,1,0,2)
    * (3/2)
  + INT(pentagon1x142,2,5,4,2,[],1,0,3,-2,0)
    * (1)
  + INT(pentagon1x142,2,5,4,2,[],2,0,2,-2,0)
    * (1/2)
  + INT(pentagon1x142,2,5,4,1,[],1,0,3,-1,0)
    * (-2*s13-2*s34)
  + INT(pentagon1x142,2,5,4,1,[],2,0,2,-1,0)
    * (-s13-s34)
  + INT(pentagon1x142,2,5,4,0,[],1,0,3,0,0)
    * (s34^2+s13^2+2*s13*s23+2*(s24+s23+s12)*s23+2*s23^2-2*s23*(s24+s13+2*s23+s12+s34)+2*s23*s34+2*s13*s34)
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (1/2*s34^2+1/2*s13^2+s13*s23+(s24+s23+s12)*s23+s23^2-s23*(s24+s13+2*s23+s12+s34)+s23*s34+s13*s34)
  + INT(pentagon1x142,2,5,3,1,[],1,0,2,-1,0)
    * (-2)
  + INT(pentagon1x142,2,5,3,1,[],2,0,1,-1,0)
    * (-1)
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (2*s13+2*s34)
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (s13+s34)
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (1);

id INT(pentagon1x123,3,21,5,3,[],1,-2,2,-1,2) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-2,3,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,3,[],2,-2,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],1,-2,3,0,1)
    * (-2*s14)
  + INT(pentagon1x123,3,21,5,2,[],2,-2,2,0,1)
    * (-s14-s24-s34)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,2,-1,1)
    * (2)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,2,0,1)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,2,0,1)
    * (2*s14+2*s34)
  + INT(pentagon1x123,2,5,4,2,[],1,-2,3,0,0)
    * (2)
  + INT(pentagon1x123,2,5,4,2,[],2,-2,2,0,0)
    * (1)
  + INT(pentagon1x123,2,5,3,1,[],1,-1,2,0,0)
    * (-2);

id INT(pentagon1x123,3,21,5,3,[],1,-2,2,-1,2) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-2,3,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,3,[],2,-2,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],1,-2,2,0,2)
    * (-s14)
  + INT(pentagon1x123,3,21,5,2,[],2,-2,2,0,1)
    * (s13+s12)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,2,-1,1)
    * (2)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,1,0,2)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,2,0,1)
    * (2)
  + INT(pentagon1x123,3,21,4,2,[],2,-2,1,0,1)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,2,0,1)
    * (-2*s13)
  + INT(pentagon1x123,3,21,3,1,[],1,-1,1,0,1)
    * (-2);

id INT(pentagon1x123,3,21,5,3,[],1,-2,2,-1,2) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-2,3,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,3,[],2,-2,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],1,-1,2,-1,2)
    * (s13+s34)
  + INT(pentagon1x123,3,21,5,2,[],2,-1,2,-1,1)
    * (-s23)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,1,-1,2)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,2,-1,1)
    * (3)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,2,0,1)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],2,-1,1,-1,1)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,2,0,1)
    * (-s13)
  + INT(pentagon1x123,3,21,3,1,[],1,0,1,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,3,1,[],1,-1,1,0,1)
    * (-1);

id INT(pentagon1x123,3,21,5,3,[],1,-2,2,-1,2) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-2,3,-1,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,3,[],2,-2,2,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],1,-1,2,-1,2)
    * (-s24-s23-s12)
  + INT(pentagon1x123,3,21,5,2,[],1,-1,3,-1,1)
    * (-2*s23)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,2,-1,1)
    * (2)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,2,0,1)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,2,0,1)
    * (s23+s12)
  + INT(pentagon1x142,2,5,4,2,[],2,-1,2,-1,0)
    * (1)
  + INT(pentagon1x142,2,5,4,2,[],3,-1,1,-1,0)
    * (2)
  + INT(pentagon1x142,2,5,4,1,[],2,0,2,-1,0)
    * (s14)
  + INT(pentagon1x142,2,5,4,1,[],2,-1,2,0,0)
    * (-s13-s34)
  + INT(pentagon1x142,2,5,4,1,[],3,0,1,-1,0)
    * (2*s14)
  + INT(pentagon1x142,2,5,4,1,[],3,-1,1,0,0)
    * (-2*s13-2*s34)
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (-s14*(s24+s13+2*s23+s12+s34)+s14*(s24+s23+s12)+s14*s23)
  + INT(pentagon1x142,2,5,4,0,[],3,0,1,0,0)
    * (-2*s14*(s24+s13+2*s23+s12+s34)+2*s14*(s24+s23+s12)+2*s14*s23)
  + INT(pentagon1x142,2,5,3,1,[],1,0,2,-1,0)
    * (-1)
  + INT(pentagon1x142,2,5,3,1,[],1,-1,2,0,0)
    * (-1)
  + INT(pentagon1x142,2,5,3,1,[],2,0,1,-1,0)
    * (-2)
  + INT(pentagon1x142,2,5,3,1,[],2,-1,1,0,0)
    * (-2)
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (-s14+s13+s34)
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (-2*s14+2*s13+2*s34)
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (2);

id INT(pentagon1x123,3,21,5,3,[],1,-2,1,-1,3) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-2,2,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,3,[],2,-2,1,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],1,-2,2,0,2)
    * (-1/2*s14)
  + INT(pentagon1x123,3,21,5,2,[],2,-2,1,0,2)
    * (-1/2*s14-1/2*s24-1/2*s34)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,1,-1,2)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,1,0,2)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,2,0,1)
    * (1/2)
  + INT(pentagon1x123,3,21,4,2,[],2,-2,1,0,1)
    * (1/2)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,1,0,2)
    * (s14+s34)
  + INT(pentagon1x123,3,21,3,1,[],1,-1,1,0,1)
    * (-1);

id INT(pentagon1x123,3,21,5,3,[],1,-2,1,-1,3) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-2,2,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,3,[],2,-2,1,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],1,-2,1,0,3)
    * (-s14)
  + INT(pentagon1x123,3,21,5,2,[],2,-2,1,0,2)
    * (1/2*s13+1/2*s12)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,1,-1,2)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,1,0,2)
    * (1/2)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,1,0,2)
    * (-s13)
  + INT(pentagon1,2,17,4,2,[],2,0,-2,0,2)
    * (1/2)
  + INT(pentagon1,2,17,4,2,[],2,-1,-1,0,2)
    * (-1)
  + INT(pentagon1,2,17,4,2,[],2,-2,0,0,2)
    * (1/2)
  + INT(pentagon1,2,17,4,2,[],3,0,-2,0,1)
    * (1)
  + INT(pentagon1,2,17,4,2,[],3,-1,-1,0,1)
    * (-2)
  + INT(pentagon1,2,17,4,2,[],3,-2,0,0,1)
    * (1)
  + INT(pentagon1,2,17,4,1,[],2,0,-1,0,2)
    * (s24+s23)
  + INT(pentagon1,2,17,4,1,[],2,-1,0,0,2)
    * (-s24-s23)
  + INT(pentagon1,2,17,4,1,[],3,0,-1,0,1)
    * (2*s24+2*s23)
  + INT(pentagon1,2,17,4,1,[],3,-1,0,0,1)
    * (-2*s24-2*s23)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (1/2*s24^2+1/2*s23^2+s24*s23)
  + INT(pentagon1,2,17,4,0,[],3,0,0,0,1)
    * (s24^2+s23^2+2*s24*s23);

id INT(pentagon1x123,3,21,5,3,[],1,-2,1,-1,3) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-2,2,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,3,[],2,-2,1,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],1,-1,1,-1,3)
    * (s13+s34)
  + INT(pentagon1x123,3,21,5,2,[],2,-1,1,-1,2)
    * (-1/2*s23)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,1,-1,2)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,1,0,2)
    * (1/2)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,1,0,2)
    * (-1/2*s13)
  + INT(pentagon1,2,17,4,2,[],2,0,-1,-1,2)
    * (1/2)
  + INT(pentagon1,2,17,4,2,[],2,-1,0,-1,2)
    * (-1/2)
  + INT(pentagon1,2,17,4,2,[],3,0,-1,-1,1)
    * (1)
  + INT(pentagon1,2,17,4,2,[],3,-1,0,-1,1)
    * (-1)
  + INT(pentagon1,2,17,4,1,[],2,0,0,-1,2)
    * (1/2*s24+1/2*s23)
  + INT(pentagon1,2,17,4,1,[],2,0,-1,0,2)
    * (1/2*s14+1/2*s24+1/2*s34)
  + INT(pentagon1,2,17,4,1,[],2,-1,0,0,2)
    * (-1/2*s14-1/2*s24-1/2*s34)
  + INT(pentagon1,2,17,4,1,[],3,0,0,-1,1)
    * (s24+s23)
  + INT(pentagon1,2,17,4,1,[],3,0,-1,0,1)
    * (s14+s24+s34)
  + INT(pentagon1,2,17,4,1,[],3,-1,0,0,1)
    * (-s14-s24-s34)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (1/2*s14*s24+1/2*s24^2+1/2*s24*s34+1/2*s24*s23+1/2*s23*s34+1/2*s14*s23)
  + INT(pentagon1,2,17,4,0,[],3,0,0,0,1)
    * (s14*s24+s24^2+s24*s34+s24*s23+s23*s34+s14*s23)
  + INT(pentagon1,2,17,3,1,[],1,0,-1,0,2)
    * (-1/2)
  + INT(pentagon1,2,17,3,1,[],1,-1,0,0,2)
    * (1/2)
  + INT(pentagon1,2,17,3,1,[],2,0,-1,0,1)
    * (-1)
  + INT(pentagon1,2,17,3,1,[],2,-1,0,0,1)
    * (1)
  + INT(pentagon1,2,17,3,0,[],1,0,0,0,2)
    * (-1/2*s24-1/2*s23)
  + INT(pentagon1,2,17,3,0,[],2,0,0,0,1)
    * (-s24-s23);

id INT(pentagon1x123,3,21,5,3,[],1,-2,1,-1,3) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-2,2,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,3,[],2,-2,1,-1,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],1,-1,1,-1,3)
    * (-s24-s23-s12)
  + INT(pentagon1x123,3,21,5,2,[],1,-1,2,-1,2)
    * (-1/2*s23)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,1,-1,2)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],1,-2,1,0,2)
    * (1/2)
  + INT(pentagon1x123,3,21,4,1,[],1,-1,1,0,2)
    * (1/2*s23+1/2*s12)
  + INT(pentagon1x142,2,5,4,2,[],1,-1,3,-1,0)
    * (1)
  + INT(pentagon1x142,2,5,4,2,[],2,-1,2,-1,0)
    * (1/2)
  + INT(pentagon1x142,2,5,4,1,[],1,0,3,-1,0)
    * (s14)
  + INT(pentagon1x142,2,5,4,1,[],1,-1,3,0,0)
    * (-s13-s34)
  + INT(pentagon1x142,2,5,4,1,[],2,0,2,-1,0)
    * (1/2*s14)
  + INT(pentagon1x142,2,5,4,1,[],2,-1,2,0,0)
    * (-1/2*s13-1/2*s34)
  + INT(pentagon1x142,2,5,4,0,[],1,0,3,0,0)
    * (-s14*(s24+s13+2*s23+s12+s34)+s14*(s24+s23+s12)+s14*s23)
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (-1/2*s14*(s24+s13+2*s23+s12+s34)+1/2*s14*(s24+s23+s12)+1/2*s14*s23)
  + INT(pentagon1x142,2,5,3,1,[],1,0,2,-1,0)
    * (-1)
  + INT(pentagon1x142,2,5,3,1,[],1,-1,2,0,0)
    * (-1)
  + INT(pentagon1x142,2,5,3,1,[],2,0,1,-1,0)
    * (-1/2)
  + INT(pentagon1x142,2,5,3,1,[],2,-1,1,0,0)
    * (-1/2)
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (-s14+s13+s34)
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (-1/2*s14+1/2*s13+1/2*s34)
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (1);

id INT(pentagon1x123,3,21,5,3,[],1,-1,2,-2,2) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-1,3,-2,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,3,[],2,-1,2,-2,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],1,-1,3,-1,1)
    * (-2*s14)
  + INT(pentagon1x123,3,21,5,2,[],2,-1,2,-1,1)
    * (-s14-s24-s34)
  + INT(pentagon1x123,3,21,4,2,[],1,0,2,-2,1)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,2,-1,1)
    * (2)
  + INT(pentagon1x123,3,21,4,1,[],1,0,2,-1,1)
    * (s14+s34)
  + INT(pentagon1x123,2,5,4,2,[],1,-1,3,-1,0)
    * (2)
  + INT(pentagon1x123,2,5,4,2,[],2,-1,2,-1,0)
    * (1)
  + INT(pentagon1x123,2,5,3,1,[],1,0,2,-1,0)
    * (-1)
  + INT(pentagon1x123,2,5,3,1,[],1,-1,2,0,0)
    * (-1);

id INT(pentagon1x123,3,21,5,3,[],1,-1,2,-2,2) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-1,3,-2,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,3,[],2,-1,2,-2,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],1,-1,2,-1,2)
    * (-s14)
  + INT(pentagon1x123,3,21,5,2,[],2,-1,2,-1,1)
    * (s13+s12)
  + INT(pentagon1x123,3,21,4,2,[],1,0,2,-2,1)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,1,-1,2)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,2,-1,1)
    * (3)
  + INT(pentagon1x123,3,21,4,2,[],2,-1,1,-1,1)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],1,0,2,-1,1)
    * (-s13)
  + INT(pentagon1x123,3,21,3,1,[],1,0,1,-1,1)
    * (-1)
  + INT(pentagon1x123,3,21,3,1,[],1,-1,1,0,1)
    * (-1);

id INT(pentagon1x123,3,21,5,3,[],1,-1,2,-2,2) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-1,3,-2,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,3,[],2,-1,2,-2,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],1,0,2,-2,2)
    * (s13+s34)
  + INT(pentagon1x123,3,21,5,2,[],2,0,2,-2,1)
    * (-s23)
  + INT(pentagon1x123,3,21,4,2,[],1,0,1,-2,2)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],1,0,2,-2,1)
    * (2)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,2,-1,1)
    * (2)
  + INT(pentagon1x123,3,21,4,2,[],2,0,1,-2,1)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],1,0,2,-1,1)
    * (-2*s13)
  + INT(pentagon1x123,3,21,3,1,[],1,0,1,-1,1)
    * (-2);

id INT(pentagon1x123,3,21,5,3,[],1,-1,2,-2,2) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-1,3,-2,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,3,[],2,-1,2,-2,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],1,0,2,-2,2)
    * (-s24-s23-s12)
  + INT(pentagon1x123,3,21,5,2,[],1,0,3,-2,1)
    * (-2*s23)
  + INT(pentagon1x123,3,21,4,2,[],1,0,2,-2,1)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,2,-1,1)
    * (2)
  + INT(pentagon1x123,3,21,4,1,[],1,0,2,-1,1)
    * (2*s23+2*s12)
  + INT(pentagon1x142,2,5,4,2,[],2,-2,2,0,0)
    * (1)
  + INT(pentagon1x142,2,5,4,2,[],3,-2,1,0,0)
    * (2)
  + INT(pentagon1x142,2,5,4,1,[],2,-1,2,0,0)
    * (2*s14)
  + INT(pentagon1x142,2,5,4,1,[],3,-1,1,0,0)
    * (4*s14)
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (s14^2)
  + INT(pentagon1x142,2,5,4,0,[],3,0,1,0,0)
    * (2*s14^2)
  + INT(pentagon1x142,2,5,3,1,[],1,-1,2,0,0)
    * (-2)
  + INT(pentagon1x142,2,5,3,1,[],2,-1,1,0,0)
    * (-4)
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (-2*s14)
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (-4*s14)
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (2);

id INT(pentagon1x123,3,21,5,3,[],1,-1,1,-2,3) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-1,2,-2,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,3,[],2,-1,1,-2,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],1,-1,2,-1,2)
    * (-1/2*s14)
  + INT(pentagon1x123,3,21,5,2,[],2,-1,1,-1,2)
    * (-1/2*s14-1/2*s24-1/2*s34)
  + INT(pentagon1x123,3,21,4,2,[],1,0,1,-2,2)
    * (1/2)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,1,-1,2)
    * (3/2)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,2,-1,1)
    * (1/2)
  + INT(pentagon1x123,3,21,4,2,[],2,-1,1,-1,1)
    * (1/2)
  + INT(pentagon1x123,3,21,4,1,[],1,0,1,-1,2)
    * (1/2*s14+1/2*s34)
  + INT(pentagon1x123,3,21,3,1,[],1,0,1,-1,1)
    * (-1/2)
  + INT(pentagon1x123,3,21,3,1,[],1,-1,1,0,1)
    * (-1/2);

id INT(pentagon1x123,3,21,5,3,[],1,-1,1,-2,3) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-1,2,-2,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,3,[],2,-1,1,-2,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],1,-1,1,-1,3)
    * (-s14)
  + INT(pentagon1x123,3,21,5,2,[],2,-1,1,-1,2)
    * (1/2*s13+1/2*s12)
  + INT(pentagon1x123,3,21,4,2,[],1,0,1,-2,2)
    * (1/2)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,1,-1,2)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],1,0,1,-1,2)
    * (-1/2*s13)
  + INT(pentagon1,2,17,4,2,[],2,0,-1,-1,2)
    * (1/2)
  + INT(pentagon1,2,17,4,2,[],2,-1,0,-1,2)
    * (-1/2)
  + INT(pentagon1,2,17,4,2,[],3,0,-1,-1,1)
    * (1)
  + INT(pentagon1,2,17,4,2,[],3,-1,0,-1,1)
    * (-1)
  + INT(pentagon1,2,17,4,1,[],2,0,0,-1,2)
    * (1/2*s24+1/2*s23)
  + INT(pentagon1,2,17,4,1,[],2,0,-1,0,2)
    * (1/2*s14+1/2*s24+1/2*s34)
  + INT(pentagon1,2,17,4,1,[],2,-1,0,0,2)
    * (-1/2*s14-1/2*s24-1/2*s34)
  + INT(pentagon1,2,17,4,1,[],3,0,0,-1,1)
    * (s24+s23)
  + INT(pentagon1,2,17,4,1,[],3,0,-1,0,1)
    * (s14+s24+s34)
  + INT(pentagon1,2,17,4,1,[],3,-1,0,0,1)
    * (-s14-s24-s34)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (1/2*s14*s24+1/2*s24^2+1/2*s24*s34+1/2*s24*s23+1/2*s23*s34+1/2*s14*s23)
  + INT(pentagon1,2,17,4,0,[],3,0,0,0,1)
    * (s14*s24+s24^2+s24*s34+s24*s23+s23*s34+s14*s23)
  + INT(pentagon1,2,17,3,1,[],1,0,-1,0,2)
    * (-1/2)
  + INT(pentagon1,2,17,3,1,[],1,-1,0,0,2)
    * (1/2)
  + INT(pentagon1,2,17,3,1,[],2,0,-1,0,1)
    * (-1)
  + INT(pentagon1,2,17,3,1,[],2,-1,0,0,1)
    * (1)
  + INT(pentagon1,2,17,3,0,[],1,0,0,0,2)
    * (-1/2*s24-1/2*s23)
  + INT(pentagon1,2,17,3,0,[],2,0,0,0,1)
    * (-s24-s23);

id INT(pentagon1x123,3,21,5,3,[],1,-1,1,-2,3) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-1,2,-2,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,3,[],2,-1,1,-2,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],1,0,1,-2,3)
    * (s13+s34)
  + INT(pentagon1x123,3,21,5,2,[],2,0,1,-2,2)
    * (-1/2*s23)
  + INT(pentagon1x123,3,21,4,2,[],1,0,1,-2,2)
    * (1/2)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,1,-1,2)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],1,0,1,-1,2)
    * (-s13)
  + INT(pentagon1,2,17,4,2,[],2,0,0,-2,2)
    * (1/2)
  + INT(pentagon1,2,17,4,2,[],3,0,0,-2,1)
    * (1)
  + INT(pentagon1,2,17,4,1,[],2,0,0,-1,2)
    * (s14+s24+s34)
  + INT(pentagon1,2,17,4,1,[],3,0,0,-1,1)
    * (2*s14+2*s24+2*s34)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (1/2*s34^2+s14*s24+1/2*s24^2+s24*s34+s14*s34+1/2*s14^2)
  + INT(pentagon1,2,17,4,0,[],3,0,0,0,1)
    * (s34^2+2*s14*s24+s24^2+2*s24*s34+2*s14*s34+s14^2)
  + INT(pentagon1,2,17,3,1,[],1,0,0,-1,2)
    * (-1)
  + INT(pentagon1,2,17,3,1,[],2,0,0,-1,1)
    * (-2)
  + INT(pentagon1,2,17,3,0,[],1,0,0,0,2)
    * (-s14-s24-s34)
  + INT(pentagon1,2,17,3,0,[],2,0,0,0,1)
    * (-2*s14-2*s24-2*s34)
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (1);

id INT(pentagon1x123,3,21,5,3,[],1,-1,1,-2,3) = 
  + INT(pentagon1x123,3,21,5,3,[],1,-1,2,-2,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,3,[],2,-1,1,-2,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],1,0,1,-2,3)
    * (-s24-s23-s12)
  + INT(pentagon1x123,3,21,5,2,[],1,0,2,-2,2)
    * (-1/2*s23)
  + INT(pentagon1x123,3,21,4,2,[],1,0,1,-2,2)
    * (1/2)
  + INT(pentagon1x123,3,21,4,2,[],1,-1,1,-1,2)
    * (1)
  + INT(pentagon1x123,3,21,4,1,[],1,0,1,-1,2)
    * (s23+s12)
  + INT(pentagon1x142,2,5,4,2,[],1,-2,3,0,0)
    * (1)
  + INT(pentagon1x142,2,5,4,2,[],2,-2,2,0,0)
    * (1/2)
  + INT(pentagon1x142,2,5,4,1,[],1,-1,3,0,0)
    * (2*s14)
  + INT(pentagon1x142,2,5,4,1,[],2,-1,2,0,0)
    * (s14)
  + INT(pentagon1x142,2,5,4,0,[],1,0,3,0,0)
    * (s14^2)
  + INT(pentagon1x142,2,5,4,0,[],2,0,2,0,0)
    * (1/2*s14^2)
  + INT(pentagon1x142,2,5,3,1,[],1,-1,2,0,0)
    * (-2)
  + INT(pentagon1x142,2,5,3,1,[],2,-1,1,0,0)
    * (-1)
  + INT(pentagon1x142,2,5,3,0,[],1,0,2,0,0)
    * (-2*s14)
  + INT(pentagon1x142,2,5,3,0,[],2,0,1,0,0)
    * (-s14)
  + INT(pentagon1x142,2,5,2,0,[],1,0,1,0,0)
    * (1);

id INT(pentagon1x123,3,21,5,3,[],1,0,2,-3,2) = 
  + INT(pentagon1x123,3,21,5,3,[],1,0,3,-3,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,3,[],2,0,2,-3,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],1,0,3,-2,1)
    * (-2*s14)
  + INT(pentagon1x123,3,21,5,2,[],2,0,2,-2,1)
    * (-s14-s24-s34)
  + INT(pentagon1x123,3,21,4,2,[],1,0,2,-2,1)
    * (3)
  + INT(pentagon1x123,2,5,4,2,[],1,0,3,-2,0)
    * (2)
  + INT(pentagon1x123,2,5,4,2,[],2,0,2,-2,0)
    * (1)
  + INT(pentagon1x123,2,5,3,1,[],1,0,2,-1,0)
    * (-2);

id INT(pentagon1x123,3,21,5,3,[],1,0,2,-3,2) = 
  + INT(pentagon1x123,3,21,5,3,[],1,0,3,-3,1)
    * (-2)
  + INT(pentagon1x123,3,21,5,3,[],2,0,2,-3,1)
    * (-1)
  + INT(pentagon1x123,3,21,5,2,[],1,0,2,-2,2)
    * (-s14)
  + INT(pentagon1x123,3,21,5,2,[],2,0,2,-2,1)
    * (s13+s12)
  + INT(pentagon1x123,3,21,4,2,[],1,0,1,-2,2)
    * (1)
  + INT(pentagon1x123,3,21,4,2,[],1,0,2,-2,1)
    * (4)
  + INT(pentagon1x123,3,21,4,2,[],2,0,1,-2,1)
    * (1)
  + INT(pentagon1x123,3,21,3,1,[],1,0,1,-1,1)
    * (-2);

id INT(pentagon1x123,3,21,5,3,[],1,0,1,-3,3) = 
  + INT(pentagon1x123,3,21,5,3,[],1,0,2,-3,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,3,[],2,0,1,-3,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],1,0,2,-2,2)
    * (-1/2*s14)
  + INT(pentagon1x123,3,21,5,2,[],2,0,1,-2,2)
    * (-1/2*s14-1/2*s24-1/2*s34)
  + INT(pentagon1x123,3,21,4,2,[],1,0,1,-2,2)
    * (2)
  + INT(pentagon1x123,3,21,4,2,[],1,0,2,-2,1)
    * (1/2)
  + INT(pentagon1x123,3,21,4,2,[],2,0,1,-2,1)
    * (1/2)
  + INT(pentagon1x123,3,21,3,1,[],1,0,1,-1,1)
    * (-1);

id INT(pentagon1x123,3,21,5,3,[],1,0,1,-3,3) = 
  + INT(pentagon1x123,3,21,5,3,[],1,0,2,-3,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,3,[],2,0,1,-3,2)
    * (-1/2)
  + INT(pentagon1x123,3,21,5,2,[],1,0,1,-2,3)
    * (-s14)
  + INT(pentagon1x123,3,21,5,2,[],2,0,1,-2,2)
    * (1/2*s13+1/2*s12)
  + INT(pentagon1x123,3,21,4,2,[],1,0,1,-2,2)
    * (3/2)
  + INT(pentagon1,2,17,4,2,[],2,0,0,-2,2)
    * (1/2)
  + INT(pentagon1,2,17,4,2,[],3,0,0,-2,1)
    * (1)
  + INT(pentagon1,2,17,4,1,[],2,0,0,-1,2)
    * (s14+s24+s34)
  + INT(pentagon1,2,17,4,1,[],3,0,0,-1,1)
    * (2*s14+2*s24+2*s34)
  + INT(pentagon1,2,17,4,0,[],2,0,0,0,2)
    * (1/2*s34^2+s14*s24+1/2*s24^2+s24*s34+s14*s34+1/2*s14^2)
  + INT(pentagon1,2,17,4,0,[],3,0,0,0,1)
    * (s34^2+2*s14*s24+s24^2+2*s24*s34+2*s14*s34+s14^2)
  + INT(pentagon1,2,17,3,1,[],1,0,0,-1,2)
    * (-1)
  + INT(pentagon1,2,17,3,1,[],2,0,0,-1,1)
    * (-2)
  + INT(pentagon1,2,17,3,0,[],1,0,0,0,2)
    * (-s14-s24-s34)
  + INT(pentagon1,2,17,3,0,[],2,0,0,0,1)
    * (-2*s14-2*s24-2*s34)
  + INT(pentagon1,2,17,2,0,[],1,0,0,0,1)
    * (1);

