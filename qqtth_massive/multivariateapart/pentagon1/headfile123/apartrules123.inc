#if `rule1'==1
#write "calc module nr 1"
#do j=1,1
if (match(mh^4*q1));
id mh^4*q1 = 1 + 2*mh^2*q1*s12 - q1*s12^2 + 2*mh^2*q1*s34 + 2*q1*s12*s34 - q1*s34^2;
redefine j "0";
endif;
.sort
Skip;
NSkip `expr';
#enddo
#endif
#if `rule2'==1
#write "calc module nr 2"
#do j=1,1
if (match(mt^4*q2));
id mt^4*q2 = 1 + 2*mt^2*q2*s12 - q2*s12^2 + 2*mt^2*q2*s45 + 2*q2*s12*s45 - q2*s45^2;
redefine j "0";
endif;
.sort
Skip;
NSkip `expr';
#enddo
#endif
#if `rule3'==1
#write "calc module nr 3"
#do j=1,1
if (match(mh^2*mt^2*q1*q3*s34));
id mh^2*mt^2*q1*q3*s34 = q1 - mt^2*q3 - mt^4*q1*q3*s34 - mh^2*q1*q3*s12*s34 - mt^2*q1*q3*s12*s34 + mt^2*q1*q3*s34^2 + mh^2*q1*q3*s34*s45 + 2*mt^2*q1*q3*s34*s45 + q1*q3*s12*s34*s45 - q1*q3*s34^2*s45 - q1*q3*s34*s45^2;
redefine j "0";
endif;
.sort
Skip;
NSkip `expr';
#enddo
#endif
#if `rule4'==1
#write "calc module nr 4"
#do j=1,1
if (match(mh^4*mt^2*q3));
id mh^4*mt^2*q3 = 1 + 2*mh^2*mt^2*q3*s12 - mt^2*q3*s12^2 + mh^2*mt^2*q3*s34 - mt^4*q3*s34 - mh^2*q3*s12*s34 + mt^2*q3*s12*s34 + mh^2*q3*s34*s45 + 2*mt^2*q3*s34*s45 + q3*s12*s34*s45 - q3*s34^2*s45 - q3*s34*s45^2;
redefine j "0";
endif;
.sort
Skip;
NSkip `expr';
#enddo
#endif
#if `rule5'==1
#write "calc module nr 5"
#do j=1,1
if (match(mt^6*q1*q3*s34));
id mt^6*q1*q3*s34 = -(mh^2*q1) + mt^2*q1 + mh^2*mt^2*q3 - mt^4*q3 + 2*q1*s12 - 2*mt^2*q3*s12 + q1*s34 + q3*s12*s34 - 3*mt^4*q1*q3*s12*s34 - 3*mt^2*q1*q3*s12^2*s34 - q1*q3*s12^3*s34 + mh^2*q1*q3*s12*s34^2 + 3*mt^2*q1*q3*s12*s34^2 + 2*q1*q3*s12^2*s34^2 - q1*q3*s12*s34^3 - q1*s45 + mt^2*q3*s45 - q3*s34*s45 + 3*mt^4*q1*q3*s34*s45 + 6*mt^2*q1*q3*s12*s34*s45 + 3*q1*q3*s12^2*s34*s45 - 3*q1*q3*s12*s34^2*s45 - 3*mt^2*q1*q3*s34*s45^2 - 3*q1*q3*s12*s34*s45^2 + q1*q3*s34*s45^3;
redefine j "0";
endif;
.sort
Skip;
NSkip `expr';
#enddo
#endif
#if `rule6'==1
#write "calc module nr 6"
#do j=1,1
if (match(mt^2*q1*q2*q3*s12^2*s34));
id mt^2*q1*q2*q3*s12^2*s34 = -(mh^2*q1*q2)/12 + (mt^2*q1*q2)/12 - q3/12 + (mh^2*mt^2*q2*q3)/12 + (q1*q2*s12)/6 - (mt^2*q2*q3*s12)/3 + (q2*q3*s12^2)/12 + (q1*q2*s34)/12 - (mt^2*q1*q3*s34)/12 - (5*q1*q3*s12*s34)/12 + (q2*q3*s12*s34)/12 + (q1*q2*q3*s12^3*s34)/3 + (mh^2*q1*q2*q3*s12*s34^2)/12 + (mt^2*q1*q2*q3*s12*s34^2)/4 + (q1*q2*q3*s12^2*s34^2)/6 - (q1*q2*q3*s12*s34^3)/12 - (q1*q2*s45)/12 - (mt^2*q2*q3*s45)/12 - (q2*q3*s12*s45)/6 + (q1*q3*s34*s45)/12 - (q2*q3*s34*s45)/12 - (mt^2*q1*q2*q3*s12*s34*s45)/3 - (2*q1*q2*q3*s12^2*s34*s45)/3 - (q1*q2*q3*s12*s34^2*s45)/4 + (q2*q3*s45^2)/12 + (q1*q2*q3*s12*s34*s45^2)/3;
redefine j "0";
endif;
.sort
Skip;
NSkip `expr';
#enddo
#endif
#if `rule7'==1
#write "calc module nr 7"
#do j=1,1
if (match(mh^2*q1*q2*q3*s12^2*s34));
id mh^2*q1*q2*q3*s12^2*s34 = (mh^2*q1*q2)/12 - (mt^2*q1*q2)/3 + q3/3 - (mh^2*mt^2*q2*q3)/12 + (7*q1*q2*s12)/12 + (mt^2*q2*q3*s12)/12 - (q2*q3*s12^2)/3 - (q1*q2*s34)/12 + (mh^2*q1*q3*s34)/4 + (mt^2*q1*q3*s34)/3 + (5*q1*q3*s12*s34)/12 - (q2*q3*s12*s34)/12 - (q1*q2*q3*s12^3*s34)/3 - (q1*q3*s34^2)/4 - (mh^2*q1*q2*q3*s12*s34^2)/12 + (q1*q2*q3*s12^2*s34^2)/12 + (q1*q2*q3*s12*s34^3)/12 + (q1*q2*s45)/3 + (mt^2*q2*q3*s45)/3 + (2*q2*q3*s12*s45)/3 - (q1*q3*s34*s45)/3 + (q2*q3*s34*s45)/12 + mh^2*q1*q2*q3*s12*s34*s45 + (4*mt^2*q1*q2*q3*s12*s34*s45)/3 + (5*q1*q2*q3*s12^2*s34*s45)/3 - q1*q2*q3*s12*s34^2*s45 - (q2*q3*s45^2)/3 - (4*q1*q2*q3*s12*s34*s45^2)/3;
redefine j "0";
endif;
.sort
Skip;
NSkip `expr';
#enddo
#endif
#if `rule8'==1
#write "calc module nr 8"
#do j=1,1
if (match(mh^4*q2*q3*s12^2));
id mh^4*q2*q3*s12^2 = -(mt^2*q2) + mh^4*q3 + 2*q2*s12 - 2*mh^2*q3*s12 + q3*s12^2 + 2*mh^2*q2*q3*s12^3 - q2*q3*s12^4 - mh^2*q3*s34 + mt^2*q3*s34 - q3*s12*s34 + mh^2*mt^2*q2*q3*s12*s34 - mh^2*q2*q3*s12^2*s34 - mt^2*q2*q3*s12^2*s34 + q2*q3*s12^3*s34 + 2*q2*s45 + 2*mh^4*q2*q3*s12*s45 - 4*mh^2*q2*q3*s12^2*s45 + 2*q2*q3*s12^3*s45 - 2*q3*s34*s45 - mh^2*mt^2*q2*q3*s34*s45 - 2*mh^2*q2*q3*s12*s34*s45 + mt^2*q2*q3*s12*s34*s45 + 2*q2*q3*s12^2*s34*s45 + mt^2*q2*q3*s34^2*s45 - 2*q2*q3*s12*s34^2*s45 - mh^4*q2*q3*s45^2 + 2*mh^2*q2*q3*s12*s45^2 - q2*q3*s12^2*s45^2 + 3*mh^2*q2*q3*s34*s45^2 - 3*q2*q3*s12*s34*s45^2 - 2*q2*q3*s34^2*s45^2;
redefine j "0";
endif;
.sort
Skip;
NSkip `expr';
#enddo
#endif
#if `rule9'==1
#write "calc module nr 9"
#do j=1,1
if (match(mh^2*q1*q2*q3*s12*s34^3));
id mh^2*q1*q2*q3*s12*s34^3 = (-9*q1)/2 + (9*mh^2*mt^2*q1*q2)/2 - (9*mh^2*q3)/2 + (9*mt^2*q3)/2 - (15*mh^2*q1*q2*s12)/2 - (21*mt^2*q1*q2*s12)/2 + (21*q3*s12)/2 - (3*mh^2*mt^2*q2*q3*s12)/2 + (39*q1*q2*s12^2)/2 + (9*mh^2*q2*q3*s12^2)/2 + (3*mt^2*q2*q3*s12^2)/2 - (21*q2*q3*s12^3)/2 + mh^2*q1*q2*s34 - (17*mt^2*q1*q2*s34)/2 + 4*q3*s34 + (9*mt^4*q1*q3*s34)/2 - mh^2*mt^2*q2*q3*s34 + 10*q1*q2*s12*s34 + 15*mt^2*q1*q3*s12*s34 + mt^2*q2*q3*s12*s34 + (33*q1*q3*s12^2*s34)/2 + (7*q2*q3*s12^2*s34)/2 - 24*q1*q2*q3*s12^4*s34 - q1*q2*s34^2 + 3*mh^2*q1*q3*s34^2 + 4*mt^2*q1*q3*s34^2 - 4*q1*q3*s12*s34^2 - q2*q3*s12*s34^2 + 20*q1*q2*q3*s12^3*s34^2 - 3*q1*q3*s34^3 - (13*q1*q2*q3*s12^2*s34^3)/2 + q1*q2*q3*s12*s34^4 - (25*mh^2*q1*q2*s45)/2 + 8*mt^2*q1*q2*s45 - 8*q3*s45 + (7*mh^2*mt^2*q2*q3*s45)/2 + (17*q1*q2*s12*s45)/2 - 9*mh^2*q2*q3*s12*s45 - (7*mt^2*q2*q3*s12*s45)/2 + 29*q2*q3*s12^2*s45 + (33*q1*q2*s34*s45)/2 - 17*mt^2*q1*q3*s34*s45 + (17*mt^2*q2*q3*s34*s45)/2 - 37*q1*q3*s12*s34*s45 + 13*q2*q3*s12*s34*s45 + 80*q1*q2*q3*s12^3*s34*s45 - 4*q1*q3*s34^2*s45 + q2*q3*s34^2*s45 + 20*mh^2*q1*q2*q3*s12*s34^2*s45 + 40*mt^2*q1*q2*q3*s12*s34^2*s45 - 20*q1*q2*q3*s12*s34^3*s45 - 8*q1*q2*s45^2 + (9*mh^2*q2*q3*s45^2)/2 - 8*mt^2*q2*q3*s45^2 - (53*q2*q3*s12*s45^2)/2 + (25*q1*q3*s34*s45^2)/2 - (33*q2*q3*s34*s45^2)/2 - 32*mt^2*q1*q2*q3*s12*s34*s45^2 - 88*q1*q2*q3*s12^2*s34*s45^2 - 40*q1*q2*q3*s12*s34^2*s45^2 + 8*q2*q3*s45^3 + 32*q1*q2*q3*s12*s34*s45^3;
redefine j "0";
endif;
.sort
Skip;
NSkip `expr';
#enddo
#endif
#if `rule10'==1
#write "calc module nr 10"
#do j=1,1
if (match(mt^2*q1*q2*q3*s12*s34^3*s45));
id mt^2*q1*q2*q3*s12*s34^3*s45 = (3*q1*s12)/8 - (3*mh^2*mt^2*q1*q2*s12)/8 + (3*mh^2*q3*s12)/8 - (3*mt^2*q3*s12)/8 + (5*mh^2*q1*q2*s12^2)/8 + (7*mt^2*q1*q2*s12^2)/8 - (7*q3*s12^2)/8 + (mh^2*mt^2*q2*q3*s12^2)/8 - (13*q1*q2*s12^3)/8 - (3*mh^2*q2*q3*s12^3)/8 - (mt^2*q2*q3*s12^3)/8 + (7*q2*q3*s12^4)/8 + (q1*s34)/32 - (mh^2*mt^2*q1*q2*s34)/32 + (mh^2*q3*s34)/32 - (mt^2*q3*s34)/32 - (mh^2*q1*q2*s12*s34)/32 + (25*mt^2*q1*q2*s12*s34)/32 - (13*q3*s12*s34)/32 - (3*mt^4*q1*q3*s12*s34)/8 + (3*mh^2*mt^2*q2*q3*s12*s34)/32 - (31*q1*q2*s12^2*s34)/32 - (5*mt^2*q1*q3*s12^2*s34)/4 - (mh^2*q2*q3*s12^2*s34)/32 - (3*mt^2*q2*q3*s12^2*s34)/32 - (11*q1*q3*s12^3*s34)/8 - (7*q2*q3*s12^3*s34)/32 + 2*q1*q2*q3*s12^5*s34 + (mt^2*q1*q2*s34^2)/32 - (mt^4*q1*q3*s34^2)/32 + (q1*q2*s12*s34^2)/16 - (mh^2*q1*q3*s12*s34^2)/4 - (7*mt^2*q1*q3*s12*s34^2)/16 + (7*q1*q3*s12^2*s34^2)/32 + (q2*q3*s12^2*s34^2)/32 - (3*q1*q2*q3*s12^4*s34^2)/2 + (5*q1*q3*s12*s34^3)/16 + (3*q1*q2*q3*s12^3*s34^3)/8 - (q1*q2*q3*s12^2*s34^4)/32 + (7*q1*s45)/8 - (7*mh^2*mt^2*q1*q2*s45)/8 + (7*mh^2*q3*s45)/8 - (7*mt^2*q3*s45)/8 + (5*mh^2*q1*q2*s12*s45)/2 + (11*mt^2*q1*q2*s12*s45)/8 - (11*q3*s12*s45)/8 - (9*q1*q2*s12^2*s45)/2 - (mh^2*q2*q3*s12^2*s45)/8 - (3*q2*q3*s12^3*s45)/8 + (mh^2*q1*q2*s34*s45)/32 + (15*mt^2*q1*q2*s34*s45)/8 - q3*s34*s45 - (7*mt^4*q1*q3*s34*s45)/8 + (mh^2*mt^2*q2*q3*s34*s45)/32 - (157*q1*q2*s12*s34*s45)/32 - (3*mt^2*q1*q3*s12*s34*s45)/2 + (mh^2*q2*q3*s12*s34*s45)/16 + (3*mt^2*q2*q3*s12*s34*s45)/32 - (q1*q3*s12^2*s34*s45)/8 - (27*q2*q3*s12^2*s34*s45)/16 - 2*q1*q2*q3*s12^4*s34*s45 - (q1*q2*s34^2*s45)/32 - mh^2*q1*q3*s34^2*s45 - (15*mt^2*q1*q3*s34^2*s45)/16 - (mt^2*q2*q3*s34^2*s45)/32 + (33*q1*q3*s12*s34^2*s45)/16 - (q2*q3*s12*s34^2*s45)/16 - 5*q1*q2*q3*s12^3*s34^2*s45 + q1*q3*s34^3*s45 + (19*q1*q2*q3*s12^2*s34^3*s45)/8 + (53*mh^2*q1*q2*s45^2)/24 - (4*mt^2*q1*q2*s45^2)/3 + (4*q3*s45^2)/3 - (11*mh^2*mt^2*q2*q3*s45^2)/24 - (13*q1*q2*s12*s45^2)/24 + (11*mh^2*q2*q3*s12*s45^2)/8 + (11*mt^2*q2*q3*s12*s45^2)/24 - (77*q2*q3*s12^2*s45^2)/24 - (77*q1*q2*s34*s45^2)/24 + (37*mt^2*q1*q3*s34*s45^2)/12 - (mh^2*q2*q3*s34*s45^2)/32 - (15*mt^2*q2*q3*s34*s45^2)/8 + (121*q1*q3*s12*s34*s45^2)/24 - (125*q2*q3*s12*s34*s45^2)/96 - (22*q1*q2*q3*s12^3*s34*s45^2)/3 + (31*q1*q3*s34^2*s45^2)/32 + (q2*q3*s34^2*s45^2)/32 - (16*mh^2*q1*q2*q3*s12*s34^2*s45^2)/3 - 8*mt^2*q1*q2*q3*s12*s34^2*s45^2 + (23*q1*q2*q3*s12^2*s34^2*s45^2)/6 + (19*q1*q2*q3*s12*s34^3*s45^2)/3 + (4*q1*q2*s45^3)/3 - (7*mh^2*q2*q3*s45^3)/8 + (4*mt^2*q2*q3*s45^3)/3 + (97*q2*q3*s12*s45^3)/24 - (53*q1*q3*s34*s45^3)/24 + (77*q2*q3*s34*s45^3)/24 + (16*mt^2*q1*q2*q3*s12*s34*s45^3)/3 + (38*q1*q2*q3*s12^2*s34*s45^3)/3 + 8*q1*q2*q3*s12*s34^2*s45^3 - (4*q2*q3*s45^4)/3 - (16*q1*q2*q3*s12*s34*s45^4)/3;
redefine j "0";
endif;
.sort
Skip;
NSkip `expr';
#enddo
#endif
#if `rule11'==1
#write "calc module nr 11"
#do j=1,1
if (match(q1*q2*q3*s12^6*s34));
id q1*q2*q3*s12^6*s34 = (-3*q1*s12^2)/16 + (3*mh^2*mt^2*q1*q2*s12^2)/16 - (3*mh^2*q3*s12^2)/16 + (3*mt^2*q3*s12^2)/16 - (5*mh^2*q1*q2*s12^3)/16 - (7*mt^2*q1*q2*s12^3)/16 + (7*q3*s12^3)/16 - (mh^2*mt^2*q2*q3*s12^3)/16 + (13*q1*q2*s12^4)/16 + (3*mh^2*q2*q3*s12^4)/16 + (mt^2*q2*q3*s12^4)/16 - (7*q2*q3*s12^5)/16 + (q1*s12*s34)/32 - (mh^2*mt^2*q1*q2*s12*s34)/32 + (mh^2*q3*s12*s34)/32 - (mt^2*q3*s12*s34)/32 + (3*mh^2*q1*q2*s12^2*s34)/32 - (9*mt^2*q1*q2*s12^2*s34)/32 + (3*q3*s12^2*s34)/32 + (3*mt^4*q1*q3*s12^2*s34)/16 - (mh^2*mt^2*q2*q3*s12^2*s34)/32 + (9*q1*q2*s12^3*s34)/32 + (5*mt^2*q1*q3*s12^3*s34)/8 - (mh^2*q2*q3*s12^3*s34)/32 + (mt^2*q2*q3*s12^3*s34)/32 + (11*q1*q3*s12^4*s34)/16 + (7*q2*q3*s12^4*s34)/32 + (q1*s34^2)/256 - (mh^2*mt^2*q1*q2*s34^2)/256 + (mh^2*q3*s34^2)/256 - (mt^2*q3*s34^2)/256 - (mh^2*q1*q2*s12*s34^2)/256 + (21*mt^2*q1*q2*s12*s34^2)/256 - (13*q3*s12*s34^2)/256 - (mt^4*q1*q3*s12*s34^2)/32 + (3*mh^2*mt^2*q2*q3*s12*s34^2)/256 - (39*q1*q2*s12^2*s34^2)/256 + (mh^2*q1*q3*s12^2*s34^2)/8 + (mt^2*q1*q3*s12^2*s34^2)/16 - (mh^2*q2*q3*s12^2*s34^2)/256 - (3*mt^2*q2*q3*s12^2*s34^2)/256 - (9*q1*q3*s12^3*s34^2)/32 - (11*q2*q3*s12^3*s34^2)/256 + q1*q2*q3*s12^5*s34^2 + (mt^2*q1*q2*s34^3)/256 - (mt^4*q1*q3*s34^3)/256 + (q1*q2*s12*s34^3)/128 - (mh^2*q1*q3*s12*s34^3)/32 - (7*mt^2*q1*q3*s12*s34^3)/128 - (33*q1*q3*s12^2*s34^3)/256 + (q2*q3*s12^2*s34^3)/256 - (3*q1*q2*q3*s12^4*s34^3)/8 + (5*q1*q3*s12*s34^4)/128 + (q1*q2*q3*s12^3*s34^4)/16 - (q1*q2*q3*s12^2*s34^5)/256 + (q1*s12*s45)/8 - (mh^2*mt^2*q1*q2*s12*s45)/8 + (mh^2*q3*s12*s45)/8 - (mt^2*q3*s12*s45)/8 - (5*mh^2*q1*q2*s12^2*s45)/16 + (5*mt^2*q1*q2*s12^2*s45)/8 - (5*q3*s12^2*s45)/8 + (3*mh^2*mt^2*q2*q3*s12^2*s45)/16 - (3*q1*q2*s12^3*s45)/16 - (mh^2*q2*q3*s12^3*s45)/2 - (3*mt^2*q2*q3*s12^3*s45)/16 + (3*q2*q3*s12^4*s45)/2 - (q1*s34*s45)/32 + (mh^2*mt^2*q1*q2*s34*s45)/32 - (mh^2*q3*s34*s45)/32 + (mt^2*q3*s34*s45)/32 - (mh^2*q1*q2*s12*s34*s45)/16 - (mt^2*q1*q2*s12*s34*s45)/32 + (5*q3*s12*s34*s45)/32 - (mt^4*q1*q3*s12*s34*s45)/8 + (mh^2*mt^2*q2*q3*s12*s34*s45)/16 + (5*q1*q2*s12^2*s34*s45)/4 - (9*mt^2*q1*q3*s12^2*s34*s45)/8 + (3*mh^2*q2*q3*s12^2*s34*s45)/32 - (mt^2*q2*q3*s12^2*s34*s45)/8 - 2*q1*q3*s12^3*s34*s45 + (q2*q3*s12^3*s34*s45)/32 + 4*q1*q2*q3*s12^5*s34*s45 + (mh^2*q1*q2*s34^2*s45)/256 - (mt^2*q1*q2*s34^2*s45)/32 + (mt^4*q1*q3*s34^2*s45)/32 + (mh^2*mt^2*q2*q3*s34^2*s45)/256 - (q1*q2*s12*s34^2*s45)/256 + (mh^2*q1*q3*s12*s34^2*s45)/8 + (mt^2*q1*q3*s12*s34^2*s45)/4 + (mh^2*q2*q3*s12*s34^2*s45)/128 - (25*mt^2*q2*q3*s12*s34^2*s45)/256 - (q1*q3*s12^2*s34^2*s45)/32 + (7*q2*q3*s12^2*s34^2*s45)/128 - q1*q2*q3*s12^4*s34^2*s45 - (q1*q2*s34^3*s45)/256 + (mt^2*q1*q3*s34^3*s45)/128 - (mt^2*q2*q3*s34^3*s45)/256 - (19*q1*q3*s12*s34^3*s45)/128 - (q2*q3*s12*s34^3*s45)/128 - (q1*q2*q3*s12^3*s34^3*s45)/4 + (q1*q2*q3*s12^2*s34^4*s45)/16 + (q1*s45^2)/16 - (mh^2*mt^2*q1*q2*s45^2)/16 + (mh^2*q3*s45^2)/16 - (mt^2*q3*s45^2)/16 + (9*mh^2*q1*q2*s12*s45^2)/16 - (3*mt^2*q1*q2*s12*s45^2)/16 + (3*q3*s12*s45^2)/16 - (3*mh^2*mt^2*q2*q3*s12*s45^2)/16 - (17*q1*q2*s12^2*s45^2)/16 + (3*mh^2*q2*q3*s12^2*s45^2)/8 + (3*mt^2*q2*q3*s12^2*s45^2)/16 - (15*q2*q3*s12^3*s45^2)/8 - (mh^2*q1*q2*s34*s45^2)/32 + (mt^2*q1*q2*s34*s45^2)/16 - (mt^4*q1*q3*s34*s45^2)/16 - (mh^2*mt^2*q2*q3*s34*s45^2)/32 - (15*q1*q2*s12*s34*s45^2)/32 + (3*mt^2*q1*q3*s12*s34*s45^2)/8 - (3*mh^2*q2*q3*s12*s34*s45^2)/32 + (5*mt^2*q2*q3*s12*s34*s45^2)/32 + (15*q1*q3*s12^2*s34*s45^2)/8 - (21*q2*q3*s12^2*s34*s45^2)/32 - 6*q1*q2*q3*s12^4*s34*s45^2 + (q1*q2*s34^2*s45^2)/32 - (mt^2*q1*q3*s34^2*s45^2)/16 - (mh^2*q2*q3*s34^2*s45^2)/256 + (mt^2*q2*q3*s34^2*s45^2)/32 + (q1*q3*s12*s34^2*s45^2)/32 + (5*q2*q3*s12*s34^2*s45^2)/256 - q1*q2*q3*s12^3*s34^2*s45^2 - (q1*q3*s34^3*s45^2)/256 + (q2*q3*s34^3*s45^2)/256 - (3*q1*q2*q3*s12^2*s34^3*s45^2)/8 + (mh^2*q1*q2*s45^3)/16 + (mh^2*mt^2*q2*q3*s45^3)/16 + (7*q1*q2*s12*s45^3)/16 - (mt^2*q2*q3*s12*s45^3)/16 + q2*q3*s12^2*s45^3 - (q1*q2*s34*s45^3)/16 + (mt^2*q1*q3*s34*s45^3)/8 + (mh^2*q2*q3*s34*s45^3)/32 - (mt^2*q2*q3*s34*s45^3)/16 - (q1*q3*s12*s34*s45^3)/2 + (11*q2*q3*s12*s34*s45^3)/32 + 4*q1*q2*q3*s12^3*s34*s45^3 + (q1*q3*s34^2*s45^3)/32 - (q2*q3*s34^2*s45^3)/32 + q1*q2*q3*s12^2*s34^2*s45^3 - (mh^2*q2*q3*s45^4)/16 - (3*q2*q3*s12*s45^4)/16 - (q1*q3*s34*s45^4)/16 + (q2*q3*s34*s45^4)/16 - q1*q2*q3*s12^2*s34*s45^4;
redefine j "0";
endif;
.sort
Skip;
NSkip `expr';
#enddo
#endif
